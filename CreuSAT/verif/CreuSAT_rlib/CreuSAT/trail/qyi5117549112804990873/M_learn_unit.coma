(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 290 4 290 95 *)

(* trail::Trail *)

let%span svec = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 21 14 21 41
let%span smodel = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 54 8 54 22
let%span slogic_assignments = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 17 4 17 12
let%span slogic_assignments'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 53 12 54 74
let%span sresolve = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/resolve.rs" 54 20 54 34
let%span slit = "/Users/sarekhs/CreuSAT/CreuSAT/src/lit.rs" 94 15 94 33
let%span slit'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/lit.rs" 95 14 95 39
let%span slogic_lit = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 117 20 117 38
let%span slogic_lit'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 83 20 83 42
let%span slogic_lit'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 123 20 123 40
let%span slogic_lit'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 129 20 129 40
let%span slogic_lit'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 136 12 137 61
let%span slogic_lit'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 24 20 24 29
let%span slogic_lit'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 90 12 93 13
let%span slogic_lit'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 111 20 111 47
let%span slogic_lit'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 101 12 104 13
let%span slogic_lit'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 75 12 76 57
let%span slogic_lit'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 31 20 31 33
let%span slogic_formula = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 79 14 79 41
let%span slogic_formula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 81 20 81 44
let%span slogic_formula'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 88 12 92 45
let%span slogic_formula'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 30 8 31 69
let%span slogic_formula'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 22 8 22 85
let%span slogic_trail = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 56 8 67 9
let%span slogic_trail'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 168 8 172 17
let%span slogic_trail'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 15 12 23 13
let%span slogic_trail'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 139 16 139 66
let%span slogic_trail'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 105 8 107 38
let%span slogic_trail'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 92 8 97 17
let%span slogic_trail'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 146 8 148 72
let%span slogic_trail'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 115 8 116 33
let%span slogic_trail'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 180 8 186 17
let%span slogic_trail'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 129 4 133 5
let%span slogic = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic.rs" 25 8 29 9
let%span slogic_clause = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 14 4 14 12
let%span slogic_clause'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 227 20 227 42
let%span slogic_clause'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 33 4 33 62
let%span slogic_clause'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 25 8 26 23
let%span slogic_clause'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 48 8 49 92
let%span sclause = "/Users/sarekhs/CreuSAT/CreuSAT/src/clause.rs" 22 15 22 32
let%span sclause'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/clause.rs" 23 14 23 35
let%span slogic_util = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 28 4 28 31
let%span slogic_util'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 22 16 22 80
let%span strail = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 291 35 291 36
let%span strail'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 292 30 292 31
let%span strail'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 296 19 296 20
let%span strail'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 299 48 299 49
let%span strail'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 299 68 299 69
let%span strail'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 277 4 277 36
let%span strail'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 278 4 278 42
let%span strail'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 279 15 279 22
let%span strail'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 280 15 280 39
let%span strail'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 281 15 281 44
let%span strail'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 282 4 282 51
let%span strail'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 288 15 288 75
let%span strail'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 285 14 287 64
let%span strail'12 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 289 14 289 80
let%span strail'13 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 34 14 34 46
let%span strail'14 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 111 15 111 45
let%span strail'15 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 112 15 112 22
let%span strail'16 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 113 4 113 36
let%span strail'17 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 114 4 114 42
let%span strail'18 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 116 15 116 75
let%span strail'19 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 117 14 117 80
let%span strail'20 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 204 4 204 37
let%span strail'21 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 205 15 205 23
let%span strail'22 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 206 4 206 43
let%span strail'23 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 207 4 207 37
let%span strail'24 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 208 15 221 5
let%span strail'25 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 222 4 222 51
let%span strail'26 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 223 15 223 63
let%span strail'27 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 224 15 224 76
let%span strail'28 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 225 14 226 88
let%span strail'29 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 227 4 227 49
let%span strail'30 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 228 14 228 81
let%span strail'31 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 229 14 232 5
let%span strail'32 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 233 14 233 59
let%span strail'33 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 234 14 234 49
let%span sord = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 129 39 129 89
let%span sord'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 134 39 134 86
let%span sord'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 139 39 139 86
let%span sord'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 144 39 144 89
let%span sord'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 149 39 149 70
let%span sord'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 154 40 154 57
let%span sord'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 155 40 155 57
let%span sord'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 156 39 156 56
let%span sord'7 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 161 40 161 70
let%span sord'8 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 162 39 162 72
let%span sord'9 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 167 40 167 73
let%span sord'10 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 168 39 168 69
let%span sord'11 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 173 39 173 84
let%span sord'12 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 230 16 236 17
let%span sformula = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 28 15 28 40
let%span sformula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 29 14 29 43
let%span slogic_decision = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_decision.rs" 12 12 17 97

use creusot.int.UInt64
use creusot.prelude.Opaque
use seq.Seq
use mach.int.Int
use creusot.prelude.MutBorrow
use creusot.int.UInt32
use creusot.int.UInt8
use creusot.prelude.Any

type t_NonNull  =
  { t_NonNull__pointer: Opaque.ptr }

type t_Unique  =
  { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }

type t_UsizeNoHighBit  =
  { t_UsizeNoHighBit__0: UInt64.t }

type t_RawVecInner  =
  { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }

type t_RawVec  =
  { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }

type t_Vec  =
  { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }

type t_Assignments  =
  { t_Assignments__0: t_Vec }

type t_RawVec'0  =
  { t_RawVec__inner'0: t_RawVecInner; t_RawVec__qy95zmarker'0: () }

type t_Vec'0  =
  { t_Vec__buf'0: t_RawVec'0; t_Vec__len'0: UInt64.t }

type t_RawVec'1  =
  { t_RawVec__inner'1: t_RawVecInner; t_RawVec__qy95zmarker'1: () }

type t_Vec'1  =
  { t_Vec__buf'1: t_RawVec'1; t_Vec__len'1: UInt64.t }

type t_Trail  =
  { t_Trail__assignments: t_Assignments;
    t_Trail__lit_to_level: t_Vec'0;
    t_Trail__trail: t_Vec'1;
    t_Trail__curr_i: UInt64.t;
    t_Trail__decisions: t_Vec'0 }

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

function view (self : t_Vec'0) : Seq.seq UInt64.t

axiom view_spec : forall self : t_Vec'0 . [%#svec] Seq.length (view self) <= UInt64.t'int (v_MAX : UInt64.t)

let rec decision_level (self:t_Trail) (return'  (x:UInt64.t))= any
  [ return''0 (result:UInt64.t)-> {[%#strail'13] UInt64.t'int result = Seq.length (view self.t_Trail__decisions)}
    (! return' {result}) ]


type t_RawVec'2  =
  { t_RawVec__inner'2: t_RawVecInner; t_RawVec__qy95zmarker'2: () }

type t_Vec'2  =
  { t_Vec__buf'2: t_RawVec'2; t_Vec__len'2: UInt64.t }

type t_Decisions  =
  { t_Decisions__linked_list: t_Vec'2;
    t_Decisions__timestamp: UInt64.t;
    t_Decisions__start: UInt64.t;
    t_Decisions__search: UInt64.t }

type t_RawVec'3  =
  { t_RawVec__inner'3: t_RawVecInner; t_RawVec__qy95zmarker'3: () }

type t_Vec'3  =
  { t_Vec__buf'3: t_RawVec'3; t_Vec__len'3: UInt64.t }

type t_Formula  =
  { t_Formula__clauses: t_Vec'3; t_Formula__num_vars: UInt64.t }

type t_RawVec'4  =
  { t_RawVec__inner'4: t_RawVecInner; t_RawVec__qy95zmarker'4: () }

type t_Vec'4  =
  { t_Vec__buf'4: t_RawVec'4; t_Vec__len'4: UInt64.t }

type t_Clause  =
  { t_Clause__deleted: bool; t_Clause__lbd: UInt32.t; t_Clause__search: UInt64.t; t_Clause__lits: t_Vec'4 }

function view'0 (self : t_Vec'3) : Seq.seq t_Clause

axiom view_spec'0 : forall self : t_Vec'3 . [%#svec] Seq.length (view'0 self) <= UInt64.t'int (v_MAX : UInt64.t)

type t_Lit  =
  { t_Lit__idx: UInt64.t; t_Lit__polarity: bool }

function index_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 23 4 23 35] (self : t_Lit) : int =
  [%#slogic_lit'4] UInt64.t'int self.t_Lit__idx

predicate inv [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 82 4 82 36] (self : t_Lit) (n : int) =
  [%#slogic_lit'0] index_logic self < n

predicate vars_in_range_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 23 0 23 55] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'2] forall i : int . 0 <= i /\ i < Seq.length s  -> inv (Seq.get s i) n

predicate no_duplicate_indexes_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 46 0 46 54] (s : Seq.seq t_Lit)

 =
  [%#slogic_clause'3] forall j : int, k : int . 0 <= j /\ j < Seq.length s /\ 0 <= k /\ k < Seq.length s /\ k <> j
   -> index_logic (Seq.get s k) <> index_logic (Seq.get s j)

predicate inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 32 0 32 48] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'1] vars_in_range_inner s n /\ no_duplicate_indexes_inner s

function view'1 (self : t_Vec'4) : Seq.seq t_Lit

axiom view_spec'1 : forall self : t_Vec'4 . [%#svec] Seq.length (view'1 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 16 4 16 33] (self : t_Clause) : Seq.seq t_Lit

 =
  [%#slogic_clause] view'1 self.t_Clause__lits

predicate inv'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 226 4 226 36] (self : t_Clause) (n : int) =
  [%#slogic_clause'0] inv_internal (view'2 self) n

predicate inv_mirror [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 86 4 86 35] (self : t_Formula) =
  [%#slogic_formula'1] (forall i : int . 0 <= i /\ i < Seq.length (view'0 self.t_Formula__clauses)
   -> inv'0 (Seq.get (view'0 self.t_Formula__clauses) i) (UInt64.t'int self.t_Formula__num_vars))
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'0 self.t_Formula__clauses)
   -> Seq.length (view'2 (Seq.get (view'0 self.t_Formula__clauses) i)) >= 1)

type t_FormulaModel  =
  { t_FormulaModel__clauses: Seq.seq t_Clause; t_FormulaModel__num_vars: int }

predicate formula_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 28 0 28 49] (f : t_FormulaModel)

 =
  [%#slogic_formula'2] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> inv'0 (Seq.get f.t_FormulaModel__clauses i) f.t_FormulaModel__num_vars
  /\ Seq.length (view'2 (Seq.get f.t_FormulaModel__clauses i)) > 0

function view'3 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 21 4 21 33] (self : t_Formula) : t_FormulaModel

 =
  [%#slogic_formula'3] { t_FormulaModel__clauses = view'0 self.t_Formula__clauses;
                         t_FormulaModel__num_vars = UInt64.t'int self.t_Formula__num_vars }

predicate inv'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 80 4 80 28] (self : t_Formula) =
  [%#slogic_formula'0] formula_invariant (view'3 self)

axiom inv_spec : forall self : t_Formula . [%#slogic_formula] inv'1 self = inv_mirror self

function view'4 (self : t_Vec) : Seq.seq UInt8.t

axiom view_spec'2 : forall self : t_Vec . [%#svec] Seq.length (view'4 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'5 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 19 4 19 33] (self : t_Assignments) : Seq.seq UInt8.t

 =
  [%#slogic_assignments] view'4 self.t_Assignments__0

predicate inv'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 51 4 51 40] (self : t_Assignments) (f : t_Formula)

 =
  [%#slogic_assignments'0] UInt64.t'int f.t_Formula__num_vars = Seq.length (view'5 self)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'5 self)  -> UInt8.t'int (Seq.get (view'5 self) i) <= 3)

type t_Reason  =
  | C_Decision
  | C_Unit UInt64.t
  | C_Long UInt64.t

type t_Step  =
  { t_Step__lit: t_Lit; t_Step__decision_level: UInt64.t; t_Step__reason: t_Reason }

predicate inv'3 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 13 4 13 40] (self : t_Reason) (f : t_Formula)

 =
  [%#slogic_trail'1] match self with
    | C_Long cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view'0 f.t_Formula__clauses)
    /\ Seq.length (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int cref))) > 1
    | C_Unit cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view'0 f.t_Formula__clauses)
    /\ Seq.length (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int cref))) = 1
    | _ -> true
    end

predicate trail_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 103 0 103 60] (trail : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'3] forall i : int . 0 <= i /\ i < Seq.length trail
   -> inv (Seq.get trail i).t_Step__lit (UInt64.t'int f.t_Formula__num_vars) /\ inv'3 (Seq.get trail i).t_Step__reason f

function view'6 (self : t_Vec'1) : Seq.seq t_Step

axiom view_spec'3 : forall self : t_Vec'1 . [%#svec] Seq.length (view'6 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate lit_idx_in [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 73 4 73 46] (self : t_Lit) (c : t_Clause)
 =
  [%#slogic_lit'8] exists i : int . 0 <= i
  /\ i < Seq.length (view'2 c) /\ index_logic (Seq.get (view'2 c) i) = index_logic self

predicate lit_not_in_less_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 90 0 90 62] (t : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'4] forall i : int . 0 <= i /\ i < Seq.length t
   -> (forall j : int . 0 <= j /\ j < i
   -> match (Seq.get t j).t_Step__reason with
    | C_Long cref -> not lit_idx_in (Seq.get t i).t_Step__lit (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int cref))
    | _ -> true
    end)

predicate lit_is_unique_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 144 0 144 52] (trail : Seq.seq t_Step)

 =
  [%#slogic_trail'5] forall i : int . 0 <= i /\ i < Seq.length trail
   -> (forall j : int . 0 <= j /\ j < i
   -> index_logic (Seq.get trail j).t_Step__lit <> index_logic (Seq.get trail i).t_Step__lit)

function is_positive_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 30 4 30 42] (self : t_Lit) : bool =
  [%#slogic_lit'9] self.t_Lit__polarity

predicate sat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 88 4 88 57] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'5] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 1
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 0


predicate unsat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 99 4 99 59] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'7] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 0
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 1


predicate clause_post_with_regards_to_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 128 0 128 90] (c : t_Clause) (a : Seq.seq UInt8.t) (j : int)

 =
  [%#slogic_trail'8] index_logic (Seq.get (view'2 c) 0) = j
  /\ sat_inner (Seq.get (view'2 c) 0) a
  /\ (forall i : int . 1 <= i /\ i < Seq.length (view'2 c)  -> unsat_inner (Seq.get (view'2 c) i) a)

predicate long_are_post_unit_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 166 0 166 92] (trail : Seq.seq t_Step) (f : t_Formula) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'0] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Long k -> clause_post_with_regards_to_inner (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int k)) a (index_logic (Seq.get trail j).t_Step__lit)
    | _ -> true
    end

predicate trail_entries_are_assigned_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 113 0 113 84] (t : Seq.seq t_Step) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'6] forall j : int . 0 <= j /\ j < Seq.length t  -> sat_inner (Seq.get t j).t_Step__lit a

type t_Ordering  =
  | C_Less
  | C_Equal
  | C_Greater

function cmp_log (self : UInt64.t) (o : UInt64.t) : t_Ordering =
  [%#sord'12] if UInt64.lt self o then C_Less else if self = o then C_Equal else C_Greater

function eq_cmp (x : UInt64.t) (y : UInt64.t) : ()

axiom eq_cmp_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'11] (x = y) = (cmp_log x y = C_Equal)

function antisym2 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym2_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'9] cmp_log x y = C_Greater)
 -> ([%#sord'10] cmp_log y x = C_Less)

function antisym1 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym1_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'7] cmp_log x y = C_Less)
 -> ([%#sord'8] cmp_log y x = C_Greater)

function trans (x : UInt64.t) (y : UInt64.t) (z : UInt64.t) (o : t_Ordering) : ()

axiom trans_spec : forall x : UInt64.t, y : UInt64.t, z : UInt64.t, o : t_Ordering . ([%#sord'4] cmp_log x y = o)
 -> ([%#sord'5] cmp_log y z = o)  -> ([%#sord'6] cmp_log x z = o)

function refl (x : UInt64.t) : ()

axiom refl_spec : forall x : UInt64.t . [%#sord'3] cmp_log x x = C_Equal

function cmp_gt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_gt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'2] UInt64.gt x y = (cmp_log x y = C_Greater)

function cmp_ge_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_ge_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'1] UInt64.ge x y = (cmp_log x y <> C_Less)

function cmp_lt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_lt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'0] UInt64.lt x y = (cmp_log x y = C_Less)

function cmp_le_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_le_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord] UInt64.le x y = (cmp_log x y <> C_Greater)

predicate sorted_range [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 21 0 21 58] (s : Seq.seq UInt64.t) (l : int) (u : int)

 =
  [%#slogic_util'0] forall i : int, j : int . l <= i /\ i < j /\ j < u  -> UInt64.le (Seq.get s i) (Seq.get s j)

predicate sorted [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 27 0 27 36] (s : Seq.seq UInt64.t) =
  [%#slogic_util] sorted_range s 0 (Seq.length s)

predicate sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 116 4 116 44] (self : t_Lit) (a : t_Assignments)
 =
  [%#slogic_lit] sat_inner self (view'5 a)

predicate unit_are_sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 178 0 178 73] (trail : Seq.seq t_Step) (f : t_Formula) (a : t_Assignments)

 =
  [%#slogic_trail'7] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Unit k -> (Seq.get trail j).t_Step__lit
    = Seq.get (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int k))) 0
    /\ sat (Seq.get (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int k))) 0) a
    | _ -> true
    end

predicate inv'4 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 55 4 55 40] (self : t_Trail) (f : t_Formula)
 =
  [%#slogic_trail] inv'2 self.t_Trail__assignments f
  /\ trail_invariant (view'6 self.t_Trail__trail) f
  /\ Seq.length (view self.t_Trail__lit_to_level) = UInt64.t'int f.t_Formula__num_vars
  /\ lit_not_in_less_inner (view'6 self.t_Trail__trail) f
  /\ lit_is_unique_inner (view'6 self.t_Trail__trail)
  /\ long_are_post_unit_inner (view'6 self.t_Trail__trail) f (view'5 self.t_Trail__assignments)
  /\ trail_entries_are_assigned_inner (view'6 self.t_Trail__trail) (view'5 self.t_Trail__assignments)
  /\ sorted (view self.t_Trail__decisions)
  /\ unit_are_sat (view'6 self.t_Trail__trail) f self.t_Trail__assignments
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view self.t_Trail__decisions)
   -> UInt64.t'int (Seq.get (view self.t_Trail__decisions) i) <= Seq.length (view'6 self.t_Trail__trail))

type t_Node  =
  { t_Node__next: UInt64.t; t_Node__prev: UInt64.t; t_Node__ts: UInt64.t }

function view'7 (self : t_Vec'2) : Seq.seq t_Node

axiom view_spec'4 : forall self : t_Vec'2 . [%#svec] Seq.length (view'7 self) <= UInt64.t'int (v_MAX : UInt64.t)

constant v_MAX'0 : UInt64.t = (18446744073709551615 : UInt64.t)

predicate inv'5 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_decision.rs" 10 4 10 36] (self : t_Decisions) (n : int)

 =
  [%#slogic_decision] Seq.length (view'7 self.t_Decisions__linked_list) = n
  /\ (UInt64.t'int self.t_Decisions__search < Seq.length (view'7 self.t_Decisions__linked_list)
  \/ UInt64.t'int self.t_Decisions__search = UInt64.t'int v_MAX'0)
  /\ UInt64.t'int self.t_Decisions__start < Seq.length (view'7 self.t_Decisions__linked_list)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'7 self.t_Decisions__linked_list)
   -> (UInt64.t'int (Seq.get (view'7 self.t_Decisions__linked_list) i).t_Node__next = UInt64.t'int v_MAX'0
  \/ UInt64.t'int (Seq.get (view'7 self.t_Decisions__linked_list) i).t_Node__next < n)
  /\ (UInt64.t'int (Seq.get (view'7 self.t_Decisions__linked_list) i).t_Node__prev = UInt64.t'int v_MAX'0
  \/ UInt64.t'int (Seq.get (view'7 self.t_Decisions__linked_list) i).t_Node__prev < n))

let rec backtrack_to (self:MutBorrow.t t_Trail) (level:UInt64.t) (f:t_Formula) (d:MutBorrow.t t_Decisions) (return'  (x:()))= {[@expl:backtrack_to requires #0] [%#strail'14] Seq.length (view (self.current).t_Trail__decisions)
  > UInt64.t'int level}
  {[@expl:backtrack_to requires #1] [%#strail'15] inv'1 f}
  {[@expl:backtrack_to requires #2] [%#strail'16] inv'4 self.current f}
  {[@expl:backtrack_to requires #3] [%#strail'17] inv'5 d.current (UInt64.t'int f.t_Formula__num_vars)}
  {[@expl:backtrack_to requires #4] [%#strail'18] long_are_post_unit_inner (view'6 (self.current).t_Trail__trail) f (view'5 (self.current).t_Trail__assignments)}
  any
  [ return''0 (result:())-> {[%#strail'16] inv'4 self.final f}
    {[%#strail'17] inv'5 d.final (UInt64.t'int f.t_Formula__num_vars)}
    {[%#strail'19] long_are_post_unit_inner (view'6 (self.final).t_Trail__trail) f (view'5 (self.final).t_Trail__assignments)}
    (! return' {result}) ]


predicate resolve (self : MutBorrow.t t_Decisions) =
  [%#sresolve] self.final = self.current

predicate resolve'0 (_0 : MutBorrow.t t_Decisions) =
  resolve _0

function view'8 (self : t_Formula) : t_FormulaModel =
  [%#smodel] view'3 self

let rec index (self:t_Formula) (ix:UInt64.t) (return'  (x:t_Clause))= {[@expl:index requires] [%#sformula] UInt64.t'int ix
  < Seq.length (view'8 self).t_FormulaModel__clauses}
  any
  [ return''0 (result:t_Clause)-> {[%#sformula'0] Seq.get (view'8 self).t_FormulaModel__clauses (UInt64.t'int ix)
    = result}
    (! return' {result}) ]


function view'9 (self : t_Clause) : Seq.seq t_Lit =
  [%#smodel] view'2 self

let rec index'0 (self:t_Clause) (ix:UInt64.t) (return'  (x:t_Lit))= {[@expl:index requires] [%#sclause] UInt64.t'int ix
  < Seq.length (view'9 self)}
  any
  [ return''0 (result:t_Lit)-> {[%#sclause'0] Seq.get (view'9 self) (UInt64.t'int ix) = result} (! return' {result}) ]


function view'10 (self : t_Assignments) : Seq.seq UInt8.t =
  [%#smodel] view'5 self

predicate unset_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 110 4 110 59] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'6] UInt8.t'int (Seq.get a (index_logic self)) >= 2

predicate unset [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 122 4 122 46] (self : t_Lit) (a : t_Assignments)

 =
  [%#slogic_lit'1] unset_inner self (view'5 a)

let rec lit_set (self:t_Lit) (a:t_Assignments) (return'  (x:bool))= {[@expl:lit_set requires] [%#slit] inv self (Seq.length (view'10 a))}
  any [ return''0 (result:bool)-> {[%#slit'0] result = (not unset self a)} (! return' {result}) ] 

predicate resolve'1 (self : MutBorrow.t t_Trail) =
  [%#sresolve] self.final = self.current

predicate resolve'2 (_0 : MutBorrow.t t_Trail) =
  resolve'1 _0

type t_Result  =
  | C_Ok ()
  | C_Err ()

predicate unsat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 128 4 128 46] (self : t_Lit) (a : t_Assignments)

 =
  [%#slogic_lit'2] unsat_inner self (view'5 a)

predicate idx_in_trail [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 134 4 134 51] (self : t_Lit) (t : t_Vec'1)

 =
  [%#slogic_lit'3] exists i : int . 0 <= i
  /\ i < Seq.length (view'6 t) /\ index_logic (Seq.get (view'6 t) i).t_Step__lit = index_logic self

predicate unset'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic.rs" 23 0 23 38] (v : UInt8.t) =
  [%#slogic] if UInt8.t'int v >= 2 then true else false

predicate clause_post_with_regards_to_lit [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 138 0 138 83] (c : t_Clause) (a : t_Assignments) (lit : t_Lit)

 =
  [%#slogic_trail'2] clause_post_with_regards_to_inner c (view'5 a) (UInt64.t'int lit.t_Lit__idx)

let rec enq_assignment (self:MutBorrow.t t_Trail) (step:t_Step) (_f:t_Formula) (return'  (x:()))= {[@expl:enq_assignment requires #0] [%#strail'20] inv'4 self.current _f}
  {[@expl:enq_assignment requires #1] [%#strail'21] inv'1 _f}
  {[@expl:enq_assignment requires #2] [%#strail'22] inv step.t_Step__lit (UInt64.t'int _f.t_Formula__num_vars)}
  {[@expl:enq_assignment requires #3] [%#strail'23] inv'3 step.t_Step__reason _f}
  {[@expl:enq_assignment requires #4] [%#strail'24] match step.t_Step__reason with
    | C_Long cref -> UInt64.t'int cref < Seq.length (view'0 _f.t_Formula__clauses)
    /\ unset (Seq.get (view'2 (Seq.get (view'0 _f.t_Formula__clauses) (UInt64.t'int cref))) 0) (self.current).t_Trail__assignments
    /\ (forall i : int . 1 <= i /\ i < Seq.length (view'2 (Seq.get (view'0 _f.t_Formula__clauses) (UInt64.t'int cref)))
     -> unsat (Seq.get (view'2 (Seq.get (view'0 _f.t_Formula__clauses) (UInt64.t'int cref))) i) (self.current).t_Trail__assignments)
    /\ Seq.get (view'2 (Seq.get (view'0 _f.t_Formula__clauses) (UInt64.t'int cref))) 0 = step.t_Step__lit
    | C_Unit cref -> UInt64.t'int cref < Seq.length (view'0 _f.t_Formula__clauses)
    /\ step.t_Step__lit = Seq.get (view'2 (Seq.get (view'0 _f.t_Formula__clauses) (UInt64.t'int cref))) 0
    | _ -> true
    end}
  {[@expl:enq_assignment requires #5] [%#strail'25] not idx_in_trail step.t_Step__lit (self.current).t_Trail__trail}
  {[@expl:enq_assignment requires #6] [%#strail'26] unset'0 (Seq.get (view'5 (self.current).t_Trail__assignments) (index_logic step.t_Step__lit))}
  {[@expl:enq_assignment requires #7] [%#strail'27] long_are_post_unit_inner (view'6 (self.current).t_Trail__trail) _f (view'5 (self.current).t_Trail__assignments)}
  any
  [ return''0 (result:())-> {[%#strail'20] inv'4 self.final _f}
    {[%#strail'28] forall j : int . 0 <= j
    /\ j < Seq.length (view'5 (self.current).t_Trail__assignments) /\ j <> index_logic step.t_Step__lit
     -> Seq.get (view'5 (self.current).t_Trail__assignments) j = Seq.get (view'5 (self.final).t_Trail__assignments) j}
    {[%#strail'29] sat step.t_Step__lit (self.final).t_Trail__assignments}
    {[%#strail'30] long_are_post_unit_inner (view'6 (self.final).t_Trail__trail) _f (view'5 (self.final).t_Trail__assignments)}
    {[%#strail'31] match step.t_Step__reason with
      | C_Long k -> clause_post_with_regards_to_lit (Seq.get (view'0 _f.t_Formula__clauses) (UInt64.t'int k)) (self.final).t_Trail__assignments step.t_Step__lit
      | _ -> true
      end}
    {[%#strail'32] Seq.length (view'6 (self.final).t_Trail__trail)
    = 1 + Seq.length (view'6 (self.current).t_Trail__trail)}
    {[%#strail'33] (self.final).t_Trail__decisions = (self.current).t_Trail__decisions}
    (! return' {result}) ]


meta "compute_max_steps" 1000000

let rec learn_unit[#"/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 290 4 290 95] (self:MutBorrow.t t_Trail) (cref:UInt64.t) (f:t_Formula) (d:MutBorrow.t t_Decisions) (return'  (x:t_Result))= {[@expl:learn_unit requires #0] [%#strail'4] inv'4 self.current f}
  {[@expl:learn_unit requires #1] [%#strail'5] inv'5 d.current (UInt64.t'int f.t_Formula__num_vars)}
  {[@expl:learn_unit requires #2] [%#strail'6] inv'1 f}
  {[@expl:learn_unit requires #3] [%#strail'7] UInt64.t'int cref < Seq.length (view'0 f.t_Formula__clauses)}
  {[@expl:learn_unit requires #4] [%#strail'8] Seq.length (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int cref)))
  = 1}
  {[@expl:learn_unit requires #5] [%#strail'9] inv'0 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int cref)) (UInt64.t'int f.t_Formula__num_vars)}
  {[@expl:learn_unit requires #6] [%#strail'10] long_are_post_unit_inner (view'6 (self.current).t_Trail__trail) f (view'5 (self.current).t_Trail__assignments)}
  (! bb0
  [ bb0 = s0 [ s0 = decision_level {self'0.current} (fun (_ret:UInt64.t) ->  [ &_18 <- _ret ] s1) | s1 = bb1 ] 
  | bb1 = s0
    [ s0 =  [ &_17 <- UInt64.gt _18 ([%#strail] (0 : UInt64.t)) ] s1
    | s1 = any [ br0 -> {_17 = false} (! bb4) | br1 -> {_17} (! bb2) ]  ]
  
  | bb2 = s0
    [ s0 = MutBorrow.borrow_mut <t_Trail> {self'0.current}
        (fun (_ret:MutBorrow.t t_Trail) ->  [ &_21 <- _ret ]  [ &self'0 <- { self'0 with current = _ret.final } ] s1)
    | s1 = MutBorrow.borrow_final <t_Decisions> {d'0.current} {MutBorrow.get_id d'0}
        (fun (_ret:MutBorrow.t t_Decisions) ->  [ &_23 <- _ret ]  [ &d'0 <- { d'0 with current = _ret.final } ] s2)
    | s2 = backtrack_to {_21} {[%#strail'0] (0 : UInt64.t)} {f'0} {_23} (fun (_ret:()) ->  [ &_20 <- _ret ] s3)
    | s3 = bb3 ]
  
  | bb3 = s0 [ s0 = -{resolve'0 d'0}- s1 | s1 = bb5 ] 
  | bb4 = s0 [ s0 = -{resolve'0 d'0}- s1 | s1 = bb5 ] 
  | bb5 = s0 [ s0 = index {f'0} {cref'0} (fun (_ret:t_Clause) ->  [ &_29 <- _ret ] s1) | s1 = bb6 ] 
  | bb6 = s0 [ s0 = index'0 {_29} {[%#strail'1] (0 : UInt64.t)} (fun (_ret:t_Lit) ->  [ &_27 <- _ret ] s1) | s1 = bb7 ] 
  | bb7 = s0
    [ s0 =  [ &_33 <- (self'0.current).t_Trail__assignments ] s1
    | s1 = lit_set {_27} {_33} (fun (_ret:bool) ->  [ &_25 <- _ret ] s2)
    | s2 = bb8 ]
  
  | bb8 = any [ br0 -> {_25 = false} (! bb10) | br1 -> {_25} (! bb9) ] 
  | bb9 = s0 [ s0 = -{resolve'2 self'0}- s1 | s1 =  [ &_0 <- C_Err _35 ] s2 | s2 = bb14 ] 
  | bb10 = s0
    [ s0 = MutBorrow.borrow_final <t_Trail> {self'0.current} {MutBorrow.get_id self'0}
        (fun (_ret:MutBorrow.t t_Trail) ->  [ &_37 <- _ret ]  [ &self'0 <- { self'0 with current = _ret.final } ] s1)
    | s1 = index {f'0} {cref'0} (fun (_ret:t_Clause) ->  [ &_42 <- _ret ] s2)
    | s2 = bb11 ]
  
  | bb11 = s0
    [ s0 = index'0 {_42} {[%#strail'2] (0 : UInt64.t)} (fun (_ret:t_Lit) ->  [ &_40 <- _ret ] s1) | s1 = bb12 ]
  
  | bb12 = s0
    [ s0 =  [ &_45 <- C_Unit cref'0 ] s1
    | s1 = 
      [ &_38 <- { t_Step__lit = _40; t_Step__decision_level = ([%#strail'3] (0 : UInt64.t)); t_Step__reason = _45 } ]
      
      s2
    | s2 = enq_assignment {_37} {_38} {f'0} (fun (_ret:()) ->  [ &_36 <- _ret ] s3)
    | s3 = bb13 ]
  
  | bb13 = s0 [ s0 = -{resolve'2 self'0}- s1 | s1 =  [ &_0 <- C_Ok _48 ] s2 | s2 = bb14 ] 
  | bb14 = return''0 {_0} ]
  )
  [ & _0 : t_Result = Any.any_l ()
  | & self'0 : MutBorrow.t t_Trail = self
  | & cref'0 : UInt64.t = cref
  | & f'0 : t_Formula = f
  | & d'0 : MutBorrow.t t_Decisions = d
  | & _17 : bool = Any.any_l ()
  | & _18 : UInt64.t = Any.any_l ()
  | & _20 : () = Any.any_l ()
  | & _21 : MutBorrow.t t_Trail = Any.any_l ()
  | & _23 : MutBorrow.t t_Decisions = Any.any_l ()
  | & _25 : bool = Any.any_l ()
  | & _27 : t_Lit = Any.any_l ()
  | & _29 : t_Clause = Any.any_l ()
  | & _33 : t_Assignments = Any.any_l ()
  | & _35 : () = Any.any_l ()
  | & _36 : () = Any.any_l ()
  | & _37 : MutBorrow.t t_Trail = Any.any_l ()
  | & _38 : t_Step = Any.any_l ()
  | & _40 : t_Lit = Any.any_l ()
  | & _42 : t_Clause = Any.any_l ()
  | & _45 : t_Reason = Any.any_l ()
  | & _48 : () = Any.any_l () ]
  
  [ return''0 (result:t_Result)-> {[@expl:learn_unit ensures #0] [%#strail'4] inv'4 self.final f}
    {[@expl:learn_unit ensures #1] [%#strail'5] inv'5 d.final (UInt64.t'int f.t_Formula__num_vars)}
    {[@expl:learn_unit ensures #2] [%#strail'11] match result with
      | C_Err _ -> true
      | C_Ok _ -> sat (Seq.get (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int cref))) 0) (self.final).t_Trail__assignments
      end}
    {[@expl:learn_unit ensures #3] [%#strail'12] long_are_post_unit_inner (view'6 (self.final).t_Trail__trail) f (view'5 (self.final).t_Trail__assignments)}
    (! return' {result}) ]
  
