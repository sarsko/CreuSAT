(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 35 4 35 41 *)

(* trail::Trail *)

let%span svec = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 89 26 89 48
let%span svec'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 21 14 21 41
let%span smodel = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 54 8 54 22
let%span strail = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 34 14 34 46

use creusot.prelude.Opaque
use creusot.int.UInt64
use seq.Seq
use mach.int.Int
use creusot.prelude.Any

type t_NonNull  =
  { t_NonNull__pointer: Opaque.ptr }

type t_Unique  =
  { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }

type t_UsizeNoHighBit  =
  { t_UsizeNoHighBit__0: UInt64.t }

type t_RawVecInner  =
  { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }

type t_RawVec  =
  { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }

type t_Vec  =
  { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }

type t_Assignments  =
  { t_Assignments__0: t_Vec }

type t_RawVec'0  =
  { t_RawVec__inner'0: t_RawVecInner; t_RawVec__qy95zmarker'0: () }

type t_Vec'0  =
  { t_Vec__buf'0: t_RawVec'0; t_Vec__len'0: UInt64.t }

type t_RawVec'1  =
  { t_RawVec__inner'1: t_RawVecInner; t_RawVec__qy95zmarker'1: () }

type t_Vec'1  =
  { t_Vec__buf'1: t_RawVec'1; t_Vec__len'1: UInt64.t }

type t_Trail  =
  { t_Trail__assignments: t_Assignments;
    t_Trail__lit_to_level: t_Vec'0;
    t_Trail__trail: t_Vec'1;
    t_Trail__curr_i: UInt64.t;
    t_Trail__decisions: t_Vec'0 }

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

function view (self : t_Vec'0) : Seq.seq UInt64.t

axiom view_spec : forall self : t_Vec'0 . [%#svec'0] Seq.length (view self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'0 (self : t_Vec'0) : Seq.seq UInt64.t =
  [%#smodel] view self

let rec len (self_:t_Vec'0) (return'  (x:UInt64.t))= any
  [ return''0 (result:UInt64.t)-> {[%#svec] UInt64.t'int result = Seq.length (view'0 self_)} (! return' {result}) ]


meta "compute_max_steps" 1000000

let rec decision_level[#"/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 35 4 35 41] (self:t_Trail) (return'  (x:UInt64.t))= (! bb0
  [ bb0 = s0 [ s0 = len {self'0.t_Trail__decisions} (fun (_ret:UInt64.t) ->  [ &_0 <- _ret ] s1) | s1 = bb1 ] 
  | bb1 = return''0 {_0} ]
  ) [ & _0 : UInt64.t = Any.any_l () | & self'0 : t_Trail = self ] 
  [ return''0 (result:UInt64.t)-> {[@expl:decision_level ensures] [%#strail] UInt64.t'int result
    = Seq.length (view self.t_Trail__decisions)}
    (! return' {result}) ]
  
