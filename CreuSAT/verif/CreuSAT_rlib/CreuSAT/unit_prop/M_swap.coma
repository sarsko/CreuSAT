(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 68 0 68 91 *)

let%span svec = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 158 27 158 46
let%span svec'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 159 26 159 54
let%span svec'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 160 26 160 57
let%span svec'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 161 26 161 62
let%span svec'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 162 26 162 55
let%span svec'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 181 26 181 42
let%span svec'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 182 26 182 48
let%span svec'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 21 14 21 41
let%span smodel = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 72 8 72 22
let%span smodel'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 54 8 54 22
let%span sslice = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 258 19 258 35
let%span sslice'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 259 19 259 35
let%span sslice'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 260 18 260 50
let%span sslice'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 123 20 123 37
let%span sslice'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 130 20 130 37
let%span sslice'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 137 20 137 94
let%span sslice'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 27 14 27 41
let%span sslice'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 28 14 28 42
let%span slogic_assignments = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 37 8 37 61
let%span slogic_assignments'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 53 12 54 74
let%span slogic_assignments'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 17 4 17 12
let%span sresolve = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/resolve.rs" 54 20 54 34
let%span slogic_lit = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 75 12 76 57
let%span slogic_lit'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 24 20 24 29
let%span slogic_lit'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 90 12 93 13
let%span slogic_lit'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 83 20 83 42
let%span slogic_lit'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 117 20 117 38
let%span slogic_lit'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 31 20 31 33
let%span slogic_lit'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 101 12 104 13
let%span slogic_formula = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 48 8 48 111
let%span slogic_formula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 79 14 79 41
let%span slogic_formula'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 81 20 81 44
let%span slogic_formula'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 73 8 73 69
let%span slogic_formula'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 39 8 40 37
let%span slogic_formula'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 22 8 22 85
let%span slogic_formula'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 88 12 92 45
let%span slogic_formula'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 30 8 31 69
let%span slogic_formula'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 66 12 66 113
let%span slogic_formula'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 123 12 124 45
let%span slogic_trail = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 105 8 107 38
let%span slogic_trail'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 146 8 148 72
let%span slogic_trail'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 115 8 116 33
let%span slogic_trail'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 180 8 186 17
let%span slogic_trail'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 92 8 97 17
let%span slogic_trail'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 123 16 123 59
let%span slogic_trail'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 168 8 172 17
let%span slogic_trail'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 56 8 67 9
let%span slogic_trail'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 15 12 23 13
let%span slogic_trail'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 129 4 133 5
let%span slogic = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic.rs" 25 8 29 9
let%span slogic_clause = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 25 8 26 23
let%span slogic_clause'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 14 4 14 12
let%span slogic_clause'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 48 8 49 92
let%span slogic_clause'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 187 12 188 37
let%span slogic_clause'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 227 20 227 42
let%span slogic_clause'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 33 4 33 62
let%span ssnapshot = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/snapshot.rs" 50 20 50 39
let%span slogic_util = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 28 4 28 31
let%span slogic_util'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 22 16 22 80
let%span sord = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 129 39 129 89
let%span sord'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 134 39 134 86
let%span sord'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 139 39 139 86
let%span sord'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 144 39 144 89
let%span sord'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 149 39 149 70
let%span sord'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 154 40 154 57
let%span sord'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 155 40 155 57
let%span sord'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 156 39 156 56
let%span sord'7 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 161 40 161 70
let%span sord'8 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 162 39 162 72
let%span sord'9 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 167 40 167 73
let%span sord'10 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 168 39 168 69
let%span sord'11 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 173 39 173 84
let%span sord'12 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 230 16 236 17
let%span slogic_watches = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 76 12 76 63
let%span slogic_watches'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 14 8 19 64
let%span sunit_prop = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 69 40 69 55
let%span sunit_prop'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 73 18 73 70
let%span sunit_prop'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 74 18 74 64
let%span sunit_prop'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 76 18 76 169
let%span sunit_prop'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 77 18 77 81
let%span sunit_prop'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 78 18 78 38
let%span sunit_prop'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 81 18 81 116
let%span sunit_prop'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 84 4 93 5
let%span sunit_prop'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 97 8 102 17
let%span sunit_prop'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 104 18 104 57
let%span sunit_prop'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 108 8 112 17
let%span sunit_prop'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 115 18 115 80
let%span sunit_prop'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 55 0 55 27
let%span sunit_prop'12 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 56 0 56 33
let%span sunit_prop'13 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 57 0 57 35
let%span sunit_prop'14 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 58 11 58 40
let%span sunit_prop'15 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 59 11 59 35
let%span sunit_prop'16 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 60 11 60 40
let%span sunit_prop'17 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 61 11 61 40
let%span sunit_prop'18 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 62 0 62 65
let%span sunit_prop'19 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 63 10 63 68
let%span sunit_prop'20 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 64 10 64 39
let%span sunit_prop'21 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 65 10 65 49
let%span sunit_prop'22 = "/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 67 10 67 23

use creusot.prelude.MutBorrow
use creusot.prelude.Opaque
use creusot.int.UInt64
use creusot.int.UInt32
use seq.Seq
use mach.int.Int
use creusot.slice.Slice64
use seq.Permut
use creusot.int.UInt8
use creusot.prelude.Any

type t_NonNull  =
  { t_NonNull__pointer: Opaque.ptr }

type t_Unique  =
  { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }

type t_UsizeNoHighBit  =
  { t_UsizeNoHighBit__0: UInt64.t }

type t_RawVecInner  =
  { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }

type t_RawVec  =
  { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }

type t_Vec  =
  { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }

type t_Formula  =
  { t_Formula__clauses: t_Vec; t_Formula__num_vars: UInt64.t }

type t_RawVec'0  =
  { t_RawVec__inner'0: t_RawVecInner; t_RawVec__qy95zmarker'0: () }

type t_Vec'0  =
  { t_Vec__buf'0: t_RawVec'0; t_Vec__len'0: UInt64.t }

type t_Clause  =
  { t_Clause__deleted: bool; t_Clause__lbd: UInt32.t; t_Clause__search: UInt64.t; t_Clause__lits: t_Vec'0 }

predicate in_bounds [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Clause) =
  [%#sslice'2] UInt64.t'int self < Seq.length seq

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

function view (self : t_Vec) : Seq.seq t_Clause

axiom view_spec : forall self : t_Vec . [%#svec'6] Seq.length (view self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'0 (self : MutBorrow.t t_Vec) : Seq.seq t_Clause =
  [%#smodel] view self.current

predicate has_value [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Clause) (out : t_Clause) =
  [%#sslice'3] Seq.get seq (UInt64.t'int self) = out

predicate resolve_elswhere [@inline:trivial] (self : UInt64.t) (old' : Seq.seq t_Clause) (fin : Seq.seq t_Clause) =
  [%#sslice'4] forall i : int . 0 <= i /\ i <> UInt64.t'int self /\ i < Seq.length old'
   -> Seq.get old' i = Seq.get fin i

let rec index_mut (self_:MutBorrow.t t_Vec) (ix:UInt64.t) (return'  (x:MutBorrow.t t_Clause))= {[@expl:index_mut requires] [%#svec] in_bounds ix (view'0 self_)}
  any
  [ return''0 (result:MutBorrow.t t_Clause)-> {[%#svec'0] has_value ix (view'0 self_) result.current}
    {[%#svec'1] has_value ix (view self_.final) result.final}
    {[%#svec'2] resolve_elswhere ix (view'0 self_) (view self_.final)}
    {[%#svec'3] Seq.length (view self_.final) = Seq.length (view'0 self_)}
    (! return' {result}) ]


type t_Lit  =
  { t_Lit__idx: UInt64.t; t_Lit__polarity: bool }

function view'1 (self : Slice64.slice t_Lit) : Seq.seq t_Lit

axiom view_spec'0 : forall self : Slice64.slice t_Lit . ([%#sslice'5] Seq.length (view'1 self)
<= UInt64.t'int (v_MAX : UInt64.t))
&& ([%#sslice'6] view'1 self = Slice64.id self)

function view'2 (self : MutBorrow.t (Slice64.slice t_Lit)) : Seq.seq t_Lit =
  [%#smodel] view'1 self.current

function view'3 (self : t_Vec'0) : Seq.seq t_Lit

axiom view_spec'1 : forall self : t_Vec'0 . [%#svec'6] Seq.length (view'3 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'4 (self : MutBorrow.t t_Vec'0) : Seq.seq t_Lit =
  [%#smodel] view'3 self.current

let rec deref_mut (self_:MutBorrow.t t_Vec'0) (return'  (x:MutBorrow.t (Slice64.slice t_Lit)))= any
  [ return''0 (result:MutBorrow.t (Slice64.slice t_Lit))-> {[%#svec'4] view'2 result = view'4 self_}
    {[%#svec'5] view'1 result.final = view'3 self_.final}
    (! return' {result}) ]


let rec swap (self_:MutBorrow.t (Slice64.slice t_Lit)) (i:UInt64.t) (j:UInt64.t) (return'  (x:()))= {[@expl:swap requires #0] [%#sslice] UInt64.t'int i
  < Seq.length (view'2 self_)}
  {[@expl:swap requires #1] [%#sslice'0] UInt64.t'int j < Seq.length (view'2 self_)}
  any
  [ return''0 (result:())-> {[%#sslice'1] Permut.exchange (view'1 self_.final) (view'2 self_) (UInt64.t'int i) (UInt64.t'int j)}
    (! return' {result}) ]


predicate resolve (self : MutBorrow.t t_Clause) =
  [%#sresolve] self.final = self.current

predicate resolve'0 (_0 : MutBorrow.t t_Clause) =
  resolve _0

predicate resolve'1 (self : MutBorrow.t (Slice64.slice t_Lit)) =
  [%#sresolve] self.final = self.current

predicate resolve'2 (_0 : MutBorrow.t (Slice64.slice t_Lit)) =
  resolve'1 _0

predicate resolve'3 (self : MutBorrow.t t_Formula) =
  [%#sresolve] self.final = self.current

predicate resolve'4 (_0 : MutBorrow.t t_Formula) =
  resolve'3 _0

function index_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 23 4 23 35] (self : t_Lit) : int =
  [%#slogic_lit'0] UInt64.t'int self.t_Lit__idx

predicate inv [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 82 4 82 36] (self : t_Lit) (n : int) =
  [%#slogic_lit'2] index_logic self < n

predicate vars_in_range_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 23 0 23 55] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause] forall i : int . 0 <= i /\ i < Seq.length s  -> inv (Seq.get s i) n

function view'5 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 16 4 16 33] (self : t_Clause) : Seq.seq t_Lit

 =
  [%#slogic_clause'0] view'3 self.t_Clause__lits

predicate no_duplicate_indexes_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 46 0 46 54] (s : Seq.seq t_Lit)

 =
  [%#slogic_clause'1] forall j : int, k : int . 0 <= j /\ j < Seq.length s /\ 0 <= k /\ k < Seq.length s /\ k <> j
   -> index_logic (Seq.get s k) <> index_logic (Seq.get s j)

predicate unset [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic.rs" 23 0 23 38] (v : UInt8.t) =
  [%#slogic] if UInt8.t'int v >= 2 then true else false

predicate complete_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 35 0 35 52] (a : Seq.seq UInt8.t)

 =
  [%#slogic_assignments] forall i : int . 0 <= i /\ i < Seq.length a  -> not unset (Seq.get a i)

function is_positive_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 30 4 30 42] (self : t_Lit) : bool =
  [%#slogic_lit'4] self.t_Lit__polarity

predicate sat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 88 4 88 57] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'1] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 1
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 0


predicate sat_inner'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 185 4 185 57] (self : t_Clause) (a : Seq.seq UInt8.t)

 =
  [%#slogic_clause'2] exists i : int . 0 <= i /\ i < Seq.length (view'5 self) /\ sat_inner (Seq.get (view'5 self) i) a

type t_FormulaModel  =
  { t_FormulaModel__clauses: Seq.seq t_Clause; t_FormulaModel__num_vars: int }

predicate formula_sat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 37 0 37 72] (f : t_FormulaModel) (a : Seq.seq UInt8.t)

 =
  [%#slogic_formula'3] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> sat_inner'0 (Seq.get f.t_FormulaModel__clauses i) a

predicate eventually_sat_complete [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 46 0 46 55] (f : t_FormulaModel)

 =
  [%#slogic_formula] exists a2 : Seq.seq UInt8.t . Seq.length a2 = f.t_FormulaModel__num_vars
  /\ complete_inner a2 /\ formula_sat_inner f a2

function view'6 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 21 4 21 33] (self : t_Formula) : t_FormulaModel

 =
  [%#slogic_formula'4] { t_FormulaModel__clauses = view self.t_Formula__clauses;
                         t_FormulaModel__num_vars = UInt64.t'int self.t_Formula__num_vars }

function view'7 (self : MutBorrow.t t_Formula) : t_FormulaModel =
  [%#smodel] view'6 self.current

function view'8 (self : MutBorrow.t t_Formula) : t_FormulaModel =
  [%#smodel'0] view'7 self

function view'9 (self : MutBorrow.t t_Formula) : t_FormulaModel =
  [%#ssnapshot] view'8 self

type t_RawVec'1  =
  { t_RawVec__inner'1: t_RawVecInner; t_RawVec__qy95zmarker'1: () }

type t_Vec'1  =
  { t_Vec__buf'1: t_RawVec'1; t_Vec__len'1: UInt64.t }

type t_Assignments  =
  { t_Assignments__0: t_Vec'1 }

function view'10 (self : t_Vec'1) : Seq.seq UInt8.t

axiom view_spec'2 : forall self : t_Vec'1 . [%#svec'6] Seq.length (view'10 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'11 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 19 4 19 33] (self : t_Assignments) : Seq.seq UInt8.t

 =
  [%#slogic_assignments'1] view'10 self.t_Assignments__0

predicate inv'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 51 4 51 40] (self : t_Assignments) (f : t_Formula)

 =
  [%#slogic_assignments'0] UInt64.t'int f.t_Formula__num_vars = Seq.length (view'11 self)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'11 self)  -> UInt8.t'int (Seq.get (view'11 self) i) <= 3)

type t_RawVec'2  =
  { t_RawVec__inner'2: t_RawVecInner; t_RawVec__qy95zmarker'2: () }

type t_Vec'2  =
  { t_Vec__buf'2: t_RawVec'2; t_Vec__len'2: UInt64.t }

type t_RawVec'3  =
  { t_RawVec__inner'3: t_RawVecInner; t_RawVec__qy95zmarker'3: () }

type t_Vec'3  =
  { t_Vec__buf'3: t_RawVec'3; t_Vec__len'3: UInt64.t }

type t_Trail  =
  { t_Trail__assignments: t_Assignments;
    t_Trail__lit_to_level: t_Vec'2;
    t_Trail__trail: t_Vec'3;
    t_Trail__curr_i: UInt64.t;
    t_Trail__decisions: t_Vec'2 }

type t_Reason  =
  | C_Decision
  | C_Unit UInt64.t
  | C_Long UInt64.t

type t_Step  =
  { t_Step__lit: t_Lit; t_Step__decision_level: UInt64.t; t_Step__reason: t_Reason }

predicate inv'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 13 4 13 40] (self : t_Reason) (f : t_Formula)

 =
  [%#slogic_trail'7] match self with
    | C_Long cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view f.t_Formula__clauses)
    /\ Seq.length (view'5 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref))) > 1
    | C_Unit cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view f.t_Formula__clauses)
    /\ Seq.length (view'5 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref))) = 1
    | _ -> true
    end

predicate trail_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 103 0 103 60] (trail : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail] forall i : int . 0 <= i /\ i < Seq.length trail
   -> inv (Seq.get trail i).t_Step__lit (UInt64.t'int f.t_Formula__num_vars) /\ inv'1 (Seq.get trail i).t_Step__reason f

function view'12 (self : t_Vec'3) : Seq.seq t_Step

axiom view_spec'3 : forall self : t_Vec'3 . [%#svec'6] Seq.length (view'12 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'13 (self : t_Vec'2) : Seq.seq UInt64.t

axiom view_spec'4 : forall self : t_Vec'2 . [%#svec'6] Seq.length (view'13 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate lit_is_unique_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 144 0 144 52] (trail : Seq.seq t_Step)

 =
  [%#slogic_trail'0] forall i : int . 0 <= i /\ i < Seq.length trail
   -> (forall j : int . 0 <= j /\ j < i
   -> index_logic (Seq.get trail j).t_Step__lit <> index_logic (Seq.get trail i).t_Step__lit)

predicate trail_entries_are_assigned_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 113 0 113 84] (t : Seq.seq t_Step) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'1] forall j : int . 0 <= j /\ j < Seq.length t  -> sat_inner (Seq.get t j).t_Step__lit a

type t_Ordering  =
  | C_Less
  | C_Equal
  | C_Greater

function cmp_log (self : UInt64.t) (o : UInt64.t) : t_Ordering =
  [%#sord'12] if UInt64.lt self o then C_Less else if self = o then C_Equal else C_Greater

function eq_cmp (x : UInt64.t) (y : UInt64.t) : ()

axiom eq_cmp_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'11] (x = y) = (cmp_log x y = C_Equal)

function antisym2 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym2_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'9] cmp_log x y = C_Greater)
 -> ([%#sord'10] cmp_log y x = C_Less)

function antisym1 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym1_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'7] cmp_log x y = C_Less)
 -> ([%#sord'8] cmp_log y x = C_Greater)

function trans (x : UInt64.t) (y : UInt64.t) (z : UInt64.t) (o : t_Ordering) : ()

axiom trans_spec : forall x : UInt64.t, y : UInt64.t, z : UInt64.t, o : t_Ordering . ([%#sord'4] cmp_log x y = o)
 -> ([%#sord'5] cmp_log y z = o)  -> ([%#sord'6] cmp_log x z = o)

function refl (x : UInt64.t) : ()

axiom refl_spec : forall x : UInt64.t . [%#sord'3] cmp_log x x = C_Equal

function cmp_gt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_gt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'2] UInt64.gt x y = (cmp_log x y = C_Greater)

function cmp_ge_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_ge_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'1] UInt64.ge x y = (cmp_log x y <> C_Less)

function cmp_lt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_lt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'0] UInt64.lt x y = (cmp_log x y = C_Less)

function cmp_le_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_le_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord] UInt64.le x y = (cmp_log x y <> C_Greater)

predicate sorted_range [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 21 0 21 58] (s : Seq.seq UInt64.t) (l : int) (u : int)

 =
  [%#slogic_util'0] forall i : int, j : int . l <= i /\ i < j /\ j < u  -> UInt64.le (Seq.get s i) (Seq.get s j)

predicate sorted [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 27 0 27 36] (s : Seq.seq UInt64.t) =
  [%#slogic_util] sorted_range s 0 (Seq.length s)

predicate sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 116 4 116 44] (self : t_Lit) (a : t_Assignments)
 =
  [%#slogic_lit'3] sat_inner self (view'11 a)

predicate unit_are_sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 178 0 178 73] (trail : Seq.seq t_Step) (f : t_Formula) (a : t_Assignments)

 =
  [%#slogic_trail'2] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Unit k -> (Seq.get trail j).t_Step__lit
    = Seq.get (view'5 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int k))) 0
    /\ sat (Seq.get (view'5 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int k))) 0) a
    | _ -> true
    end

predicate lit_idx_in [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 73 4 73 46] (self : t_Lit) (c : t_Clause)
 =
  [%#slogic_lit] exists i : int . 0 <= i
  /\ i < Seq.length (view'5 c) /\ index_logic (Seq.get (view'5 c) i) = index_logic self

predicate lit_not_in_less_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 90 0 90 62] (t : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'3] forall i : int . 0 <= i /\ i < Seq.length t
   -> (forall j : int . 0 <= j /\ j < i
   -> match (Seq.get t j).t_Step__reason with
    | C_Long cref -> not lit_idx_in (Seq.get t i).t_Step__lit (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref))
    | _ -> true
    end)

predicate unsat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 99 4 99 59] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'5] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 0
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 1


predicate clause_post_with_regards_to_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 128 0 128 90] (c : t_Clause) (a : Seq.seq UInt8.t) (j : int)

 =
  [%#slogic_trail'8] index_logic (Seq.get (view'5 c) 0) = j
  /\ sat_inner (Seq.get (view'5 c) 0) a
  /\ (forall i : int . 1 <= i /\ i < Seq.length (view'5 c)  -> unsat_inner (Seq.get (view'5 c) i) a)

predicate clause_post_with_regards_to [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 122 0 122 77] (c : t_Clause) (a : t_Assignments) (j : int)

 =
  [%#slogic_trail'4] clause_post_with_regards_to_inner c (view'11 a) j

predicate long_are_post_unit_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 166 0 166 92] (trail : Seq.seq t_Step) (f : t_Formula) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'5] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Long k -> clause_post_with_regards_to_inner (Seq.get (view f.t_Formula__clauses) (UInt64.t'int k)) a (index_logic (Seq.get trail j).t_Step__lit)
    | _ -> true
    end

type t_RawVec'4  =
  { t_RawVec__inner'4: t_RawVecInner; t_RawVec__qy95zmarker'4: () }

type t_Vec'4  =
  { t_Vec__buf'4: t_RawVec'4; t_Vec__len'4: UInt64.t }

type t_Watches  =
  { t_Watches__watches: t_Vec'4 }

predicate inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 32 0 32 48] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'4] vars_in_range_inner s n /\ no_duplicate_indexes_inner s

predicate inv'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 226 4 226 36] (self : t_Clause) (n : int) =
  [%#slogic_clause'3] inv_internal (view'5 self) n

predicate inv_mirror [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 86 4 86 35] (self : t_Formula) =
  [%#slogic_formula'5] (forall i : int . 0 <= i /\ i < Seq.length (view self.t_Formula__clauses)
   -> inv'2 (Seq.get (view self.t_Formula__clauses) i) (UInt64.t'int self.t_Formula__num_vars))
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view self.t_Formula__clauses)
   -> Seq.length (view'5 (Seq.get (view self.t_Formula__clauses) i)) >= 1)

predicate formula_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 28 0 28 49] (f : t_FormulaModel)

 =
  [%#slogic_formula'6] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> inv'2 (Seq.get f.t_FormulaModel__clauses i) f.t_FormulaModel__num_vars
  /\ Seq.length (view'5 (Seq.get f.t_FormulaModel__clauses i)) > 0

predicate inv'3 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 80 4 80 28] (self : t_Formula) =
  [%#slogic_formula'1] formula_invariant (view'6 self)

axiom inv_spec : forall self : t_Formula . [%#slogic_formula'0] inv'3 self = inv_mirror self

predicate inv'4 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 55 4 55 40] (self : t_Trail) (f : t_Formula)
 =
  [%#slogic_trail'6] inv'0 self.t_Trail__assignments f
  /\ trail_invariant (view'12 self.t_Trail__trail) f
  /\ Seq.length (view'13 self.t_Trail__lit_to_level) = UInt64.t'int f.t_Formula__num_vars
  /\ lit_not_in_less_inner (view'12 self.t_Trail__trail) f
  /\ lit_is_unique_inner (view'12 self.t_Trail__trail)
  /\ long_are_post_unit_inner (view'12 self.t_Trail__trail) f (view'11 self.t_Trail__assignments)
  /\ trail_entries_are_assigned_inner (view'12 self.t_Trail__trail) (view'11 self.t_Trail__assignments)
  /\ sorted (view'13 self.t_Trail__decisions)
  /\ unit_are_sat (view'12 self.t_Trail__trail) f self.t_Trail__assignments
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'13 self.t_Trail__decisions)
   -> UInt64.t'int (Seq.get (view'13 self.t_Trail__decisions) i) <= Seq.length (view'12 self.t_Trail__trail))

type t_RawVec'5  =
  { t_RawVec__inner'5: t_RawVecInner; t_RawVec__qy95zmarker'5: () }

type t_Vec'5  =
  { t_Vec__buf'5: t_RawVec'5; t_Vec__len'5: UInt64.t }

type t_Watcher  =
  { t_Watcher__cref: UInt64.t; t_Watcher__blocker: t_Lit }

function view'14 (self : t_Vec'5) : Seq.seq t_Watcher

axiom view_spec'5 : forall self : t_Vec'5 . [%#svec'6] Seq.length (view'14 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate watches_inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 12 0 12 77] (w : Seq.seq t_Vec'5) (n : int) (f : t_Formula)

 =
  [%#slogic_watches'0] 2 * n = Seq.length w
  /\ (forall i : int . 0 <= i /\ i < Seq.length w
   -> (forall j : int . 0 <= j /\ j < Seq.length (view'14 (Seq.get w i))
   -> UInt64.t'int (Seq.get (view'14 (Seq.get w i)) j).t_Watcher__cref < Seq.length (view f.t_Formula__clauses)
  /\ Seq.length (view'5 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int (Seq.get (view'14 (Seq.get w i)) j).t_Watcher__cref)))
  > 1
  /\ index_logic (Seq.get (view'14 (Seq.get w i)) j).t_Watcher__blocker < UInt64.t'int f.t_Formula__num_vars))

function view'15 (self : t_Vec'4) : Seq.seq t_Vec'5

axiom view_spec'6 : forall self : t_Vec'4 . [%#svec'6] Seq.length (view'15 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate inv'5 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 74 4 74 40] (self : t_Watches) (f : t_Formula)

 =
  [%#slogic_watches] watches_inv_internal (view'15 self.t_Watches__watches) (UInt64.t'int f.t_Formula__num_vars) f

predicate sat_inner'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 121 4 121 57] (self : t_Formula) (a : Seq.seq UInt8.t)

 =
  [%#slogic_formula'8] forall i : int . 0 <= i /\ i < Seq.length (view self.t_Formula__clauses)
   -> sat_inner'0 (Seq.get (view self.t_Formula__clauses) i) a

predicate eventually_sat_complete'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 64 4 64 48] (self : t_Formula)

 =
  [%#slogic_formula'7] exists a2 : Seq.seq UInt8.t . Seq.length a2 = UInt64.t'int self.t_Formula__num_vars
  /\ complete_inner a2 /\ sat_inner'1 self a2

predicate equisat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 72 4 72 44] (self : t_Formula) (o : t_Formula)

 =
  [%#slogic_formula'2] eventually_sat_complete'0 self = eventually_sat_complete'0 o

meta "compute_max_steps" 1000000

let rec swap'0[#"/Users/sarekhs/CreuSAT/CreuSAT/src/unit_prop.rs" 68 0 68 91] (f:MutBorrow.t t_Formula) (trail:t_Trail) (watches:t_Watches) (cref:UInt64.t) (j:UInt64.t) (k:UInt64.t) (return'  (x:()))= {[@expl:swap requires #0] [%#sunit_prop'11] inv'3 f.current}
  {[@expl:swap requires #1] [%#sunit_prop'12] inv'4 trail f.current}
  {[@expl:swap requires #2] [%#sunit_prop'13] inv'5 watches f.current}
  {[@expl:swap requires #3] [%#sunit_prop'14] Seq.length (view'5 (Seq.get (view (f.current).t_Formula__clauses) (UInt64.t'int cref)))
  >= 2}
  {[@expl:swap requires #4] [%#sunit_prop'15] UInt64.t'int cref < Seq.length (view (f.current).t_Formula__clauses)}
  {[@expl:swap requires #5] [%#sunit_prop'16] Seq.length (view'5 (Seq.get (view (f.current).t_Formula__clauses) (UInt64.t'int cref)))
  > UInt64.t'int j}
  {[@expl:swap requires #6] [%#sunit_prop'17] Seq.length (view'5 (Seq.get (view (f.current).t_Formula__clauses) (UInt64.t'int cref)))
  > UInt64.t'int k}
  {[@expl:swap requires #7] [%#sunit_prop'18] not sat_inner (Seq.get (view'5 (Seq.get (view (f.current).t_Formula__clauses) (UInt64.t'int cref))) 0) (view'11 trail.t_Trail__assignments)}
  (! bb0
  [ bb0 = s0 [ s0 =  [ &old_f <- [%#sunit_prop] f'0 ] s1 | s1 = bb1 ] 
  | bb1 = s0
    [ s0 = MutBorrow.borrow_final
        <t_Vec>
        {(f'0.current).t_Formula__clauses}
        {MutBorrow.inherit_id (MutBorrow.get_id f'0) 1}
        (fun (_ret:MutBorrow.t t_Vec) ->
           [ &_29 <- _ret ] 
           [ &f'0 <- { f'0 with current = { f'0.current with t_Formula__clauses = _ret.final } } ] 
          s1)
    | s1 = index_mut {_29} {cref'0} (fun (_ret:MutBorrow.t t_Clause) ->  [ &_28 <- _ret ] s2)
    | s2 = bb2 ]
  
  | bb2 = s0
    [ s0 = MutBorrow.borrow_final
        <t_Vec'0>
        {(_28.current).t_Clause__lits}
        {MutBorrow.inherit_id (MutBorrow.get_id _28) 4}
        (fun (_ret:MutBorrow.t t_Vec'0) ->
           [ &_27 <- _ret ] 
           [ &_28 <- { _28 with current = { _28.current with t_Clause__lits = _ret.final } } ] 
          s1)
    | s1 = deref_mut {_27} (fun (_ret:MutBorrow.t (Slice64.slice t_Lit)) ->  [ &_26 <- _ret ] s2)
    | s2 = bb3 ]
  
  | bb3 = s0
    [ s0 = MutBorrow.borrow_final <Slice64.slice t_Lit> {_26.current} {MutBorrow.get_id _26}
        (fun (_ret:MutBorrow.t (Slice64.slice t_Lit)) ->
           [ &_25 <- _ret ] 
           [ &_26 <- { _26 with current = _ret.final } ] 
          s1)
    | s1 = swap {_25} {j'0} {k'0} (fun (_ret:()) ->  [ &_24 <- _ret ] s2)
    | s2 = bb4 ]
  
  | bb4 = s0
    [ s0 = -{resolve'0 _28}- s1
    | s1 = -{resolve'2 _26}- s2
    | s2 = -{resolve'4 f'0}- s3
    | s3 = {[@expl:assertion] [%#sunit_prop'0] vars_in_range_inner (view'5 (Seq.get (view (f'0.current).t_Formula__clauses) (UInt64.t'int cref'0))) (UInt64.t'int (f'0.current).t_Formula__num_vars)}
      s4
    | s4 = {[@expl:assertion] [%#sunit_prop'1] no_duplicate_indexes_inner (view'5 (Seq.get (view (f'0.current).t_Formula__clauses) (UInt64.t'int cref'0)))}
      s5
    | s5 = {[@expl:assertion] [%#sunit_prop'2] forall a2 : Seq.seq UInt8.t . Seq.length a2
      = UInt64.t'int (f'0.current).t_Formula__num_vars
      /\ complete_inner a2 /\ sat_inner'0 (Seq.get (view (old_f.current).t_Formula__clauses) (UInt64.t'int cref'0)) a2
       -> sat_inner'0 (Seq.get (view (f'0.current).t_Formula__clauses) (UInt64.t'int cref'0)) a2}
      s6
    | s6 = {[@expl:assertion] [%#sunit_prop'3] eventually_sat_complete (view'9 old_f)
       -> eventually_sat_complete (view'7 f'0)}
      s7
    | s7 = {[@expl:assertion] [%#sunit_prop'4] f'0.final = old_f.final} s8
    | s8 = {[@expl:assertion] [%#sunit_prop'5] forall i : int . 0 <= i
      /\ i < Seq.length (view (f'0.current).t_Formula__clauses) /\ i <> UInt64.t'int cref'0
       -> Seq.get (view (old_f.current).t_Formula__clauses) i = Seq.get (view (f'0.current).t_Formula__clauses) i}
      s9
    | s9 = {[@expl:assertion] [%#sunit_prop'6] inv'0 trail'0.t_Trail__assignments f'0.current
      /\ trail_invariant (view'12 trail'0.t_Trail__trail) f'0.current
      /\ Seq.length (view'13 trail'0.t_Trail__lit_to_level) = UInt64.t'int (f'0.current).t_Formula__num_vars
      /\ lit_is_unique_inner (view'12 trail'0.t_Trail__trail)
      /\ trail_entries_are_assigned_inner (view'12 trail'0.t_Trail__trail) (view'11 trail'0.t_Trail__assignments)
      /\ sorted (view'13 trail'0.t_Trail__decisions)
      /\ unit_are_sat (view'12 trail'0.t_Trail__trail) f'0.current trail'0.t_Trail__assignments
      /\ (forall i : int . 0 <= i /\ i < Seq.length (view'13 trail'0.t_Trail__decisions)
       -> UInt64.t'int (Seq.get (view'13 trail'0.t_Trail__decisions) i) <= Seq.length (view'12 trail'0.t_Trail__trail))}
      s10
    | s10 = {[@expl:assertion] [%#sunit_prop'7] forall i : int . 0 <= i
      /\ i < Seq.length (view'12 trail'0.t_Trail__trail)
       -> (forall j'1 : int . 0 <= j'1 /\ j'1 < i
       -> match (Seq.get (view'12 trail'0.t_Trail__trail) j'1).t_Step__reason with
        | C_Long cref'1 -> not lit_idx_in (Seq.get (view'12 trail'0.t_Trail__trail) i).t_Step__lit (Seq.get (view (f'0.current).t_Formula__clauses) (UInt64.t'int cref'1))
        | _ -> true
        end)}
      s11
    | s11 = {[@expl:assertion] [%#sunit_prop'8] lit_not_in_less_inner (view'12 trail'0.t_Trail__trail) f'0.current} s12
    | s12 = {[@expl:assertion] [%#sunit_prop'9] forall j'1 : int . 0 <= j'1
      /\ j'1 < Seq.length (view'12 trail'0.t_Trail__trail)
       -> match (Seq.get (view'12 trail'0.t_Trail__trail) j'1).t_Step__reason with
        | C_Long k'1 -> clause_post_with_regards_to (Seq.get (view (f'0.current).t_Formula__clauses) (UInt64.t'int k'1)) trail'0.t_Trail__assignments (index_logic (Seq.get (view'12 trail'0.t_Trail__trail) j'1).t_Step__lit)
        | _ -> true
        end}
      s13
    | s13 = {[@expl:assertion] [%#sunit_prop'10] long_are_post_unit_inner (view'12 trail'0.t_Trail__trail) f'0.current (view'11 trail'0.t_Trail__assignments)}
      s14
    | s14 = return''0 {_0} ]
   ]
  )
  [ & _0 : () = Any.any_l ()
  | & f'0 : MutBorrow.t t_Formula = f
  | & trail'0 : t_Trail = trail
  | & cref'0 : UInt64.t = cref
  | & j'0 : UInt64.t = j
  | & k'0 : UInt64.t = k
  | & old_f : MutBorrow.t t_Formula = Any.any_l ()
  | & _24 : () = Any.any_l ()
  | & _25 : MutBorrow.t (Slice64.slice t_Lit) = Any.any_l ()
  | & _26 : MutBorrow.t (Slice64.slice t_Lit) = Any.any_l ()
  | & _27 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _28 : MutBorrow.t t_Clause = Any.any_l ()
  | & _29 : MutBorrow.t t_Vec = Any.any_l () ]
  
  [ return''0 (result:())-> {[@expl:swap ensures #0] [%#sunit_prop'11] inv'3 f.final}
    {[@expl:swap ensures #1] [%#sunit_prop'12] inv'4 trail f.final}
    {[@expl:swap ensures #2] [%#sunit_prop'13] inv'5 watches f.final}
    {[@expl:swap ensures #3] [%#sunit_prop'19] Permut.exchange (view'5 (Seq.get (view (f.final).t_Formula__clauses) (UInt64.t'int cref))) (view'5 (Seq.get (view (f.current).t_Formula__clauses) (UInt64.t'int cref))) (UInt64.t'int j) (UInt64.t'int k)}
    {[@expl:swap ensures #4] [%#sunit_prop'20] UInt64.t'int (f.current).t_Formula__num_vars
    = UInt64.t'int (f.final).t_Formula__num_vars}
    {[@expl:swap ensures #5] [%#sunit_prop'21] Seq.length (view (f.current).t_Formula__clauses)
    = Seq.length (view (f.final).t_Formula__clauses)}
    {[@expl:swap ensures #6] [%#sunit_prop'22] equisat f.current f.final}
    (! return' {result}) ]
  
