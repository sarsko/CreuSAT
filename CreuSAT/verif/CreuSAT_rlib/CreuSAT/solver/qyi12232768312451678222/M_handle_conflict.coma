(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 168 4 170 21 *)

(* solver::Solver *)

let%span svec = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 21 14 21 41
let%span smodel = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 54 8 54 22
let%span smodel'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 72 8 72 22
let%span slogic_assignments = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 17 4 17 12
let%span slogic_assignments'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 53 12 54 74
let%span slogic_assignments'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 37 8 37 61
let%span sresolve = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/resolve.rs" 54 20 54 34
let%span slogic_lit = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 117 20 117 38
let%span slogic_lit'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 83 20 83 42
let%span slogic_lit'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 24 20 24 29
let%span slogic_lit'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 90 12 93 13
let%span slogic_lit'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 75 12 76 57
let%span slogic_lit'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 101 12 104 13
let%span slogic_lit'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 31 20 31 33
let%span slogic_formula = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 79 14 79 41
let%span slogic_formula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 81 20 81 44
let%span slogic_formula'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 73 8 73 69
let%span slogic_formula'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 152 20 152 80
let%span slogic_formula'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 88 12 92 45
let%span slogic_formula'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 30 8 31 69
let%span slogic_formula'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 22 8 22 85
let%span slogic_formula'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 66 12 66 113
let%span slogic_formula'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 48 8 48 111
let%span slogic_formula'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 123 12 124 45
let%span slogic_formula'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 39 8 40 37
let%span slogic_trail = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 56 8 67 9
let%span slogic_trail'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 168 8 172 17
let%span slogic_trail'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 105 8 107 38
let%span slogic_trail'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 92 8 97 17
let%span slogic_trail'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 146 8 148 72
let%span slogic_trail'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 115 8 116 33
let%span slogic_trail'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 180 8 186 17
let%span slogic_trail'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 129 4 133 5
let%span slogic_trail'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 15 12 23 13
let%span slogic = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic.rs" 25 8 29 9
let%span slogic_clause = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 180 20 180 40
let%span slogic_clause'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 227 20 227 42
let%span slogic_clause'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 14 4 14 12
let%span slogic_clause'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 25 8 26 23
let%span slogic_clause'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 48 8 49 92
let%span slogic_clause'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 40 8 40 134
let%span slogic_clause'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 172 12 173 39
let%span slogic_clause'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 105 20 105 53
let%span slogic_clause'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 33 4 33 62
let%span slogic_clause'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 187 12 188 37
let%span sconflict_analysis = "/Users/sarekhs/CreuSAT/CreuSAT/src/conflict_analysis.rs" 150 11 150 18
let%span sconflict_analysis'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/conflict_analysis.rs" 151 11 151 36
let%span sconflict_analysis'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/conflict_analysis.rs" 152 11 152 24
let%span sconflict_analysis'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/conflict_analysis.rs" 153 11 153 35
let%span sconflict_analysis'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/conflict_analysis.rs" 154 0 154 55
let%span sconflict_analysis'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/conflict_analysis.rs" 180 0 180 38
let%span sconflict_analysis'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/conflict_analysis.rs" 155 10 179 1
let%span slogic_util = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 28 4 28 31
let%span slogic_util'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 22 16 22 80
let%span strail = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 99 15 99 22
let%span strail'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 100 4 100 36
let%span strail'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 101 4 101 42
let%span strail'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 102 15 102 75
let%span strail'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 103 14 103 80
let%span strail'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 277 4 277 36
let%span strail'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 278 4 278 42
let%span strail'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 279 15 279 22
let%span strail'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 280 15 280 39
let%span strail'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 281 15 281 44
let%span strail'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 282 4 282 51
let%span strail'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 288 15 288 75
let%span strail'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 285 14 287 64
let%span strail'12 = "/Users/sarekhs/CreuSAT/CreuSAT/src/trail.rs" 289 14 289 80
let%span sord = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 129 39 129 89
let%span sord'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 134 39 134 86
let%span sord'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 139 39 139 86
let%span sord'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 144 39 144 89
let%span sord'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 149 39 149 70
let%span sord'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 154 40 154 57
let%span sord'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 155 40 155 57
let%span sord'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 156 39 156 56
let%span sord'7 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 161 40 161 70
let%span sord'8 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 162 39 162 72
let%span sord'9 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 167 40 167 73
let%span sord'10 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 168 39 168 69
let%span sord'11 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 173 39 173 84
let%span sord'12 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 230 16 236 17
let%span sformula = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 110 4 110 34
let%span sformula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 111 4 111 34
let%span sformula'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 112 4 112 45
let%span sformula'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 113 15 113 35
let%span sformula'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 114 15 114 45
let%span sformula'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 117 15 117 41
let%span sformula'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 118 15 118 53
let%span sformula'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 119 14 119 49
let%span sformula'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 120 14 120 33
let%span sformula'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 121 14 121 44
let%span sformula'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 122 14 122 49
let%span sformula'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 123 14 123 63
let%span sformula'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 164 4 164 34
let%span sformula'12 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 165 4 165 34
let%span sformula'13 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 166 15 166 35
let%span sformula'14 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 167 15 167 41
let%span sformula'15 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 168 15 168 45
let%span sformula'16 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 169 15 169 59
let%span sformula'17 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 170 15 170 50
let%span sformula'18 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 171 15 171 53
let%span sformula'19 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 172 14 172 49
let%span sformula'20 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 174 14 174 106
let%span sformula'21 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 175 14 175 33
let%span sformula'22 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 176 14 176 44
let%span sformula'23 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 177 14 177 51
let%span sformula'24 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 178 14 178 63
let%span sformula'25 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 270 4 270 34
let%span sformula'26 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 271 4 271 45
let%span sformula'27 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 273 15 273 25
let%span sformula'28 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 274 15 274 27
let%span sformula'29 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 276 15 276 45
let%span sformula'30 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 275 14 275 26
let%span sformula'31 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 277 14 277 47
let%span sformula'32 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 278 14 278 33
let%span sformula'33 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 255 4 255 34
let%span sformula'34 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 256 4 256 45
let%span sformula'35 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 258 15 258 45
let%span sformula'36 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 259 15 259 27
let%span sformula'37 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 260 14 260 26
let%span sformula'38 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 261 14 261 47
let%span sformula'39 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 262 14 262 33
let%span slogic_decision = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_decision.rs" 12 12 17 97
let%span slogic_watches = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 76 12 76 63
let%span slogic_watches'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 14 8 19 64
let%span ssolver = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 194 33 194 34
let%span ssolver'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 182 42 182 46
let%span ssolver'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 174 28 174 33
let%span ssolver'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 147 4 147 31
let%span ssolver'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 148 4 148 36
let%span ssolver'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 149 4 149 36
let%span ssolver'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 150 4 150 42
let%span ssolver'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 151 15 151 42
let%span ssolver'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 152 15 152 39
let%span ssolver'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 153 4 153 55
let%span ssolver'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 154 14 154 43
let%span ssolver'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 155 14 155 27
let%span ssolver'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 164 14 167 5
let%span ssolver'12 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 104 4 104 31
let%span ssolver'13 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 105 4 105 36
let%span ssolver'14 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 106 4 106 36
let%span ssolver'15 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 107 4 107 42
let%span ssolver'16 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 108 15 108 42
let%span ssolver'17 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 109 15 109 38
let%span ssolver'18 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 110 15 110 50
let%span ssolver'19 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 111 15 111 34
let%span ssolver'20 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 112 15 112 39
let%span ssolver'21 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 113 14 113 43
let%span ssolver'22 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 114 14 114 27

use creusot.prelude.MutBorrow
use creusot.prelude.Opaque
use creusot.int.UInt64
use creusot.int.UInt32
use mach.int.Int
use seq.Seq
use creusot.int.UInt8
use creusot.prelude.Any

type t_NonNull  =
  { t_NonNull__pointer: Opaque.ptr }

type t_Unique  =
  { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }

type t_UsizeNoHighBit  =
  { t_UsizeNoHighBit__0: UInt64.t }

type t_RawVecInner  =
  { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }

type t_RawVec  =
  { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }

type t_Vec  =
  { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }

type t_Decisions  =
  { t_Decisions__linked_list: t_Vec;
    t_Decisions__timestamp: UInt64.t;
    t_Decisions__start: UInt64.t;
    t_Decisions__search: UInt64.t }

type t_RawVec'0  =
  { t_RawVec__inner'0: t_RawVecInner; t_RawVec__qy95zmarker'0: () }

type t_Vec'0  =
  { t_Vec__buf'0: t_RawVec'0; t_Vec__len'0: UInt64.t }

type t_Clause  =
  { t_Clause__deleted: bool; t_Clause__lbd: UInt32.t; t_Clause__search: UInt64.t; t_Clause__lits: t_Vec'0 }

type t_Conflict  =
  | C_Ground
  | C_Unit t_Clause
  | C_Learned UInt64.t t_Clause
  | C_Restart t_Clause

type t_RawVec'1  =
  { t_RawVec__inner'1: t_RawVecInner; t_RawVec__qy95zmarker'1: () }

type t_Vec'1  =
  { t_Vec__buf'1: t_RawVec'1; t_Vec__len'1: UInt64.t }

type t_Formula  =
  { t_Formula__clauses: t_Vec'1; t_Formula__num_vars: UInt64.t }

type t_RawVec'2  =
  { t_RawVec__inner'2: t_RawVecInner; t_RawVec__qy95zmarker'2: () }

type t_Vec'2  =
  { t_Vec__buf'2: t_RawVec'2; t_Vec__len'2: UInt64.t }

type t_Assignments  =
  { t_Assignments__0: t_Vec'2 }

type t_RawVec'3  =
  { t_RawVec__inner'3: t_RawVecInner; t_RawVec__qy95zmarker'3: () }

type t_Vec'3  =
  { t_Vec__buf'3: t_RawVec'3; t_Vec__len'3: UInt64.t }

type t_RawVec'4  =
  { t_RawVec__inner'4: t_RawVecInner; t_RawVec__qy95zmarker'4: () }

type t_Vec'4  =
  { t_Vec__buf'4: t_RawVec'4; t_Vec__len'4: UInt64.t }

type t_Trail  =
  { t_Trail__assignments: t_Assignments;
    t_Trail__lit_to_level: t_Vec'3;
    t_Trail__trail: t_Vec'4;
    t_Trail__curr_i: UInt64.t;
    t_Trail__decisions: t_Vec'3 }

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

function view (self : t_Vec'1) : Seq.seq t_Clause

axiom view_spec : forall self : t_Vec'1 . [%#svec] Seq.length (view self) <= UInt64.t'int (v_MAX : UInt64.t)

type t_Lit  =
  { t_Lit__idx: UInt64.t; t_Lit__polarity: bool }

function index_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 23 4 23 35] (self : t_Lit) : int =
  [%#slogic_lit'1] UInt64.t'int self.t_Lit__idx

predicate inv [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 82 4 82 36] (self : t_Lit) (n : int) =
  [%#slogic_lit'0] index_logic self < n

predicate vars_in_range_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 23 0 23 55] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'2] forall i : int . 0 <= i /\ i < Seq.length s  -> inv (Seq.get s i) n

predicate no_duplicate_indexes_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 46 0 46 54] (s : Seq.seq t_Lit)

 =
  [%#slogic_clause'3] forall j : int, k : int . 0 <= j /\ j < Seq.length s /\ 0 <= k /\ k < Seq.length s /\ k <> j
   -> index_logic (Seq.get s k) <> index_logic (Seq.get s j)

predicate inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 32 0 32 48] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'7] vars_in_range_inner s n /\ no_duplicate_indexes_inner s

function view'0 (self : t_Vec'0) : Seq.seq t_Lit

axiom view_spec'0 : forall self : t_Vec'0 . [%#svec] Seq.length (view'0 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 16 4 16 33] (self : t_Clause) : Seq.seq t_Lit

 =
  [%#slogic_clause'1] view'0 self.t_Clause__lits

predicate inv'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 226 4 226 36] (self : t_Clause) (n : int) =
  [%#slogic_clause'0] inv_internal (view'1 self) n

predicate inv_mirror [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 86 4 86 35] (self : t_Formula) =
  [%#slogic_formula'3] (forall i : int . 0 <= i /\ i < Seq.length (view self.t_Formula__clauses)
   -> inv'0 (Seq.get (view self.t_Formula__clauses) i) (UInt64.t'int self.t_Formula__num_vars))
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view self.t_Formula__clauses)
   -> Seq.length (view'1 (Seq.get (view self.t_Formula__clauses) i)) >= 1)

type t_FormulaModel  =
  { t_FormulaModel__clauses: Seq.seq t_Clause; t_FormulaModel__num_vars: int }

predicate formula_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 28 0 28 49] (f : t_FormulaModel)

 =
  [%#slogic_formula'4] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> inv'0 (Seq.get f.t_FormulaModel__clauses i) f.t_FormulaModel__num_vars
  /\ Seq.length (view'1 (Seq.get f.t_FormulaModel__clauses i)) > 0

function view'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 21 4 21 33] (self : t_Formula) : t_FormulaModel

 =
  [%#slogic_formula'5] { t_FormulaModel__clauses = view self.t_Formula__clauses;
                         t_FormulaModel__num_vars = UInt64.t'int self.t_Formula__num_vars }

predicate inv'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 80 4 80 28] (self : t_Formula) =
  [%#slogic_formula'0] formula_invariant (view'2 self)

axiom inv_spec : forall self : t_Formula . [%#slogic_formula] inv'1 self = inv_mirror self

constant v_MAX'0 : UInt64.t = (18446744073709551615 : UInt64.t)

function view'3 (self : t_Vec'2) : Seq.seq UInt8.t

axiom view_spec'1 : forall self : t_Vec'2 . [%#svec] Seq.length (view'3 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'4 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 19 4 19 33] (self : t_Assignments) : Seq.seq UInt8.t

 =
  [%#slogic_assignments] view'3 self.t_Assignments__0

predicate inv'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 51 4 51 40] (self : t_Assignments) (f : t_Formula)

 =
  [%#slogic_assignments'0] UInt64.t'int f.t_Formula__num_vars = Seq.length (view'4 self)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'4 self)  -> UInt8.t'int (Seq.get (view'4 self) i) <= 3)

type t_Reason  =
  | C_Decision
  | C_Unit'0 UInt64.t
  | C_Long UInt64.t

type t_Step  =
  { t_Step__lit: t_Lit; t_Step__decision_level: UInt64.t; t_Step__reason: t_Reason }

predicate inv'3 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 13 4 13 40] (self : t_Reason) (f : t_Formula)

 =
  [%#slogic_trail'7] match self with
    | C_Long cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view f.t_Formula__clauses)
    /\ Seq.length (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref))) > 1
    | C_Unit'0 cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view f.t_Formula__clauses)
    /\ Seq.length (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref))) = 1
    | _ -> true
    end

predicate trail_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 103 0 103 60] (trail : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'1] forall i : int . 0 <= i /\ i < Seq.length trail
   -> inv (Seq.get trail i).t_Step__lit (UInt64.t'int f.t_Formula__num_vars) /\ inv'3 (Seq.get trail i).t_Step__reason f

function view'5 (self : t_Vec'4) : Seq.seq t_Step

axiom view_spec'2 : forall self : t_Vec'4 . [%#svec] Seq.length (view'5 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'6 (self : t_Vec'3) : Seq.seq UInt64.t

axiom view_spec'3 : forall self : t_Vec'3 . [%#svec] Seq.length (view'6 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate lit_idx_in [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 73 4 73 46] (self : t_Lit) (c : t_Clause)
 =
  [%#slogic_lit'3] exists i : int . 0 <= i
  /\ i < Seq.length (view'1 c) /\ index_logic (Seq.get (view'1 c) i) = index_logic self

predicate lit_not_in_less_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 90 0 90 62] (t : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'2] forall i : int . 0 <= i /\ i < Seq.length t
   -> (forall j : int . 0 <= j /\ j < i
   -> match (Seq.get t j).t_Step__reason with
    | C_Long cref -> not lit_idx_in (Seq.get t i).t_Step__lit (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref))
    | _ -> true
    end)

predicate lit_is_unique_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 144 0 144 52] (trail : Seq.seq t_Step)

 =
  [%#slogic_trail'3] forall i : int . 0 <= i /\ i < Seq.length trail
   -> (forall j : int . 0 <= j /\ j < i
   -> index_logic (Seq.get trail j).t_Step__lit <> index_logic (Seq.get trail i).t_Step__lit)

function is_positive_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 30 4 30 42] (self : t_Lit) : bool =
  [%#slogic_lit'5] self.t_Lit__polarity

predicate sat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 88 4 88 57] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'2] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 1
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 0


predicate unsat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 99 4 99 59] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'4] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 0
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 1


predicate clause_post_with_regards_to_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 128 0 128 90] (c : t_Clause) (a : Seq.seq UInt8.t) (j : int)

 =
  [%#slogic_trail'6] index_logic (Seq.get (view'1 c) 0) = j
  /\ sat_inner (Seq.get (view'1 c) 0) a
  /\ (forall i : int . 1 <= i /\ i < Seq.length (view'1 c)  -> unsat_inner (Seq.get (view'1 c) i) a)

predicate long_are_post_unit_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 166 0 166 92] (trail : Seq.seq t_Step) (f : t_Formula) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'0] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Long k -> clause_post_with_regards_to_inner (Seq.get (view f.t_Formula__clauses) (UInt64.t'int k)) a (index_logic (Seq.get trail j).t_Step__lit)
    | _ -> true
    end

predicate trail_entries_are_assigned_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 113 0 113 84] (t : Seq.seq t_Step) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'4] forall j : int . 0 <= j /\ j < Seq.length t  -> sat_inner (Seq.get t j).t_Step__lit a

type t_Ordering  =
  | C_Less
  | C_Equal
  | C_Greater

function cmp_log (self : UInt64.t) (o : UInt64.t) : t_Ordering =
  [%#sord'12] if UInt64.lt self o then C_Less else if self = o then C_Equal else C_Greater

function eq_cmp (x : UInt64.t) (y : UInt64.t) : ()

axiom eq_cmp_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'11] (x = y) = (cmp_log x y = C_Equal)

function antisym2 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym2_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'9] cmp_log x y = C_Greater)
 -> ([%#sord'10] cmp_log y x = C_Less)

function antisym1 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym1_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'7] cmp_log x y = C_Less)
 -> ([%#sord'8] cmp_log y x = C_Greater)

function trans (x : UInt64.t) (y : UInt64.t) (z : UInt64.t) (o : t_Ordering) : ()

axiom trans_spec : forall x : UInt64.t, y : UInt64.t, z : UInt64.t, o : t_Ordering . ([%#sord'4] cmp_log x y = o)
 -> ([%#sord'5] cmp_log y z = o)  -> ([%#sord'6] cmp_log x z = o)

function refl (x : UInt64.t) : ()

axiom refl_spec : forall x : UInt64.t . [%#sord'3] cmp_log x x = C_Equal

function cmp_gt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_gt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'2] UInt64.gt x y = (cmp_log x y = C_Greater)

function cmp_ge_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_ge_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'1] UInt64.ge x y = (cmp_log x y <> C_Less)

function cmp_lt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_lt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'0] UInt64.lt x y = (cmp_log x y = C_Less)

function cmp_le_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_le_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord] UInt64.le x y = (cmp_log x y <> C_Greater)

predicate sorted_range [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 21 0 21 58] (s : Seq.seq UInt64.t) (l : int) (u : int)

 =
  [%#slogic_util'0] forall i : int, j : int . l <= i /\ i < j /\ j < u  -> UInt64.le (Seq.get s i) (Seq.get s j)

predicate sorted [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 27 0 27 36] (s : Seq.seq UInt64.t) =
  [%#slogic_util] sorted_range s 0 (Seq.length s)

predicate sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 116 4 116 44] (self : t_Lit) (a : t_Assignments)
 =
  [%#slogic_lit] sat_inner self (view'4 a)

predicate unit_are_sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 178 0 178 73] (trail : Seq.seq t_Step) (f : t_Formula) (a : t_Assignments)

 =
  [%#slogic_trail'5] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Unit'0 k -> (Seq.get trail j).t_Step__lit
    = Seq.get (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int k))) 0
    /\ sat (Seq.get (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int k))) 0) a
    | _ -> true
    end

predicate inv'4 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 55 4 55 40] (self : t_Trail) (f : t_Formula)
 =
  [%#slogic_trail] inv'2 self.t_Trail__assignments f
  /\ trail_invariant (view'5 self.t_Trail__trail) f
  /\ Seq.length (view'6 self.t_Trail__lit_to_level) = UInt64.t'int f.t_Formula__num_vars
  /\ lit_not_in_less_inner (view'5 self.t_Trail__trail) f
  /\ lit_is_unique_inner (view'5 self.t_Trail__trail)
  /\ long_are_post_unit_inner (view'5 self.t_Trail__trail) f (view'4 self.t_Trail__assignments)
  /\ trail_entries_are_assigned_inner (view'5 self.t_Trail__trail) (view'4 self.t_Trail__assignments)
  /\ sorted (view'6 self.t_Trail__decisions)
  /\ unit_are_sat (view'5 self.t_Trail__trail) f self.t_Trail__assignments
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'6 self.t_Trail__decisions)
   -> UInt64.t'int (Seq.get (view'6 self.t_Trail__decisions) i) <= Seq.length (view'5 self.t_Trail__trail))

predicate unsat_inner'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 170 4 170 59] (self : t_Clause) (a : Seq.seq UInt8.t)

 =
  [%#slogic_clause'5] forall i : int . 0 <= i /\ i < Seq.length (view'1 self)
   -> unsat_inner (Seq.get (view'1 self) i) a

predicate unsat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 179 4 179 46] (self : t_Clause) (a : t_Assignments)

 =
  [%#slogic_clause] unsat_inner'0 self (view'4 a)

type t_Node  =
  { t_Node__next: UInt64.t; t_Node__prev: UInt64.t; t_Node__ts: UInt64.t }

function view'7 (self : t_Vec) : Seq.seq t_Node

axiom view_spec'4 : forall self : t_Vec . [%#svec] Seq.length (view'7 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate inv'5 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_decision.rs" 10 4 10 36] (self : t_Decisions) (n : int)

 =
  [%#slogic_decision] Seq.length (view'7 self.t_Decisions__linked_list) = n
  /\ (UInt64.t'int self.t_Decisions__search < Seq.length (view'7 self.t_Decisions__linked_list)
  \/ UInt64.t'int self.t_Decisions__search = UInt64.t'int v_MAX'0)
  /\ UInt64.t'int self.t_Decisions__start < Seq.length (view'7 self.t_Decisions__linked_list)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'7 self.t_Decisions__linked_list)
   -> (UInt64.t'int (Seq.get (view'7 self.t_Decisions__linked_list) i).t_Node__next = UInt64.t'int v_MAX'0
  \/ UInt64.t'int (Seq.get (view'7 self.t_Decisions__linked_list) i).t_Node__next < n)
  /\ (UInt64.t'int (Seq.get (view'7 self.t_Decisions__linked_list) i).t_Node__prev = UInt64.t'int v_MAX'0
  \/ UInt64.t'int (Seq.get (view'7 self.t_Decisions__linked_list) i).t_Node__prev < n))

predicate unset [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic.rs" 23 0 23 38] (v : UInt8.t) =
  [%#slogic] if UInt8.t'int v >= 2 then true else false

predicate complete_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 35 0 35 52] (a : Seq.seq UInt8.t)

 =
  [%#slogic_assignments'1] forall i : int . 0 <= i /\ i < Seq.length a  -> not unset (Seq.get a i)

predicate sat_inner'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 185 4 185 57] (self : t_Clause) (a : Seq.seq UInt8.t)

 =
  [%#slogic_clause'8] exists i : int . 0 <= i /\ i < Seq.length (view'1 self) /\ sat_inner (Seq.get (view'1 self) i) a

predicate formula_sat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 37 0 37 72] (f : t_FormulaModel) (a : Seq.seq UInt8.t)

 =
  [%#slogic_formula'9] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> sat_inner'0 (Seq.get f.t_FormulaModel__clauses i) a

predicate eventually_sat_complete [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 46 0 46 55] (f : t_FormulaModel)

 =
  [%#slogic_formula'7] exists a2 : Seq.seq UInt8.t . Seq.length a2 = f.t_FormulaModel__num_vars
  /\ complete_inner a2 /\ formula_sat_inner f a2

predicate equisat_extension_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 38 0 38 66] (c : t_Clause) (f : t_FormulaModel)

 =
  [%#slogic_clause'4] eventually_sat_complete f
   -> eventually_sat_complete { t_FormulaModel__clauses = Seq.snoc f.t_FormulaModel__clauses c;
                                t_FormulaModel__num_vars = f.t_FormulaModel__num_vars }

predicate equisat_extension [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 104 4 104 54] (self : t_Clause) (f : t_Formula)

 =
  [%#slogic_clause'6] equisat_extension_inner self (view'2 f)

predicate not_satisfiable [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 151 4 151 40] (self : t_Formula)
 =
  [%#slogic_formula'2] exists c : t_Clause . Seq.length (view'1 c) = 0 /\ equisat_extension c self

function view'8 (self : t_Formula) : t_FormulaModel =
  [%#smodel] view'2 self

let rec analyze_conflict (f:t_Formula) (trail:t_Trail) (cref:UInt64.t) (d:MutBorrow.t t_Decisions) (return'  (x:t_Conflict))= {[@expl:analyze_conflict requires #0] [%#sconflict_analysis] inv'1 f}
  {[@expl:analyze_conflict requires #1] [%#sconflict_analysis'0] UInt64.t'int f.t_Formula__num_vars
  < UInt64.t'int v_MAX'0}
  {[@expl:analyze_conflict requires #2] [%#sconflict_analysis'1] inv'4 trail f}
  {[@expl:analyze_conflict requires #3] [%#sconflict_analysis'2] UInt64.t'int cref
  < Seq.length (view f.t_Formula__clauses)}
  {[@expl:analyze_conflict requires #4] [%#sconflict_analysis'3] unsat (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref)) trail.t_Trail__assignments}
  {[@expl:analyze_conflict requires #5] [%#sconflict_analysis'4] inv'5 d.current (UInt64.t'int f.t_Formula__num_vars)}
  any
  [ return''0 (result:t_Conflict)-> {[%#sconflict_analysis'5] match result with
      | C_Ground -> not_satisfiable f
      | C_Unit clause -> inv'0 clause (UInt64.t'int f.t_Formula__num_vars)
      /\ Seq.length (view'1 clause) = 1
      /\ vars_in_range_inner (view'1 clause) (UInt64.t'int f.t_Formula__num_vars)
      /\ no_duplicate_indexes_inner (view'1 clause) /\ equisat_extension_inner clause (view'8 f)
      | C_Learned s_idx clause -> inv'0 clause (UInt64.t'int f.t_Formula__num_vars)
      /\ Seq.length (view'1 clause) > 1
      /\ vars_in_range_inner (view'1 clause) (UInt64.t'int f.t_Formula__num_vars)
      /\ no_duplicate_indexes_inner (view'1 clause)
      /\ equisat_extension_inner clause (view'8 f) /\ UInt64.t'int s_idx < Seq.length (view'1 clause)
      | C_Restart clause -> inv'0 clause (UInt64.t'int f.t_Formula__num_vars)
      /\ Seq.length (view'1 clause) > 1
      /\ vars_in_range_inner (view'1 clause) (UInt64.t'int f.t_Formula__num_vars)
      /\ no_duplicate_indexes_inner (view'1 clause) /\ equisat_extension_inner clause (view'8 f)
      end}
    {[%#sconflict_analysis'4] inv'5 d.final (UInt64.t'int f.t_Formula__num_vars)}
    (! return' {result}) ]


type t_Solver  =
  { t_Solver__num_lemmas: UInt64.t;
    t_Solver__max_lemmas: UInt64.t;
    t_Solver__num_conflicts: UInt64.t;
    t_Solver__initial_len: UInt64.t;
    t_Solver__inc_reduce_db: UInt64.t;
    t_Solver__fast: UInt64.t;
    t_Solver__slow: UInt64.t;
    t_Solver__perm_diff: t_Vec'3 }

predicate resolve (self : MutBorrow.t t_Solver) =
  [%#sresolve] self.final = self.current

predicate resolve'0 (_0 : MutBorrow.t t_Solver) =
  resolve _0

let rec v_Restart (input:t_Conflict) (ret  (field_0:t_Clause))= any
  [ good (field_0:t_Clause)-> {C_Restart field_0 = input} (! ret {field_0})
  | bad -> {forall field_0 : t_Clause [C_Restart field_0 : t_Conflict] . C_Restart field_0 <> input} (! {false} any) ]


type t_RawVec'5  =
  { t_RawVec__inner'5: t_RawVecInner; t_RawVec__qy95zmarker'5: () }

type t_Vec'5  =
  { t_Vec__buf'5: t_RawVec'5; t_Vec__len'5: UInt64.t }

type t_Watches  =
  { t_Watches__watches: t_Vec'5 }

type t_RawVec'6  =
  { t_RawVec__inner'6: t_RawVecInner; t_RawVec__qy95zmarker'6: () }

type t_Vec'6  =
  { t_Vec__buf'6: t_RawVec'6; t_Vec__len'6: UInt64.t }

type t_Watcher  =
  { t_Watcher__cref: UInt64.t; t_Watcher__blocker: t_Lit }

function view'9 (self : t_Vec'6) : Seq.seq t_Watcher

axiom view_spec'5 : forall self : t_Vec'6 . [%#svec] Seq.length (view'9 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate watches_inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 12 0 12 77] (w : Seq.seq t_Vec'6) (n : int) (f : t_Formula)

 =
  [%#slogic_watches'0] 2 * n = Seq.length w
  /\ (forall i : int . 0 <= i /\ i < Seq.length w
   -> (forall j : int . 0 <= j /\ j < Seq.length (view'9 (Seq.get w i))
   -> UInt64.t'int (Seq.get (view'9 (Seq.get w i)) j).t_Watcher__cref < Seq.length (view f.t_Formula__clauses)
  /\ Seq.length (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int (Seq.get (view'9 (Seq.get w i)) j).t_Watcher__cref)))
  > 1
  /\ index_logic (Seq.get (view'9 (Seq.get w i)) j).t_Watcher__blocker < UInt64.t'int f.t_Formula__num_vars))

function view'10 (self : t_Vec'5) : Seq.seq t_Vec'6

axiom view_spec'6 : forall self : t_Vec'5 . [%#svec] Seq.length (view'10 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate inv'6 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 74 4 74 40] (self : t_Watches) (f : t_Formula)

 =
  [%#slogic_watches] watches_inv_internal (view'10 self.t_Watches__watches) (UInt64.t'int f.t_Formula__num_vars) f

function view'11 (self : MutBorrow.t t_Formula) : t_FormulaModel =
  [%#smodel'0] view'2 self.current

predicate sat_inner'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 121 4 121 57] (self : t_Formula) (a : Seq.seq UInt8.t)

 =
  [%#slogic_formula'8] forall i : int . 0 <= i /\ i < Seq.length (view self.t_Formula__clauses)
   -> sat_inner'0 (Seq.get (view self.t_Formula__clauses) i) a

predicate eventually_sat_complete'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 64 4 64 48] (self : t_Formula)

 =
  [%#slogic_formula'6] exists a2 : Seq.seq UInt8.t . Seq.length a2 = UInt64.t'int self.t_Formula__num_vars
  /\ complete_inner a2 /\ sat_inner'1 self a2

predicate equisat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 72 4 72 44] (self : t_Formula) (o : t_Formula)

 =
  [%#slogic_formula'1] eventually_sat_complete'0 self = eventually_sat_complete'0 o

let rec add_clause (self:MutBorrow.t t_Formula) (clause:t_Clause) (watches:MutBorrow.t t_Watches) (_t:t_Trail) (return'  (x:UInt64.t))= {[@expl:add_clause requires #0] [%#sformula] inv'1 self.current}
  {[@expl:add_clause requires #1] [%#sformula'0] inv'4 _t self.current}
  {[@expl:add_clause requires #2] [%#sformula'1] inv'6 watches.current self.current}
  {[@expl:add_clause requires #3] [%#sformula'2] Seq.length (view'1 clause) >= 2}
  {[@expl:add_clause requires #4] [%#sformula'3] UInt64.t'int (self.current).t_Formula__num_vars
  < Int.div (UInt64.t'int v_MAX'0) 2}
  {[@expl:add_clause requires #5] [%#sformula'4] inv'0 clause (UInt64.t'int (self.current).t_Formula__num_vars)}
  {[@expl:add_clause requires #6] [%#sformula'5] equisat_extension_inner clause (view'11 self)}
  any
  [ return''0 (result:UInt64.t)-> {[%#sformula] inv'1 self.final}
    {[%#sformula'0] inv'4 _t self.final}
    {[%#sformula'1] inv'6 watches.final self.final}
    {[%#sformula'6] UInt64.t'int (self.current).t_Formula__num_vars = UInt64.t'int (self.final).t_Formula__num_vars}
    {[%#sformula'7] equisat self.current self.final}
    {[%#sformula'8] UInt64.t'int result = Seq.length (view (self.current).t_Formula__clauses)}
    {[%#sformula'9] Seq.get (view (self.final).t_Formula__clauses) (UInt64.t'int result) = clause}
    {[%#sformula'10] Seq.length (view (self.current).t_Formula__clauses) + 1
    = Seq.length (view (self.final).t_Formula__clauses)}
    (! return' {result}) ]


predicate resolve'1 (self : MutBorrow.t t_Watches) =
  [%#sresolve] self.final = self.current

predicate resolve'2 (_0 : MutBorrow.t t_Watches) =
  resolve'1 _0

let rec backtrack_safe (self:MutBorrow.t t_Trail) (level:UInt64.t) (f:t_Formula) (d:MutBorrow.t t_Decisions) (return'  (x:()))= {[@expl:backtrack_safe requires #0] [%#strail] inv'1 f}
  {[@expl:backtrack_safe requires #1] [%#strail'0] inv'4 self.current f}
  {[@expl:backtrack_safe requires #2] [%#strail'1] inv'5 d.current (UInt64.t'int f.t_Formula__num_vars)}
  {[@expl:backtrack_safe requires #3] [%#strail'2] long_are_post_unit_inner (view'5 (self.current).t_Trail__trail) f (view'4 (self.current).t_Trail__assignments)}
  any
  [ return''0 (result:())-> {[%#strail'0] inv'4 self.final f}
    {[%#strail'1] inv'5 d.final (UInt64.t'int f.t_Formula__num_vars)}
    {[%#strail'3] long_are_post_unit_inner (view'5 (self.final).t_Trail__trail) f (view'4 (self.final).t_Trail__assignments)}
    (! return' {result}) ]


predicate resolve'3 (self : MutBorrow.t t_Decisions) =
  [%#sresolve] self.final = self.current

predicate resolve'4 (_0 : MutBorrow.t t_Decisions) =
  resolve'3 _0

predicate resolve'5 (self : MutBorrow.t t_Trail) =
  [%#sresolve] self.final = self.current

predicate resolve'6 (_0 : MutBorrow.t t_Trail) =
  resolve'5 _0

predicate resolve'7 (self : MutBorrow.t t_Formula) =
  [%#sresolve] self.final = self.current

predicate resolve'8 (_0 : MutBorrow.t t_Formula) =
  resolve'7 _0

let rec v_Learned (input:t_Conflict) (ret  (field_0:UInt64.t) (field_1:t_Clause))= any
  [ good (field_0:UInt64.t) (field_1:t_Clause)-> {C_Learned field_0 field_1 = input} (! ret {field_0} {field_1})
  | bad -> {forall field_0 : UInt64.t, field_1 : t_Clause [C_Learned field_0 field_1 : t_Conflict] . C_Learned field_0 field_1
    <> input}
    (! {false}
    any) ]


let rec handle_long_clause (self:MutBorrow.t t_Solver) (f:MutBorrow.t t_Formula) (t:MutBorrow.t t_Trail) (w:MutBorrow.t t_Watches) (d:MutBorrow.t t_Decisions) (clause:t_Clause) (s_idx:UInt64.t) (return'  (x:()))= {[@expl:handle_long_clause requires #0] [%#ssolver'12] inv'1 f.current}
  {[@expl:handle_long_clause requires #1] [%#ssolver'13] inv'4 t.current f.current}
  {[@expl:handle_long_clause requires #2] [%#ssolver'14] inv'6 w.current f.current}
  {[@expl:handle_long_clause requires #3] [%#ssolver'15] inv'5 d.current (UInt64.t'int (f.current).t_Formula__num_vars)}
  {[@expl:handle_long_clause requires #4] [%#ssolver'16] UInt64.t'int (f.current).t_Formula__num_vars
  < Int.div (UInt64.t'int v_MAX'0) 2}
  {[@expl:handle_long_clause requires #5] [%#ssolver'17] inv'0 clause (UInt64.t'int (f.current).t_Formula__num_vars)}
  {[@expl:handle_long_clause requires #6] [%#ssolver'18] equisat_extension_inner clause (view'11 f)}
  {[@expl:handle_long_clause requires #7] [%#ssolver'19] Seq.length (view'1 clause) > 1}
  {[@expl:handle_long_clause requires #8] [%#ssolver'20] UInt64.t'int s_idx < Seq.length (view'1 clause)}
  any
  [ return''0 (result:())-> {[%#ssolver'12] inv'1 f.final}
    {[%#ssolver'13] inv'4 t.final f.final}
    {[%#ssolver'14] inv'6 w.final f.final}
    {[%#ssolver'15] inv'5 d.final (UInt64.t'int (f.current).t_Formula__num_vars)}
    {[%#ssolver'21] UInt64.t'int (f.current).t_Formula__num_vars = UInt64.t'int (f.final).t_Formula__num_vars}
    {[%#ssolver'22] equisat f.current f.final}
    (! return' {result}) ]


let rec v_Unit (input:t_Conflict) (ret  (field_0:t_Clause))= any
  [ good (field_0:t_Clause)-> {C_Unit field_0 = input} (! ret {field_0})
  | bad -> {forall field_0 : t_Clause [C_Unit field_0 : t_Conflict] . C_Unit field_0 <> input} (! {false} any) ]


let rec add_unit (self:MutBorrow.t t_Formula) (clause:t_Clause) (_t:t_Trail) (return'  (x:UInt64.t))= {[@expl:add_unit requires #0] [%#sformula'11] inv'1 self.current}
  {[@expl:add_unit requires #1] [%#sformula'12] inv'4 _t self.current}
  {[@expl:add_unit requires #2] [%#sformula'13] Seq.length (view'1 clause) = 1}
  {[@expl:add_unit requires #3] [%#sformula'14] inv'0 clause (UInt64.t'int (self.current).t_Formula__num_vars)}
  {[@expl:add_unit requires #4] [%#sformula'15] UInt64.t'int (self.current).t_Formula__num_vars
  < Int.div (UInt64.t'int v_MAX'0) 2}
  {[@expl:add_unit requires #5] [%#sformula'16] vars_in_range_inner (view'1 clause) (UInt64.t'int (self.current).t_Formula__num_vars)}
  {[@expl:add_unit requires #6] [%#sformula'17] no_duplicate_indexes_inner (view'1 clause)}
  {[@expl:add_unit requires #7] [%#sformula'18] equisat_extension_inner clause (view'11 self)}
  any
  [ return''0 (result:UInt64.t)-> {[%#sformula'11] inv'1 self.final}
    {[%#sformula'12] inv'4 _t self.final}
    {[%#sformula'19] UInt64.t'int (self.current).t_Formula__num_vars = UInt64.t'int (self.final).t_Formula__num_vars}
    {[%#sformula'20] forall i : int . 0 <= i /\ i < Seq.length (view (self.current).t_Formula__clauses)
     -> Seq.get (view (self.current).t_Formula__clauses) i = Seq.get (view (self.final).t_Formula__clauses) i}
    {[%#sformula'21] equisat self.current self.final}
    {[%#sformula'22] UInt64.t'int result = Seq.length (view (self.current).t_Formula__clauses)}
    {[%#sformula'23] Seq.length (view'1 (Seq.get (view (self.final).t_Formula__clauses) (UInt64.t'int result))) = 1}
    {[%#sformula'24] Seq.length (view (self.current).t_Formula__clauses) + 1
    = Seq.length (view (self.final).t_Formula__clauses)}
    (! return' {result}) ]


type t_Result  =
  | C_Ok ()
  | C_Err ()

let rec learn_unit (self:MutBorrow.t t_Trail) (cref:UInt64.t) (f:t_Formula) (d:MutBorrow.t t_Decisions) (return'  (x:t_Result))= {[@expl:learn_unit requires #0] [%#strail'4] inv'4 self.current f}
  {[@expl:learn_unit requires #1] [%#strail'5] inv'5 d.current (UInt64.t'int f.t_Formula__num_vars)}
  {[@expl:learn_unit requires #2] [%#strail'6] inv'1 f}
  {[@expl:learn_unit requires #3] [%#strail'7] UInt64.t'int cref < Seq.length (view f.t_Formula__clauses)}
  {[@expl:learn_unit requires #4] [%#strail'8] Seq.length (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref)))
  = 1}
  {[@expl:learn_unit requires #5] [%#strail'9] inv'0 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref)) (UInt64.t'int f.t_Formula__num_vars)}
  {[@expl:learn_unit requires #6] [%#strail'10] long_are_post_unit_inner (view'5 (self.current).t_Trail__trail) f (view'4 (self.current).t_Trail__assignments)}
  any
  [ return''0 (result:t_Result)-> {[%#strail'4] inv'4 self.final f}
    {[%#strail'5] inv'5 d.final (UInt64.t'int f.t_Formula__num_vars)}
    {[%#strail'11] match result with
      | C_Err _ -> true
      | C_Ok _ -> sat (Seq.get (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref))) 0) (self.final).t_Trail__assignments
      end}
    {[%#strail'12] long_are_post_unit_inner (view'5 (self.final).t_Trail__trail) f (view'4 (self.final).t_Trail__assignments)}
    (! return' {result}) ]


type t_Option  =
  | C_None
  | C_Some bool

let rec reduceDB (self:MutBorrow.t t_Formula) (watches:MutBorrow.t t_Watches) (t:t_Trail) (s:MutBorrow.t t_Solver) (return'  (x:()))= {[@expl:reduceDB requires #0] [%#sformula'25] inv'1 self.current}
  {[@expl:reduceDB requires #1] [%#sformula'26] inv'6 watches.current self.current}
  {[@expl:reduceDB requires #2] [%#sformula'27] inv'1 self.current}
  {[@expl:reduceDB requires #3] [%#sformula'28] inv'4 t self.current}
  {[@expl:reduceDB requires #4] [%#sformula'29] UInt64.t'int (self.current).t_Formula__num_vars
  < Int.div (UInt64.t'int v_MAX'0) 2}
  any
  [ return''0 (result:())-> {[%#sformula'25] inv'1 self.final}
    {[%#sformula'26] inv'6 watches.final self.final}
    {[%#sformula'30] inv'4 t self.final}
    {[%#sformula'31] (self.current).t_Formula__num_vars = (self.final).t_Formula__num_vars}
    {[%#sformula'32] equisat self.current self.final}
    (! return' {result}) ]


let rec simplify_formula (self:MutBorrow.t t_Formula) (watches:MutBorrow.t t_Watches) (t:t_Trail) (return'  (x:()))= {[@expl:simplify_formula requires #0] [%#sformula'33] inv'1 self.current}
  {[@expl:simplify_formula requires #1] [%#sformula'34] inv'6 watches.current self.current}
  {[@expl:simplify_formula requires #2] [%#sformula'35] UInt64.t'int (self.current).t_Formula__num_vars
  < Int.div (UInt64.t'int v_MAX'0) 2}
  {[@expl:simplify_formula requires #3] [%#sformula'36] inv'4 t self.current}
  any
  [ return''0 (result:())-> {[%#sformula'33] inv'1 self.final}
    {[%#sformula'34] inv'6 watches.final self.final}
    {[%#sformula'37] inv'4 t self.final}
    {[%#sformula'38] (self.current).t_Formula__num_vars = (self.final).t_Formula__num_vars}
    {[%#sformula'39] equisat self.current self.final}
    (! return' {result}) ]


meta "compute_max_steps" 1000000

let rec handle_conflict[#"/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 168 4 170 21] (self:MutBorrow.t t_Solver) (f:MutBorrow.t t_Formula) (t:MutBorrow.t t_Trail) (cref:UInt64.t) (w:MutBorrow.t t_Watches) (d:MutBorrow.t t_Decisions) (return'  (x:t_Option))= {[@expl:handle_conflict requires #0] [%#ssolver'2] inv'1 f.current}
  {[@expl:handle_conflict requires #1] [%#ssolver'3] inv'4 t.current f.current}
  {[@expl:handle_conflict requires #2] [%#ssolver'4] inv'6 w.current f.current}
  {[@expl:handle_conflict requires #3] [%#ssolver'5] inv'5 d.current (UInt64.t'int (f.current).t_Formula__num_vars)}
  {[@expl:handle_conflict requires #4] [%#ssolver'6] UInt64.t'int (f.current).t_Formula__num_vars
  < Int.div (UInt64.t'int v_MAX'0) 2}
  {[@expl:handle_conflict requires #5] [%#ssolver'7] UInt64.t'int cref
  < Seq.length (view (f.current).t_Formula__clauses)}
  {[@expl:handle_conflict requires #6] [%#ssolver'8] unsat (Seq.get (view (f.current).t_Formula__clauses) (UInt64.t'int cref)) (t.current).t_Trail__assignments}
  (! bb0
  [ bb0 = s0
    [ s0 = MutBorrow.borrow_mut <t_Decisions> {d'0.current}
        (fun (_ret:MutBorrow.t t_Decisions) ->  [ &_25 <- _ret ]  [ &d'0 <- { d'0 with current = _ret.final } ] s1)
    | s1 = analyze_conflict {f'0.current} {t'0.current} {cref'0} {_25} (fun (_ret:t_Conflict) ->  [ &res <- _ret ] s2)
    | s2 = bb1 ]
  
  | bb1 = any
    [ br0 -> {res = C_Ground} (! bb3)
    | br1 (x0:t_Clause)-> {res = C_Unit x0} (! bb4)
    | br2 (x0:UInt64.t) (x1:t_Clause)-> {res = C_Learned x0 x1} (! bb5)
    | br3 (x0:t_Clause)-> {res = C_Restart x0} (! bb6) ]
  
  | bb6 = s0
    [ s0 = -{resolve'0 self'0}- s1
    | s1 = v_Restart {res} (fun (r0:t_Clause) ->  [ &clause'1 <- r0 ] s2)
    | s2 = MutBorrow.borrow_final <t_Formula> {f'0.current} {MutBorrow.get_id f'0}
        (fun (_ret:MutBorrow.t t_Formula) ->  [ &_63 <- _ret ]  [ &f'0 <- { f'0 with current = _ret.final } ] s3)
    | s3 = MutBorrow.borrow_final <t_Watches> {w'0.current} {MutBorrow.get_id w'0}
        (fun (_ret:MutBorrow.t t_Watches) ->  [ &_65 <- _ret ]  [ &w'0 <- { w'0 with current = _ret.final } ] s4)
    | s4 = add_clause {_63} {clause'1} {_65} {t'0.current} (fun (_ret:UInt64.t) ->  [ &_62 <- _ret ] s5)
    | s5 = bb21 ]
  
  | bb21 = s0
    [ s0 = -{resolve'2 w'0}- s1
    | s1 = MutBorrow.borrow_final <t_Trail> {t'0.current} {MutBorrow.get_id t'0}
        (fun (_ret:MutBorrow.t t_Trail) ->  [ &_68 <- _ret ]  [ &t'0 <- { t'0 with current = _ret.final } ] s2)
    | s2 = MutBorrow.borrow_final <t_Decisions> {d'0.current} {MutBorrow.get_id d'0}
        (fun (_ret:MutBorrow.t t_Decisions) ->  [ &_70 <- _ret ]  [ &d'0 <- { d'0 with current = _ret.final } ] s3)
    | s3 = backtrack_safe {_68} {[%#ssolver] (0 : UInt64.t)} {f'0.current} {_70} (fun (_ret:()) ->  [ &_67 <- _ret ] s4)
    | s4 = bb22 ]
  
  | bb22 = s0 [ s0 = -{resolve'4 d'0}- s1 | s1 = -{resolve'6 t'0}- s2 | s2 = -{resolve'8 f'0}- s3 | s3 = bb23 ] 
  | bb23 = bb24
  | bb5 = bb7
  | bb7 = s0
    [ s0 = v_Learned {res} (fun (r0:UInt64.t) (r1:t_Clause) ->  [ &s_idx <- r0 ] s1)
    | s1 = v_Learned {res} (fun (r0:UInt64.t) (r1:t_Clause) ->  [ &clause'0 <- r1 ] s2)
    | s2 = MutBorrow.borrow_final <t_Solver> {self'0.current} {MutBorrow.get_id self'0}
        (fun (_ret:MutBorrow.t t_Solver) ->  [ &_54 <- _ret ]  [ &self'0 <- { self'0 with current = _ret.final } ] s3)
    | s3 = MutBorrow.borrow_final <t_Formula> {f'0.current} {MutBorrow.get_id f'0}
        (fun (_ret:MutBorrow.t t_Formula) ->  [ &_55 <- _ret ]  [ &f'0 <- { f'0 with current = _ret.final } ] s4)
    | s4 = MutBorrow.borrow_final <t_Trail> {t'0.current} {MutBorrow.get_id t'0}
        (fun (_ret:MutBorrow.t t_Trail) ->  [ &_56 <- _ret ]  [ &t'0 <- { t'0 with current = _ret.final } ] s5)
    | s5 = MutBorrow.borrow_final <t_Watches> {w'0.current} {MutBorrow.get_id w'0}
        (fun (_ret:MutBorrow.t t_Watches) ->  [ &_57 <- _ret ]  [ &w'0 <- { w'0 with current = _ret.final } ] s6)
    | s6 = MutBorrow.borrow_final <t_Decisions> {d'0.current} {MutBorrow.get_id d'0}
        (fun (_ret:MutBorrow.t t_Decisions) ->  [ &_58 <- _ret ]  [ &d'0 <- { d'0 with current = _ret.final } ] s7)
    | s7 = handle_long_clause {_54} {_55} {_56} {_57} {_58} {clause'0} {s_idx} (fun (_ret:()) ->  [ &_53 <- _ret ] s8)
    | s8 = bb19 ]
  
  | bb19 = s0
    [ s0 = -{resolve'4 d'0}- s1
    | s1 = -{resolve'2 w'0}- s2
    | s2 = -{resolve'6 t'0}- s3
    | s3 = -{resolve'8 f'0}- s4
    | s4 = -{resolve'0 self'0}- s5
    | s5 = bb20 ]
  
  | bb20 = bb24
  | bb4 = bb8
  | bb8 = s0
    [ s0 = v_Unit {res} (fun (r0:t_Clause) ->  [ &clause <- r0 ] s1)
    | s1 = MutBorrow.borrow_mut <t_Formula> {f'0.current}
        (fun (_ret:MutBorrow.t t_Formula) ->  [ &_31 <- _ret ]  [ &f'0 <- { f'0 with current = _ret.final } ] s2)
    | s2 = add_unit {_31} {clause} {t'0.current} (fun (_ret:UInt64.t) ->  [ &cref'1 <- _ret ] s3)
    | s3 = bb10 ]
  
  | bb10 = s0
    [ s0 = MutBorrow.borrow_final <t_Trail> {t'0.current} {MutBorrow.get_id t'0}
        (fun (_ret:MutBorrow.t t_Trail) ->  [ &_36 <- _ret ]  [ &t'0 <- { t'0 with current = _ret.final } ] s1)
    | s1 = MutBorrow.borrow_final <t_Decisions> {d'0.current} {MutBorrow.get_id d'0}
        (fun (_ret:MutBorrow.t t_Decisions) ->  [ &_39 <- _ret ]  [ &d'0 <- { d'0 with current = _ret.final } ] s2)
    | s2 = learn_unit {_36} {cref'1} {f'0.current} {_39} (fun (_ret:t_Result) ->  [ &_35 <- _ret ] s3)
    | s3 = bb11 ]
  
  | bb11 = s0
    [ s0 = -{resolve'4 d'0}- s1
    | s1 = any [ br0 (x0:())-> {_35 = C_Ok x0} (! bb14) | br1 (x0:())-> {_35 = C_Err x0} (! bb13) ]  ]
  
  | bb13 = s0
    [ s0 = -{resolve'2 w'0}- s1
    | s1 = -{resolve'6 t'0}- s2
    | s2 = -{resolve'8 f'0}- s3
    | s3 = -{resolve'0 self'0}- s4
    | s4 = bb15 ]
  
  | bb15 = s0 [ s0 =  [ &_0 <- C_Some ([%#ssolver'0] true) ] s1 | s1 = bb26 ] 
  | bb26 = bb27
  | bb14 = s0
    [ s0 = MutBorrow.borrow_mut <t_Formula> {f'0.current}
        (fun (_ret:MutBorrow.t t_Formula) ->  [ &_43 <- _ret ]  [ &f'0 <- { f'0 with current = _ret.final } ] s1)
    | s1 = MutBorrow.borrow_mut <t_Watches> {w'0.current}
        (fun (_ret:MutBorrow.t t_Watches) ->  [ &_44 <- _ret ]  [ &w'0 <- { w'0 with current = _ret.final } ] s2)
    | s2 = MutBorrow.borrow_final <t_Solver> {self'0.current} {MutBorrow.get_id self'0}
        (fun (_ret:MutBorrow.t t_Solver) ->  [ &_46 <- _ret ]  [ &self'0 <- { self'0 with current = _ret.final } ] s3)
    | s3 = reduceDB {_43} {_44} {t'0.current} {_46} (fun (_ret:()) ->  [ &_42 <- _ret ] s4)
    | s4 = bb16 ]
  
  | bb16 = s0
    [ s0 = -{resolve'0 self'0}- s1
    | s1 = MutBorrow.borrow_final <t_Formula> {f'0.current} {MutBorrow.get_id f'0}
        (fun (_ret:MutBorrow.t t_Formula) ->  [ &_48 <- _ret ]  [ &f'0 <- { f'0 with current = _ret.final } ] s2)
    | s2 = MutBorrow.borrow_final <t_Watches> {w'0.current} {MutBorrow.get_id w'0}
        (fun (_ret:MutBorrow.t t_Watches) ->  [ &_49 <- _ret ]  [ &w'0 <- { w'0 with current = _ret.final } ] s3)
    | s3 = simplify_formula {_48} {_49} {t'0.current} (fun (_ret:()) ->  [ &_47 <- _ret ] s4)
    | s4 = bb17 ]
  
  | bb17 = s0 [ s0 = -{resolve'2 w'0}- s1 | s1 = -{resolve'6 t'0}- s2 | s2 = -{resolve'8 f'0}- s3 | s3 = bb18 ] 
  | bb18 = bb24
  | bb24 = s0 [ s0 =  [ &_0 <- C_None ] s1 | s1 = bb25 ] 
  | bb25 = bb29
  | bb3 = s0
    [ s0 = -{resolve'4 d'0}- s1
    | s1 = -{resolve'2 w'0}- s2
    | s2 = -{resolve'6 t'0}- s3
    | s3 = -{resolve'8 f'0}- s4
    | s4 = -{resolve'0 self'0}- s5
    | s5 = bb9 ]
  
  | bb9 = s0 [ s0 =  [ &_0 <- C_Some ([%#ssolver'1] false) ] s1 | s1 = bb27 ] 
  | bb27 = bb28
  | bb28 = bb29
  | bb29 = return''0 {_0} ]
  )
  [ & _0 : t_Option = Any.any_l ()
  | & self'0 : MutBorrow.t t_Solver = self
  | & f'0 : MutBorrow.t t_Formula = f
  | & t'0 : MutBorrow.t t_Trail = t
  | & cref'0 : UInt64.t = cref
  | & w'0 : MutBorrow.t t_Watches = w
  | & d'0 : MutBorrow.t t_Decisions = d
  | & res : t_Conflict = Any.any_l ()
  | & _25 : MutBorrow.t t_Decisions = Any.any_l ()
  | & clause : t_Clause = Any.any_l ()
  | & cref'1 : UInt64.t = Any.any_l ()
  | & _31 : MutBorrow.t t_Formula = Any.any_l ()
  | & _35 : t_Result = Any.any_l ()
  | & _36 : MutBorrow.t t_Trail = Any.any_l ()
  | & _39 : MutBorrow.t t_Decisions = Any.any_l ()
  | & _42 : () = Any.any_l ()
  | & _43 : MutBorrow.t t_Formula = Any.any_l ()
  | & _44 : MutBorrow.t t_Watches = Any.any_l ()
  | & _46 : MutBorrow.t t_Solver = Any.any_l ()
  | & _47 : () = Any.any_l ()
  | & _48 : MutBorrow.t t_Formula = Any.any_l ()
  | & _49 : MutBorrow.t t_Watches = Any.any_l ()
  | & s_idx : UInt64.t = Any.any_l ()
  | & clause'0 : t_Clause = Any.any_l ()
  | & _53 : () = Any.any_l ()
  | & _54 : MutBorrow.t t_Solver = Any.any_l ()
  | & _55 : MutBorrow.t t_Formula = Any.any_l ()
  | & _56 : MutBorrow.t t_Trail = Any.any_l ()
  | & _57 : MutBorrow.t t_Watches = Any.any_l ()
  | & _58 : MutBorrow.t t_Decisions = Any.any_l ()
  | & clause'1 : t_Clause = Any.any_l ()
  | & _62 : UInt64.t = Any.any_l ()
  | & _63 : MutBorrow.t t_Formula = Any.any_l ()
  | & _65 : MutBorrow.t t_Watches = Any.any_l ()
  | & _67 : () = Any.any_l ()
  | & _68 : MutBorrow.t t_Trail = Any.any_l ()
  | & _70 : MutBorrow.t t_Decisions = Any.any_l () ]
  
  [ return''0 (result:t_Option)-> {[@expl:handle_conflict ensures #0] [%#ssolver'2] inv'1 f.final}
    {[@expl:handle_conflict ensures #1] [%#ssolver'3] inv'4 t.final f.final}
    {[@expl:handle_conflict ensures #2] [%#ssolver'4] inv'6 w.final f.final}
    {[@expl:handle_conflict ensures #3] [%#ssolver'5] inv'5 d.final (UInt64.t'int (f.current).t_Formula__num_vars)}
    {[@expl:handle_conflict ensures #4] [%#ssolver'9] UInt64.t'int (f.current).t_Formula__num_vars
    = UInt64.t'int (f.final).t_Formula__num_vars}
    {[@expl:handle_conflict ensures #5] [%#ssolver'10] equisat f.current f.final}
    {[@expl:handle_conflict ensures #6] [%#ssolver'11] match result with
      | C_Some b -> if b then true else not_satisfiable f.final
      | C_None -> true
      end}
    (! return' {result}) ]
  
