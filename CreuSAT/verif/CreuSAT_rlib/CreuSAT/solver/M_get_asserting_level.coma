(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 38 0 38 89 *)

let%span svec = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 168 27 168 46
let%span svec'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 169 26 169 54
let%span svec'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 21 14 21 41
let%span smodel = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 54 8 54 22
let%span sslice = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 123 20 123 37
let%span sslice'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 130 20 130 37
let%span slogic_assignments = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 53 12 54 74
let%span slogic_assignments'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 17 4 17 12
let%span slogic_assignments'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 37 8 37 61
let%span slit = "/Users/sarekhs/CreuSAT/CreuSAT/src/lit.rs" 43 14 43 43
let%span slogic_lit = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 24 20 24 29
let%span slogic_lit'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 83 20 83 42
let%span slogic_lit'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 75 12 76 57
let%span slogic_lit'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 90 12 93 13
let%span slogic_lit'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 117 20 117 38
let%span slogic_lit'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 101 12 104 13
let%span slogic_lit'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 31 20 31 33
let%span slogic_formula = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 79 14 79 41
let%span slogic_formula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 81 20 81 44
let%span slogic_formula'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 88 12 92 45
let%span slogic_formula'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 30 8 31 69
let%span slogic_formula'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 22 8 22 85
let%span slogic_formula'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 48 8 48 111
let%span slogic_formula'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 39 8 40 37
let%span slogic_trail = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 56 8 67 9
let%span slogic_trail'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 105 8 107 38
let%span slogic_trail'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 92 8 97 17
let%span slogic_trail'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 146 8 148 72
let%span slogic_trail'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 168 8 172 17
let%span slogic_trail'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 115 8 116 33
let%span slogic_trail'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 180 8 186 17
let%span slogic_trail'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 15 12 23 13
let%span slogic_trail'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 129 4 133 5
let%span slogic = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic.rs" 25 8 29 9
let%span slogic_clause = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 40 8 40 134
let%span slogic_clause'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 227 20 227 42
let%span slogic_clause'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 25 8 26 23
let%span slogic_clause'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 48 8 49 92
let%span slogic_clause'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 14 4 14 12
let%span slogic_clause'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 33 4 33 62
let%span slogic_clause'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 187 12 188 37
let%span sclause = "/Users/sarekhs/CreuSAT/CreuSAT/src/clause.rs" 22 15 22 32
let%span sclause'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/clause.rs" 23 14 23 35
let%span sclause'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/clause.rs" 92 14 92 36
let%span slogic_util = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 28 4 28 31
let%span slogic_util'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 22 16 22 80
let%span sord = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 129 39 129 89
let%span sord'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 134 39 134 86
let%span sord'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 139 39 139 86
let%span sord'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 144 39 144 89
let%span sord'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 149 39 149 70
let%span sord'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 154 40 154 57
let%span sord'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 155 40 155 57
let%span sord'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 156 39 156 56
let%span sord'7 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 161 40 161 70
let%span sord'8 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 162 39 162 72
let%span sord'9 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 167 40 167 73
let%span sord'10 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 168 39 168 69
let%span sord'11 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 173 39 173 84
let%span sord'12 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 230 16 236 17
let%span ssolver = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 39 27 39 28
let%span ssolver'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 40 50 40 51
let%span ssolver'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 41 23 41 24
let%span ssolver'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 42 16 42 38
let%span ssolver'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 49 13 49 14
let%span ssolver'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 30 11 30 18
let%span ssolver'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 31 11 31 24
let%span ssolver'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 32 11 32 47
let%span ssolver'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 33 11 33 34
let%span ssolver'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 34 11 34 28
let%span ssolver'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 35 11 35 52
let%span ssolver'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 36 11 36 46
let%span ssolver'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 37 10 37 35

use creusot.int.UInt64
use creusot.int.UInt32
use creusot.prelude.Opaque
use seq.Seq
use mach.int.Int
use creusot.int.UInt8
use creusot.prelude.Any

type t_Lit  =
  { t_Lit__idx: UInt64.t; t_Lit__polarity: bool }

type t_NonNull  =
  { t_NonNull__pointer: Opaque.ptr }

type t_Unique  =
  { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }

type t_UsizeNoHighBit  =
  { t_UsizeNoHighBit__0: UInt64.t }

type t_RawVecInner  =
  { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }

type t_RawVec  =
  { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }

type t_Vec  =
  { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }

type t_Clause  =
  { t_Clause__deleted: bool; t_Clause__lbd: UInt32.t; t_Clause__search: UInt64.t; t_Clause__lits: t_Vec }

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

function view (self : t_Vec) : Seq.seq t_Lit

axiom view_spec : forall self : t_Vec . [%#svec'1] Seq.length (view self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 16 4 16 33] (self : t_Clause) : Seq.seq t_Lit

 =
  [%#slogic_clause'3] view self.t_Clause__lits

function view'1 (self : t_Clause) : Seq.seq t_Lit =
  [%#smodel] view'0 self

let rec index (self:t_Clause) (ix:UInt64.t) (return'  (x:t_Lit))= {[@expl:index requires] [%#sclause] UInt64.t'int ix
  < Seq.length (view'1 self)}
  any
  [ return''0 (result:t_Lit)-> {[%#sclause'0] Seq.get (view'1 self) (UInt64.t'int ix) = result} (! return' {result}) ]


function index_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 23 4 23 35] (self : t_Lit) : int =
  [%#slogic_lit] UInt64.t'int self.t_Lit__idx

let rec index'0 (self:t_Lit) (return'  (x:UInt64.t))= any
  [ return''0 (result:UInt64.t)-> {[%#slit] UInt64.t'int result = index_logic self} (! return' {result}) ]


type t_RawVec'0  =
  { t_RawVec__inner'0: t_RawVecInner; t_RawVec__qy95zmarker'0: () }

type t_Vec'0  =
  { t_Vec__buf'0: t_RawVec'0; t_Vec__len'0: UInt64.t }

type t_Assignments  =
  { t_Assignments__0: t_Vec'0 }

type t_RawVec'1  =
  { t_RawVec__inner'1: t_RawVecInner; t_RawVec__qy95zmarker'1: () }

type t_Vec'1  =
  { t_Vec__buf'1: t_RawVec'1; t_Vec__len'1: UInt64.t }

type t_RawVec'2  =
  { t_RawVec__inner'2: t_RawVecInner; t_RawVec__qy95zmarker'2: () }

type t_Vec'2  =
  { t_Vec__buf'2: t_RawVec'2; t_Vec__len'2: UInt64.t }

type t_Trail  =
  { t_Trail__assignments: t_Assignments;
    t_Trail__lit_to_level: t_Vec'1;
    t_Trail__trail: t_Vec'2;
    t_Trail__curr_i: UInt64.t;
    t_Trail__decisions: t_Vec'1 }

predicate in_bounds [@inline:trivial] (self : UInt64.t) (seq : Seq.seq UInt64.t) =
  [%#sslice] UInt64.t'int self < Seq.length seq

function view'2 (self : t_Vec'1) : Seq.seq UInt64.t

axiom view_spec'0 : forall self : t_Vec'1 . [%#svec'1] Seq.length (view'2 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'3 (self : t_Vec'1) : Seq.seq UInt64.t =
  [%#smodel] view'2 self

predicate has_value [@inline:trivial] (self : UInt64.t) (seq : Seq.seq UInt64.t) (out : UInt64.t) =
  [%#sslice'0] Seq.get seq (UInt64.t'int self) = out

let rec index'1 (self_:t_Vec'1) (ix:UInt64.t) (return'  (x:UInt64.t))= {[@expl:index requires] [%#svec] in_bounds ix (view'3 self_)}
  any [ return''0 (result:UInt64.t)-> {[%#svec'0] has_value ix (view'3 self_) result} (! return' {result}) ] 

let rec len (self:t_Clause) (return'  (x:UInt64.t))= any
  [ return''0 (result:UInt64.t)-> {[%#sclause'1] UInt64.t'int result = Seq.length (view'1 self)} (! return' {result}) ]


type tuple  =
  { _0: UInt64.t; _1: UInt64.t }

type t_RawVec'3  =
  { t_RawVec__inner'3: t_RawVecInner; t_RawVec__qy95zmarker'3: () }

type t_Vec'3  =
  { t_Vec__buf'3: t_RawVec'3; t_Vec__len'3: UInt64.t }

type t_Formula  =
  { t_Formula__clauses: t_Vec'3; t_Formula__num_vars: UInt64.t }

function view'4 (self : t_Vec'3) : Seq.seq t_Clause

axiom view_spec'1 : forall self : t_Vec'3 . [%#svec'1] Seq.length (view'4 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate inv [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 82 4 82 36] (self : t_Lit) (n : int) =
  [%#slogic_lit'0] index_logic self < n

predicate vars_in_range_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 23 0 23 55] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'1] forall i : int . 0 <= i /\ i < Seq.length s  -> inv (Seq.get s i) n

predicate no_duplicate_indexes_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 46 0 46 54] (s : Seq.seq t_Lit)

 =
  [%#slogic_clause'2] forall j : int, k : int . 0 <= j /\ j < Seq.length s /\ 0 <= k /\ k < Seq.length s /\ k <> j
   -> index_logic (Seq.get s k) <> index_logic (Seq.get s j)

predicate inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 32 0 32 48] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'4] vars_in_range_inner s n /\ no_duplicate_indexes_inner s

predicate inv'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 226 4 226 36] (self : t_Clause) (n : int) =
  [%#slogic_clause'0] inv_internal (view'0 self) n

predicate inv_mirror [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 86 4 86 35] (self : t_Formula) =
  [%#slogic_formula'1] (forall i : int . 0 <= i /\ i < Seq.length (view'4 self.t_Formula__clauses)
   -> inv'0 (Seq.get (view'4 self.t_Formula__clauses) i) (UInt64.t'int self.t_Formula__num_vars))
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'4 self.t_Formula__clauses)
   -> Seq.length (view'0 (Seq.get (view'4 self.t_Formula__clauses) i)) >= 1)

type t_FormulaModel  =
  { t_FormulaModel__clauses: Seq.seq t_Clause; t_FormulaModel__num_vars: int }

predicate formula_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 28 0 28 49] (f : t_FormulaModel)

 =
  [%#slogic_formula'2] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> inv'0 (Seq.get f.t_FormulaModel__clauses i) f.t_FormulaModel__num_vars
  /\ Seq.length (view'0 (Seq.get f.t_FormulaModel__clauses i)) > 0

function view'5 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 21 4 21 33] (self : t_Formula) : t_FormulaModel

 =
  [%#slogic_formula'3] { t_FormulaModel__clauses = view'4 self.t_Formula__clauses;
                         t_FormulaModel__num_vars = UInt64.t'int self.t_Formula__num_vars }

predicate inv'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 80 4 80 28] (self : t_Formula) =
  [%#slogic_formula'0] formula_invariant (view'5 self)

axiom inv_spec : forall self : t_Formula . [%#slogic_formula] inv'1 self = inv_mirror self

function view'6 (self : t_Vec'0) : Seq.seq UInt8.t

axiom view_spec'2 : forall self : t_Vec'0 . [%#svec'1] Seq.length (view'6 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'7 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 19 4 19 33] (self : t_Assignments) : Seq.seq UInt8.t

 =
  [%#slogic_assignments'0] view'6 self.t_Assignments__0

predicate inv'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 51 4 51 40] (self : t_Assignments) (f : t_Formula)

 =
  [%#slogic_assignments] UInt64.t'int f.t_Formula__num_vars = Seq.length (view'7 self)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'7 self)  -> UInt8.t'int (Seq.get (view'7 self) i) <= 3)

type t_Reason  =
  | C_Decision
  | C_Unit UInt64.t
  | C_Long UInt64.t

type t_Step  =
  { t_Step__lit: t_Lit; t_Step__decision_level: UInt64.t; t_Step__reason: t_Reason }

predicate inv'3 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 13 4 13 40] (self : t_Reason) (f : t_Formula)

 =
  [%#slogic_trail'6] match self with
    | C_Long cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view'4 f.t_Formula__clauses)
    /\ Seq.length (view'0 (Seq.get (view'4 f.t_Formula__clauses) (UInt64.t'int cref))) > 1
    | C_Unit cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view'4 f.t_Formula__clauses)
    /\ Seq.length (view'0 (Seq.get (view'4 f.t_Formula__clauses) (UInt64.t'int cref))) = 1
    | _ -> true
    end

predicate trail_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 103 0 103 60] (trail : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'0] forall i : int . 0 <= i /\ i < Seq.length trail
   -> inv (Seq.get trail i).t_Step__lit (UInt64.t'int f.t_Formula__num_vars) /\ inv'3 (Seq.get trail i).t_Step__reason f

function view'8 (self : t_Vec'2) : Seq.seq t_Step

axiom view_spec'3 : forall self : t_Vec'2 . [%#svec'1] Seq.length (view'8 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate lit_idx_in [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 73 4 73 46] (self : t_Lit) (c : t_Clause)
 =
  [%#slogic_lit'1] exists i : int . 0 <= i
  /\ i < Seq.length (view'0 c) /\ index_logic (Seq.get (view'0 c) i) = index_logic self

predicate lit_not_in_less_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 90 0 90 62] (t : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'1] forall i : int . 0 <= i /\ i < Seq.length t
   -> (forall j : int . 0 <= j /\ j < i
   -> match (Seq.get t j).t_Step__reason with
    | C_Long cref -> not lit_idx_in (Seq.get t i).t_Step__lit (Seq.get (view'4 f.t_Formula__clauses) (UInt64.t'int cref))
    | _ -> true
    end)

predicate lit_is_unique_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 144 0 144 52] (trail : Seq.seq t_Step)

 =
  [%#slogic_trail'2] forall i : int . 0 <= i /\ i < Seq.length trail
   -> (forall j : int . 0 <= j /\ j < i
   -> index_logic (Seq.get trail j).t_Step__lit <> index_logic (Seq.get trail i).t_Step__lit)

function is_positive_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 30 4 30 42] (self : t_Lit) : bool =
  [%#slogic_lit'5] self.t_Lit__polarity

predicate sat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 88 4 88 57] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'2] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 1
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 0


predicate unsat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 99 4 99 59] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'4] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 0
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 1


predicate clause_post_with_regards_to_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 128 0 128 90] (c : t_Clause) (a : Seq.seq UInt8.t) (j : int)

 =
  [%#slogic_trail'7] index_logic (Seq.get (view'0 c) 0) = j
  /\ sat_inner (Seq.get (view'0 c) 0) a
  /\ (forall i : int . 1 <= i /\ i < Seq.length (view'0 c)  -> unsat_inner (Seq.get (view'0 c) i) a)

predicate long_are_post_unit_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 166 0 166 92] (trail : Seq.seq t_Step) (f : t_Formula) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'3] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Long k -> clause_post_with_regards_to_inner (Seq.get (view'4 f.t_Formula__clauses) (UInt64.t'int k)) a (index_logic (Seq.get trail j).t_Step__lit)
    | _ -> true
    end

predicate trail_entries_are_assigned_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 113 0 113 84] (t : Seq.seq t_Step) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'4] forall j : int . 0 <= j /\ j < Seq.length t  -> sat_inner (Seq.get t j).t_Step__lit a

type t_Ordering  =
  | C_Less
  | C_Equal
  | C_Greater

function cmp_log (self : UInt64.t) (o : UInt64.t) : t_Ordering =
  [%#sord'12] if UInt64.lt self o then C_Less else if self = o then C_Equal else C_Greater

function eq_cmp (x : UInt64.t) (y : UInt64.t) : ()

axiom eq_cmp_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'11] (x = y) = (cmp_log x y = C_Equal)

function antisym2 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym2_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'9] cmp_log x y = C_Greater)
 -> ([%#sord'10] cmp_log y x = C_Less)

function antisym1 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym1_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'7] cmp_log x y = C_Less)
 -> ([%#sord'8] cmp_log y x = C_Greater)

function trans (x : UInt64.t) (y : UInt64.t) (z : UInt64.t) (o : t_Ordering) : ()

axiom trans_spec : forall x : UInt64.t, y : UInt64.t, z : UInt64.t, o : t_Ordering . ([%#sord'4] cmp_log x y = o)
 -> ([%#sord'5] cmp_log y z = o)  -> ([%#sord'6] cmp_log x z = o)

function refl (x : UInt64.t) : ()

axiom refl_spec : forall x : UInt64.t . [%#sord'3] cmp_log x x = C_Equal

function cmp_gt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_gt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'2] UInt64.gt x y = (cmp_log x y = C_Greater)

function cmp_ge_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_ge_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'1] UInt64.ge x y = (cmp_log x y <> C_Less)

function cmp_lt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_lt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'0] UInt64.lt x y = (cmp_log x y = C_Less)

function cmp_le_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_le_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord] UInt64.le x y = (cmp_log x y <> C_Greater)

predicate sorted_range [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 21 0 21 58] (s : Seq.seq UInt64.t) (l : int) (u : int)

 =
  [%#slogic_util'0] forall i : int, j : int . l <= i /\ i < j /\ j < u  -> UInt64.le (Seq.get s i) (Seq.get s j)

predicate sorted [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 27 0 27 36] (s : Seq.seq UInt64.t) =
  [%#slogic_util] sorted_range s 0 (Seq.length s)

predicate sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 116 4 116 44] (self : t_Lit) (a : t_Assignments)
 =
  [%#slogic_lit'3] sat_inner self (view'7 a)

predicate unit_are_sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 178 0 178 73] (trail : Seq.seq t_Step) (f : t_Formula) (a : t_Assignments)

 =
  [%#slogic_trail'5] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Unit k -> (Seq.get trail j).t_Step__lit
    = Seq.get (view'0 (Seq.get (view'4 f.t_Formula__clauses) (UInt64.t'int k))) 0
    /\ sat (Seq.get (view'0 (Seq.get (view'4 f.t_Formula__clauses) (UInt64.t'int k))) 0) a
    | _ -> true
    end

predicate inv'4 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 55 4 55 40] (self : t_Trail) (f : t_Formula)
 =
  [%#slogic_trail] inv'2 self.t_Trail__assignments f
  /\ trail_invariant (view'8 self.t_Trail__trail) f
  /\ Seq.length (view'2 self.t_Trail__lit_to_level) = UInt64.t'int f.t_Formula__num_vars
  /\ lit_not_in_less_inner (view'8 self.t_Trail__trail) f
  /\ lit_is_unique_inner (view'8 self.t_Trail__trail)
  /\ long_are_post_unit_inner (view'8 self.t_Trail__trail) f (view'7 self.t_Trail__assignments)
  /\ trail_entries_are_assigned_inner (view'8 self.t_Trail__trail) (view'7 self.t_Trail__assignments)
  /\ sorted (view'2 self.t_Trail__decisions)
  /\ unit_are_sat (view'8 self.t_Trail__trail) f self.t_Trail__assignments
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'2 self.t_Trail__decisions)
   -> UInt64.t'int (Seq.get (view'2 self.t_Trail__decisions) i) <= Seq.length (view'8 self.t_Trail__trail))

predicate unset [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic.rs" 23 0 23 38] (v : UInt8.t) =
  [%#slogic] if UInt8.t'int v >= 2 then true else false

predicate complete_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 35 0 35 52] (a : Seq.seq UInt8.t)

 =
  [%#slogic_assignments'1] forall i : int . 0 <= i /\ i < Seq.length a  -> not unset (Seq.get a i)

predicate sat_inner'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 185 4 185 57] (self : t_Clause) (a : Seq.seq UInt8.t)

 =
  [%#slogic_clause'5] exists i : int . 0 <= i /\ i < Seq.length (view'0 self) /\ sat_inner (Seq.get (view'0 self) i) a

predicate formula_sat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 37 0 37 72] (f : t_FormulaModel) (a : Seq.seq UInt8.t)

 =
  [%#slogic_formula'5] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> sat_inner'0 (Seq.get f.t_FormulaModel__clauses i) a

predicate eventually_sat_complete [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 46 0 46 55] (f : t_FormulaModel)

 =
  [%#slogic_formula'4] exists a2 : Seq.seq UInt8.t . Seq.length a2 = f.t_FormulaModel__num_vars
  /\ complete_inner a2 /\ formula_sat_inner f a2

predicate equisat_extension_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 38 0 38 66] (c : t_Clause) (f : t_FormulaModel)

 =
  [%#slogic_clause] eventually_sat_complete f
   -> eventually_sat_complete { t_FormulaModel__clauses = Seq.snoc f.t_FormulaModel__clauses c;
                                t_FormulaModel__num_vars = f.t_FormulaModel__num_vars }

function view'9 (self : t_Formula) : t_FormulaModel =
  [%#smodel] view'5 self

meta "compute_max_steps" 1000000

let rec get_asserting_level[#"/Users/sarekhs/CreuSAT/CreuSAT/src/solver.rs" 38 0 38 89] (clause:t_Clause) (trail:t_Trail) (f:t_Formula) (return'  (x:tuple))= {[@expl:get_asserting_level requires #0] [%#ssolver'4] inv'1 f}
  {[@expl:get_asserting_level requires #1] [%#ssolver'5] inv'4 trail f}
  {[@expl:get_asserting_level requires #2] [%#ssolver'6] equisat_extension_inner clause (view'9 f)}
  {[@expl:get_asserting_level requires #3] [%#ssolver'7] inv'0 clause (UInt64.t'int f.t_Formula__num_vars)}
  {[@expl:get_asserting_level requires #4] [%#ssolver'8] Seq.length (view'1 clause) > 1}
  {[@expl:get_asserting_level requires #5] [%#ssolver'9] vars_in_range_inner (view'1 clause) (UInt64.t'int f.t_Formula__num_vars)}
  {[@expl:get_asserting_level requires #6] [%#ssolver'10] no_duplicate_indexes_inner (view'1 clause)}
  (! bb0
  [ bb0 = s0
    [ s0 =  [ &max_i <- [%#ssolver] (1 : UInt64.t) ] s1
    | s1 = index {clause'0} {[%#ssolver'0] (1 : UInt64.t)} (fun (_ret:t_Lit) ->  [ &_18 <- _ret ] s2)
    | s2 = bb1 ]
  
  | bb1 = s0 [ s0 = index'0 {_18} (fun (_ret:UInt64.t) ->  [ &_16 <- _ret ] s1) | s1 = bb2 ] 
  | bb2 = s0
    [ s0 = index'1 {trail'0.t_Trail__lit_to_level} {_16} (fun (_ret:UInt64.t) ->  [ &_14 <- _ret ] s1) | s1 = bb3 ]
  
  | bb3 = s0 [ s0 =  [ &max_level <- _14 ] s1 | s1 =  [ &i <- [%#ssolver'1] (2 : UInt64.t) ] s2 | s2 = bb4 ] 
  | bb4 = bb4'0
    [ bb4'0 = {[@expl:loop invariant] [%#ssolver'2] UInt64.t'int max_i < Seq.length (view'1 clause'0)}
      (! s0) [ s0 = bb5 ] 
      [ bb5 = s0 [ s0 = len {clause'0} (fun (_ret:UInt64.t) ->  [ &_27 <- _ret ] s1) | s1 = bb6 ] 
      | bb6 = s0
        [ s0 =  [ &_25 <- UInt64.lt i _27 ] s1 | s1 = any [ br0 -> {_25 = false} (! bb14) | br1 -> {_25} (! bb7) ]  ]
      
      | bb7 = s0 [ s0 = index {clause'0} {i} (fun (_ret:t_Lit) ->  [ &_34 <- _ret ] s1) | s1 = bb8 ] 
      | bb8 = s0 [ s0 = index'0 {_34} (fun (_ret:UInt64.t) ->  [ &_32 <- _ret ] s1) | s1 = bb9 ] 
      | bb9 = s0
        [ s0 = index'1 {trail'0.t_Trail__lit_to_level} {_32} (fun (_ret:UInt64.t) ->  [ &_30 <- _ret ] s1) | s1 = bb10 ]
      
      | bb10 = s0
        [ s0 =  [ &level <- _30 ] s1
        | s1 =  [ &_38 <- UInt64.gt level max_level ] s2
        | s2 = any [ br0 -> {_38 = false} (! bb12) | br1 -> {_38} (! bb11) ]  ]
      
      | bb11 = s0 [ s0 =  [ &max_level <- level ] s1 | s1 =  [ &max_i <- i ] s2 | s2 = bb13 ] 
      | bb12 = bb13
      | bb13 = s0
        [ s0 = UInt64.add {i} {[%#ssolver'3] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &i <- _ret ] s1) | s1 = bb4'0 ]
       ]
     ]
  
  | bb14 = s0 [ s0 =  [ &_0'0 <- { _0 = max_i; _1 = max_level } ] s1 | s1 = return''0 {_0'0} ]  ]
  )
  [ & _0'0 : tuple = Any.any_l ()
  | & clause'0 : t_Clause = clause
  | & trail'0 : t_Trail = trail
  | & max_i : UInt64.t = Any.any_l ()
  | & max_level : UInt64.t = Any.any_l ()
  | & _14 : UInt64.t = Any.any_l ()
  | & _16 : UInt64.t = Any.any_l ()
  | & _18 : t_Lit = Any.any_l ()
  | & i : UInt64.t = Any.any_l ()
  | & _25 : bool = Any.any_l ()
  | & _27 : UInt64.t = Any.any_l ()
  | & level : UInt64.t = Any.any_l ()
  | & _30 : UInt64.t = Any.any_l ()
  | & _32 : UInt64.t = Any.any_l ()
  | & _34 : t_Lit = Any.any_l ()
  | & _38 : bool = Any.any_l () ]
  
  [ return''0 (result:tuple)-> {[@expl:get_asserting_level ensures] [%#ssolver'11] UInt64.t'int result._0
    < Seq.length (view'1 clause)}
    (! return' {result}) ]
  
