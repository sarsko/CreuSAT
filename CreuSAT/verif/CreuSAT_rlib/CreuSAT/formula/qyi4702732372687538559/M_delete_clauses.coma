(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 231 4 231 70 *)

(* formula::Formula *)

let%span svec = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 89 26 89 48
let%span svec'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 168 27 168 46
let%span svec'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 169 26 169 54
let%span svec'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 21 14 21 41
let%span smodel = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 54 8 54 22
let%span sslice = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 123 20 123 37
let%span sslice'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 130 20 130 37
let%span slogic_assignments = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 53 12 54 74
let%span slogic_assignments'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 17 4 17 12
let%span slogic_assignments'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 37 8 37 61
let%span sresolve = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/resolve.rs" 54 20 54 34
let%span slogic_lit = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 83 20 83 42
let%span slogic_lit'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 75 12 76 57
let%span slogic_lit'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 24 20 24 29
let%span slogic_lit'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 90 12 93 13
let%span slogic_lit'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 117 20 117 38
let%span slogic_lit'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 101 12 104 13
let%span slogic_lit'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 31 20 31 33
let%span slogic_formula = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 73 8 73 69
let%span slogic_formula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 79 14 79 41
let%span slogic_formula'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 81 20 81 44
let%span slogic_formula'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 66 12 66 113
let%span slogic_formula'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 88 12 92 45
let%span slogic_formula'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 30 8 31 69
let%span slogic_formula'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 22 8 22 85
let%span slogic_formula'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 123 12 124 45
let%span slogic_trail = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 56 8 67 9
let%span slogic_trail'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 105 8 107 38
let%span slogic_trail'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 92 8 97 17
let%span slogic_trail'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 146 8 148 72
let%span slogic_trail'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 168 8 172 17
let%span slogic_trail'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 115 8 116 33
let%span slogic_trail'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 180 8 186 17
let%span slogic_trail'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 15 12 23 13
let%span slogic_trail'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 129 4 133 5
let%span slogic = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic.rs" 25 8 29 9
let%span slogic_clause = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 196 12 196 30
let%span slogic_clause'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 14 4 14 12
let%span slogic_clause'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 227 20 227 42
let%span slogic_clause'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 187 12 188 37
let%span slogic_clause'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 33 4 33 62
let%span slogic_clause'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 25 8 26 23
let%span slogic_clause'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 48 8 49 92
let%span sclause = "/Users/sarekhs/CreuSAT/CreuSAT/src/clause.rs" 92 14 92 36
let%span slogic_util = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 28 4 28 31
let%span slogic_util'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 22 16 22 80
let%span sord = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 129 39 129 89
let%span sord'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 134 39 134 86
let%span sord'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 139 39 139 86
let%span sord'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 144 39 144 89
let%span sord'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 149 39 149 70
let%span sord'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 154 40 154 57
let%span sord'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 155 40 155 57
let%span sord'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 156 39 156 56
let%span sord'7 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 161 40 161 70
let%span sord'8 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 162 39 162 72
let%span sord'9 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 167 40 167 73
let%span sord'10 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 168 39 168 69
let%span sord'11 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 173 39 173 84
let%span sord'12 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 230 16 236 17
let%span sformula = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 232 44 232 62
let%span sformula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 233 44 233 65
let%span sformula'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 235 20 235 21
let%span sformula'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 240 20 240 48
let%span sformula'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 239 20 239 53
let%span sformula'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 238 20 238 30
let%span sformula'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 237 20 237 32
let%span sformula'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 236 20 236 38
let%span sformula'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 243 16 243 55
let%span sformula'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 244 43 244 44
let%span sformula'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 248 17 248 18
let%span sformula'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 224 4 224 34
let%span sformula'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 225 4 225 45
let%span sformula'12 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 226 4 226 36
let%span sformula'13 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 227 15 227 27
let%span sformula'14 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 228 15 228 45
let%span sformula'15 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 229 14 229 47
let%span sformula'16 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 230 14 230 33
let%span sformula'17 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 92 15 92 25
let%span sformula'18 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 93 15 93 27
let%span sformula'19 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 94 15 94 41
let%span sformula'20 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 95 14 95 51
let%span sformula'21 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 203 4 203 45
let%span sformula'22 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 204 4 204 34
let%span sformula'23 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 205 4 205 36
let%span sformula'24 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 206 15 206 45
let%span sformula'25 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 207 15 207 46
let%span sformula'26 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 208 15 208 42
let%span sformula'27 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 209 14 209 33
let%span sformula'28 = "/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 210 14 210 47
let%span slogic_watches = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 76 12 76 63
let%span slogic_watches'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 14 8 19 64

use creusot.int.UInt64
use creusot.prelude.Opaque
use seq.Seq
use creusot.int.UInt8
use mach.int.Int
use creusot.int.UInt32
use creusot.prelude.MutBorrow
use creusot.prelude.Any

type t_NonNull  =
  { t_NonNull__pointer: Opaque.ptr }

type t_Unique  =
  { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }

type t_UsizeNoHighBit  =
  { t_UsizeNoHighBit__0: UInt64.t }

type t_RawVecInner  =
  { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }

type t_RawVec  =
  { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }

type t_Vec  =
  { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }

type t_Formula  =
  { t_Formula__clauses: t_Vec; t_Formula__num_vars: UInt64.t }

predicate unset [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic.rs" 23 0 23 38] (v : UInt8.t) =
  [%#slogic] if UInt8.t'int v >= 2 then true else false

predicate complete_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 35 0 35 52] (a : Seq.seq UInt8.t)

 =
  [%#slogic_assignments'1] forall i : int . 0 <= i /\ i < Seq.length a  -> not unset (Seq.get a i)

type t_RawVec'0  =
  { t_RawVec__inner'0: t_RawVecInner; t_RawVec__qy95zmarker'0: () }

type t_Vec'0  =
  { t_Vec__buf'0: t_RawVec'0; t_Vec__len'0: UInt64.t }

type t_Clause  =
  { t_Clause__deleted: bool; t_Clause__lbd: UInt32.t; t_Clause__search: UInt64.t; t_Clause__lits: t_Vec'0 }

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

function view (self : t_Vec) : Seq.seq t_Clause

axiom view_spec : forall self : t_Vec . [%#svec'2] Seq.length (view self) <= UInt64.t'int (v_MAX : UInt64.t)

type t_Lit  =
  { t_Lit__idx: UInt64.t; t_Lit__polarity: bool }

function view'0 (self : t_Vec'0) : Seq.seq t_Lit

axiom view_spec'0 : forall self : t_Vec'0 . [%#svec'2] Seq.length (view'0 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 16 4 16 33] (self : t_Clause) : Seq.seq t_Lit

 =
  [%#slogic_clause'0] view'0 self.t_Clause__lits

function is_positive_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 30 4 30 42] (self : t_Lit) : bool =
  [%#slogic_lit'5] self.t_Lit__polarity

function index_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 23 4 23 35] (self : t_Lit) : int =
  [%#slogic_lit'1] UInt64.t'int self.t_Lit__idx

predicate sat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 88 4 88 57] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'2] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 1
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 0


predicate sat_inner'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 185 4 185 57] (self : t_Clause) (a : Seq.seq UInt8.t)

 =
  [%#slogic_clause'2] exists i : int . 0 <= i /\ i < Seq.length (view'1 self) /\ sat_inner (Seq.get (view'1 self) i) a

predicate sat_inner'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 121 4 121 57] (self : t_Formula) (a : Seq.seq UInt8.t)

 =
  [%#slogic_formula'6] forall i : int . 0 <= i /\ i < Seq.length (view self.t_Formula__clauses)
   -> sat_inner'0 (Seq.get (view self.t_Formula__clauses) i) a

predicate eventually_sat_complete [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 64 4 64 48] (self : t_Formula)

 =
  [%#slogic_formula'2] exists a2 : Seq.seq UInt8.t . Seq.length a2 = UInt64.t'int self.t_Formula__num_vars
  /\ complete_inner a2 /\ sat_inner'1 self a2

predicate equisat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 72 4 72 44] (self : t_Formula) (o : t_Formula)

 =
  [%#slogic_formula] eventually_sat_complete self = eventually_sat_complete o

predicate inv [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 82 4 82 36] (self : t_Lit) (n : int) =
  [%#slogic_lit] index_logic self < n

predicate vars_in_range_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 23 0 23 55] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'4] forall i : int . 0 <= i /\ i < Seq.length s  -> inv (Seq.get s i) n

predicate no_duplicate_indexes_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 46 0 46 54] (s : Seq.seq t_Lit)

 =
  [%#slogic_clause'5] forall j : int, k : int . 0 <= j /\ j < Seq.length s /\ 0 <= k /\ k < Seq.length s /\ k <> j
   -> index_logic (Seq.get s k) <> index_logic (Seq.get s j)

predicate inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 32 0 32 48] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'3] vars_in_range_inner s n /\ no_duplicate_indexes_inner s

predicate inv'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 226 4 226 36] (self : t_Clause) (n : int) =
  [%#slogic_clause'1] inv_internal (view'1 self) n

predicate inv_mirror [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 86 4 86 35] (self : t_Formula) =
  [%#slogic_formula'3] (forall i : int . 0 <= i /\ i < Seq.length (view self.t_Formula__clauses)
   -> inv'0 (Seq.get (view self.t_Formula__clauses) i) (UInt64.t'int self.t_Formula__num_vars))
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view self.t_Formula__clauses)
   -> Seq.length (view'1 (Seq.get (view self.t_Formula__clauses) i)) >= 1)

type t_FormulaModel  =
  { t_FormulaModel__clauses: Seq.seq t_Clause; t_FormulaModel__num_vars: int }

predicate formula_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 28 0 28 49] (f : t_FormulaModel)

 =
  [%#slogic_formula'4] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> inv'0 (Seq.get f.t_FormulaModel__clauses i) f.t_FormulaModel__num_vars
  /\ Seq.length (view'1 (Seq.get f.t_FormulaModel__clauses i)) > 0

function view'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 21 4 21 33] (self : t_Formula) : t_FormulaModel

 =
  [%#slogic_formula'5] { t_FormulaModel__clauses = view self.t_Formula__clauses;
                         t_FormulaModel__num_vars = UInt64.t'int self.t_Formula__num_vars }

predicate inv'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 80 4 80 28] (self : t_Formula) =
  [%#slogic_formula'1] formula_invariant (view'2 self)

axiom inv_spec : forall self : t_Formula . [%#slogic_formula'0] inv'1 self = inv_mirror self

type t_RawVec'1  =
  { t_RawVec__inner'1: t_RawVecInner; t_RawVec__qy95zmarker'1: () }

type t_Vec'1  =
  { t_Vec__buf'1: t_RawVec'1; t_Vec__len'1: UInt64.t }

type t_Assignments  =
  { t_Assignments__0: t_Vec'1 }

type t_RawVec'2  =
  { t_RawVec__inner'2: t_RawVecInner; t_RawVec__qy95zmarker'2: () }

type t_Vec'2  =
  { t_Vec__buf'2: t_RawVec'2; t_Vec__len'2: UInt64.t }

type t_RawVec'3  =
  { t_RawVec__inner'3: t_RawVecInner; t_RawVec__qy95zmarker'3: () }

type t_Vec'3  =
  { t_Vec__buf'3: t_RawVec'3; t_Vec__len'3: UInt64.t }

type t_Trail  =
  { t_Trail__assignments: t_Assignments;
    t_Trail__lit_to_level: t_Vec'2;
    t_Trail__trail: t_Vec'3;
    t_Trail__curr_i: UInt64.t;
    t_Trail__decisions: t_Vec'2 }

function view'3 (self : t_Vec'1) : Seq.seq UInt8.t

axiom view_spec'1 : forall self : t_Vec'1 . [%#svec'2] Seq.length (view'3 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'4 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 19 4 19 33] (self : t_Assignments) : Seq.seq UInt8.t

 =
  [%#slogic_assignments'0] view'3 self.t_Assignments__0

predicate inv'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 51 4 51 40] (self : t_Assignments) (f : t_Formula)

 =
  [%#slogic_assignments] UInt64.t'int f.t_Formula__num_vars = Seq.length (view'4 self)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'4 self)  -> UInt8.t'int (Seq.get (view'4 self) i) <= 3)

type t_Reason  =
  | C_Decision
  | C_Unit UInt64.t
  | C_Long UInt64.t

type t_Step  =
  { t_Step__lit: t_Lit; t_Step__decision_level: UInt64.t; t_Step__reason: t_Reason }

predicate inv'3 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 13 4 13 40] (self : t_Reason) (f : t_Formula)

 =
  [%#slogic_trail'6] match self with
    | C_Long cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view f.t_Formula__clauses)
    /\ Seq.length (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref))) > 1
    | C_Unit cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view f.t_Formula__clauses)
    /\ Seq.length (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref))) = 1
    | _ -> true
    end

predicate trail_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 103 0 103 60] (trail : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'0] forall i : int . 0 <= i /\ i < Seq.length trail
   -> inv (Seq.get trail i).t_Step__lit (UInt64.t'int f.t_Formula__num_vars) /\ inv'3 (Seq.get trail i).t_Step__reason f

function view'5 (self : t_Vec'3) : Seq.seq t_Step

axiom view_spec'2 : forall self : t_Vec'3 . [%#svec'2] Seq.length (view'5 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'6 (self : t_Vec'2) : Seq.seq UInt64.t

axiom view_spec'3 : forall self : t_Vec'2 . [%#svec'2] Seq.length (view'6 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate lit_idx_in [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 73 4 73 46] (self : t_Lit) (c : t_Clause)
 =
  [%#slogic_lit'0] exists i : int . 0 <= i
  /\ i < Seq.length (view'1 c) /\ index_logic (Seq.get (view'1 c) i) = index_logic self

predicate lit_not_in_less_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 90 0 90 62] (t : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'1] forall i : int . 0 <= i /\ i < Seq.length t
   -> (forall j : int . 0 <= j /\ j < i
   -> match (Seq.get t j).t_Step__reason with
    | C_Long cref -> not lit_idx_in (Seq.get t i).t_Step__lit (Seq.get (view f.t_Formula__clauses) (UInt64.t'int cref))
    | _ -> true
    end)

predicate lit_is_unique_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 144 0 144 52] (trail : Seq.seq t_Step)

 =
  [%#slogic_trail'2] forall i : int . 0 <= i /\ i < Seq.length trail
   -> (forall j : int . 0 <= j /\ j < i
   -> index_logic (Seq.get trail j).t_Step__lit <> index_logic (Seq.get trail i).t_Step__lit)

predicate unsat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 99 4 99 59] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'4] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 0
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 1


predicate clause_post_with_regards_to_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 128 0 128 90] (c : t_Clause) (a : Seq.seq UInt8.t) (j : int)

 =
  [%#slogic_trail'7] index_logic (Seq.get (view'1 c) 0) = j
  /\ sat_inner (Seq.get (view'1 c) 0) a
  /\ (forall i : int . 1 <= i /\ i < Seq.length (view'1 c)  -> unsat_inner (Seq.get (view'1 c) i) a)

predicate long_are_post_unit_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 166 0 166 92] (trail : Seq.seq t_Step) (f : t_Formula) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'3] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Long k -> clause_post_with_regards_to_inner (Seq.get (view f.t_Formula__clauses) (UInt64.t'int k)) a (index_logic (Seq.get trail j).t_Step__lit)
    | _ -> true
    end

predicate trail_entries_are_assigned_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 113 0 113 84] (t : Seq.seq t_Step) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'4] forall j : int . 0 <= j /\ j < Seq.length t  -> sat_inner (Seq.get t j).t_Step__lit a

type t_Ordering  =
  | C_Less
  | C_Equal
  | C_Greater

function cmp_log (self : UInt64.t) (o : UInt64.t) : t_Ordering =
  [%#sord'12] if UInt64.lt self o then C_Less else if self = o then C_Equal else C_Greater

function eq_cmp (x : UInt64.t) (y : UInt64.t) : ()

axiom eq_cmp_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'11] (x = y) = (cmp_log x y = C_Equal)

function antisym2 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym2_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'9] cmp_log x y = C_Greater)
 -> ([%#sord'10] cmp_log y x = C_Less)

function antisym1 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym1_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'7] cmp_log x y = C_Less)
 -> ([%#sord'8] cmp_log y x = C_Greater)

function trans (x : UInt64.t) (y : UInt64.t) (z : UInt64.t) (o : t_Ordering) : ()

axiom trans_spec : forall x : UInt64.t, y : UInt64.t, z : UInt64.t, o : t_Ordering . ([%#sord'4] cmp_log x y = o)
 -> ([%#sord'5] cmp_log y z = o)  -> ([%#sord'6] cmp_log x z = o)

function refl (x : UInt64.t) : ()

axiom refl_spec : forall x : UInt64.t . [%#sord'3] cmp_log x x = C_Equal

function cmp_gt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_gt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'2] UInt64.gt x y = (cmp_log x y = C_Greater)

function cmp_ge_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_ge_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'1] UInt64.ge x y = (cmp_log x y <> C_Less)

function cmp_lt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_lt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'0] UInt64.lt x y = (cmp_log x y = C_Less)

function cmp_le_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_le_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord] UInt64.le x y = (cmp_log x y <> C_Greater)

predicate sorted_range [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 21 0 21 58] (s : Seq.seq UInt64.t) (l : int) (u : int)

 =
  [%#slogic_util'0] forall i : int, j : int . l <= i /\ i < j /\ j < u  -> UInt64.le (Seq.get s i) (Seq.get s j)

predicate sorted [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 27 0 27 36] (s : Seq.seq UInt64.t) =
  [%#slogic_util] sorted_range s 0 (Seq.length s)

predicate sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 116 4 116 44] (self : t_Lit) (a : t_Assignments)
 =
  [%#slogic_lit'3] sat_inner self (view'4 a)

predicate unit_are_sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 178 0 178 73] (trail : Seq.seq t_Step) (f : t_Formula) (a : t_Assignments)

 =
  [%#slogic_trail'5] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Unit k -> (Seq.get trail j).t_Step__lit
    = Seq.get (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int k))) 0
    /\ sat (Seq.get (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int k))) 0) a
    | _ -> true
    end

predicate inv'4 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 55 4 55 40] (self : t_Trail) (f : t_Formula)
 =
  [%#slogic_trail] inv'2 self.t_Trail__assignments f
  /\ trail_invariant (view'5 self.t_Trail__trail) f
  /\ Seq.length (view'6 self.t_Trail__lit_to_level) = UInt64.t'int f.t_Formula__num_vars
  /\ lit_not_in_less_inner (view'5 self.t_Trail__trail) f
  /\ lit_is_unique_inner (view'5 self.t_Trail__trail)
  /\ long_are_post_unit_inner (view'5 self.t_Trail__trail) f (view'4 self.t_Trail__assignments)
  /\ trail_entries_are_assigned_inner (view'5 self.t_Trail__trail) (view'4 self.t_Trail__assignments)
  /\ sorted (view'6 self.t_Trail__decisions)
  /\ unit_are_sat (view'5 self.t_Trail__trail) f self.t_Trail__assignments
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'6 self.t_Trail__decisions)
   -> UInt64.t'int (Seq.get (view'6 self.t_Trail__decisions) i) <= Seq.length (view'5 self.t_Trail__trail))

type t_RawVec'4  =
  { t_RawVec__inner'4: t_RawVecInner; t_RawVec__qy95zmarker'4: () }

type t_Vec'4  =
  { t_Vec__buf'4: t_RawVec'4; t_Vec__len'4: UInt64.t }

type t_Watches  =
  { t_Watches__watches: t_Vec'4 }

type t_RawVec'5  =
  { t_RawVec__inner'5: t_RawVecInner; t_RawVec__qy95zmarker'5: () }

type t_Vec'5  =
  { t_Vec__buf'5: t_RawVec'5; t_Vec__len'5: UInt64.t }

type t_Watcher  =
  { t_Watcher__cref: UInt64.t; t_Watcher__blocker: t_Lit }

function view'7 (self : t_Vec'5) : Seq.seq t_Watcher

axiom view_spec'4 : forall self : t_Vec'5 . [%#svec'2] Seq.length (view'7 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate watches_inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 12 0 12 77] (w : Seq.seq t_Vec'5) (n : int) (f : t_Formula)

 =
  [%#slogic_watches'0] 2 * n = Seq.length w
  /\ (forall i : int . 0 <= i /\ i < Seq.length w
   -> (forall j : int . 0 <= j /\ j < Seq.length (view'7 (Seq.get w i))
   -> UInt64.t'int (Seq.get (view'7 (Seq.get w i)) j).t_Watcher__cref < Seq.length (view f.t_Formula__clauses)
  /\ Seq.length (view'1 (Seq.get (view f.t_Formula__clauses) (UInt64.t'int (Seq.get (view'7 (Seq.get w i)) j).t_Watcher__cref)))
  > 1
  /\ index_logic (Seq.get (view'7 (Seq.get w i)) j).t_Watcher__blocker < UInt64.t'int f.t_Formula__num_vars))

function view'8 (self : t_Vec'4) : Seq.seq t_Vec'5

axiom view_spec'5 : forall self : t_Vec'4 . [%#svec'2] Seq.length (view'8 self) <= UInt64.t'int (v_MAX : UInt64.t)

predicate inv'5 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 74 4 74 40] (self : t_Watches) (f : t_Formula)

 =
  [%#slogic_watches] watches_inv_internal (view'8 self.t_Watches__watches) (UInt64.t'int f.t_Formula__num_vars) f

function view'9 (self : t_Vec) : Seq.seq t_Clause =
  [%#smodel] view self

let rec len (self_:t_Vec) (return'  (x:UInt64.t))= any
  [ return''0 (result:UInt64.t)-> {[%#svec] UInt64.t'int result = Seq.length (view'9 self_)} (! return' {result}) ]


predicate in_bounds [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Clause) =
  [%#sslice] UInt64.t'int self < Seq.length seq

predicate has_value [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Clause) (out : t_Clause) =
  [%#sslice'0] Seq.get seq (UInt64.t'int self) = out

let rec index (self_:t_Vec) (ix:UInt64.t) (return'  (x:t_Clause))= {[@expl:index requires] [%#svec'0] in_bounds ix (view'9 self_)}
  any [ return''0 (result:t_Clause)-> {[%#svec'1] has_value ix (view'9 self_) result} (! return' {result}) ] 

function view'10 (self : t_Clause) : Seq.seq t_Lit =
  [%#smodel] view'1 self

let rec len'0 (self:t_Clause) (return'  (x:UInt64.t))= any
  [ return''0 (result:UInt64.t)-> {[%#sclause] UInt64.t'int result = Seq.length (view'10 self)} (! return' {result}) ]


predicate sat'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 194 4 194 44] (self : t_Clause) (a : t_Assignments)

 =
  [%#slogic_clause] sat_inner'0 self (view'4 a)

let rec is_clause_sat (self:t_Formula) (idx:UInt64.t) (a:t_Assignments) (return'  (x:bool))= {[@expl:is_clause_sat requires #0] [%#sformula'17] inv'1 self}
  {[@expl:is_clause_sat requires #1] [%#sformula'18] inv'2 a self}
  {[@expl:is_clause_sat requires #2] [%#sformula'19] UInt64.t'int idx < Seq.length (view self.t_Formula__clauses)}
  any
  [ return''0 (result:bool)-> {[%#sformula'20] result
    = sat'0 (Seq.get (view self.t_Formula__clauses) (UInt64.t'int idx)) a}
    (! return' {result}) ]


constant v_MAX'0 : UInt64.t = (18446744073709551615 : UInt64.t)

let rec delete_clause (self:MutBorrow.t t_Formula) (cref:UInt64.t) (watches:MutBorrow.t t_Watches) (t:t_Trail) (return'  (x:()))= {[@expl:delete_clause requires #0] [%#sformula'21] inv'5 watches.current self.current}
  {[@expl:delete_clause requires #1] [%#sformula'22] inv'1 self.current}
  {[@expl:delete_clause requires #2] [%#sformula'23] inv'4 t self.current}
  {[@expl:delete_clause requires #3] [%#sformula'24] UInt64.t'int (self.current).t_Formula__num_vars
  < Int.div (UInt64.t'int v_MAX'0) 2}
  {[@expl:delete_clause requires #4] [%#sformula'25] Seq.length (view'1 (Seq.get (view (self.current).t_Formula__clauses) (UInt64.t'int cref)))
  > 1}
  {[@expl:delete_clause requires #5] [%#sformula'26] UInt64.t'int cref
  < Seq.length (view (self.current).t_Formula__clauses)}
  any
  [ return''0 (result:())-> {[%#sformula'21] inv'5 watches.final self.final}
    {[%#sformula'22] inv'1 self.final}
    {[%#sformula'23] inv'4 t self.final}
    {[%#sformula'27] equisat self.current self.final}
    {[%#sformula'28] (self.current).t_Formula__num_vars = (self.final).t_Formula__num_vars}
    (! return' {result}) ]


predicate resolve (self : MutBorrow.t t_Watches) =
  [%#sresolve] self.final = self.current

predicate resolve'0 (_0 : MutBorrow.t t_Watches) =
  resolve _0

predicate resolve'1 (self : MutBorrow.t t_Formula) =
  [%#sresolve] self.final = self.current

predicate resolve'2 (_0 : MutBorrow.t t_Formula) =
  resolve'1 _0

meta "compute_max_steps" 1000000

let rec delete_clauses[#"/Users/sarekhs/CreuSAT/CreuSAT/src/formula.rs" 231 4 231 70] (self:MutBorrow.t t_Formula) (watches:MutBorrow.t t_Watches) (t:t_Trail) (return'  (x:()))= {[@expl:delete_clauses requires #0] [%#sformula'10] inv'1 self.current}
  {[@expl:delete_clauses requires #1] [%#sformula'11] inv'5 watches.current self.current}
  {[@expl:delete_clauses requires #2] [%#sformula'12] inv'4 t self.current}
  {[@expl:delete_clauses requires #3] [%#sformula'13] inv'4 t self.current}
  {[@expl:delete_clauses requires #4] [%#sformula'14] UInt64.t'int (self.current).t_Formula__num_vars
  < Int.div (UInt64.t'int v_MAX'0) 2}
  (! bb0
  [ bb0 = s0 [ s0 =  [ &old_f <- [%#sformula] self'0 ] s1 | s1 = bb1 ] 
  | bb1 = s0 [ s0 =  [ &old_w <- [%#sformula'0] watches'0 ] s1 | s1 = bb2 ] 
  | bb2 = s0
    [ s0 =  [ &i <- [%#sformula'1] (0 : UInt64.t) ] s1
    | s1 =  [ &old_3_0 <- self'0 ] s2
    | s2 =  [ &old_3_1 <- watches'0 ] s3
    | s3 = bb3 ]
  
  | bb3 = bb3'0
    [ bb3'0 = {[@expl:mut invariant] old_3_1.final = watches'0.final}
      {[@expl:mut invariant] old_3_0.final = self'0.final}
      {[@expl:loop invariant #0] [%#sformula'6] inv'5 watches'0.current self'0.current}
      {[@expl:loop invariant #1] [%#sformula'5] inv'4 t'0 self'0.current}
      {[@expl:loop invariant #2] [%#sformula'4] inv'1 self'0.current}
      {[@expl:loop invariant #3] [%#sformula'3] UInt64.t'int (self'0.current).t_Formula__num_vars
      = UInt64.t'int (old_f.current).t_Formula__num_vars}
      {[@expl:loop invariant #4] [%#sformula'2] equisat self'0.current old_f.current}
      (! s0) [ s0 = bb4 ] 
      [ bb4 = s0
        [ s0 = len {(self'0.current).t_Formula__clauses} (fun (_ret:UInt64.t) ->  [ &_28 <- _ret ] s1) | s1 = bb5 ]
      
      | bb5 = s0
        [ s0 =  [ &_26 <- UInt64.lt i _28 ] s1 | s1 = any [ br0 -> {_26 = false} (! bb21) | br1 -> {_26} (! bb6) ]  ]
      
      | bb6 = s0
        [ s0 = index {(self'0.current).t_Formula__clauses} {i} (fun (_ret:t_Clause) ->  [ &_32 <- _ret ] s1)
        | s1 = bb7 ]
      
      | bb7 = any [ br0 -> {_32.t_Clause__deleted = false} (! bb8) | br1 -> {_32.t_Clause__deleted} (! bb19) ] 
      | bb19 = bb20
      | bb8 = s0
        [ s0 = {[@expl:assertion] [%#sformula'7] inv'2 t'0.t_Trail__assignments self'0.current} s1
        | s1 = index {(self'0.current).t_Formula__clauses} {i} (fun (_ret:t_Clause) ->  [ &_40 <- _ret ] s2)
        | s2 = bb9 ]
      
      | bb9 = s0 [ s0 = len'0 {_40} (fun (_ret:UInt64.t) ->  [ &_38 <- _ret ] s1) | s1 = bb10 ] 
      | bb10 = s0
        [ s0 =  [ &_37 <- UInt64.gt _38 ([%#sformula'8] (1 : UInt64.t)) ] s1
        | s1 = any [ br0 -> {_37 = false} (! bb16) | br1 -> {_37} (! bb11) ]  ]
      
      | bb11 = s0
        [ s0 =  [ &_47 <- t'0.t_Trail__assignments ] s1
        | s1 = is_clause_sat {self'0.current} {i} {_47} (fun (_ret:bool) ->  [ &_43 <- _ret ] s2)
        | s2 = bb12 ]
      
      | bb12 = any [ br0 -> {_43 = false} (! bb15) | br1 -> {_43} (! bb13) ] 
      | bb13 = s0
        [ s0 = MutBorrow.borrow_mut <t_Formula> {self'0.current}
            (fun (_ret:MutBorrow.t t_Formula) ->
               [ &_49 <- _ret ] 
               [ &self'0 <- { self'0 with current = _ret.final } ] 
              s1)
        | s1 = MutBorrow.borrow_mut <t_Watches> {watches'0.current}
            (fun (_ret:MutBorrow.t t_Watches) ->
               [ &_51 <- _ret ] 
               [ &watches'0 <- { watches'0 with current = _ret.final } ] 
              s2)
        | s2 = delete_clause {_49} {i} {_51} {t'0} (fun (_ret:()) ->  [ &_48 <- _ret ] s3)
        | s3 = bb14 ]
      
      | bb14 = bb18
      | bb15 = bb17
      | bb16 = bb17
      | bb17 = bb18
      | bb18 = bb20
      | bb20 = s0
        [ s0 = UInt64.add {i} {[%#sformula'9] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &i <- _ret ] s1) | s1 = bb3'0 ]
       ]
     ]
  
  | bb21 = s0 [ s0 = -{resolve'0 watches'0}- s1 | s1 = -{resolve'2 self'0}- s2 | s2 = return''0 {_0} ]  ]
  )
  [ & _0 : () = Any.any_l ()
  | & self'0 : MutBorrow.t t_Formula = self
  | & watches'0 : MutBorrow.t t_Watches = watches
  | & t'0 : t_Trail = t
  | & old_f : MutBorrow.t t_Formula = Any.any_l ()
  | & old_w : MutBorrow.t t_Watches = Any.any_l ()
  | & i : UInt64.t = Any.any_l ()
  | & _26 : bool = Any.any_l ()
  | & _28 : UInt64.t = Any.any_l ()
  | & _32 : t_Clause = Any.any_l ()
  | & _37 : bool = Any.any_l ()
  | & _38 : UInt64.t = Any.any_l ()
  | & _40 : t_Clause = Any.any_l ()
  | & _43 : bool = Any.any_l ()
  | & _47 : t_Assignments = Any.any_l ()
  | & _48 : () = Any.any_l ()
  | & _49 : MutBorrow.t t_Formula = Any.any_l ()
  | & _51 : MutBorrow.t t_Watches = Any.any_l ()
  | & old_3_0 : MutBorrow.t t_Formula = Any.any_l ()
  | & old_3_1 : MutBorrow.t t_Watches = Any.any_l () ]
  
  [ return''0 (result:())-> {[@expl:delete_clauses ensures #0] [%#sformula'10] inv'1 self.final}
    {[@expl:delete_clauses ensures #1] [%#sformula'11] inv'5 watches.final self.final}
    {[@expl:delete_clauses ensures #2] [%#sformula'12] inv'4 t self.final}
    {[@expl:delete_clauses ensures #3] [%#sformula'15] (self.current).t_Formula__num_vars
    = (self.final).t_Formula__num_vars}
    {[@expl:delete_clauses ensures #4] [%#sformula'16] equisat self.current self.final}
    (! return' {result}) ]
  
