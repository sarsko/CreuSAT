(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 22 4 22 24 *)

(* <decision::Node as std::default::Default> *)

let%span sdecision = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 23 21 23 31
let%span sdecision'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 23 39 23 49
let%span sdecision'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 23 55 23 56
let%span sdecision'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 19 14 19 41
let%span sdecision'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 20 14 20 41
let%span sdecision'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 21 14 21 31

use creusot.int.UInt64
use creusot.prelude.Any

type t_Node  =
  { t_Node__next: UInt64.t; t_Node__prev: UInt64.t; t_Node__ts: UInt64.t }

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

meta "compute_max_steps" 1000000

let rec default[#"/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 22 4 22 24] (return'  (x:t_Node))= (! bb0
  [ bb0 = s0
    [ s0 = 
      [ &_0 <- { t_Node__next = ([%#sdecision] (18446744073709551615 : UInt64.t));
                 t_Node__prev = ([%#sdecision'0] (18446744073709551615 : UInt64.t));
                 t_Node__ts = ([%#sdecision'1] (0 : UInt64.t)) } ]
      
      s1
    | s1 = return''0 {_0} ]
   ]
  ) [ & _0 : t_Node = Any.any_l () ] 
  [ return''0 (result:t_Node)-> {[@expl:default ensures #0] [%#sdecision'2] UInt64.t'int result.t_Node__next
    = UInt64.t'int (v_MAX : UInt64.t)}
    {[@expl:default ensures #1] [%#sdecision'3] UInt64.t'int result.t_Node__prev = UInt64.t'int (v_MAX : UInt64.t)}
    {[@expl:default ensures #2] [%#sdecision'4] UInt64.t'int result.t_Node__ts = 0}
    (! return' {result}) ]
  
