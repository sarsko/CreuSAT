(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 51 4 51 76 *)

(* decision::Decisions *)

let%span svec = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 186 22 186 41
let%span svec'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 187 22 187 76
let%span svec'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 21 14 21 41
let%span svec'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 168 27 168 46
let%span svec'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 169 26 169 54
let%span svec'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 158 27 158 46
let%span svec'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 159 26 159 54
let%span svec'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 160 26 160 57
let%span svec'7 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 161 26 161 62
let%span svec'8 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 162 26 162 55
let%span smodel = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 54 8 54 22
let%span smodel'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 72 8 72 22
let%span sslice = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 123 20 123 37
let%span sslice'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 130 20 130 37
let%span sslice'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 137 20 137 94
let%span sresolve = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/resolve.rs" 54 20 54 34
let%span slogic_lit = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 83 20 83 42
let%span slogic_lit'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 24 20 24 29
let%span slogic_formula = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 79 14 79 41
let%span slogic_formula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 81 20 81 44
let%span slogic_formula'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 88 12 92 45
let%span slogic_formula'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 30 8 31 69
let%span slogic_formula'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 22 8 22 85
let%span slogic_clause = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 227 20 227 42
let%span slogic_clause'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 14 4 14 12
let%span slogic_clause'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 33 4 33 62
let%span slogic_clause'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 25 8 26 23
let%span slogic_clause'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 48 8 49 92
let%span sindex = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ops/index.rs" 29 8 29 31
let%span sdecision = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 53 27 53 28
let%span sdecision'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 54 30 54 31
let%span sdecision'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 57 20 59 97
let%span sdecision'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 56 20 56 39
let%span sdecision'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 55 20 55 53
let%span sdecision'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 62 20 62 21
let%span sdecision'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 63 32 63 33
let%span sdecision'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 64 52 64 53
let%span sdecision'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 66 42 66 49
let%span sdecision'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 68 38 68 45
let%span sdecision'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 70 40 70 41
let%span sdecision'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 71 38 71 45
let%span sdecision'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 72 52 72 53
let%span sdecision'12 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 74 52 74 53
let%span sdecision'13 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 75 52 75 53
let%span sdecision'14 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 78 17 78 18
let%span sdecision'15 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 80 70 80 71
let%span sdecision'16 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 45 15 45 22
let%span sdecision'17 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 46 15 46 61
let%span sdecision'18 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 47 15 49 44
let%span sdecision'19 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 50 14 50 37
let%span sdecision'20 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 19 14 19 41
let%span sdecision'21 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 20 14 20 41
let%span sdecision'22 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 21 14 21 31
let%span slogic_decision = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_decision.rs" 12 12 17 97

use creusot.int.UInt64
use creusot.prelude.Opaque
use seq.Seq
use mach.int.Int
use creusot.prelude.MutBorrow
use creusot.int.UInt32
use creusot.prelude.Any

type t_Node  =
  { t_Node__next: UInt64.t; t_Node__prev: UInt64.t; t_Node__ts: UInt64.t }

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

let rec default (return'  (x:t_Node))= any
  [ return''0 (result:t_Node)-> {[%#sdecision'20] UInt64.t'int result.t_Node__next = UInt64.t'int (v_MAX : UInt64.t)}
    {[%#sdecision'21] UInt64.t'int result.t_Node__prev = UInt64.t'int (v_MAX : UInt64.t)}
    {[%#sdecision'22] UInt64.t'int result.t_Node__ts = 0}
    (! return' {result}) ]


type t_NonNull  =
  { t_NonNull__pointer: Opaque.ptr }

type t_Unique  =
  { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }

type t_UsizeNoHighBit  =
  { t_UsizeNoHighBit__0: UInt64.t }

type t_RawVecInner  =
  { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }

type t_RawVec  =
  { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }

type t_Vec  =
  { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }

type t_Formula  =
  { t_Formula__clauses: t_Vec; t_Formula__num_vars: UInt64.t }

type t_RawVec'0  =
  { t_RawVec__inner'0: t_RawVecInner; t_RawVec__qy95zmarker'0: () }

type t_Vec'0  =
  { t_Vec__buf'0: t_RawVec'0; t_Vec__len'0: UInt64.t }

function view (self : t_Vec'0) : Seq.seq t_Node

axiom view_spec : forall self : t_Vec'0 . [%#svec'1] Seq.length (view self) <= UInt64.t'int (v_MAX : UInt64.t)

function index_logic [@inline:trivial] (self : t_Vec'0) (ix : int) : t_Node =
  [%#sindex] Seq.get (view self) ix

let rec from_elem (elem:t_Node) (n:UInt64.t) (return'  (x:t_Vec'0))= any
  [ return''0 (result:t_Vec'0)-> {[%#svec] Seq.length (view result) = UInt64.t'int n}
    {[%#svec'0] forall i : int . 0 <= i /\ i < UInt64.t'int n  -> index_logic result i = elem}
    (! return' {result}) ]


type t_RawVec'1  =
  { t_RawVec__inner'1: t_RawVecInner; t_RawVec__qy95zmarker'1: () }

type t_Vec'1  =
  { t_Vec__buf'1: t_RawVec'1; t_Vec__len'1: UInt64.t }

predicate in_bounds [@inline:trivial] (self : UInt64.t) (seq : Seq.seq UInt64.t) =
  [%#sslice] UInt64.t'int self < Seq.length seq

function view'0 (self : t_Vec'1) : Seq.seq UInt64.t

axiom view_spec'0 : forall self : t_Vec'1 . [%#svec'1] Seq.length (view'0 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'1 (self : t_Vec'1) : Seq.seq UInt64.t =
  [%#smodel] view'0 self

predicate has_value [@inline:trivial] (self : UInt64.t) (seq : Seq.seq UInt64.t) (out : UInt64.t) =
  [%#sslice'0] Seq.get seq (UInt64.t'int self) = out

let rec index (self_:t_Vec'1) (ix:UInt64.t) (return'  (x:UInt64.t))= {[@expl:index requires] [%#svec'2] in_bounds ix (view'1 self_)}
  any [ return''0 (result:UInt64.t)-> {[%#svec'3] has_value ix (view'1 self_) result} (! return' {result}) ] 

predicate in_bounds'0 [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Node) =
  [%#sslice] UInt64.t'int self < Seq.length seq

function view'2 (self : MutBorrow.t t_Vec'0) : Seq.seq t_Node =
  [%#smodel'0] view self.current

predicate has_value'0 [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Node) (out : t_Node) =
  [%#sslice'0] Seq.get seq (UInt64.t'int self) = out

predicate resolve_elswhere [@inline:trivial] (self : UInt64.t) (old' : Seq.seq t_Node) (fin : Seq.seq t_Node) =
  [%#sslice'1] forall i : int . 0 <= i /\ i <> UInt64.t'int self /\ i < Seq.length old'
   -> Seq.get old' i = Seq.get fin i

let rec index_mut (self_:MutBorrow.t t_Vec'0) (ix:UInt64.t) (return'  (x:MutBorrow.t t_Node))= {[@expl:index_mut requires] [%#svec'4] in_bounds'0 ix (view'2 self_)}
  any
  [ return''0 (result:MutBorrow.t t_Node)-> {[%#svec'5] has_value'0 ix (view'2 self_) result.current}
    {[%#svec'6] has_value'0 ix (view self_.final) result.final}
    {[%#svec'7] resolve_elswhere ix (view'2 self_) (view self_.final)}
    {[%#svec'8] Seq.length (view self_.final) = Seq.length (view'2 self_)}
    (! return' {result}) ]


predicate resolve (self : MutBorrow.t t_Node) =
  [%#sresolve] self.final = self.current

predicate resolve'0 (_0 : MutBorrow.t t_Node) =
  resolve _0

type t_Decisions  =
  { t_Decisions__linked_list: t_Vec'0;
    t_Decisions__timestamp: UInt64.t;
    t_Decisions__start: UInt64.t;
    t_Decisions__search: UInt64.t }

type t_RawVec'2  =
  { t_RawVec__inner'2: t_RawVecInner; t_RawVec__qy95zmarker'2: () }

type t_Vec'2  =
  { t_Vec__buf'2: t_RawVec'2; t_Vec__len'2: UInt64.t }

type t_Clause  =
  { t_Clause__deleted: bool; t_Clause__lbd: UInt32.t; t_Clause__search: UInt64.t; t_Clause__lits: t_Vec'2 }

function view'3 (self : t_Vec) : Seq.seq t_Clause

axiom view_spec'1 : forall self : t_Vec . [%#svec'1] Seq.length (view'3 self) <= UInt64.t'int (v_MAX : UInt64.t)

type t_Lit  =
  { t_Lit__idx: UInt64.t; t_Lit__polarity: bool }

function index_logic'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 23 4 23 35] (self : t_Lit) : int =
  [%#slogic_lit'0] UInt64.t'int self.t_Lit__idx

predicate inv [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 82 4 82 36] (self : t_Lit) (n : int) =
  [%#slogic_lit] index_logic'0 self < n

predicate vars_in_range_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 23 0 23 55] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'2] forall i : int . 0 <= i /\ i < Seq.length s  -> inv (Seq.get s i) n

predicate no_duplicate_indexes_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 46 0 46 54] (s : Seq.seq t_Lit)

 =
  [%#slogic_clause'3] forall j : int, k : int . 0 <= j /\ j < Seq.length s /\ 0 <= k /\ k < Seq.length s /\ k <> j
   -> index_logic'0 (Seq.get s k) <> index_logic'0 (Seq.get s j)

predicate inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 32 0 32 48] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'1] vars_in_range_inner s n /\ no_duplicate_indexes_inner s

function view'4 (self : t_Vec'2) : Seq.seq t_Lit

axiom view_spec'2 : forall self : t_Vec'2 . [%#svec'1] Seq.length (view'4 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'5 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 16 4 16 33] (self : t_Clause) : Seq.seq t_Lit

 =
  [%#slogic_clause'0] view'4 self.t_Clause__lits

predicate inv'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 226 4 226 36] (self : t_Clause) (n : int) =
  [%#slogic_clause] inv_internal (view'5 self) n

predicate inv_mirror [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 86 4 86 35] (self : t_Formula) =
  [%#slogic_formula'1] (forall i : int . 0 <= i /\ i < Seq.length (view'3 self.t_Formula__clauses)
   -> inv'0 (Seq.get (view'3 self.t_Formula__clauses) i) (UInt64.t'int self.t_Formula__num_vars))
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'3 self.t_Formula__clauses)
   -> Seq.length (view'5 (Seq.get (view'3 self.t_Formula__clauses) i)) >= 1)

type t_FormulaModel  =
  { t_FormulaModel__clauses: Seq.seq t_Clause; t_FormulaModel__num_vars: int }

predicate formula_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 28 0 28 49] (f : t_FormulaModel)

 =
  [%#slogic_formula'2] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> inv'0 (Seq.get f.t_FormulaModel__clauses i) f.t_FormulaModel__num_vars
  /\ Seq.length (view'5 (Seq.get f.t_FormulaModel__clauses i)) > 0

function view'6 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 21 4 21 33] (self : t_Formula) : t_FormulaModel

 =
  [%#slogic_formula'3] { t_FormulaModel__clauses = view'3 self.t_Formula__clauses;
                         t_FormulaModel__num_vars = UInt64.t'int self.t_Formula__num_vars }

predicate inv'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 80 4 80 28] (self : t_Formula) =
  [%#slogic_formula'0] formula_invariant (view'6 self)

axiom inv_spec : forall self : t_Formula . [%#slogic_formula] inv'1 self = inv_mirror self

constant v_MAX'0 : UInt64.t = (18446744073709551615 : UInt64.t)

predicate inv'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_decision.rs" 10 4 10 36] (self : t_Decisions) (n : int)

 =
  [%#slogic_decision] Seq.length (view self.t_Decisions__linked_list) = n
  /\ (UInt64.t'int self.t_Decisions__search < Seq.length (view self.t_Decisions__linked_list)
  \/ UInt64.t'int self.t_Decisions__search = UInt64.t'int v_MAX'0)
  /\ UInt64.t'int self.t_Decisions__start < Seq.length (view self.t_Decisions__linked_list)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view self.t_Decisions__linked_list)
   -> (UInt64.t'int (Seq.get (view self.t_Decisions__linked_list) i).t_Node__next = UInt64.t'int v_MAX'0
  \/ UInt64.t'int (Seq.get (view self.t_Decisions__linked_list) i).t_Node__next < n)
  /\ (UInt64.t'int (Seq.get (view self.t_Decisions__linked_list) i).t_Node__prev = UInt64.t'int v_MAX'0
  \/ UInt64.t'int (Seq.get (view self.t_Decisions__linked_list) i).t_Node__prev < n))

meta "compute_max_steps" 1000000

let rec make_linked_list[#"/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 51 4 51 76] (f:t_Formula) (lit_order:t_Vec'1) (return'  (x:t_Decisions))= {[@expl:make_linked_list requires #0] [%#sdecision'16] inv'1 f}
  {[@expl:make_linked_list requires #1] [%#sdecision'17] 0 < UInt64.t'int f.t_Formula__num_vars
  /\ UInt64.t'int f.t_Formula__num_vars < Int.div (UInt64.t'int (v_MAX : UInt64.t)) 2}
  {[@expl:make_linked_list requires #2] [%#sdecision'18] Seq.length (view'0 lit_order)
  = UInt64.t'int f.t_Formula__num_vars
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'0 lit_order)
   -> UInt64.t'int (Seq.get (view'0 lit_order) i) < UInt64.t'int f.t_Formula__num_vars)}
  (! bb0
  [ bb0 = bb1
  | bb1 = s0 [ s0 = default (fun (_ret:t_Node) ->  [ &_8 <- _ret ] s1) | s1 = bb2 ] 
  | bb2 = s0
    [ s0 = from_elem {_8} {f'0.t_Formula__num_vars} (fun (_ret:t_Vec'0) ->  [ &linked_list <- _ret ] s1) | s1 = bb3 ]
  
  | bb3 = s0
    [ s0 =  [ &i <- [%#sdecision] (0 : UInt64.t) ] s1
    | s1 =  [ &head <- [%#sdecision'0] (0 : UInt64.t) ] s2
    | s2 = bb4 ]
  
  | bb4 = bb4'0
    [ bb4'0 = {[@expl:loop invariant #0] [%#sdecision'3] Seq.length (view linked_list)
      = UInt64.t'int f'0.t_Formula__num_vars}
      {[@expl:loop invariant #1] [%#sdecision'2] UInt64.t'int head < UInt64.t'int f'0.t_Formula__num_vars}
      {[@expl:loop invariant #2] [%#sdecision'1] forall j'0 : int . 0 <= j'0
      /\ j'0 < UInt64.t'int f'0.t_Formula__num_vars
       -> (UInt64.t'int (Seq.get (view linked_list) j'0).t_Node__next = UInt64.t'int (v_MAX : UInt64.t)
      \/ UInt64.t'int (Seq.get (view linked_list) j'0).t_Node__next < UInt64.t'int f'0.t_Formula__num_vars)
      /\ (UInt64.t'int (Seq.get (view linked_list) j'0).t_Node__prev = UInt64.t'int (v_MAX : UInt64.t)
      \/ UInt64.t'int (Seq.get (view linked_list) j'0).t_Node__prev < UInt64.t'int f'0.t_Formula__num_vars)}
      (! s0) [ s0 = bb5 ] 
      [ bb5 = bb6
      | bb6 = bb7
      | bb7 = s0
        [ s0 =  [ &_18 <- UInt64.lt i f'0.t_Formula__num_vars ] s1
        | s1 = any [ br0 -> {_18 = false} (! bb31) | br1 -> {_18} (! bb8) ]  ]
      
      | bb8 = s0 [ s0 = index {lit_order'0} {i} (fun (_ret:UInt64.t) ->  [ &_22 <- _ret ] s1) | s1 = bb9 ] 
      | bb9 = s0
        [ s0 =  [ &j <- _22 ] s1
        | s1 =  [ &_26 <- i = ([%#sdecision'4] (0 : UInt64.t)) ] s2
        | s2 = any [ br0 -> {_26 = false} (! bb18) | br1 -> {_26} (! bb10) ]  ]
      
      | bb10 = s0
        [ s0 =  [ &_29 <- UInt64.gt f'0.t_Formula__num_vars ([%#sdecision'5] (1 : UInt64.t)) ] s1
        | s1 = any [ br0 -> {_29 = false} (! bb14) | br1 -> {_29} (! bb11) ]  ]
      
      | bb11 = s0
        [ s0 = index {lit_order'0} {[%#sdecision'6] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &_32 <- _ret ] s1)
        | s1 = bb12 ]
      
      | bb12 = s0
        [ s0 = MutBorrow.borrow_mut <t_Vec'0> {linked_list}
            (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_35 <- _ret ]  [ &linked_list <- _ret.final ] s1)
        | s1 = index_mut {_35} {j} (fun (_ret:MutBorrow.t t_Node) ->  [ &_34 <- _ret ] s2)
        | s2 = bb13 ]
      
      | bb13 = s0
        [ s0 =  [ &_34 <- { _34 with current = { _34.current with t_Node__next = _32 } } ] s1
        | s1 = -{resolve'0 _34}- s2
        | s2 = bb16 ]
      
      | bb14 = s0
        [ s0 = MutBorrow.borrow_mut <t_Vec'0> {linked_list}
            (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_38 <- _ret ]  [ &linked_list <- _ret.final ] s1)
        | s1 = index_mut {_38} {j} (fun (_ret:MutBorrow.t t_Node) ->  [ &_37 <- _ret ] s2)
        | s2 = bb15 ]
      
      | bb15 = s0
        [ s0 = 
          [ &_37 <- { _37 with current = { _37.current with t_Node__next = ([%#sdecision'7] (18446744073709551615 : UInt64.t)) } } ]
          
          s1
        | s1 = -{resolve'0 _37}- s2
        | s2 = bb16 ]
      
      | bb16 = s0
        [ s0 = MutBorrow.borrow_mut <t_Vec'0> {linked_list}
            (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_41 <- _ret ]  [ &linked_list <- _ret.final ] s1)
        | s1 = index_mut {_41} {j} (fun (_ret:MutBorrow.t t_Node) ->  [ &_40 <- _ret ] s2)
        | s2 = bb17 ]
      
      | bb17 = s0
        [ s0 = 
          [ &_40 <- { _40 with current = { _40.current with t_Node__prev = ([%#sdecision'8] (18446744073709551615 : UInt64.t)) } } ]
          
          s1
        | s1 = -{resolve'0 _40}- s2
        | s2 =  [ &head <- j ] s3
        | s3 = bb29 ]
      
      | bb18 = s0
        [ s0 = UInt64.sub {f'0.t_Formula__num_vars} {[%#sdecision'9] (1 : UInt64.t)}
            (fun (_ret:UInt64.t) ->  [ &_46 <- _ret ] s1)
        | s1 =  [ &_44 <- i = _46 ] s2
        | s2 = any [ br0 -> {_44 = false} (! bb23) | br1 -> {_44} (! bb19) ]  ]
      
      | bb19 = s0
        [ s0 = MutBorrow.borrow_mut <t_Vec'0> {linked_list}
            (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_49 <- _ret ]  [ &linked_list <- _ret.final ] s1)
        | s1 = index_mut {_49} {j} (fun (_ret:MutBorrow.t t_Node) ->  [ &_48 <- _ret ] s2)
        | s2 = bb20 ]
      
      | bb20 = s0
        [ s0 = 
          [ &_48 <- { _48 with current = { _48.current with t_Node__next = ([%#sdecision'10] (18446744073709551615 : UInt64.t)) } } ]
          
          s1
        | s1 = -{resolve'0 _48}- s2
        | s2 = UInt64.sub {i} {[%#sdecision'11] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &_54 <- _ret ] s3)
        | s3 = index {lit_order'0} {_54} (fun (_ret:UInt64.t) ->  [ &_52 <- _ret ] s4)
        | s4 = bb21 ]
      
      | bb21 = s0
        [ s0 = MutBorrow.borrow_mut <t_Vec'0> {linked_list}
            (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_57 <- _ret ]  [ &linked_list <- _ret.final ] s1)
        | s1 = index_mut {_57} {j} (fun (_ret:MutBorrow.t t_Node) ->  [ &_56 <- _ret ] s2)
        | s2 = bb22 ]
      
      | bb22 = s0
        [ s0 =  [ &_56 <- { _56 with current = { _56.current with t_Node__prev = _52 } } ] s1
        | s1 = -{resolve'0 _56}- s2
        | s2 = bb28 ]
      
      | bb23 = s0
        [ s0 = UInt64.add {i} {[%#sdecision'12] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &_62 <- _ret ] s1)
        | s1 = index {lit_order'0} {_62} (fun (_ret:UInt64.t) ->  [ &_60 <- _ret ] s2)
        | s2 = bb24 ]
      
      | bb24 = s0
        [ s0 = MutBorrow.borrow_mut <t_Vec'0> {linked_list}
            (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_65 <- _ret ]  [ &linked_list <- _ret.final ] s1)
        | s1 = index_mut {_65} {j} (fun (_ret:MutBorrow.t t_Node) ->  [ &_64 <- _ret ] s2)
        | s2 = bb25 ]
      
      | bb25 = s0
        [ s0 =  [ &_64 <- { _64 with current = { _64.current with t_Node__next = _60 } } ] s1
        | s1 = -{resolve'0 _64}- s2
        | s2 = UInt64.sub {i} {[%#sdecision'13] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &_70 <- _ret ] s3)
        | s3 = index {lit_order'0} {_70} (fun (_ret:UInt64.t) ->  [ &_68 <- _ret ] s4)
        | s4 = bb26 ]
      
      | bb26 = s0
        [ s0 = MutBorrow.borrow_mut <t_Vec'0> {linked_list}
            (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_73 <- _ret ]  [ &linked_list <- _ret.final ] s1)
        | s1 = index_mut {_73} {j} (fun (_ret:MutBorrow.t t_Node) ->  [ &_72 <- _ret ] s2)
        | s2 = bb27 ]
      
      | bb27 = s0
        [ s0 =  [ &_72 <- { _72 with current = { _72.current with t_Node__prev = _68 } } ] s1
        | s1 = -{resolve'0 _72}- s2
        | s2 = bb28 ]
      
      | bb28 = bb29
      | bb29 = s0
        [ s0 = MutBorrow.borrow_mut <t_Vec'0> {linked_list}
            (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_78 <- _ret ]  [ &linked_list <- _ret.final ] s1)
        | s1 = index_mut {_78} {j} (fun (_ret:MutBorrow.t t_Node) ->  [ &_77 <- _ret ] s2)
        | s2 = bb30 ]
      
      | bb30 = s0
        [ s0 = UInt64.sub {f'0.t_Formula__num_vars} {i}
            (fun (_ret:UInt64.t) ->  [ &_77 <- { _77 with current = { _77.current with t_Node__ts = _ret } } ] s1)
        | s1 = -{resolve'0 _77}- s2
        | s2 = UInt64.add {i} {[%#sdecision'14] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &i <- _ret ] s3)
        | s3 = bb4'0 ]
       ]
     ]
  
  | bb31 = s0
    [ s0 = UInt64.add {f'0.t_Formula__num_vars} {[%#sdecision'15] (1 : UInt64.t)}
        (fun (_ret:UInt64.t) ->  [ &_82 <- _ret ] s1)
    | s1 = 
      [ &_0 <- { t_Decisions__linked_list = linked_list;
                 t_Decisions__timestamp = _82;
                 t_Decisions__start = head;
                 t_Decisions__search = head } ]
      
      s2
    | s2 = bb32 ]
  
  | bb32 = bb33
  | bb33 = bb34
  | bb34 = return''0 {_0} ]
  )
  [ & _0 : t_Decisions = Any.any_l ()
  | & f'0 : t_Formula = f
  | & lit_order'0 : t_Vec'1 = lit_order
  | & linked_list : t_Vec'0 = Any.any_l ()
  | & _8 : t_Node = Any.any_l ()
  | & i : UInt64.t = Any.any_l ()
  | & head : UInt64.t = Any.any_l ()
  | & _18 : bool = Any.any_l ()
  | & j : UInt64.t = Any.any_l ()
  | & _22 : UInt64.t = Any.any_l ()
  | & _26 : bool = Any.any_l ()
  | & _29 : bool = Any.any_l ()
  | & _32 : UInt64.t = Any.any_l ()
  | & _34 : MutBorrow.t t_Node = Any.any_l ()
  | & _35 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _37 : MutBorrow.t t_Node = Any.any_l ()
  | & _38 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _40 : MutBorrow.t t_Node = Any.any_l ()
  | & _41 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _44 : bool = Any.any_l ()
  | & _46 : UInt64.t = Any.any_l ()
  | & _48 : MutBorrow.t t_Node = Any.any_l ()
  | & _49 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _52 : UInt64.t = Any.any_l ()
  | & _54 : UInt64.t = Any.any_l ()
  | & _56 : MutBorrow.t t_Node = Any.any_l ()
  | & _57 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _60 : UInt64.t = Any.any_l ()
  | & _62 : UInt64.t = Any.any_l ()
  | & _64 : MutBorrow.t t_Node = Any.any_l ()
  | & _65 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _68 : UInt64.t = Any.any_l ()
  | & _70 : UInt64.t = Any.any_l ()
  | & _72 : MutBorrow.t t_Node = Any.any_l ()
  | & _73 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _77 : MutBorrow.t t_Node = Any.any_l ()
  | & _78 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _82 : UInt64.t = Any.any_l () ]
  
  [ return''0 (result:t_Decisions)-> {[@expl:make_linked_list ensures] [%#sdecision'19] inv'2 result (UInt64.t'int f.t_Formula__num_vars)}
    (! return' {result}) ]
  
