(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 202 4 202 68 *)

(* decision::Decisions *)

let%span svec = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 89 26 89 48
let%span svec'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 186 22 186 41
let%span svec'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 187 22 187 76
let%span svec'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 21 14 21 41
let%span svec'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 168 27 168 46
let%span svec'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 169 26 169 54
let%span svec'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 158 27 158 46
let%span svec'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 159 26 159 54
let%span svec'7 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 160 26 160 57
let%span svec'8 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 161 26 161 62
let%span svec'9 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 162 26 162 55
let%span smodel = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 54 8 54 22
let%span smodel'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 72 8 72 22
let%span sslice = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 123 20 123 37
let%span sslice'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 130 20 130 37
let%span sslice'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 137 20 137 94
let%span sresolve = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/resolve.rs" 54 20 54 34
let%span slogic_lit = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 83 20 83 42
let%span slogic_lit'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 24 20 24 29
let%span slogic_formula = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 79 14 79 41
let%span slogic_formula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 81 20 81 44
let%span slogic_formula'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 88 12 92 45
let%span slogic_formula'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 30 8 31 69
let%span slogic_formula'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 22 8 22 85
let%span slogic_clause = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 227 20 227 42
let%span slogic_clause'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 14 4 14 12
let%span slogic_clause'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 33 4 33 62
let%span slogic_clause'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 25 8 26 23
let%span slogic_clause'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 48 8 49 92
let%span sindex = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ops/index.rs" 29 8 29 31
let%span sseq = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/seq.rs" 312 8 312 41
let%span slogic_util = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 60 16 60 66
let%span slogic_util'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 42 4 42 44
let%span slogic_util'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 35 8 35 76
let%span sord = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 129 39 129 89
let%span sord'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 134 39 134 86
let%span sord'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 139 39 139 86
let%span sord'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 144 39 144 89
let%span sord'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 149 39 149 70
let%span sord'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 154 40 154 57
let%span sord'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 155 40 155 57
let%span sord'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 156 39 156 56
let%span sord'7 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 161 40 161 70
let%span sord'8 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 162 39 162 72
let%span sord'9 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 167 40 167 73
let%span sord'10 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 168 39 168 69
let%span sord'11 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 173 39 173 84
let%span sord'12 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 230 16 236 17
let%span sdecision = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 203 63 203 64
let%span sdecision'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 203 66 203 67
let%span sdecision'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 204 49 204 67
let%span sdecision'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 205 27 205 28
let%span sdecision'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 208 20 208 106
let%span sdecision'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 207 20 207 56
let%span sdecision'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 206 20 206 44
let%span sdecision'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 211 17 211 18
let%span sdecision'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 218 12 218 13
let%span sdecision'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 220 20 220 56
let%span sdecision'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 219 20 219 41
let%span sdecision'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 223 17 223 18
let%span sdecision'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 198 15 198 47
let%span sdecision'12 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 199 15 199 40
let%span sdecision'13 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 200 15 200 22
let%span sdecision'14 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 201 4 201 45
let%span sdecision'15 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 160 15 160 41
let%span sdecision'16 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 161 15 161 48
let%span sdecision'17 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 162 4 162 46
let%span slogic_decision = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_decision.rs" 12 12 17 97
let%span sutil = "/Users/sarekhs/CreuSAT/CreuSAT/src/util.rs" 57 10 57 36
let%span sutil'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/util.rs" 58 10 58 34

use creusot.int.UInt64
use creusot.prelude.Opaque
use seq.Seq
use mach.int.Int
use creusot.prelude.MutBorrow
use seq.Permut
use creusot.int.UInt32
use creusot.prelude.Any

type tuple  =
  { _0: UInt64.t; _1: UInt64.t }

type t_NonNull  =
  { t_NonNull__pointer: Opaque.ptr }

type t_Unique  =
  { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }

type t_UsizeNoHighBit  =
  { t_UsizeNoHighBit__0: UInt64.t }

type t_RawVecInner  =
  { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }

type t_RawVec  =
  { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }

type t_Vec  =
  { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

function view (self : t_Vec) : Seq.seq UInt64.t

axiom view_spec : forall self : t_Vec . [%#svec'2] Seq.length (view self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'0 (self : t_Vec) : Seq.seq UInt64.t =
  [%#smodel] view self

let rec len (self_:t_Vec) (return'  (x:UInt64.t))= any
  [ return''0 (result:UInt64.t)-> {[%#svec] UInt64.t'int result = Seq.length (view'0 self_)} (! return' {result}) ]


type t_RawVec'0  =
  { t_RawVec__inner'0: t_RawVecInner; t_RawVec__qy95zmarker'0: () }

type t_Vec'0  =
  { t_Vec__buf'0: t_RawVec'0; t_Vec__len'0: UInt64.t }

function view'1 (self : t_Vec'0) : Seq.seq tuple

axiom view_spec'0 : forall self : t_Vec'0 . [%#svec'2] Seq.length (view'1 self) <= UInt64.t'int (v_MAX : UInt64.t)

function index_logic [@inline:trivial] (self : t_Vec'0) (ix : int) : tuple =
  [%#sindex] Seq.get (view'1 self) ix

let rec from_elem (elem:tuple) (n:UInt64.t) (return'  (x:t_Vec'0))= any
  [ return''0 (result:t_Vec'0)-> {[%#svec'0] Seq.length (view'1 result) = UInt64.t'int n}
    {[%#svec'1] forall i : int . 0 <= i /\ i < UInt64.t'int n  -> index_logic result i = elem}
    (! return' {result}) ]


type t_RawVec'1  =
  { t_RawVec__inner'1: t_RawVecInner; t_RawVec__qy95zmarker'1: () }

type t_Vec'1  =
  { t_Vec__buf'1: t_RawVec'1; t_Vec__len'1: UInt64.t }

type t_Node  =
  { t_Node__next: UInt64.t; t_Node__prev: UInt64.t; t_Node__ts: UInt64.t }

function view'2 (self : t_Vec'1) : Seq.seq t_Node

axiom view_spec'1 : forall self : t_Vec'1 . [%#svec'2] Seq.length (view'2 self) <= UInt64.t'int (v_MAX : UInt64.t)

type t_Decisions  =
  { t_Decisions__linked_list: t_Vec'1;
    t_Decisions__timestamp: UInt64.t;
    t_Decisions__start: UInt64.t;
    t_Decisions__search: UInt64.t }

predicate in_bounds [@inline:trivial] (self : UInt64.t) (seq : Seq.seq UInt64.t) =
  [%#sslice] UInt64.t'int self < Seq.length seq

predicate has_value [@inline:trivial] (self : UInt64.t) (seq : Seq.seq UInt64.t) (out : UInt64.t) =
  [%#sslice'0] Seq.get seq (UInt64.t'int self) = out

let rec index (self_:t_Vec) (ix:UInt64.t) (return'  (x:UInt64.t))= {[@expl:index requires] [%#svec'3] in_bounds ix (view'0 self_)}
  any [ return''0 (result:UInt64.t)-> {[%#svec'4] has_value ix (view'0 self_) result} (! return' {result}) ] 

predicate in_bounds'0 [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Node) =
  [%#sslice] UInt64.t'int self < Seq.length seq

function view'3 (self : t_Vec'1) : Seq.seq t_Node =
  [%#smodel] view'2 self

predicate has_value'0 [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Node) (out : t_Node) =
  [%#sslice'0] Seq.get seq (UInt64.t'int self) = out

let rec index'0 (self_:t_Vec'1) (ix:UInt64.t) (return'  (x:t_Node))= {[@expl:index requires] [%#svec'3] in_bounds'0 ix (view'3 self_)}
  any [ return''0 (result:t_Node)-> {[%#svec'4] has_value'0 ix (view'3 self_) result} (! return' {result}) ] 

predicate in_bounds'1 [@inline:trivial] (self : UInt64.t) (seq : Seq.seq tuple) =
  [%#sslice] UInt64.t'int self < Seq.length seq

function view'4 (self : MutBorrow.t t_Vec'0) : Seq.seq tuple =
  [%#smodel'0] view'1 self.current

predicate has_value'1 [@inline:trivial] (self : UInt64.t) (seq : Seq.seq tuple) (out : tuple) =
  [%#sslice'0] Seq.get seq (UInt64.t'int self) = out

predicate resolve_elswhere [@inline:trivial] (self : UInt64.t) (old' : Seq.seq tuple) (fin : Seq.seq tuple) =
  [%#sslice'1] forall i : int . 0 <= i /\ i <> UInt64.t'int self /\ i < Seq.length old'
   -> Seq.get old' i = Seq.get fin i

let rec index_mut (self_:MutBorrow.t t_Vec'0) (ix:UInt64.t) (return'  (x:MutBorrow.t tuple))= {[@expl:index_mut requires] [%#svec'5] in_bounds'1 ix (view'4 self_)}
  any
  [ return''0 (result:MutBorrow.t tuple)-> {[%#svec'6] has_value'1 ix (view'4 self_) result.current}
    {[%#svec'7] has_value'1 ix (view'1 self_.final) result.final}
    {[%#svec'8] resolve_elswhere ix (view'4 self_) (view'1 self_.final)}
    {[%#svec'9] Seq.length (view'1 self_.final) = Seq.length (view'4 self_)}
    (! return' {result}) ]


predicate resolve (self : MutBorrow.t tuple) =
  [%#sresolve] self.final = self.current

predicate resolve'0 (_0'0 : MutBorrow.t tuple) =
  resolve _0'0

type t_Ordering  =
  | C_Less
  | C_Equal
  | C_Greater

function cmp_log (self : UInt64.t) (o : UInt64.t) : t_Ordering =
  [%#sord'12] if UInt64.lt self o then C_Less else if self = o then C_Equal else C_Greater

function eq_cmp (x : UInt64.t) (y : UInt64.t) : ()

axiom eq_cmp_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'11] (x = y) = (cmp_log x y = C_Equal)

function antisym2 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym2_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'9] cmp_log x y = C_Greater)
 -> ([%#sord'10] cmp_log y x = C_Less)

function antisym1 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym1_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'7] cmp_log x y = C_Less)
 -> ([%#sord'8] cmp_log y x = C_Greater)

function trans (x : UInt64.t) (y : UInt64.t) (z : UInt64.t) (o : t_Ordering) : ()

axiom trans_spec : forall x : UInt64.t, y : UInt64.t, z : UInt64.t, o : t_Ordering . ([%#sord'4] cmp_log x y = o)
 -> ([%#sord'5] cmp_log y z = o)  -> ([%#sord'6] cmp_log x z = o)

function refl (x : UInt64.t) : ()

axiom refl_spec : forall x : UInt64.t . [%#sord'3] cmp_log x x = C_Equal

function cmp_gt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_gt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'2] UInt64.gt x y = (cmp_log x y = C_Greater)

function cmp_ge_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_ge_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'1] UInt64.ge x y = (cmp_log x y <> C_Less)

function cmp_lt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_lt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'0] UInt64.lt x y = (cmp_log x y = C_Less)

function cmp_le_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_le_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord] UInt64.le x y = (cmp_log x y <> C_Greater)

predicate sorted_range_tuple_zeroth [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 33 0 33 80] (s : Seq.seq tuple) (l : int) (u : int)

 =
  [%#slogic_util'1] forall i : int, j : int . l <= i /\ i < j /\ j < u  -> UInt64.le (Seq.get s i)._0 (Seq.get s j)._0

predicate sorted_tuple_zeroth [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 41 0 41 58] (s : Seq.seq tuple)
 =
  [%#slogic_util'0] sorted_range_tuple_zeroth s 0 (Seq.length s)

predicate permutation_of (self : Seq.seq tuple) (other : Seq.seq tuple) =
  [%#sseq] Permut.permut self other 0 (Seq.length self)

let rec sort (v:MutBorrow.t t_Vec'0) (return'  (x:()))= any
  [ return''0 (result:())-> {[%#sutil] sorted_tuple_zeroth (view'1 v.final)}
    {[%#sutil'0] permutation_of (view'1 v.final) (view'4 v)}
    (! return' {result}) ]


predicate resolve'1 (self : MutBorrow.t t_Vec'0) =
  [%#sresolve] self.final = self.current

predicate resolve'2 (_0'0 : MutBorrow.t t_Vec'0) =
  resolve'1 _0'0

constant v_MAX'0 : UInt64.t = (18446744073709551615 : UInt64.t)

predicate inv [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_decision.rs" 10 4 10 36] (self : t_Decisions) (n : int)
 =
  [%#slogic_decision] Seq.length (view'2 self.t_Decisions__linked_list) = n
  /\ (UInt64.t'int self.t_Decisions__search < Seq.length (view'2 self.t_Decisions__linked_list)
  \/ UInt64.t'int self.t_Decisions__search = UInt64.t'int v_MAX'0)
  /\ UInt64.t'int self.t_Decisions__start < Seq.length (view'2 self.t_Decisions__linked_list)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'2 self.t_Decisions__linked_list)
   -> (UInt64.t'int (Seq.get (view'2 self.t_Decisions__linked_list) i).t_Node__next = UInt64.t'int v_MAX'0
  \/ UInt64.t'int (Seq.get (view'2 self.t_Decisions__linked_list) i).t_Node__next < n)
  /\ (UInt64.t'int (Seq.get (view'2 self.t_Decisions__linked_list) i).t_Node__prev = UInt64.t'int v_MAX'0
  \/ UInt64.t'int (Seq.get (view'2 self.t_Decisions__linked_list) i).t_Node__prev < n))

type t_RawVec'2  =
  { t_RawVec__inner'2: t_RawVecInner; t_RawVec__qy95zmarker'2: () }

type t_Vec'2  =
  { t_Vec__buf'2: t_RawVec'2; t_Vec__len'2: UInt64.t }

type t_Formula  =
  { t_Formula__clauses: t_Vec'2; t_Formula__num_vars: UInt64.t }

function view'5 (self : t_Vec'0) : Seq.seq tuple =
  [%#smodel] view'1 self

let rec len'0 (self_:t_Vec'0) (return'  (x:UInt64.t))= any
  [ return''0 (result:UInt64.t)-> {[%#svec] UInt64.t'int result = Seq.length (view'5 self_)} (! return' {result}) ]


let rec index'1 (self_:t_Vec'0) (ix:UInt64.t) (return'  (x:tuple))= {[@expl:index requires] [%#svec'3] in_bounds'1 ix (view'5 self_)}
  any [ return''0 (result:tuple)-> {[%#svec'4] has_value'1 ix (view'5 self_) result} (! return' {result}) ] 

let rec move_to_front (self:MutBorrow.t t_Decisions) (tomove:UInt64.t) (_f:t_Formula) (return'  (x:()))= {[@expl:move_to_front requires #0] [%#sdecision'15] UInt64.t'int _f.t_Formula__num_vars
  < UInt64.t'int (v_MAX : UInt64.t)}
  {[@expl:move_to_front requires #1] [%#sdecision'16] UInt64.t'int tomove
  < Seq.length (view'2 (self.current).t_Decisions__linked_list)}
  {[@expl:move_to_front requires #2] [%#sdecision'17] inv self.current (UInt64.t'int _f.t_Formula__num_vars)}
  any
  [ return''0 (result:())-> {[%#sdecision'17] inv self.final (UInt64.t'int _f.t_Formula__num_vars)}
    (! return' {result}) ]


predicate resolve'3 (self : MutBorrow.t t_Decisions) =
  [%#sresolve] self.final = self.current

predicate resolve'4 (_0'0 : MutBorrow.t t_Decisions) =
  resolve'3 _0'0

predicate elems_less_than [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 59 0 59 53] (v : Seq.seq UInt64.t) (n : int)

 =
  [%#slogic_util] forall i : int . 0 <= i /\ i < Seq.length v  -> UInt64.t'int (Seq.get v i) < n

type t_RawVec'3  =
  { t_RawVec__inner'3: t_RawVecInner; t_RawVec__qy95zmarker'3: () }

type t_Vec'3  =
  { t_Vec__buf'3: t_RawVec'3; t_Vec__len'3: UInt64.t }

type t_Clause  =
  { t_Clause__deleted: bool; t_Clause__lbd: UInt32.t; t_Clause__search: UInt64.t; t_Clause__lits: t_Vec'3 }

function view'6 (self : t_Vec'2) : Seq.seq t_Clause

axiom view_spec'2 : forall self : t_Vec'2 . [%#svec'2] Seq.length (view'6 self) <= UInt64.t'int (v_MAX : UInt64.t)

type t_Lit  =
  { t_Lit__idx: UInt64.t; t_Lit__polarity: bool }

function index_logic'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 23 4 23 35] (self : t_Lit) : int =
  [%#slogic_lit'0] UInt64.t'int self.t_Lit__idx

predicate inv'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 82 4 82 36] (self : t_Lit) (n : int) =
  [%#slogic_lit] index_logic'0 self < n

predicate vars_in_range_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 23 0 23 55] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'2] forall i : int . 0 <= i /\ i < Seq.length s  -> inv'0 (Seq.get s i) n

predicate no_duplicate_indexes_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 46 0 46 54] (s : Seq.seq t_Lit)

 =
  [%#slogic_clause'3] forall j : int, k : int . 0 <= j /\ j < Seq.length s /\ 0 <= k /\ k < Seq.length s /\ k <> j
   -> index_logic'0 (Seq.get s k) <> index_logic'0 (Seq.get s j)

predicate inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 32 0 32 48] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'1] vars_in_range_inner s n /\ no_duplicate_indexes_inner s

function view'7 (self : t_Vec'3) : Seq.seq t_Lit

axiom view_spec'3 : forall self : t_Vec'3 . [%#svec'2] Seq.length (view'7 self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'8 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 16 4 16 33] (self : t_Clause) : Seq.seq t_Lit

 =
  [%#slogic_clause'0] view'7 self.t_Clause__lits

predicate inv'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 226 4 226 36] (self : t_Clause) (n : int) =
  [%#slogic_clause] inv_internal (view'8 self) n

predicate inv_mirror [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 86 4 86 35] (self : t_Formula) =
  [%#slogic_formula'1] (forall i : int . 0 <= i /\ i < Seq.length (view'6 self.t_Formula__clauses)
   -> inv'1 (Seq.get (view'6 self.t_Formula__clauses) i) (UInt64.t'int self.t_Formula__num_vars))
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'6 self.t_Formula__clauses)
   -> Seq.length (view'8 (Seq.get (view'6 self.t_Formula__clauses) i)) >= 1)

type t_FormulaModel  =
  { t_FormulaModel__clauses: Seq.seq t_Clause; t_FormulaModel__num_vars: int }

predicate formula_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 28 0 28 49] (f : t_FormulaModel)

 =
  [%#slogic_formula'2] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> inv'1 (Seq.get f.t_FormulaModel__clauses i) f.t_FormulaModel__num_vars
  /\ Seq.length (view'8 (Seq.get f.t_FormulaModel__clauses i)) > 0

function view'9 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 21 4 21 33] (self : t_Formula) : t_FormulaModel

 =
  [%#slogic_formula'3] { t_FormulaModel__clauses = view'6 self.t_Formula__clauses;
                         t_FormulaModel__num_vars = UInt64.t'int self.t_Formula__num_vars }

predicate inv'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 80 4 80 28] (self : t_Formula) =
  [%#slogic_formula'0] formula_invariant (view'9 self)

axiom inv_spec : forall self : t_Formula . [%#slogic_formula] inv'2 self = inv_mirror self

meta "compute_max_steps" 1000000

let rec increment_and_move[#"/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 202 4 202 68] (self:MutBorrow.t t_Decisions) (f:t_Formula) (v:t_Vec) (return'  (x:()))= {[@expl:increment_and_move requires #0] [%#sdecision'11] elems_less_than (view v) (UInt64.t'int f.t_Formula__num_vars)}
  {[@expl:increment_and_move requires #1] [%#sdecision'12] UInt64.t'int f.t_Formula__num_vars
  < UInt64.t'int (v_MAX : UInt64.t)}
  {[@expl:increment_and_move requires #2] [%#sdecision'13] inv'2 f}
  {[@expl:increment_and_move requires #3] [%#sdecision'14] inv self.current (UInt64.t'int f.t_Formula__num_vars)}
  (! bb0
  [ bb0 = bb1
  | bb1 = s0
    [ s0 =  [ &_10 <- { _0 = ([%#sdecision] (0 : UInt64.t)); _1 = ([%#sdecision'0] (0 : UInt64.t)) } ] s1
    | s1 = len {v'0} (fun (_ret:UInt64.t) ->  [ &_11 <- _ret ] s2)
    | s2 = bb2 ]
  
  | bb2 = s0 [ s0 = from_elem {_10} {_11} (fun (_ret:t_Vec'0) ->  [ &counts_with_index <- _ret ] s1) | s1 = bb3 ] 
  | bb3 = s0 [ s0 =  [ &old_self <- [%#sdecision'1] self'0 ] s1 | s1 = bb4 ] 
  | bb4 = s0 [ s0 =  [ &i <- [%#sdecision'2] (0 : UInt64.t) ] s1 | s1 = bb5 ] 
  | bb5 = bb5'0
    [ bb5'0 = {[@expl:loop invariant #0] [%#sdecision'5] old_self = self'0}
      {[@expl:loop invariant #1] [%#sdecision'4] Seq.length (view v'0) = Seq.length (view'1 counts_with_index)}
      {[@expl:loop invariant #2] [%#sdecision'3] forall j : int . 0 <= j /\ j < UInt64.t'int i
       -> UInt64.t'int (Seq.get (view'1 counts_with_index) j)._1
      < Seq.length (view'2 (self'0.current).t_Decisions__linked_list)}
      (! s0) [ s0 = bb6 ] 
      [ bb6 = bb7
      | bb7 = bb8
      | bb8 = s0 [ s0 = len {v'0} (fun (_ret:UInt64.t) ->  [ &_24 <- _ret ] s1) | s1 = bb9 ] 
      | bb9 = s0
        [ s0 =  [ &_22 <- UInt64.lt i _24 ] s1 | s1 = any [ br0 -> {_22 = false} (! bb15) | br1 -> {_22} (! bb10) ]  ]
      
      | bb10 = s0 [ s0 = index {v'0} {i} (fun (_ret:UInt64.t) ->  [ &_30 <- _ret ] s1) | s1 = bb11 ] 
      | bb11 = s0
        [ s0 = index'0 {(self'0.current).t_Decisions__linked_list} {_30} (fun (_ret:t_Node) ->  [ &_27 <- _ret ] s1)
        | s1 = bb12 ]
      
      | bb12 = s0 [ s0 = index {v'0} {i} (fun (_ret:UInt64.t) ->  [ &_34 <- _ret ] s1) | s1 = bb13 ] 
      | bb13 = s0
        [ s0 = MutBorrow.borrow_mut <t_Vec'0> {counts_with_index}
            (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_38 <- _ret ]  [ &counts_with_index <- _ret.final ] s1)
        | s1 = index_mut {_38} {i} (fun (_ret:MutBorrow.t tuple) ->  [ &_37 <- _ret ] s2)
        | s2 = bb14 ]
      
      | bb14 = s0
        [ s0 =  [ &_37 <- { _37 with current = { _0 = _27.t_Node__ts; _1 = _34 } } ] s1
        | s1 = -{resolve'0 _37}- s2
        | s2 = UInt64.add {i} {[%#sdecision'6] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &i <- _ret ] s3)
        | s3 = bb5'0 ]
       ]
     ]
  
  | bb15 = s0
    [ s0 = MutBorrow.borrow_mut <t_Vec'0> {counts_with_index}
        (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_43 <- _ret ]  [ &counts_with_index <- _ret.final ] s1)
    | s1 = MutBorrow.borrow_final <t_Vec'0> {_43.current} {MutBorrow.get_id _43}
        (fun (_ret:MutBorrow.t t_Vec'0) ->  [ &_42 <- _ret ]  [ &_43 <- { _43 with current = _ret.final } ] s2)
    | s2 = sort {_42} (fun (_ret:()) ->  [ &_41 <- _ret ] s3)
    | s3 = bb16 ]
  
  | bb16 = s0
    [ s0 = -{resolve'2 _43}- s1
    | s1 =  [ &i <- [%#sdecision'7] (0 : UInt64.t) ] s2
    | s2 =  [ &old_17_0 <- self'0 ] s3
    | s3 = bb17 ]
  
  | bb17 = bb17'0
    [ bb17'0 = {[@expl:mut invariant] old_17_0.final = self'0.final}
      {[@expl:loop invariant #0] [%#sdecision'9] inv self'0.current (UInt64.t'int f'0.t_Formula__num_vars)}
      {[@expl:loop invariant #1] [%#sdecision'8] Seq.length (view v'0) = Seq.length (view'1 counts_with_index)}
      (! s0) [ s0 = bb18 ] 
      [ bb18 = bb19
      | bb19 = s0 [ s0 = len'0 {counts_with_index} (fun (_ret:UInt64.t) ->  [ &_49 <- _ret ] s1) | s1 = bb20 ] 
      | bb20 = s0
        [ s0 =  [ &_47 <- UInt64.lt i _49 ] s1 | s1 = any [ br0 -> {_47 = false} (! bb24) | br1 -> {_47} (! bb21) ]  ]
      
      | bb21 = s0
        [ s0 = MutBorrow.borrow_mut <t_Decisions> {self'0.current}
            (fun (_ret:MutBorrow.t t_Decisions) ->
               [ &_52 <- _ret ] 
               [ &self'0 <- { self'0 with current = _ret.final } ] 
              s1)
        | s1 = index'1 {counts_with_index} {i} (fun (_ret:tuple) ->  [ &_54 <- _ret ] s2)
        | s2 = bb22 ]
      
      | bb22 = s0 [ s0 = move_to_front {_52} {_54._1} {f'0} (fun (_ret:()) ->  [ &_51 <- _ret ] s1) | s1 = bb23 ] 
      | bb23 = s0
        [ s0 = UInt64.add {i} {[%#sdecision'10] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &i <- _ret ] s1)
        | s1 = bb17'0 ]
       ]
     ]
  
  | bb24 = s0 [ s0 = -{resolve'4 self'0}- s1 | s1 = bb25 ] 
  | bb25 = bb26
  | bb26 = return''0 {_0'0} ]
  )
  [ & _0'0 : () = Any.any_l ()
  | & self'0 : MutBorrow.t t_Decisions = self
  | & f'0 : t_Formula = f
  | & v'0 : t_Vec = v
  | & counts_with_index : t_Vec'0 = Any.any_l ()
  | & _10 : tuple = Any.any_l ()
  | & _11 : UInt64.t = Any.any_l ()
  | & old_self : MutBorrow.t t_Decisions = Any.any_l ()
  | & i : UInt64.t = Any.any_l ()
  | & _22 : bool = Any.any_l ()
  | & _24 : UInt64.t = Any.any_l ()
  | & _27 : t_Node = Any.any_l ()
  | & _30 : UInt64.t = Any.any_l ()
  | & _34 : UInt64.t = Any.any_l ()
  | & _37 : MutBorrow.t tuple = Any.any_l ()
  | & _38 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _41 : () = Any.any_l ()
  | & _42 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _43 : MutBorrow.t t_Vec'0 = Any.any_l ()
  | & _47 : bool = Any.any_l ()
  | & _49 : UInt64.t = Any.any_l ()
  | & _51 : () = Any.any_l ()
  | & _52 : MutBorrow.t t_Decisions = Any.any_l ()
  | & _54 : tuple = Any.any_l ()
  | & old_17_0 : MutBorrow.t t_Decisions = Any.any_l () ]
  
  [ return''0 (result:())-> {[@expl:increment_and_move ensures] [%#sdecision'14] inv self.final (UInt64.t'int f.t_Formula__num_vars)}
    (! return' {result}) ]
  
