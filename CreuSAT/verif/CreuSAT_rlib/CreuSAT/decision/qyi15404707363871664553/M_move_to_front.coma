(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 163 4 163 60 *)

(* decision::Decisions *)

let%span svec = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 158 27 158 46
let%span svec'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 159 26 159 54
let%span svec'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 160 26 160 57
let%span svec'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 161 26 161 62
let%span svec'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 162 26 162 55
let%span svec'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 21 14 21 41
let%span smodel = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 72 8 72 22
let%span sslice = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 123 20 123 37
let%span sslice'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 130 20 130 37
let%span sslice'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 137 20 137 94
let%span sresolve = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/resolve.rs" 54 20 54 34
let%span sdecision = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 170 22 170 29
let%span sdecision'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 173 29 173 39
let%span sdecision'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 176 30 176 31
let%span sdecision'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 178 22 178 48
let%span sdecision'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 181 19 181 26
let%span sdecision'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 185 23 185 30
let%span sdecision'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 160 15 160 41
let%span sdecision'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 161 15 161 48
let%span sdecision'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 162 4 162 46
let%span sdecision'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 132 4 132 46
let%span sdecision'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 133 15 133 52
let%span sdecision'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 134 14 134 63
let%span sdecision'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 135 14 135 67
let%span slogic_decision = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_decision.rs" 12 12 17 97

use creusot.prelude.Opaque
use creusot.int.UInt64
use creusot.prelude.MutBorrow
use seq.Seq
use mach.int.Int
use creusot.prelude.Any

type t_NonNull  =
  { t_NonNull__pointer: Opaque.ptr }

type t_Unique  =
  { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }

type t_UsizeNoHighBit  =
  { t_UsizeNoHighBit__0: UInt64.t }

type t_RawVecInner  =
  { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }

type t_RawVec  =
  { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }

type t_Vec  =
  { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }

type t_Decisions  =
  { t_Decisions__linked_list: t_Vec;
    t_Decisions__timestamp: UInt64.t;
    t_Decisions__start: UInt64.t;
    t_Decisions__search: UInt64.t }

predicate resolve (self : MutBorrow.t t_Decisions) =
  [%#sresolve] self.final = self.current

predicate resolve'0 (_0 : MutBorrow.t t_Decisions) =
  resolve _0

type t_Node  =
  { t_Node__next: UInt64.t; t_Node__prev: UInt64.t; t_Node__ts: UInt64.t }

predicate in_bounds [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Node) =
  [%#sslice] UInt64.t'int self < Seq.length seq

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

function view (self : t_Vec) : Seq.seq t_Node

axiom view_spec : forall self : t_Vec . [%#svec'4] Seq.length (view self) <= UInt64.t'int (v_MAX : UInt64.t)

function view'0 (self : MutBorrow.t t_Vec) : Seq.seq t_Node =
  [%#smodel] view self.current

predicate has_value [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Node) (out : t_Node) =
  [%#sslice'0] Seq.get seq (UInt64.t'int self) = out

predicate resolve_elswhere [@inline:trivial] (self : UInt64.t) (old' : Seq.seq t_Node) (fin : Seq.seq t_Node) =
  [%#sslice'1] forall i : int . 0 <= i /\ i <> UInt64.t'int self /\ i < Seq.length old'
   -> Seq.get old' i = Seq.get fin i

let rec index_mut (self_:MutBorrow.t t_Vec) (ix:UInt64.t) (return'  (x:MutBorrow.t t_Node))= {[@expl:index_mut requires] [%#svec] in_bounds ix (view'0 self_)}
  any
  [ return''0 (result:MutBorrow.t t_Node)-> {[%#svec'0] has_value ix (view'0 self_) result.current}
    {[%#svec'1] has_value ix (view self_.final) result.final}
    {[%#svec'2] resolve_elswhere ix (view'0 self_) (view self_.final)}
    {[%#svec'3] Seq.length (view self_.final) = Seq.length (view'0 self_)}
    (! return' {result}) ]


predicate resolve'1 (self : MutBorrow.t t_Node) =
  [%#sresolve] self.final = self.current

predicate resolve'2 (_0 : MutBorrow.t t_Node) =
  resolve'1 _0

type t_RawVec'0  =
  { t_RawVec__inner'0: t_RawVecInner; t_RawVec__qy95zmarker'0: () }

type t_Vec'0  =
  { t_Vec__buf'0: t_RawVec'0; t_Vec__len'0: UInt64.t }

type t_Formula  =
  { t_Formula__clauses: t_Vec'0; t_Formula__num_vars: UInt64.t }

constant v_MAX'0 : UInt64.t = (18446744073709551615 : UInt64.t)

predicate inv [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_decision.rs" 10 4 10 36] (self : t_Decisions) (n : int)
 =
  [%#slogic_decision] Seq.length (view self.t_Decisions__linked_list) = n
  /\ (UInt64.t'int self.t_Decisions__search < Seq.length (view self.t_Decisions__linked_list)
  \/ UInt64.t'int self.t_Decisions__search = UInt64.t'int v_MAX'0)
  /\ UInt64.t'int self.t_Decisions__start < Seq.length (view self.t_Decisions__linked_list)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view self.t_Decisions__linked_list)
   -> (UInt64.t'int (Seq.get (view self.t_Decisions__linked_list) i).t_Node__next = UInt64.t'int v_MAX'0
  \/ UInt64.t'int (Seq.get (view self.t_Decisions__linked_list) i).t_Node__next < n)
  /\ (UInt64.t'int (Seq.get (view self.t_Decisions__linked_list) i).t_Node__prev = UInt64.t'int v_MAX'0
  \/ UInt64.t'int (Seq.get (view self.t_Decisions__linked_list) i).t_Node__prev < n))

let rec rescore (self:MutBorrow.t t_Decisions) (_f:t_Formula) (return'  (x:()))= {[@expl:rescore requires #0] [%#sdecision'8] inv self.current (UInt64.t'int _f.t_Formula__num_vars)}
  {[@expl:rescore requires #1] [%#sdecision'9] Seq.length (view (self.current).t_Decisions__linked_list)
  < UInt64.t'int (v_MAX : UInt64.t)}
  any
  [ return''0 (result:())-> {[%#sdecision'8] inv self.final (UInt64.t'int _f.t_Formula__num_vars)}
    {[%#sdecision'10] UInt64.t'int (self.final).t_Decisions__timestamp
    = Seq.length (view (self.current).t_Decisions__linked_list) + 1}
    {[%#sdecision'11] Seq.length (view (self.final).t_Decisions__linked_list)
    = Seq.length (view (self.current).t_Decisions__linked_list)}
    (! return' {result}) ]


meta "compute_max_steps" 1000000

let rec move_to_front[#"/Users/sarekhs/CreuSAT/CreuSAT/src/decision.rs" 163 4 163 60] (self:MutBorrow.t t_Decisions) (tomove:UInt64.t) (_f:t_Formula) (return'  (x:()))= {[@expl:move_to_front requires #0] [%#sdecision'5] UInt64.t'int _f.t_Formula__num_vars
  < UInt64.t'int (v_MAX : UInt64.t)}
  {[@expl:move_to_front requires #1] [%#sdecision'6] UInt64.t'int tomove
  < Seq.length (view (self.current).t_Decisions__linked_list)}
  {[@expl:move_to_front requires #2] [%#sdecision'7] inv self.current (UInt64.t'int _f.t_Formula__num_vars)}
  (! bb0
  [ bb0 = s0
    [ s0 =  [ &_9 <- tomove'0 = (self'0.current).t_Decisions__start ] s1
    | s1 = any [ br0 -> {_9 = false} (! bb2) | br1 -> {_9} (! bb1) ]  ]
  
  | bb1 = s0 [ s0 = -{resolve'0 self'0}- s1 | s1 = bb17 ] 
  | bb2 = s0
    [ s0 = MutBorrow.borrow_mut <t_Vec> {(self'0.current).t_Decisions__linked_list}
        (fun (_ret:MutBorrow.t t_Vec) ->
           [ &_15 <- _ret ] 
           [ &self'0 <- { self'0 with current = { self'0.current with t_Decisions__linked_list = _ret.final } } ] 
          s1)
    | s1 = index_mut {_15} {tomove'0} (fun (_ret:MutBorrow.t t_Node) ->  [ &_14 <- _ret ] s2)
    | s2 = bb3 ]
  
  | bb3 = s0
    [ s0 = MutBorrow.borrow_final <t_Node> {_14.current} {MutBorrow.get_id _14}
        (fun (_ret:MutBorrow.t t_Node) ->  [ &moving <- _ret ]  [ &_14 <- { _14 with current = _ret.final } ] s1)
    | s1 =  [ &prev <- (moving.current).t_Node__prev ] s2
    | s2 =  [ &old_next <- (moving.current).t_Node__next ] s3
    | s3 = 
      [ &moving <- { moving with current = { moving.current with t_Node__prev = ([%#sdecision] (18446744073709551615 : UInt64.t)) } } ]
      
      s4
    | s4 = 
      [ &moving <- { moving with current = { moving.current with t_Node__next = (self'0.current).t_Decisions__start } } ]
      
      s5
    | s5 = 
      [ &moving <- { moving with current = { moving.current with t_Node__ts = (self'0.current).t_Decisions__timestamp } } ]
      
      s6
    | s6 = -{resolve'2 moving}- s7
    | s7 = -{resolve'2 _14}- s8
    | s8 =  [ &_22 <- (self'0.current).t_Decisions__timestamp = ([%#sdecision'0] (18446744073709551615 : UInt64.t)) ] s9
    | s9 = any [ br0 -> {_22 = false} (! bb6) | br1 -> {_22} (! bb4) ]  ]
  
  | bb4 = s0
    [ s0 = MutBorrow.borrow_mut <t_Decisions> {self'0.current}
        (fun (_ret:MutBorrow.t t_Decisions) ->
           [ &_25 <- _ret ] 
           [ &self'0 <- { self'0 with current = _ret.final } ] 
          s1)
    | s1 = rescore {_25} {_f'0} (fun (_ret:()) ->  [ &_24 <- _ret ] s2)
    | s2 = bb5 ]
  
  | bb5 = bb7
  | bb6 = s0
    [ s0 = UInt64.add {(self'0.current).t_Decisions__timestamp} {[%#sdecision'1] (1 : UInt64.t)}
        (fun (_ret:UInt64.t) ->
           [ &self'0 <- { self'0 with current = { self'0.current with t_Decisions__timestamp = _ret } } ] 
          s1)
    | s1 = bb7 ]
  
  | bb7 = s0
    [ s0 = {[@expl:assertion] [%#sdecision'2] UInt64.t'int (self'0.current).t_Decisions__start
      < UInt64.t'int _f'0.t_Formula__num_vars}
      s1
    | s1 = MutBorrow.borrow_mut <t_Vec> {(self'0.current).t_Decisions__linked_list}
        (fun (_ret:MutBorrow.t t_Vec) ->
           [ &_31 <- _ret ] 
           [ &self'0 <- { self'0 with current = { self'0.current with t_Decisions__linked_list = _ret.final } } ] 
          s2)
    | s2 = index_mut {_31} {(self'0.current).t_Decisions__start} (fun (_ret:MutBorrow.t t_Node) ->  [ &_30 <- _ret ] s3)
    | s3 = bb8 ]
  
  | bb8 = s0
    [ s0 =  [ &_30 <- { _30 with current = { _30.current with t_Node__prev = tomove'0 } } ] s1
    | s1 = -{resolve'2 _30}- s2
    | s2 =  [ &self'0 <- { self'0 with current = { self'0.current with t_Decisions__start = tomove'0 } } ] s3
    | s3 =  [ &_35 <- prev <> ([%#sdecision'3] (18446744073709551615 : UInt64.t)) ] s4
    | s4 = any [ br0 -> {_35 = false} (! bb11) | br1 -> {_35} (! bb9) ]  ]
  
  | bb9 = s0
    [ s0 = MutBorrow.borrow_mut <t_Vec> {(self'0.current).t_Decisions__linked_list}
        (fun (_ret:MutBorrow.t t_Vec) ->
           [ &_39 <- _ret ] 
           [ &self'0 <- { self'0 with current = { self'0.current with t_Decisions__linked_list = _ret.final } } ] 
          s1)
    | s1 = index_mut {_39} {prev} (fun (_ret:MutBorrow.t t_Node) ->  [ &_38 <- _ret ] s2)
    | s2 = bb10 ]
  
  | bb10 = s0
    [ s0 =  [ &_38 <- { _38 with current = { _38.current with t_Node__next = old_next } } ] s1
    | s1 = -{resolve'2 _38}- s2
    | s2 = bb12 ]
  
  | bb11 = bb12
  | bb12 = s0
    [ s0 =  [ &_41 <- old_next <> ([%#sdecision'4] (18446744073709551615 : UInt64.t)) ] s1
    | s1 = any [ br0 -> {_41 = false} (! bb15) | br1 -> {_41} (! bb13) ]  ]
  
  | bb13 = s0
    [ s0 = MutBorrow.borrow_final
        <t_Vec>
        {(self'0.current).t_Decisions__linked_list}
        {MutBorrow.inherit_id (MutBorrow.get_id self'0) 1}
        (fun (_ret:MutBorrow.t t_Vec) ->
           [ &_45 <- _ret ] 
           [ &self'0 <- { self'0 with current = { self'0.current with t_Decisions__linked_list = _ret.final } } ] 
          s1)
    | s1 = index_mut {_45} {old_next} (fun (_ret:MutBorrow.t t_Node) ->  [ &_44 <- _ret ] s2)
    | s2 = bb14 ]
  
  | bb14 = s0
    [ s0 =  [ &_44 <- { _44 with current = { _44.current with t_Node__prev = prev } } ] s1
    | s1 = -{resolve'2 _44}- s2
    | s2 = -{resolve'0 self'0}- s3
    | s3 = bb16 ]
  
  | bb15 = s0 [ s0 = -{resolve'0 self'0}- s1 | s1 = bb16 ] 
  | bb16 = bb17
  | bb17 = return''0 {_0} ]
  )
  [ & _0 : () = Any.any_l ()
  | & self'0 : MutBorrow.t t_Decisions = self
  | & tomove'0 : UInt64.t = tomove
  | & _f'0 : t_Formula = _f
  | & _9 : bool = Any.any_l ()
  | & moving : MutBorrow.t t_Node = Any.any_l ()
  | & _14 : MutBorrow.t t_Node = Any.any_l ()
  | & _15 : MutBorrow.t t_Vec = Any.any_l ()
  | & prev : UInt64.t = Any.any_l ()
  | & old_next : UInt64.t = Any.any_l ()
  | & _22 : bool = Any.any_l ()
  | & _24 : () = Any.any_l ()
  | & _25 : MutBorrow.t t_Decisions = Any.any_l ()
  | & _30 : MutBorrow.t t_Node = Any.any_l ()
  | & _31 : MutBorrow.t t_Vec = Any.any_l ()
  | & _35 : bool = Any.any_l ()
  | & _38 : MutBorrow.t t_Node = Any.any_l ()
  | & _39 : MutBorrow.t t_Vec = Any.any_l ()
  | & _41 : bool = Any.any_l ()
  | & _44 : MutBorrow.t t_Node = Any.any_l ()
  | & _45 : MutBorrow.t t_Vec = Any.any_l () ]
  
  [ return''0 (result:())-> {[@expl:move_to_front ensures] [%#sdecision'7] inv self.final (UInt64.t'int _f.t_Formula__num_vars)}
    (! return' {result}) ]
  
