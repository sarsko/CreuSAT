(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/lit.rs" 44 4 44 31 *)

(* lit::Lit *)

let%span slit = "/Users/sarekhs/CreuSAT/CreuSAT/src/lit.rs" 43 14 43 43
let%span slogic_lit = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 24 20 24 29

use creusot.int.UInt64
use creusot.prelude.Any

type t_Lit  =
  { t_Lit__idx: UInt64.t; t_Lit__polarity: bool }

function index_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 23 4 23 35] (self : t_Lit) : int =
  [%#slogic_lit] UInt64.t'int self.t_Lit__idx

meta "compute_max_steps" 1000000

let rec index[#"/Users/sarekhs/CreuSAT/CreuSAT/src/lit.rs" 44 4 44 31] (self:t_Lit) (return'  (x:UInt64.t))= (! bb0
  [ bb0 = s0 [ s0 =  [ &_0 <- self'0.t_Lit__idx ] s1 | s1 = return''0 {_0} ]  ]
  ) [ & _0 : UInt64.t = Any.any_l () | & self'0 : t_Lit = self ] 
  [ return''0 (result:UInt64.t)-> {[@expl:index ensures] [%#slit] UInt64.t'int result = index_logic self}
    (! return' {result}) ]
  
