(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 158 4 158 80 *)

(* watches::Watches *)

let%span svec = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 168 27 168 46
let%span svec'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 169 26 169 54
let%span svec'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 89 26 89 48
let%span svec'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 158 27 158 46
let%span svec'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 159 26 159 54
let%span svec'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 160 26 160 57
let%span svec'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 161 26 161 62
let%span svec'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 162 26 162 55
let%span svec'7 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 181 26 181 42
let%span svec'8 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 182 26 182 48
let%span svec'9 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 97 26 102 17
let%span svec'10 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/vec.rs" 21 14 21 41
let%span smodel = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 54 8 54 22
let%span smodel'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/model.rs" 72 8 72 22
let%span sslice = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 258 19 258 35
let%span sslice'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 259 19 259 35
let%span sslice'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 260 18 260 50
let%span sslice'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 123 20 123 37
let%span sslice'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 130 20 130 37
let%span sslice'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 137 20 137 94
let%span sslice'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 27 14 27 41
let%span sslice'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/std/slice.rs" 28 14 28 42
let%span slogic_assignments = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 53 12 54 74
let%span slogic_assignments'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 17 4 17 12
let%span sresolve = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/resolve.rs" 54 20 54 34
let%span slit = "/Users/sarekhs/CreuSAT/CreuSAT/src/lit.rs" 110 15 110 49
let%span slit'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/lit.rs" 111 14 111 53
let%span slit'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/lit.rs" 112 14 112 94
let%span slogic_lit = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 24 20 24 29
let%span slogic_lit'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 45 20 45 89
let%span slogic_lit'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 31 20 31 33
let%span slogic_lit'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 83 20 83 42
let%span slogic_lit'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 75 12 76 57
let%span slogic_lit'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 90 12 93 13
let%span slogic_lit'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 117 20 117 38
let%span slogic_lit'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 101 12 104 13
let%span slogic_formula = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 79 14 79 41
let%span slogic_formula'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 81 20 81 44
let%span slogic_formula'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 88 12 92 45
let%span slogic_formula'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 30 8 31 69
let%span slogic_formula'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 22 8 22 85
let%span slogic_trail = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 56 8 67 9
let%span slogic_trail'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 105 8 107 38
let%span slogic_trail'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 92 8 97 17
let%span slogic_trail'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 146 8 148 72
let%span slogic_trail'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 168 8 172 17
let%span slogic_trail'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 115 8 116 33
let%span slogic_trail'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 180 8 186 17
let%span slogic_trail'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 15 12 23 13
let%span slogic_trail'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 129 4 133 5
let%span slogic_clause = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 14 4 14 12
let%span slogic_clause'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 227 20 227 42
let%span slogic_clause'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 33 4 33 62
let%span slogic_clause'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 25 8 26 23
let%span slogic_clause'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 48 8 49 92
let%span slogic_util = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 28 4 28 31
let%span slogic_util'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 22 16 22 80
let%span sord = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 129 39 129 89
let%span sord'0 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 134 39 134 86
let%span sord'1 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 139 39 139 86
let%span sord'2 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 144 39 144 89
let%span sord'3 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 149 39 149 70
let%span sord'4 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 154 40 154 57
let%span sord'5 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 155 40 155 57
let%span sord'6 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 156 39 156 56
let%span sord'7 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 161 40 161 70
let%span sord'8 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 162 39 162 72
let%span sord'9 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 167 40 167 73
let%span sord'10 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 168 39 168 69
let%span sord'11 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 173 39 173 84
let%span sord'12 = "/Users/sarekhs/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/creusot-contracts-0.5.0/src/logic/ord.rs" 230 16 236 17
let%span swatches = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 160 27 160 28
let%span swatches'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 161 20 161 32
let%span swatches'1 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 179 17 179 18
let%span swatches'2 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 164 57 164 58
let%span swatches'3 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 169 52 169 70
let%span swatches'4 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 172 38 172 61
let%span swatches'5 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 173 38 173 50
let%span swatches'6 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 151 4 151 36
let%span swatches'7 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 152 15 152 42
let%span swatches'8 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 153 15 153 46
let%span swatches'9 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 154 15 154 22
let%span swatches'10 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 155 15 155 28
let%span swatches'11 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 156 15 156 39
let%span swatches'12 = "/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 157 15 157 44
let%span slogic_watches = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 76 12 76 63
let%span slogic_watches'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 14 8 19 64

use creusot.int.UInt64
use mach.int.Int
use creusot.prelude.Opaque
use seq.Seq
use creusot.int.UInt32
use creusot.prelude.MutBorrow
use creusot.slice.Slice64
use seq.Permut
use creusot.int.UInt8
use creusot.prelude.Any

type t_Lit  =
  { t_Lit__idx: UInt64.t; t_Lit__polarity: bool }

function index_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 23 4 23 35] (self : t_Lit) : int =
  [%#slogic_lit] UInt64.t'int self.t_Lit__idx

constant v_MAX : UInt64.t = (18446744073709551615 : UInt64.t)

function is_positive_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 30 4 30 42] (self : t_Lit) : bool =
  [%#slogic_lit'1] self.t_Lit__polarity

function to_neg_watchidx_logic [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 44 4 44 45] (self : t_Lit) : int

 =
  [%#slogic_lit'0] index_logic self * 2 + (if is_positive_logic self then 1 else 0)

let rec to_neg_watchidx (self:t_Lit) (return'  (x:UInt64.t))= {[@expl:to_neg_watchidx requires] [%#slit] index_logic self
  < Int.div (UInt64.t'int v_MAX) 2}
  any
  [ return''0 (result:UInt64.t)-> {[%#slit'0] UInt64.t'int result = to_neg_watchidx_logic self}
    {[%#slit'1] UInt64.t'int result = index_logic self * 2 + (if is_positive_logic self then 1 else 0)}
    (! return' {result}) ]


type t_NonNull  =
  { t_NonNull__pointer: Opaque.ptr }

type t_Unique  =
  { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }

type t_UsizeNoHighBit  =
  { t_UsizeNoHighBit__0: UInt64.t }

type t_RawVecInner  =
  { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }

type t_RawVec  =
  { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }

type t_Vec  =
  { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }

type t_Watches  =
  { t_Watches__watches: t_Vec }

type t_RawVec'0  =
  { t_RawVec__inner'0: t_RawVecInner; t_RawVec__qy95zmarker'0: () }

type t_Vec'0  =
  { t_Vec__buf'0: t_RawVec'0; t_Vec__len'0: UInt64.t }

type t_Formula  =
  { t_Formula__clauses: t_Vec'0; t_Formula__num_vars: UInt64.t }

type t_RawVec'1  =
  { t_RawVec__inner'1: t_RawVecInner; t_RawVec__qy95zmarker'1: () }

type t_Vec'1  =
  { t_Vec__buf'1: t_RawVec'1; t_Vec__len'1: UInt64.t }

type t_Watcher  =
  { t_Watcher__cref: UInt64.t; t_Watcher__blocker: t_Lit }

constant v_MAX'0 : UInt64.t = (18446744073709551615 : UInt64.t)

function view (self : t_Vec'1) : Seq.seq t_Watcher

axiom view_spec : forall self : t_Vec'1 . [%#svec'10] Seq.length (view self) <= UInt64.t'int (v_MAX'0 : UInt64.t)

type t_RawVec'2  =
  { t_RawVec__inner'2: t_RawVecInner; t_RawVec__qy95zmarker'2: () }

type t_Vec'2  =
  { t_Vec__buf'2: t_RawVec'2; t_Vec__len'2: UInt64.t }

type t_Clause  =
  { t_Clause__deleted: bool; t_Clause__lbd: UInt32.t; t_Clause__search: UInt64.t; t_Clause__lits: t_Vec'2 }

function view'0 (self : t_Vec'0) : Seq.seq t_Clause

axiom view_spec'0 : forall self : t_Vec'0 . [%#svec'10] Seq.length (view'0 self) <= UInt64.t'int (v_MAX'0 : UInt64.t)

function view'1 (self : t_Vec'2) : Seq.seq t_Lit

axiom view_spec'1 : forall self : t_Vec'2 . [%#svec'10] Seq.length (view'1 self) <= UInt64.t'int (v_MAX'0 : UInt64.t)

function view'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 16 4 16 33] (self : t_Clause) : Seq.seq t_Lit

 =
  [%#slogic_clause] view'1 self.t_Clause__lits

predicate watches_inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 12 0 12 77] (w : Seq.seq t_Vec'1) (n : int) (f : t_Formula)

 =
  [%#slogic_watches'0] 2 * n = Seq.length w
  /\ (forall i : int . 0 <= i /\ i < Seq.length w
   -> (forall j : int . 0 <= j /\ j < Seq.length (view (Seq.get w i))
   -> UInt64.t'int (Seq.get (view (Seq.get w i)) j).t_Watcher__cref < Seq.length (view'0 f.t_Formula__clauses)
  /\ Seq.length (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int (Seq.get (view (Seq.get w i)) j).t_Watcher__cref)))
  > 1
  /\ index_logic (Seq.get (view (Seq.get w i)) j).t_Watcher__blocker < UInt64.t'int f.t_Formula__num_vars))

function view'3 (self : t_Vec) : Seq.seq t_Vec'1

axiom view_spec'2 : forall self : t_Vec . [%#svec'10] Seq.length (view'3 self) <= UInt64.t'int (v_MAX'0 : UInt64.t)

predicate inv [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_watches.rs" 74 4 74 40] (self : t_Watches) (f : t_Formula)

 =
  [%#slogic_watches] watches_inv_internal (view'3 self.t_Watches__watches) (UInt64.t'int f.t_Formula__num_vars) f

predicate in_bounds [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Vec'1) =
  [%#sslice'2] UInt64.t'int self < Seq.length seq

function view'4 (self : t_Vec) : Seq.seq t_Vec'1 =
  [%#smodel] view'3 self

predicate has_value [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Vec'1) (out : t_Vec'1) =
  [%#sslice'3] Seq.get seq (UInt64.t'int self) = out

let rec index (self_:t_Vec) (ix:UInt64.t) (return'  (x:t_Vec'1))= {[@expl:index requires] [%#svec] in_bounds ix (view'4 self_)}
  any [ return''0 (result:t_Vec'1)-> {[%#svec'0] has_value ix (view'4 self_) result} (! return' {result}) ] 

function view'5 (self : t_Vec'1) : Seq.seq t_Watcher =
  [%#smodel] view self

let rec len (self_:t_Vec'1) (return'  (x:UInt64.t))= any
  [ return''0 (result:UInt64.t)-> {[%#svec'1] UInt64.t'int result = Seq.length (view'5 self_)} (! return' {result}) ]


predicate in_bounds'0 [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Watcher) =
  [%#sslice'2] UInt64.t'int self < Seq.length seq

predicate has_value'0 [@inline:trivial] (self : UInt64.t) (seq : Seq.seq t_Watcher) (out : t_Watcher) =
  [%#sslice'3] Seq.get seq (UInt64.t'int self) = out

let rec index'0 (self_:t_Vec'1) (ix:UInt64.t) (return'  (x:t_Watcher))= {[@expl:index requires] [%#svec] in_bounds'0 ix (view'5 self_)}
  any [ return''0 (result:t_Watcher)-> {[%#svec'0] has_value'0 ix (view'5 self_) result} (! return' {result}) ] 

function view'6 (self : MutBorrow.t t_Vec) : Seq.seq t_Vec'1 =
  [%#smodel'0] view'3 self.current

predicate resolve_elswhere [@inline:trivial] (self : UInt64.t) (old' : Seq.seq t_Vec'1) (fin : Seq.seq t_Vec'1) =
  [%#sslice'4] forall i : int . 0 <= i /\ i <> UInt64.t'int self /\ i < Seq.length old'
   -> Seq.get old' i = Seq.get fin i

let rec index_mut (self_:MutBorrow.t t_Vec) (ix:UInt64.t) (return'  (x:MutBorrow.t t_Vec'1))= {[@expl:index_mut requires] [%#svec'2] in_bounds ix (view'6 self_)}
  any
  [ return''0 (result:MutBorrow.t t_Vec'1)-> {[%#svec'3] has_value ix (view'6 self_) result.current}
    {[%#svec'4] has_value ix (view'3 self_.final) result.final}
    {[%#svec'5] resolve_elswhere ix (view'6 self_) (view'3 self_.final)}
    {[%#svec'6] Seq.length (view'3 self_.final) = Seq.length (view'6 self_)}
    (! return' {result}) ]


function view'7 (self : Slice64.slice t_Watcher) : Seq.seq t_Watcher

axiom view_spec'3 : forall self : Slice64.slice t_Watcher . ([%#sslice'5] Seq.length (view'7 self)
<= UInt64.t'int (v_MAX'0 : UInt64.t))
&& ([%#sslice'6] view'7 self = Slice64.id self)

function view'8 (self : MutBorrow.t (Slice64.slice t_Watcher)) : Seq.seq t_Watcher =
  [%#smodel'0] view'7 self.current

function view'9 (self : MutBorrow.t t_Vec'1) : Seq.seq t_Watcher =
  [%#smodel'0] view self.current

let rec deref_mut (self_:MutBorrow.t t_Vec'1) (return'  (x:MutBorrow.t (Slice64.slice t_Watcher)))= any
  [ return''0 (result:MutBorrow.t (Slice64.slice t_Watcher))-> {[%#svec'7] view'8 result = view'9 self_}
    {[%#svec'8] view'7 result.final = view self_.final}
    (! return' {result}) ]


let rec swap (self_:MutBorrow.t (Slice64.slice t_Watcher)) (i:UInt64.t) (j:UInt64.t) (return'  (x:()))= {[@expl:swap requires #0] [%#sslice] UInt64.t'int i
  < Seq.length (view'8 self_)}
  {[@expl:swap requires #1] [%#sslice'0] UInt64.t'int j < Seq.length (view'8 self_)}
  any
  [ return''0 (result:())-> {[%#sslice'1] Permut.exchange (view'7 self_.final) (view'8 self_) (UInt64.t'int i) (UInt64.t'int j)}
    (! return' {result}) ]


predicate resolve (self : MutBorrow.t t_Vec'1) =
  [%#sresolve] self.final = self.current

predicate resolve'0 (_0 : MutBorrow.t t_Vec'1) =
  resolve _0

predicate resolve'1 (self : MutBorrow.t (Slice64.slice t_Watcher)) =
  [%#sresolve] self.final = self.current

predicate resolve'2 (_0 : MutBorrow.t (Slice64.slice t_Watcher)) =
  resolve'1 _0

type t_Option  =
  | C_None
  | C_Some t_Watcher

let rec pop (self_:MutBorrow.t t_Vec'1) (return'  (x:t_Option))= any
  [ return''0 (result:t_Option)-> {[%#svec'9] match result with
      | C_Some t -> view self_.final = Seq.([..]) (view'9 self_) 0 (Seq.length (view'9 self_) - 1)
      /\ view'9 self_ = Seq.snoc (view self_.final) t
      | C_None -> self_.current = self_.final /\ Seq.length (view'9 self_) = 0
      end}
    (! return' {result}) ]


predicate resolve'3 (self : MutBorrow.t t_Watches) =
  [%#sresolve] self.final = self.current

predicate resolve'4 (_0 : MutBorrow.t t_Watches) =
  resolve'3 _0

let rec v_Some (input:t_Option) (ret  (field_0:t_Watcher))= any
  [ good (field_0:t_Watcher)-> {C_Some field_0 = input} (! ret {field_0})
  | bad -> {forall field_0 : t_Watcher [C_Some field_0 : t_Option] . C_Some field_0 <> input} (! {false} any) ]


type t_RawVec'3  =
  { t_RawVec__inner'3: t_RawVecInner; t_RawVec__qy95zmarker'3: () }

type t_Vec'3  =
  { t_Vec__buf'3: t_RawVec'3; t_Vec__len'3: UInt64.t }

type t_Assignments  =
  { t_Assignments__0: t_Vec'3 }

type t_RawVec'4  =
  { t_RawVec__inner'4: t_RawVecInner; t_RawVec__qy95zmarker'4: () }

type t_Vec'4  =
  { t_Vec__buf'4: t_RawVec'4; t_Vec__len'4: UInt64.t }

type t_RawVec'5  =
  { t_RawVec__inner'5: t_RawVecInner; t_RawVec__qy95zmarker'5: () }

type t_Vec'5  =
  { t_Vec__buf'5: t_RawVec'5; t_Vec__len'5: UInt64.t }

type t_Trail  =
  { t_Trail__assignments: t_Assignments;
    t_Trail__lit_to_level: t_Vec'4;
    t_Trail__trail: t_Vec'5;
    t_Trail__curr_i: UInt64.t;
    t_Trail__decisions: t_Vec'4 }

predicate inv'0 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 82 4 82 36] (self : t_Lit) (n : int) =
  [%#slogic_lit'2] index_logic self < n

predicate vars_in_range_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 23 0 23 55] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'2] forall i : int . 0 <= i /\ i < Seq.length s  -> inv'0 (Seq.get s i) n

predicate no_duplicate_indexes_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 46 0 46 54] (s : Seq.seq t_Lit)

 =
  [%#slogic_clause'3] forall j : int, k : int . 0 <= j /\ j < Seq.length s /\ 0 <= k /\ k < Seq.length s /\ k <> j
   -> index_logic (Seq.get s k) <> index_logic (Seq.get s j)

predicate inv_internal [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 32 0 32 48] (s : Seq.seq t_Lit) (n : int)

 =
  [%#slogic_clause'1] vars_in_range_inner s n /\ no_duplicate_indexes_inner s

predicate inv'1 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_clause.rs" 226 4 226 36] (self : t_Clause) (n : int) =
  [%#slogic_clause'0] inv_internal (view'2 self) n

predicate inv_mirror [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 86 4 86 35] (self : t_Formula) =
  [%#slogic_formula'1] (forall i : int . 0 <= i /\ i < Seq.length (view'0 self.t_Formula__clauses)
   -> inv'1 (Seq.get (view'0 self.t_Formula__clauses) i) (UInt64.t'int self.t_Formula__num_vars))
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'0 self.t_Formula__clauses)
   -> Seq.length (view'2 (Seq.get (view'0 self.t_Formula__clauses) i)) >= 1)

type t_FormulaModel  =
  { t_FormulaModel__clauses: Seq.seq t_Clause; t_FormulaModel__num_vars: int }

predicate formula_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 28 0 28 49] (f : t_FormulaModel)

 =
  [%#slogic_formula'2] forall i : int . 0 <= i /\ i < Seq.length f.t_FormulaModel__clauses
   -> inv'1 (Seq.get f.t_FormulaModel__clauses i) f.t_FormulaModel__num_vars
  /\ Seq.length (view'2 (Seq.get f.t_FormulaModel__clauses i)) > 0

function view'10 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 21 4 21 33] (self : t_Formula) : t_FormulaModel

 =
  [%#slogic_formula'3] { t_FormulaModel__clauses = view'0 self.t_Formula__clauses;
                         t_FormulaModel__num_vars = UInt64.t'int self.t_Formula__num_vars }

predicate inv'2 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_formula.rs" 80 4 80 28] (self : t_Formula) =
  [%#slogic_formula'0] formula_invariant (view'10 self)

axiom inv_spec : forall self : t_Formula . [%#slogic_formula] inv'2 self = inv_mirror self

function view'11 (self : t_Vec'3) : Seq.seq UInt8.t

axiom view_spec'4 : forall self : t_Vec'3 . [%#svec'10] Seq.length (view'11 self) <= UInt64.t'int (v_MAX'0 : UInt64.t)

function view'12 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 19 4 19 33] (self : t_Assignments) : Seq.seq UInt8.t

 =
  [%#slogic_assignments'0] view'11 self.t_Assignments__0

predicate inv'3 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_assignments.rs" 51 4 51 40] (self : t_Assignments) (f : t_Formula)

 =
  [%#slogic_assignments] UInt64.t'int f.t_Formula__num_vars = Seq.length (view'12 self)
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'12 self)  -> UInt8.t'int (Seq.get (view'12 self) i) <= 3)

type t_Reason  =
  | C_Decision
  | C_Unit UInt64.t
  | C_Long UInt64.t

type t_Step  =
  { t_Step__lit: t_Lit; t_Step__decision_level: UInt64.t; t_Step__reason: t_Reason }

predicate inv'4 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 13 4 13 40] (self : t_Reason) (f : t_Formula)

 =
  [%#slogic_trail'6] match self with
    | C_Long cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view'0 f.t_Formula__clauses)
    /\ Seq.length (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int cref))) > 1
    | C_Unit cref -> 0 <= UInt64.t'int cref
    /\ UInt64.t'int cref < Seq.length (view'0 f.t_Formula__clauses)
    /\ Seq.length (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int cref))) = 1
    | _ -> true
    end

predicate trail_invariant [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 103 0 103 60] (trail : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'0] forall i : int . 0 <= i /\ i < Seq.length trail
   -> inv'0 (Seq.get trail i).t_Step__lit (UInt64.t'int f.t_Formula__num_vars)
  /\ inv'4 (Seq.get trail i).t_Step__reason f

function view'13 (self : t_Vec'5) : Seq.seq t_Step

axiom view_spec'5 : forall self : t_Vec'5 . [%#svec'10] Seq.length (view'13 self) <= UInt64.t'int (v_MAX'0 : UInt64.t)

function view'14 (self : t_Vec'4) : Seq.seq UInt64.t

axiom view_spec'6 : forall self : t_Vec'4 . [%#svec'10] Seq.length (view'14 self) <= UInt64.t'int (v_MAX'0 : UInt64.t)

predicate lit_idx_in [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 73 4 73 46] (self : t_Lit) (c : t_Clause)
 =
  [%#slogic_lit'3] exists i : int . 0 <= i
  /\ i < Seq.length (view'2 c) /\ index_logic (Seq.get (view'2 c) i) = index_logic self

predicate lit_not_in_less_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 90 0 90 62] (t : Seq.seq t_Step) (f : t_Formula)

 =
  [%#slogic_trail'1] forall i : int . 0 <= i /\ i < Seq.length t
   -> (forall j : int . 0 <= j /\ j < i
   -> match (Seq.get t j).t_Step__reason with
    | C_Long cref -> not lit_idx_in (Seq.get t i).t_Step__lit (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int cref))
    | _ -> true
    end)

predicate lit_is_unique_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 144 0 144 52] (trail : Seq.seq t_Step)

 =
  [%#slogic_trail'2] forall i : int . 0 <= i /\ i < Seq.length trail
   -> (forall j : int . 0 <= j /\ j < i
   -> index_logic (Seq.get trail j).t_Step__lit <> index_logic (Seq.get trail i).t_Step__lit)

predicate sat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 88 4 88 57] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'4] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 1
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 0


predicate unsat_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 99 4 99 59] (self : t_Lit) (a : Seq.seq UInt8.t)

 =
  [%#slogic_lit'6] if is_positive_logic self then
    UInt8.t'int (Seq.get a (index_logic self)) = 0
  else
    UInt8.t'int (Seq.get a (index_logic self)) = 1


predicate clause_post_with_regards_to_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 128 0 128 90] (c : t_Clause) (a : Seq.seq UInt8.t) (j : int)

 =
  [%#slogic_trail'7] index_logic (Seq.get (view'2 c) 0) = j
  /\ sat_inner (Seq.get (view'2 c) 0) a
  /\ (forall i : int . 1 <= i /\ i < Seq.length (view'2 c)  -> unsat_inner (Seq.get (view'2 c) i) a)

predicate long_are_post_unit_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 166 0 166 92] (trail : Seq.seq t_Step) (f : t_Formula) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'3] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Long k -> clause_post_with_regards_to_inner (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int k)) a (index_logic (Seq.get trail j).t_Step__lit)
    | _ -> true
    end

predicate trail_entries_are_assigned_inner [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 113 0 113 84] (t : Seq.seq t_Step) (a : Seq.seq UInt8.t)

 =
  [%#slogic_trail'4] forall j : int . 0 <= j /\ j < Seq.length t  -> sat_inner (Seq.get t j).t_Step__lit a

type t_Ordering  =
  | C_Less
  | C_Equal
  | C_Greater

function cmp_log (self : UInt64.t) (o : UInt64.t) : t_Ordering =
  [%#sord'12] if UInt64.lt self o then C_Less else if self = o then C_Equal else C_Greater

function eq_cmp (x : UInt64.t) (y : UInt64.t) : ()

axiom eq_cmp_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'11] (x = y) = (cmp_log x y = C_Equal)

function antisym2 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym2_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'9] cmp_log x y = C_Greater)
 -> ([%#sord'10] cmp_log y x = C_Less)

function antisym1 (x : UInt64.t) (y : UInt64.t) : ()

axiom antisym1_spec : forall x : UInt64.t, y : UInt64.t . ([%#sord'7] cmp_log x y = C_Less)
 -> ([%#sord'8] cmp_log y x = C_Greater)

function trans (x : UInt64.t) (y : UInt64.t) (z : UInt64.t) (o : t_Ordering) : ()

axiom trans_spec : forall x : UInt64.t, y : UInt64.t, z : UInt64.t, o : t_Ordering . ([%#sord'4] cmp_log x y = o)
 -> ([%#sord'5] cmp_log y z = o)  -> ([%#sord'6] cmp_log x z = o)

function refl (x : UInt64.t) : ()

axiom refl_spec : forall x : UInt64.t . [%#sord'3] cmp_log x x = C_Equal

function cmp_gt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_gt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'2] UInt64.gt x y = (cmp_log x y = C_Greater)

function cmp_ge_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_ge_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'1] UInt64.ge x y = (cmp_log x y <> C_Less)

function cmp_lt_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_lt_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord'0] UInt64.lt x y = (cmp_log x y = C_Less)

function cmp_le_log (x : UInt64.t) (y : UInt64.t) : ()

axiom cmp_le_log_spec : forall x : UInt64.t, y : UInt64.t . [%#sord] UInt64.le x y = (cmp_log x y <> C_Greater)

predicate sorted_range [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 21 0 21 58] (s : Seq.seq UInt64.t) (l : int) (u : int)

 =
  [%#slogic_util'0] forall i : int, j : int . l <= i /\ i < j /\ j < u  -> UInt64.le (Seq.get s i) (Seq.get s j)

predicate sorted [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_util.rs" 27 0 27 36] (s : Seq.seq UInt64.t) =
  [%#slogic_util] sorted_range s 0 (Seq.length s)

predicate sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_lit.rs" 116 4 116 44] (self : t_Lit) (a : t_Assignments)
 =
  [%#slogic_lit'5] sat_inner self (view'12 a)

predicate unit_are_sat [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 178 0 178 73] (trail : Seq.seq t_Step) (f : t_Formula) (a : t_Assignments)

 =
  [%#slogic_trail'5] forall j : int . 0 <= j /\ j < Seq.length trail
   -> match (Seq.get trail j).t_Step__reason with
    | C_Unit k -> (Seq.get trail j).t_Step__lit
    = Seq.get (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int k))) 0
    /\ sat (Seq.get (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int k))) 0) a
    | _ -> true
    end

predicate inv'5 [#"/Users/sarekhs/CreuSAT/CreuSAT/src/logic/logic_trail.rs" 55 4 55 40] (self : t_Trail) (f : t_Formula)
 =
  [%#slogic_trail] inv'3 self.t_Trail__assignments f
  /\ trail_invariant (view'13 self.t_Trail__trail) f
  /\ Seq.length (view'14 self.t_Trail__lit_to_level) = UInt64.t'int f.t_Formula__num_vars
  /\ lit_not_in_less_inner (view'13 self.t_Trail__trail) f
  /\ lit_is_unique_inner (view'13 self.t_Trail__trail)
  /\ long_are_post_unit_inner (view'13 self.t_Trail__trail) f (view'12 self.t_Trail__assignments)
  /\ trail_entries_are_assigned_inner (view'13 self.t_Trail__trail) (view'12 self.t_Trail__assignments)
  /\ sorted (view'14 self.t_Trail__decisions)
  /\ unit_are_sat (view'13 self.t_Trail__trail) f self.t_Trail__assignments
  /\ (forall i : int . 0 <= i /\ i < Seq.length (view'14 self.t_Trail__decisions)
   -> UInt64.t'int (Seq.get (view'14 self.t_Trail__decisions) i) <= Seq.length (view'13 self.t_Trail__trail))

meta "compute_max_steps" 1000000

let rec unwatch[#"/Users/sarekhs/CreuSAT/CreuSAT/src/watches.rs" 158 4 158 80] (self:MutBorrow.t t_Watches) (f:t_Formula) (trail:t_Trail) (cref:UInt64.t) (lit:t_Lit) (return'  (x:()))= {[@expl:unwatch requires #0] [%#swatches'6] inv self.current f}
  {[@expl:unwatch requires #1] [%#swatches'7] UInt64.t'int f.t_Formula__num_vars < Int.div (UInt64.t'int v_MAX) 2}
  {[@expl:unwatch requires #2] [%#swatches'8] index_logic lit < UInt64.t'int f.t_Formula__num_vars}
  {[@expl:unwatch requires #3] [%#swatches'9] inv'2 f}
  {[@expl:unwatch requires #4] [%#swatches'10] inv'5 trail f}
  {[@expl:unwatch requires #5] [%#swatches'11] UInt64.t'int cref < Seq.length (view'0 f.t_Formula__clauses)}
  {[@expl:unwatch requires #6] [%#swatches'12] Seq.length (view'2 (Seq.get (view'0 f.t_Formula__clauses) (UInt64.t'int cref)))
  >= 2}
  (! bb0
  [ bb0 = s0 [ s0 = to_neg_watchidx {lit'0} (fun (_ret:UInt64.t) ->  [ &watchidx <- _ret ] s1) | s1 = bb1 ] 
  | bb1 = s0 [ s0 =  [ &i <- [%#swatches] (0 : UInt64.t) ] s1 | s1 = bb2 ] 
  | bb2 = bb2'0
    [ bb2'0 = {[@expl:loop invariant] [%#swatches'0] inv self'0.current f'0}
      (! s0) [ s0 = bb3 ] 
      [ bb3 = s0
        [ s0 = index {(self'0.current).t_Watches__watches} {watchidx} (fun (_ret:t_Vec'1) ->  [ &_24 <- _ret ] s1)
        | s1 = bb4 ]
      
      | bb4 = s0 [ s0 = len {_24} (fun (_ret:UInt64.t) ->  [ &_22 <- _ret ] s1) | s1 = bb5 ] 
      | bb5 = s0
        [ s0 =  [ &_20 <- UInt64.lt i _22 ] s1 | s1 = any [ br0 -> {_20 = false} (! bb23) | br1 -> {_20} (! bb6) ]  ]
      
      | bb6 = s0
        [ s0 = index {(self'0.current).t_Watches__watches} {watchidx} (fun (_ret:t_Vec'1) ->  [ &_32 <- _ret ] s1)
        | s1 = bb7 ]
      
      | bb7 = s0 [ s0 = index'0 {_32} {i} (fun (_ret:t_Watcher) ->  [ &_30 <- _ret ] s1) | s1 = bb8 ] 
      | bb8 = s0
        [ s0 =  [ &_28 <- _30.t_Watcher__cref = cref'0 ] s1
        | s1 = any [ br0 -> {_28 = false} (! bb22) | br1 -> {_28} (! bb9) ]  ]
      
      | bb22 = s0
        [ s0 = UInt64.add {i} {[%#swatches'1] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &i <- _ret ] s1) | s1 = bb2'0 ]
       ]
     ]
  
  | bb9 = s0
    [ s0 = index {(self'0.current).t_Watches__watches} {watchidx} (fun (_ret:t_Vec'1) ->  [ &_41 <- _ret ] s1)
    | s1 = bb10 ]
  
  | bb10 = s0 [ s0 = len {_41} (fun (_ret:UInt64.t) ->  [ &_39 <- _ret ] s1) | s1 = bb11 ] 
  | bb11 = s0
    [ s0 = UInt64.sub {_39} {[%#swatches'2] (1 : UInt64.t)} (fun (_ret:UInt64.t) ->  [ &end' <- _ret ] s1)
    | s1 = MutBorrow.borrow_mut <t_Vec> {(self'0.current).t_Watches__watches}
        (fun (_ret:MutBorrow.t t_Vec) ->
           [ &_49 <- _ret ] 
           [ &self'0 <- { self'0 with current = { t_Watches__watches = _ret.final } } ] 
          s2)
    | s2 = index_mut {_49} {watchidx} (fun (_ret:MutBorrow.t t_Vec'1) ->  [ &_48 <- _ret ] s3)
    | s3 = bb12 ]
  
  | bb12 = s0
    [ s0 = MutBorrow.borrow_final <t_Vec'1> {_48.current} {MutBorrow.get_id _48}
        (fun (_ret:MutBorrow.t t_Vec'1) ->  [ &_47 <- _ret ]  [ &_48 <- { _48 with current = _ret.final } ] s1)
    | s1 = deref_mut {_47} (fun (_ret:MutBorrow.t (Slice64.slice t_Watcher)) ->  [ &_46 <- _ret ] s2)
    | s2 = bb13 ]
  
  | bb13 = s0
    [ s0 = MutBorrow.borrow_final <Slice64.slice t_Watcher> {_46.current} {MutBorrow.get_id _46}
        (fun (_ret:MutBorrow.t (Slice64.slice t_Watcher)) ->
           [ &_45 <- _ret ] 
           [ &_46 <- { _46 with current = _ret.final } ] 
          s1)
    | s1 = swap {_45} {i} {end'} (fun (_ret:()) ->  [ &_44 <- _ret ] s2)
    | s2 = bb14 ]
  
  | bb14 = s0
    [ s0 = -{resolve'0 _48}- s1 | s1 = -{resolve'2 _46}- s2 | s2 =  [ &old_w <- [%#swatches'3] self'0 ] s3 | s3 = bb15 ]
  
  | bb15 = s0
    [ s0 = MutBorrow.borrow_final
        <t_Vec>
        {(self'0.current).t_Watches__watches}
        {MutBorrow.inherit_id (MutBorrow.get_id self'0) 1}
        (fun (_ret:MutBorrow.t t_Vec) ->
           [ &_59 <- _ret ] 
           [ &self'0 <- { self'0 with current = { t_Watches__watches = _ret.final } } ] 
          s1)
    | s1 = index_mut {_59} {watchidx} (fun (_ret:MutBorrow.t t_Vec'1) ->  [ &_58 <- _ret ] s2)
    | s2 = bb16 ]
  
  | bb16 = s0
    [ s0 = MutBorrow.borrow_final <t_Vec'1> {_58.current} {MutBorrow.get_id _58}
        (fun (_ret:MutBorrow.t t_Vec'1) ->  [ &_57 <- _ret ]  [ &_58 <- { _58 with current = _ret.final } ] s1)
    | s1 = pop {_57} (fun (_ret:t_Option) ->  [ &_56 <- _ret ] s2)
    | s2 = bb17 ]
  
  | bb17 = s0
    [ s0 = -{resolve'0 _58}- s1
    | s1 = -{resolve'4 self'0}- s2
    | s2 = any [ br0 -> {_56 = C_None} (! bb20) | br1 (x0:t_Watcher)-> {_56 = C_Some x0} (! bb19) ]  ]
  
  | bb19 = bb21
  | bb21 = s0
    [ s0 = v_Some {_56} (fun (r0:t_Watcher) ->  [ &w <- r0 ] s1)
    | s1 = {[@expl:assertion] [%#swatches'4] old_w.final = self'0.final} s2
    | s2 = {[@expl:assertion] [%#swatches'5] inv self'0.current f'0} s3
    | s3 = bb24 ]
  
  | bb20 = {false} any
  | bb23 = s0 [ s0 = -{resolve'4 self'0}- s1 | s1 = bb24 ] 
  | bb24 = return''0 {_0} ]
  )
  [ & _0 : () = Any.any_l ()
  | & self'0 : MutBorrow.t t_Watches = self
  | & f'0 : t_Formula = f
  | & cref'0 : UInt64.t = cref
  | & lit'0 : t_Lit = lit
  | & watchidx : UInt64.t = Any.any_l ()
  | & i : UInt64.t = Any.any_l ()
  | & _20 : bool = Any.any_l ()
  | & _22 : UInt64.t = Any.any_l ()
  | & _24 : t_Vec'1 = Any.any_l ()
  | & _28 : bool = Any.any_l ()
  | & _30 : t_Watcher = Any.any_l ()
  | & _32 : t_Vec'1 = Any.any_l ()
  | & end' : UInt64.t = Any.any_l ()
  | & _39 : UInt64.t = Any.any_l ()
  | & _41 : t_Vec'1 = Any.any_l ()
  | & _44 : () = Any.any_l ()
  | & _45 : MutBorrow.t (Slice64.slice t_Watcher) = Any.any_l ()
  | & _46 : MutBorrow.t (Slice64.slice t_Watcher) = Any.any_l ()
  | & _47 : MutBorrow.t t_Vec'1 = Any.any_l ()
  | & _48 : MutBorrow.t t_Vec'1 = Any.any_l ()
  | & _49 : MutBorrow.t t_Vec = Any.any_l ()
  | & old_w : MutBorrow.t t_Watches = Any.any_l ()
  | & _56 : t_Option = Any.any_l ()
  | & _57 : MutBorrow.t t_Vec'1 = Any.any_l ()
  | & _58 : MutBorrow.t t_Vec'1 = Any.any_l ()
  | & _59 : MutBorrow.t t_Vec = Any.any_l ()
  | & w : t_Watcher = Any.any_l () ]
   [ return''0 (result:())-> {[@expl:unwatch ensures] [%#swatches'6] inv self.final f} (! return' {result}) ] 
