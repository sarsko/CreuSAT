(* #"/Users/sarekhs/CreuSAT/CreuSAT/src/util.rs" 118 0 118 39 *)

let%span sutil = "/Users/sarekhs/CreuSAT/CreuSAT/src/util.rs" 117 10 117 36
let%span sutil'0 = "/Users/sarekhs/CreuSAT/CreuSAT/src/util.rs" 109 4 113 5

use creusot.int.UInt64
use mach.int.Int
use creusot.prelude.Any

function max_log [#"/Users/sarekhs/CreuSAT/CreuSAT/src/util.rs" 108 0 108 37] (a : int) (b : int) : int =
  [%#sutil'0] if a >= b then a else b

meta "compute_max_steps" 1000000

let rec max[#"/Users/sarekhs/CreuSAT/CreuSAT/src/util.rs" 118 0 118 39] (a:UInt64.t) (b:UInt64.t) (return'  (x:UInt64.t))= (! bb0
  [ bb0 = s0
    [ s0 =  [ &_4 <- UInt64.ge a'0 b'0 ] s1 | s1 = any [ br0 -> {_4 = false} (! bb2) | br1 -> {_4} (! bb1) ]  ]
  
  | bb1 = s0 [ s0 =  [ &_0 <- a'0 ] s1 | s1 = bb3 ] 
  | bb2 = s0 [ s0 =  [ &_0 <- b'0 ] s1 | s1 = bb3 ] 
  | bb3 = return''0 {_0} ]
  ) [ & _0 : UInt64.t = Any.any_l () | & a'0 : UInt64.t = a | & b'0 : UInt64.t = b | & _4 : bool = Any.any_l () ] 
  [ return''0 (result:UInt64.t)-> {[@expl:max ensures] [%#sutil] UInt64.t'int result
    = max_log (UInt64.t'int a) (UInt64.t'int b)}
    (! return' {result}) ]
  
