<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.12" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="CreuSAT.mlcfg"/>
<theory name="CreuSat_Assignments_Impl0_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="30"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Assignments_Impl1_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="252"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Assignments_Impl2_Len" proved="true">
 <goal name="len&#39;vc" expl="VC for len" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="47"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_LogicFormula_Impl1_Invariant_Impl" proved="true">
 <goal name="invariant&#39;&#39;vc" expl="VC for invariant&#39;" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="112"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl2_IsPositive" proved="true">
 <goal name="is_positive&#39;vc" expl="VC for is_positive" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="4"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl2_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="6"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Assignments_Impl2_SetAssignment" proved="true">
 <goal name="set_assignment&#39;vc" expl="VC for set_assignment" proved="true">
 <proof prover="0"><result status="valid" time="0.14" steps="208011"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="91316"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Assignments_Impl2_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="144"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl3_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="58"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl0_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="50"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl1_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="266"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl2_Len" proved="true">
 <goal name="len&#39;vc" expl="VC for len" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="26"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl2_CheckLitInvariant" proved="true">
 <goal name="check_lit_invariant&#39;vc" expl="VC for check_lit_invariant" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="89"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl2_NoDuplicates" proved="true">
 <goal name="no_duplicates&#39;vc" expl="VC for no_duplicates" proved="true">
 <proof prover="1"><result status="valid" time="0.51" steps="63616"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl2_CheckClauseInvariant" proved="true">
 <goal name="check_clause_invariant&#39;vc" expl="VC for check_clause_invariant" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="311"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl2_MoveToEnd" proved="true">
 <goal name="move_to_end&#39;vc" expl="VC for move_to_end" proved="true">
 <proof prover="0"><result status="valid" time="0.50" steps="1161894"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="106846"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl2_RemoveFromClause" proved="true">
 <goal name="remove_from_clause&#39;vc" expl="VC for remove_from_clause" proved="true">
 <proof prover="0"><result status="valid" time="0.48" steps="657414"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="183622"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl2_LitUnsat" proved="true">
 <goal name="lit_unsat&#39;vc" expl="VC for lit_unsat" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="211"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl2_LitUnset" proved="true">
 <goal name="lit_unset&#39;vc" expl="VC for lit_unset" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="141"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl2_UnitAndUnset" proved="true">
 <goal name="unit_and_unset&#39;vc" expl="VC for unit_and_unset" proved="true">
 <proof prover="1"><result status="valid" time="0.58" steps="65352"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl2_SwapLitsInClause" proved="true">
 <goal name="swap_lits_in_clause&#39;vc" expl="VC for swap_lits_in_clause" proved="true">
 <proof prover="0"><result status="valid" time="0.67" steps="1085010"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="137572"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl2_CalcLbd" proved="true">
 <goal name="calc_lbd&#39;vc" expl="VC for calc_lbd" proved="true">
 <proof prover="1"><result status="valid" time="0.41" steps="63456"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_ConflictAnalysis_IdxIn" proved="true">
 <goal name="idx_in&#39;vc" expl="VC for idx_in" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="108"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas_Impl" proved="true">
 <goal name="lemma_eq_formulas&#39;vc" expl="VC for lemma_eq_formulas" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="105"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_LogicConflictAnalysis_LemmaResolventOfEquisatExtensionIsEquisat_Impl" proved="true">
 <goal name="lemma_resolvent_of_equisat_extension_is_equisat&#39;vc" expl="VC for lemma_resolvent_of_equisat_extension_is_equisat" proved="true">
 <proof prover="0"><result status="valid" time="0.40" steps="502295"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="102485"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Trail_Impl0_DecisionLevel" proved="true">
 <goal name="decision_level&#39;vc" expl="VC for decision_level" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="13"/></proof>
 </goal>
</theory>
<theory name="CreuSat_ConflictAnalysis_Resolve" proved="true">
 <goal name="resolve&#39;vc" expl="VC for resolve" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="2456664"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="313988"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="resolve&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="47649"/></proof>
  </goal>
  <goal name="resolve&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="214310"/></proof>
  </goal>
  <goal name="resolve&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="222747"/></proof>
  </goal>
  <goal name="resolve&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="222987"/></proof>
  </goal>
  <goal name="resolve&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="214061"/></proof>
  </goal>
  <goal name="resolve&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="217284"/></proof>
  </goal>
  <goal name="resolve&#39;vc.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="97610"/></proof>
  </goal>
  <goal name="resolve&#39;vc.7" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.24" steps="491271"/></proof>
  </goal>
  <goal name="resolve&#39;vc.8" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="227470"/></proof>
  </goal>
  <goal name="resolve&#39;vc.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="97962"/></proof>
  </goal>
  <goal name="resolve&#39;vc.10" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="233149"/></proof>
  </goal>
  <goal name="resolve&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="50131"/></proof>
  </goal>
  <goal name="resolve&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="246596"/></proof>
  </goal>
  <goal name="resolve&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="235749"/></proof>
  </goal>
  <goal name="resolve&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="239748"/></proof>
  </goal>
  <goal name="resolve&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="98971"/></proof>
  </goal>
  <goal name="resolve&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="229665"/></proof>
  </goal>
  <goal name="resolve&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="241769"/></proof>
  </goal>
  <goal name="resolve&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="234385"/></proof>
  </goal>
  <goal name="resolve&#39;vc.19" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="16883"/></proof>
  </goal>
  <goal name="resolve&#39;vc.20" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="231099"/></proof>
  </goal>
  <goal name="resolve&#39;vc.21" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="50908"/></proof>
  </goal>
  <goal name="resolve&#39;vc.22" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="307030"/></proof>
  </goal>
  <goal name="resolve&#39;vc.23" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="16995"/></proof>
  </goal>
  <goal name="resolve&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="248717"/></proof>
  </goal>
  <goal name="resolve&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="246396"/></proof>
  </goal>
  <goal name="resolve&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="246764"/></proof>
  </goal>
  <goal name="resolve&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="265187"/></proof>
  </goal>
  <goal name="resolve&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="247248"/></proof>
  </goal>
  <goal name="resolve&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="247425"/></proof>
  </goal>
  <goal name="resolve&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="247565"/></proof>
  </goal>
  <goal name="resolve&#39;vc.31" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="232270"/></proof>
  </goal>
  <goal name="resolve&#39;vc.32" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="240665"/></proof>
  </goal>
  <goal name="resolve&#39;vc.33" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="244216"/></proof>
  </goal>
  <goal name="resolve&#39;vc.34" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="277419"/></proof>
  </goal>
  <goal name="resolve&#39;vc.35" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="299705"/></proof>
  </goal>
  <goal name="resolve&#39;vc.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="242461"/></proof>
  </goal>
  <goal name="resolve&#39;vc.37" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="278607"/></proof>
  </goal>
  <goal name="resolve&#39;vc.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="244874"/></proof>
  </goal>
  <goal name="resolve&#39;vc.39" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="245619"/></proof>
  </goal>
  <goal name="resolve&#39;vc.40" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="246221"/></proof>
  </goal>
  <goal name="resolve&#39;vc.41" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="308266"/></proof>
  </goal>
  <goal name="resolve&#39;vc.42" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="252631"/></proof>
  </goal>
  <goal name="resolve&#39;vc.43" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="253197"/></proof>
  </goal>
  <goal name="resolve&#39;vc.44" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="257691"/></proof>
  </goal>
  <goal name="resolve&#39;vc.45" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="261291"/></proof>
  </goal>
  <goal name="resolve&#39;vc.46" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="303379"/></proof>
  </goal>
  <goal name="resolve&#39;vc.47" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="300557"/></proof>
  </goal>
  <goal name="resolve&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.76" steps="2022191"/></proof>
  </goal>
  <goal name="resolve&#39;vc.49" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.38" steps="912791"/></proof>
  </goal>
  <goal name="resolve&#39;vc.50" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="302727"/></proof>
  </goal>
  <goal name="resolve&#39;vc.51" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.91" steps="1741844"/></proof>
  </goal>
  <goal name="resolve&#39;vc.52" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.70" steps="1312755"/></proof>
  </goal>
  <goal name="resolve&#39;vc.53" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="305105"/></proof>
  </goal>
  <goal name="resolve&#39;vc.54" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.32" steps="584359"/></proof>
  </goal>
  <goal name="resolve&#39;vc.55" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="344159"/></proof>
  </goal>
  <goal name="resolve&#39;vc.56" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.68" steps="1306545"/></proof>
  </goal>
  <goal name="resolve&#39;vc.57" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="301920"/></proof>
  </goal>
  <goal name="resolve&#39;vc.58" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.74" steps="1596397"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CreuSat_ConflictAnalysis_ChooseLiteral" proved="true">
 <goal name="choose_literal&#39;vc" expl="VC for choose_literal" proved="true">
 <proof prover="1"><result status="valid" time="0.61" steps="96706"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl0_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="58"/></proof>
 </goal>
</theory>
<theory name="CreuSat_ConflictAnalysis_AnalyzeConflict">
 <goal name="analyze_conflict&#39;vc" expl="VC for analyze_conflict">
 <proof prover="0"><result status="timeout" time="1.00" steps="876955"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="380998"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_ConflictAnalysis_ResolveEmptyClause" proved="true">
 <goal name="resolve_empty_clause&#39;vc" expl="VC for resolve_empty_clause" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="1785001"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="211873"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="resolve_empty_clause&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="190272"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="204355"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="46555"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="211771"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="349704"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="106391"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="228220"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="228740"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="58093"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="234383"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="362003"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="235357"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="77274"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="127584"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="261116"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="383439"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="397245"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="410182"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.17" steps="409327"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="266971"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="265116"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="261283"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="266633"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.77" steps="1397703"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="261772"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="269970"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.26" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="279677"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.27" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="223652"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="347152"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.29" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="226565"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="366024"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="228828"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="229147"/></proof>
  </goal>
  <goal name="resolve_empty_clause&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="257067"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl1_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="231"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_Left" proved="true">
 <goal name="left&#39;vc" expl="VC for left" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="185"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_Right" proved="true">
 <goal name="right&#39;vc" expl="VC for right" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="215"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_LessThan" proved="true">
 <goal name="less_than&#39;vc" expl="VC for less_than" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="233"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_PercolateDown" proved="true">
 <goal name="percolate_down&#39;vc" expl="VC for percolate_down" proved="true">
 <proof prover="0"><result status="valid" time="0.18" steps="251336"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="138920"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_PercolateAll" proved="true">
 <goal name="percolate_all&#39;vc" expl="VC for percolate_all" proved="true">
 <proof prover="1"><result status="valid" time="0.44" steps="64912"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_New">
 <goal name="new&#39;vc" expl="VC for new">
 <proof prover="0"><result status="timeout" time="1.00" steps="1302663"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="145154"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_Parent" proved="true">
 <goal name="parent&#39;vc" expl="VC for parent" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="818"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_InHeap" proved="true">
 <goal name="in_heap&#39;vc" expl="VC for in_heap" proved="true">
 <proof prover="2"><result status="valid" time="0.70" steps="5501"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_Empty" proved="true">
 <goal name="empty&#39;vc" expl="VC for empty" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="244"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_PercolateUp" proved="true">
 <goal name="percolate_up&#39;vc" expl="VC for percolate_up" proved="true">
 <proof prover="1"><result status="valid" time="0.76" steps="119739"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_Decrease" proved="true">
 <goal name="decrease&#39;vc" expl="VC for decrease" proved="true">
 <proof prover="1"><result status="valid" time="0.25" steps="35035"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_Increase" proved="true">
 <goal name="increase&#39;vc" expl="VC for increase" proved="true">
 <proof prover="1"><result status="valid" time="0.26" steps="35172"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_Insert" proved="true">
 <goal name="insert&#39;vc" expl="VC for insert" proved="true">
 <proof prover="1"><result status="valid" time="0.32" steps="45869"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl2_RemoveMin" proved="true">
 <goal name="remove_min&#39;vc" expl="VC for remove_min" proved="true">
 <proof prover="0"><result status="valid" time="0.59" steps="958600"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="145439"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl4_New">
 <goal name="new&#39;vc" expl="VC for new">
 <proof prover="0"><result status="timeout" time="1.00" steps="530028"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="138804"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl4_RemoveMin" proved="true">
 <goal name="remove_min&#39;vc" expl="VC for remove_min" proved="true">
 <proof prover="1"><result status="valid" time="0.44" steps="115441"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl4_GetNext" proved="true">
 <goal name="get_next&#39;vc" expl="VC for get_next" proved="true">
 <proof prover="2"><result status="valid" time="0.12" steps="477"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl4_Rescale">
 <goal name="rescale&#39;vc" expl="VC for rescale">
 <proof prover="0"><result status="timeout" time="1.00" steps="634080"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="293245"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl4_BumpVariable">
 <goal name="bump_variable&#39;vc" expl="VC for bump_variable">
 <proof prover="0"><result status="timeout" time="1.00" steps="419853"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="287575"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl4_DecayVarInc">
 <goal name="decay_var_inc&#39;vc" expl="VC for decay_var_inc">
 <proof prover="0"><result status="timeout" time="1.00" steps="191718"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="851862"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl4_SetVarDecay" proved="true">
 <goal name="set_var_decay&#39;vc" expl="VC for set_var_decay" proved="true">
 <proof prover="1"><result status="valid" time="0.37" steps="119013"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl4_Insert" proved="true">
 <goal name="insert&#39;vc" expl="VC for insert" proved="true">
 <proof prover="1"><result status="valid" time="0.71" steps="186964"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Decision_Impl4_TurnOffDecisionForIdx" proved="true">
 <goal name="turn_off_decision_for_idx&#39;vc" expl="VC for turn_off_decision_for_idx" proved="true">
 <proof prover="1"><result status="valid" time="0.40" steps="111508"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl1_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="2"><result status="valid" time="0.17" steps="353"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl2_CheckFormulaInvariant" proved="true">
 <goal name="check_formula_invariant&#39;vc" expl="VC for check_formula_invariant" proved="true">
 <proof prover="0"><result status="valid" time="0.24" steps="337255"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="107322"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl2_LitSat" proved="true">
 <goal name="lit_sat&#39;vc" expl="VC for lit_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="210"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl2_IsClauseSat" proved="true">
 <goal name="is_clause_sat&#39;vc" expl="VC for is_clause_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="829"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl2_ToNegWatchidx" proved="true">
 <goal name="to_neg_watchidx&#39;vc" expl="VC for to_neg_watchidx" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="438"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Watches_Impl0_AddWatcher" proved="true">
 <goal name="add_watcher&#39;vc" expl="VC for add_watcher" proved="true">
 <proof prover="1"><result status="valid" time="0.41" steps="51361"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl2_AddClause" proved="true">
 <goal name="add_clause&#39;vc" expl="VC for add_clause" proved="true">
 <proof prover="0"><result status="valid" time="0.78" steps="1310950"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="116523"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl2_AddUnwatchedClause">
 <goal name="add_unwatched_clause&#39;vc" expl="VC for add_unwatched_clause">
 <proof prover="0"><result status="timeout" time="1.00" steps="1562882"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="100895"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl2_AddUnit" proved="true">
 <goal name="add_unit&#39;vc" expl="VC for add_unit" proved="true">
 <proof prover="0"><result status="valid" time="0.52" steps="812310"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="96062"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl2_IsSat" proved="true">
 <goal name="is_sat&#39;vc" expl="VC for is_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.27" steps="1134"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Watches_Impl0_Unwatch">
 <goal name="unwatch&#39;vc" expl="VC for unwatch">
 <proof prover="0"><result status="timeout" time="1.00" steps="1370057"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="184584"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl2_DeleteClause" proved="true">
 <goal name="delete_clause&#39;vc" expl="VC for delete_clause" proved="true">
 <proof prover="0"><result status="valid" time="0.42" steps="726147"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="126968"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl2_DeleteClauses" proved="true">
 <goal name="delete_clauses&#39;vc" expl="VC for delete_clauses" proved="true">
 <proof prover="1"><result status="valid" time="0.64" steps="89207"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl2_SimplifyFormula" proved="true">
 <goal name="simplify_formula&#39;vc" expl="VC for simplify_formula" proved="true">
 <proof prover="2"><result status="valid" time="0.65" steps="1703"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Formula_Impl2_ReduceDb" proved="true">
 <goal name="reduceDB&#39;vc" expl="VC for reduceDB" proved="true">
 <proof prover="0"><result status="valid" time="0.36" steps="624363"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="168522"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl5_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="36"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl2_LitSet" proved="true">
 <goal name="lit_set&#39;vc" expl="VC for lit_set" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="139"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl2_ToWatchidx" proved="true">
 <goal name="to_watchidx&#39;vc" expl="VC for to_watchidx" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="406"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl2_PhaseSaved" proved="true">
 <goal name="phase_saved&#39;vc" expl="VC for phase_saved" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="191"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl3_Eq" proved="true">
 <goal name="eq&#39;vc" expl="VC for eq" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="130"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl4_Not" proved="true">
 <goal name="not&#39;&#39;vc" expl="VC for not&#39;" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="105"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_Logic_BoolToAssignedstate_Impl" proved="true">
 <goal name="bool_to_assignedstate&#39;vc" expl="VC for bool_to_assignedstate" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess_Impl" proved="true">
 <goal name="lemma_push_maintains_lit_not_in_less&#39;vc" expl="VC for lemma_push_maintains_lit_not_in_less" proved="true">
 <proof prover="2"><result status="valid" time="0.46" steps="2469"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_LogicUtil_Pop_Impl" proved="true">
 <goal name="pop&#39;vc" expl="VC for pop" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="39"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_LogicUtil_LastIdx_Impl" proved="true">
 <goal name="last_idx&#39;vc" expl="VC for last_idx" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="0"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_LogicUtil_LastElem_Impl" proved="true">
 <goal name="last_elem&#39;vc" expl="VC for last_elem" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="0"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted_Impl" proved="true">
 <goal name="lemma_pop_maintains_sorted&#39;vc" expl="VC for lemma_pop_maintains_sorted" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="107"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant_Impl" proved="true">
 <goal name="lemma_pop_watch_maintains_watcher_invariant&#39;vc" expl="VC for lemma_pop_watch_maintains_watcher_invariant" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="60"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant_Impl" proved="true">
 <goal name="lemma_push_maintains_watcher_invariant&#39;vc" expl="VC for lemma_push_maintains_watcher_invariant" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="68"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Solver_GetAssertingLevel" proved="true">
 <goal name="get_asserting_level&#39;vc" expl="VC for get_asserting_level" proved="true">
 <proof prover="2"><result status="valid" time="0.38" steps="2747"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Solver_Impl0_IncreaseNumConflicts" proved="true">
 <goal name="increase_num_conflicts&#39;vc" expl="VC for increase_num_conflicts" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="33"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Solver_Impl0_IncreaseNumLemmas" proved="true">
 <goal name="increase_num_lemmas&#39;vc" expl="VC for increase_num_lemmas" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="33"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Util_UpdateFast" proved="true">
 <goal name="update_fast&#39;vc" expl="VC for update_fast" proved="true">
 <proof prover="2"><result status="valid" time="0.63" steps="6986"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Util_UpdateSlow" proved="true">
 <goal name="update_slow&#39;vc" expl="VC for update_slow" proved="true">
 <proof prover="2"><result status="valid" time="0.48" steps="5075"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Trail_Impl0_BacktrackTo" proved="true">
 <goal name="backtrack_to&#39;vc" expl="VC for backtrack_to" proved="true">
 <proof prover="2"><result status="valid" time="0.36" steps="2321"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Trail_Impl0_BacktrackSafe" proved="true">
 <goal name="backtrack_safe&#39;vc" expl="VC for backtrack_safe" proved="true">
 <proof prover="1"><result status="valid" time="0.61" steps="85846"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Trail_Impl0_EnqAssignment" proved="true">
 <goal name="enq_assignment&#39;vc" expl="VC for enq_assignment" proved="true">
 <proof prover="0"><result status="valid" time="0.37" steps="671799"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="119756"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Solver_Impl0_HandleLongClause">
 <goal name="handle_long_clause&#39;vc" expl="VC for handle_long_clause">
 <proof prover="0"><result status="timeout" time="1.00" steps="768890"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="255079"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Trail_Impl0_LearnUnit">
 <goal name="learn_unit&#39;vc" expl="VC for learn_unit">
 <proof prover="0"><result status="timeout" time="1.00" steps="648821"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="142552"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Solver_Impl0_HandleConflict">
 <goal name="handle_conflict&#39;vc" expl="VC for handle_conflict">
 <proof prover="0"><result status="timeout" time="1.00" steps="1009456"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="255289"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Util_Min" proved="true">
 <goal name="min&#39;vc" expl="VC for min" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="65"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Util_Max" proved="true">
 <goal name="max&#39;vc" expl="VC for max" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="42"/></proof>
 </goal>
</theory>
<theory name="CreuSat_UnitProp_Swap">
 <goal name="swap&#39;vc" expl="VC for swap">
 <proof prover="0"><result status="timeout" time="1.00" steps="2393357"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="128589"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Watches_UpdateWatch">
 <goal name="update_watch&#39;vc" expl="VC for update_watch">
 <proof prover="0"><result status="timeout" time="1.00" steps="1319947"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="197249"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_UnitProp_CheckAndMoveWatch">
 <goal name="check_and_move_watch&#39;vc" expl="VC for check_and_move_watch">
 <proof prover="0"><result status="timeout" time="1.00" steps="1805091"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="240543"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_UnitProp_ExistsNewWatchableLit">
 <goal name="exists_new_watchable_lit&#39;vc" expl="VC for exists_new_watchable_lit">
 <proof prover="0"><result status="timeout" time="1.00" steps="1643108"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="394372"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_UnitProp_PropagateLitWithRegardToClause">
 <goal name="propagate_lit_with_regard_to_clause&#39;vc" expl="VC for propagate_lit_with_regard_to_clause">
 <proof prover="0"><result status="timeout" time="1.00" steps="1912989"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="555383"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_UnitProp_PropagateLiteral">
 <goal name="propagate_literal&#39;vc" expl="VC for propagate_literal">
 <proof prover="0"><result status="timeout" time="1.00" steps="1482746"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="199568"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_UnitProp_UnitPropagate" proved="true">
 <goal name="unit_propagate&#39;vc" expl="VC for unit_propagate" proved="true">
 <proof prover="0"><result status="valid" time="0.59" steps="854251"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="149363"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Solver_Impl0_UnitPropStep">
 <goal name="unit_prop_step&#39;vc" expl="VC for unit_prop_step">
 <proof prover="0"><result status="timeout" time="1.00" steps="815850"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="143274"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Solver_Impl0_UnitPropLoop" proved="true">
 <goal name="unit_prop_loop&#39;vc" expl="VC for unit_prop_loop" proved="true">
 <proof prover="1"><result status="valid" time="0.79" steps="125440"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Trail_Impl0_EnqDecision">
 <goal name="enq_decision&#39;vc" expl="VC for enq_decision">
 <proof prover="0"><result status="timeout" time="1.00" steps="1767514"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="110189"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Solver_Impl0_OuterLoop">
 <goal name="outer_loop&#39;vc" expl="VC for outer_loop">
 <proof prover="0"><result status="timeout" time="1.00" steps="1162706"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="229347"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Solver_Impl0_Inner">
 <goal name="inner&#39;vc" expl="VC for inner">
 <proof prover="0"><result status="timeout" time="1.00" steps="673111"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="132425"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Trail_Impl0_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="438"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Watches_Impl0_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="0"><result status="valid" time="0.14" steps="204641"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="89508"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Watches_Impl0_InitWatches" proved="true">
 <goal name="init_watches&#39;vc" expl="VC for init_watches" proved="true">
 <proof prover="0"><result status="valid" time="0.31" steps="468689"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="122077"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Trail_Impl0_LearnUnits">
 <goal name="learn_units&#39;vc" expl="VC for learn_units">
 <proof prover="0"><result status="timeout" time="1.00" steps="805225"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="125713"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Solver_Solver">
 <goal name="solver&#39;vc" expl="VC for solver">
 <proof prover="0"><result status="timeout" time="1.00" steps="694641"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="135237"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Trail_Impl0_Backstep">
 <goal name="backstep&#39;vc" expl="VC for backstep">
 <proof prover="0"><result status="timeout" time="1.00" steps="1591329"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="115982"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Util_SortReverse">
 <goal name="sort_reverse&#39;vc" expl="VC for sort_reverse">
 <proof prover="0"><result status="timeout" time="1.00" steps="2169045"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="106288"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Util_Sort">
 <goal name="sort&#39;vc" expl="VC for sort">
 <proof prover="0"><result status="timeout" time="1.00" steps="2613186"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="108080"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Watches_Impl0_MoveToEnd" proved="true">
 <goal name="move_to_end&#39;vc" expl="VC for move_to_end" proved="true">
 <proof prover="1"><result status="valid" time="0.78" steps="83709"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Clause_Impl3" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl5" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
</theory>
<theory name="CreuSat_Lit_Impl3" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
</theory>
</file>
</why3session>
