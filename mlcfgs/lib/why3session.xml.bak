<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.14" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="lib.mlcfg"/>
<theory name="Lib_Trail_Impl0_DecisionLevel" proved="true">
 <goal name="decision_level&#39;vc" expl="VC for decision_level" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="149"/></proof>
 </goal>
</theory>
<theory name="CreusotContracts_Std1_Vec_Impl3" proved="true">
 <goal name="Index1.index&#39;refn&#39;vc" expl="VC for index&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="Lib_ConflictAnalysis_ChooseLiteral" proved="true">
 <goal name="choose_literal&#39;vc" expl="VC for choose_literal" proved="true">
 <proof prover="1"><result status="valid" time="0.52" steps="8729"/></proof>
 </goal>
</theory>
<theory name="Lib_Clause_Impl0" proved="true">
 <goal name="Clone1.clone&#39;&#39;refn&#39;vc" expl="VC for clone&#39;&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="Lib_ConflictAnalysis_AnalyzeConflict" proved="true">
 <goal name="analyze_conflict&#39;vc" expl="VC for analyze_conflict" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="analyze_conflict&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="87"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="1134"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="1164"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="102"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="1141"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="106"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="284"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="3294"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="155"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.37" steps="6463"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="145"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="298"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="155"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="157"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="1449"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="414"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="2387"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="485"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="487"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.28" steps="4024"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="217"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="2876"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="3439"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.29" steps="1079895"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="1299"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.26" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.39" steps="1306506"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="9631"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="239"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.29" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="241"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.30" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="550"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.31" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="237"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="273"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="274"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="690"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="277"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="811"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="291"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="7957"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.39" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="299"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.46" steps="7910"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.41" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="257"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.42" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="3740"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.43" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="1477"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="284"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="284"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.46" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="1789"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.47" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="1309"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="282"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.49" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="283"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="1520"/></proof>
  </goal>
  <goal name="analyze_conflict&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="535"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lib_Logic_LogicUtil_Pop_Impl" proved="true">
 <goal name="pop&#39;vc" expl="VC for pop" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaPopNoUnassIsOk_Impl" proved="true">
 <goal name="lemma_pop_no_unass_is_ok&#39;vc" expl="VC for lemma_pop_no_unass_is_ok" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="689"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaTrailPost_Impl" proved="true">
 <goal name="lemma_trail_post&#39;vc" expl="VC for lemma_trail_post" proved="true">
 <proof prover="1"><result status="valid" time="0.61" steps="9613"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaTrailOnlyLast_Impl" proved="true">
 <goal name="lemma_trail_only_last&#39;vc" expl="VC for lemma_trail_only_last" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="682"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaTrailFin_Impl" proved="true">
 <goal name="lemma_trail_fin&#39;vc" expl="VC for lemma_trail_fin" proved="true">
 <proof prover="1"><result status="valid" time="0.18" steps="3214"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaTrailFin2_Impl" proved="true">
 <goal name="lemma_trail_fin2&#39;vc" expl="VC for lemma_trail_fin2" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="2.57" steps="4902473"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaBacktrackOk_Impl" proved="true">
 <goal name="lemma_backtrack_ok&#39;vc" expl="VC for lemma_backtrack_ok" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="lemma_backtrack_ok&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1" timelimit="10" memlimit="4000"><result status="valid" time="1.92" steps="34333"/></proof>
  </goal>
  <goal name="lemma_backtrack_ok&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1" timelimit="10" memlimit="4000"><result status="valid" time="2.37" steps="46819"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CreusotContracts_Std1_Vec_Impl2" proved="true">
 <goal name="IndexMut1.index_mut&#39;refn&#39;vc" expl="VC for index_mut&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="Lib_Trail_Impl0_Backstep">
 <goal name="backstep&#39;vc" expl="VC for backstep">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="802933"/></proof>
 <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="backstep&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="109"/></proof>
  </goal>
  <goal name="backstep&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="3084"/></proof>
  </goal>
  <goal name="backstep&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.84" steps="14743"/></proof>
  </goal>
  <goal name="backstep&#39;vc.3" expl="assertion" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="1.71" steps="27553"/></proof>
  </goal>
  <goal name="backstep&#39;vc.4" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="2742"/></proof>
  </goal>
  <goal name="backstep&#39;vc.5" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="106"/></proof>
  </goal>
  <goal name="backstep&#39;vc.6" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="106"/></proof>
  </goal>
  <goal name="backstep&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="2.24" steps="30559"/></proof>
  </goal>
  <goal name="backstep&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="1162"/></proof>
  </goal>
  <goal name="backstep&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="2.21" steps="28424"/></proof>
  </goal>
  <goal name="backstep&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="backstep&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.54" steps="8839"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="backstep&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="13382"/></proof>
  </goal>
  <goal name="backstep&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="207"/></proof>
  </goal>
  <goal name="backstep&#39;vc.13" expl="assertion" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="3.54" steps="50318"/></proof>
  </goal>
  <goal name="backstep&#39;vc.14" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="2820"/></proof>
  </goal>
  <goal name="backstep&#39;vc.15" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="109"/></proof>
  </goal>
  <goal name="backstep&#39;vc.16" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="110"/></proof>
  </goal>
  <goal name="backstep&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="2.15" steps="29533"/></proof>
  </goal>
  <goal name="backstep&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="1208"/></proof>
  </goal>
  <goal name="backstep&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="2.23" steps="28504"/></proof>
  </goal>
  <goal name="backstep&#39;vc.20" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="1823736"/></proof>
  <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" timelimit="5"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lib_Trail_Impl0_BacktrackTo">
 <goal name="backtrack_to&#39;vc" expl="VC for backtrack_to">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="1509417"/></proof>
 <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="backtrack_to&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="64"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="713"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="77"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="93"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="166"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="101"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="104"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="107"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="109"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="1297"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="12369"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="149"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="1014"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="11111"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="818"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.15" expl="loop invariant preservation">
  <proof prover="0"><result status="timeout" time="1.00" steps="427069"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="backtrack_to&#39;vc.15.0" expl="loop invariant preservation">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="timeout" time="10.00" steps="4645222"/></proof>
   <proof prover="1" timelimit="10" memlimit="4000"><result status="timeout" time="10.00"/></proof>
   <proof prover="2" timelimit="10" memlimit="4000"><result status="timeout" time="10.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="backtrack_to&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="175"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="146"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="286"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="163"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="165"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.21" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="545"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="324"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="165"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="167"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="171"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="173"/></proof>
  </goal>
  <goal name="backtrack_to&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="176"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lib_Solver_HandleConflict">
 <goal name="handle_conflict&#39;vc" expl="VC for handle_conflict">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="896532"/></proof>
 <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="handle_conflict&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="56"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="59"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="61"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.3" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="296365"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="66"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="67"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="612"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="1887"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="144"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="156"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="152"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="155"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="145"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="156"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.14" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="641042"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="1783"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="554"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.19" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="284885"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.21" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="294982"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="200"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.23" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="2988"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="190"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.25" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="254633"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="211"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="213"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="199"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.29" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="76"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="169"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="170"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="184"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.33" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="244"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="87"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.37" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="271541"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="118"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.39" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="305299"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="122"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.41" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="265514"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="304"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="285"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="305"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.45" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="462903"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.46" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="323"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.47" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="324"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="305"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="137"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="1448"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="139"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="152"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="149"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="151"/></proof>
  </goal>
  <goal name="handle_conflict&#39;vc.55" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="142"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lib_Solver_UnitPropStep">
 <goal name="unit_prop_step&#39;vc" expl="VC for unit_prop_step">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="3929722"/></proof>
 <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="unit_prop_step&#39;vc.0" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="468038"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unit_prop_step&#39;vc.1" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="458846"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unit_prop_step&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="459371"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unit_prop_step&#39;vc.3" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="404927"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unit_prop_step&#39;vc.4" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="407444"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unit_prop_step&#39;vc.5" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="451835"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="unit_prop_step&#39;vc.6" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="432609"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lib_Solver_UnitPropLoop" proved="true">
 <goal name="unit_prop_loop&#39;vc" expl="VC for unit_prop_loop" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="Lib_Solver_OuterLoop">
 <goal name="outer_loop&#39;vc" expl="VC for outer_loop">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="2405578"/></proof>
 <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00"/></proof>
 </goal>
</theory>
<theory name="Lib_Solver_Inner" proved="true">
 <goal name="inner&#39;vc" expl="VC for inner" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="Lib_ConflictAnalysis_IdxIn" proved="true">
 <goal name="idx_in&#39;vc" expl="VC for idx_in" proved="true">
 <proof prover="1"><result status="valid" time="0.22" steps="3565"/></proof>
 </goal>
</theory>
<theory name="Lib_Lit_Impl3_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="Lib_Solver_IsClauseUnsat" proved="true">
 <goal name="is_clause_unsat&#39;vc" expl="VC for is_clause_unsat" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="614685"/></proof>
 </goal>
</theory>
<theory name="Lib_Trail_Impl0_New">
 <goal name="new&#39;vc" expl="VC for new">
 <proof prover="0"><result status="timeout" time="1.00" steps="786853"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="new&#39;vc.0" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="3362341"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <transf name="inline_goal" >
   <goal name="new&#39;vc.0.0" expl="postcondition">
   <transf name="split_all_full" >
    <goal name="new&#39;vc.0.0.0" expl="VC for new" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="91"/></proof>
    </goal>
    <goal name="new&#39;vc.0.0.1" expl="VC for new" proved="true">
    <proof prover="1"><result status="valid" time="0.04" steps="599"/></proof>
    </goal>
    <goal name="new&#39;vc.0.0.2" expl="VC for new">
    <proof prover="0"><result status="timeout" time="1.00" steps="316612"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" >
     <goal name="new&#39;vc.0.0.2.0" expl="VC for new">
     <proof prover="0" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="1711855"/></proof>
     <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
     <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
     <transf name="inline_goal" >
      <goal name="new&#39;vc.0.0.2.0.0" expl="VC for new">
      <proof prover="1" timelimit="30" memlimit="4000"><undone/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="new&#39;vc.0.0.3" expl="VC for new" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="322"/></proof>
    </goal>
    <goal name="new&#39;vc.0.0.4" expl="VC for new" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="193"/></proof>
    </goal>
    <goal name="new&#39;vc.0.0.5" expl="VC for new" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="404"/></proof>
    </goal>
    <goal name="new&#39;vc.0.0.6" expl="VC for new" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="198"/></proof>
    </goal>
    <goal name="new&#39;vc.0.0.7" expl="VC for new" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="483"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lib_Solver_Solver">
 <goal name="solver&#39;vc" expl="VC for solver">
 <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="2554852"/></proof>
 <proof prover="1" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" timelimit="5"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="solver&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="solver&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="46"/></proof>
  </goal>
  <goal name="solver&#39;vc.2" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="53"/></proof>
  </goal>
  <goal name="solver&#39;vc.3" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="55"/></proof>
  </goal>
  <goal name="solver&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="87"/></proof>
  </goal>
  <goal name="solver&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="79"/></proof>
  </goal>
  <goal name="solver&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="solver&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
  <goal name="solver&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="83"/></proof>
  </goal>
  <goal name="solver&#39;vc.9" expl="unreachable point">
  <proof prover="0"><result status="timeout" time="1.00" steps="714883"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="solver&#39;vc.9.0" expl="unreachable point">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="timeout" time="10.00" steps="7846506"/></proof>
   <proof prover="1" timelimit="10" memlimit="4000"><result status="timeout" time="10.00"/></proof>
   <proof prover="2" timelimit="10" memlimit="4000"><result status="timeout" time="10.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="solver&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="101"/></proof>
  </goal>
  <goal name="solver&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="524"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lib_Logic_LogicUtil_LastIdx_Impl" proved="true">
 <goal name="last_idx&#39;vc" expl="VC for last_idx" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicUtil_LastElem_Impl" proved="true">
 <goal name="last_elem&#39;vc" expl="VC for last_elem" proved="true">
 <proof prover="1"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_BoolToAssignedstate_Impl" proved="true">
 <goal name="bool_to_assignedstate&#39;vc" expl="VC for bool_to_assignedstate" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="25"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaTrailFin3_Impl" proved="true">
 <goal name="lemma_trail_fin3&#39;vc" expl="VC for lemma_trail_fin3" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="lemma_trail_fin3&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1" timelimit="10" memlimit="4000"><result status="valid" time="2.70" steps="47594"/></proof>
  </goal>
  <goal name="lemma_trail_fin3&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1" timelimit="10" memlimit="4000"><result status="valid" time="2.19" steps="45049"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaPostUnitNoUnset_Impl" proved="true">
 <goal name="lemma_post_unit_no_unset&#39;vc" expl="VC for lemma_post_unit_no_unset" proved="true">
 <proof prover="1"><result status="valid" time="0.05" steps="574"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaAssignMaintainsPostForEach_Impl" proved="true">
 <goal name="lemma_assign_maintains_post_for_each&#39;vc" expl="VC for lemma_assign_maintains_post_for_each" proved="true">
 <proof prover="1"><result status="valid" time="0.52" steps="6866"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaAssignMaintainsForEachToPost_Impl" proved="true">
 <goal name="lemma_assign_maintains_for_each_to_post&#39;vc" expl="VC for lemma_assign_maintains_for_each_to_post" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="3.01" steps="40934"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_LogicTrail_LemmaAssignMaintainsLongArePostUnit_Impl" proved="true">
 <goal name="lemma_assign_maintains_long_are_post_unit&#39;vc" expl="VC for lemma_assign_maintains_long_are_post_unit" proved="true">
 <proof prover="1"><result status="valid" time="0.06" steps="733"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaPermutClauseOk_Impl" proved="true">
 <goal name="lemma_permut_clause_ok&#39;vc" expl="VC for lemma_permut_clause_ok" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="192"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaPermutClauseOk2_Impl" proved="true">
 <goal name="lemma_permut_clause_ok2&#39;vc" expl="VC for lemma_permut_clause_ok2" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="193"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaSwapClauseNoDups_Impl" proved="true">
 <goal name="lemma_swap_clause_no_dups&#39;vc" expl="VC for lemma_swap_clause_no_dups" proved="true">
 <proof prover="1"><result status="valid" time="0.15" steps="2659"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaSwapMaintainsPostUnit_Impl" proved="true">
 <goal name="lemma_swap_maintains_post_unit&#39;vc" expl="VC for lemma_swap_maintains_post_unit" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="1.75" steps="570286"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaSwapMaintainsPostWithRegardsTo_Impl" proved="true">
 <goal name="lemma_swap_maintains_post_with_regards_to&#39;vc" expl="VC for lemma_swap_maintains_post_with_regards_to" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="366"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaPermutFormulaOk_Impl" proved="true">
 <goal name="lemma_permut_formula_ok&#39;vc" expl="VC for lemma_permut_formula_ok" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="221"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaPermutFormulaOk2_Impl" proved="true">
 <goal name="lemma_permut_formula_ok2&#39;vc" expl="VC for lemma_permut_formula_ok2" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="216"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaPermutFormulaOkNoAss_Impl" proved="true">
 <goal name="lemma_permut_formula_ok_no_ass&#39;vc" expl="VC for lemma_permut_formula_ok_no_ass" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="230"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaPermutClauseInFormulaMaintainsSat_Impl" proved="true">
 <goal name="lemma_permut_clause_in_formula_maintains_sat&#39;vc" expl="VC for lemma_permut_clause_in_formula_maintains_sat" proved="true">
 <proof prover="1"><result status="valid" time="0.05" steps="527"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaPermutClauseInFormulaMaintainsUnsat_Impl" proved="true">
 <goal name="lemma_permut_clause_in_formula_maintains_unsat&#39;vc" expl="VC for lemma_permut_clause_in_formula_maintains_unsat" proved="true">
 <proof prover="1"><result status="valid" time="0.06" steps="529"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaSamePol_Impl" proved="true">
 <goal name="lemma_same_pol&#39;vc" expl="VC for lemma_same_pol" proved="true">
 <proof prover="1"><result status="valid" time="0.06" steps="769"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaResolvedPostAndUnsatIsUnsat_Impl" proved="true">
 <goal name="lemma_resolved_post_and_unsat_is_unsat&#39;vc" expl="VC for lemma_resolved_post_and_unsat_is_unsat" proved="true">
 <proof prover="1"><result status="valid" time="0.28" steps="4018"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaEqFormulas_Impl" proved="true">
 <goal name="lemma_eq_formulas&#39;vc" expl="VC for lemma_eq_formulas" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="301"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaSatGivesSat_Impl" proved="true">
 <goal name="lemma_sat_gives_sat&#39;vc" expl="VC for lemma_sat_gives_sat" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="2.11" steps="30391"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaNotSatGivesNotSat_Impl" proved="true">
 <goal name="lemma_not_sat_gives_not_sat&#39;vc" expl="VC for lemma_not_sat_gives_not_sat" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="236"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaExtendedFormulaIsEquisatCompatible_Impl" proved="true">
 <goal name="lemma_extended_formula_is_equisat_compatible&#39;vc" expl="VC for lemma_extended_formula_is_equisat_compatible" proved="true">
 <proof prover="1"><result status="valid" time="0.70" steps="11382"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaResolventOfEquisatExtensionIsEquisat_Impl" proved="true">
 <goal name="lemma_resolvent_of_equisat_extension_is_equisat&#39;vc" expl="VC for lemma_resolvent_of_equisat_extension_is_equisat" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="2.67" steps="35995"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaExtendingWithEquiExtIsEquiCompat_Impl" proved="true">
 <goal name="lemma_extending_with_equi_ext_is_equi_compat&#39;vc" expl="VC for lemma_extending_with_equi_ext_is_equi_compat" proved="true">
 <proof prover="1"><result status="valid" time="0.22" steps="2853"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaEquisatIsTrans_Impl" proved="true">
 <goal name="lemma_equisat_is_trans&#39;vc" expl="VC for lemma_equisat_is_trans" proved="true">
 <proof prover="1"><result status="valid" time="0.05" steps="638"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaCompleteImpliesSatOrUnsat_Impl" proved="true">
 <goal name="lemma_complete_implies_sat_or_unsat&#39;vc" expl="VC for lemma_complete_implies_sat_or_unsat" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="299"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaCompleteAndNotSatImpliesUnsat_Impl" proved="true">
 <goal name="lemma_complete_and_not_sat_implies_unsat&#39;vc" expl="VC for lemma_complete_and_not_sat_implies_unsat" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="52"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaCompleteAndNotUnsatImpliesSat_Impl" proved="true">
 <goal name="lemma_complete_and_not_unsat_implies_sat&#39;vc" expl="VC for lemma_complete_and_not_unsat_implies_sat" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="52"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaNotSatFormulaImpliesUnsatFormula_Impl" proved="true">
 <goal name="lemma_not_sat_formula_implies_unsat_formula&#39;vc" expl="VC for lemma_not_sat_formula_implies_unsat_formula" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="340"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaNotSatClauseImpliesUnsatFormula_Impl" proved="true">
 <goal name="lemma_not_sat_clause_implies_unsat_formula&#39;vc" expl="VC for lemma_not_sat_clause_implies_unsat_formula" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="88"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaUnitForces_Impl" proved="true">
 <goal name="lemma_unit_forces&#39;vc" expl="VC for lemma_unit_forces" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="592"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaCorrectPolarityMakesClauseSat_Impl" proved="true">
 <goal name="lemma_correct_polarity_makes_clause_sat&#39;vc" expl="VC for lemma_correct_polarity_makes_clause_sat" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="278"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaIncorrectPolarityMakesClauseUnsat_Impl" proved="true">
 <goal name="lemma_incorrect_polarity_makes_clause_unsat&#39;vc" expl="VC for lemma_incorrect_polarity_makes_clause_unsat" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="179"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaUnitWrongPolarityUnsatFormula_Impl" proved="true">
 <goal name="lemma_unit_wrong_polarity_unsat_formula&#39;vc" expl="VC for lemma_unit_wrong_polarity_unsat_formula" proved="true">
 <proof prover="1"><result status="valid" time="0.24" steps="4677"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaExtensionSatBaseSat_Impl" proved="true">
 <goal name="lemma_extension_sat_base_sat&#39;vc" expl="VC for lemma_extension_sat_base_sat" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="214"/></proof>
 </goal>
</theory>
<theory name="Lib_Logic_Logic_LemmaExtensionsUnsatBaseUnsat_Impl" proved="true">
 <goal name="lemma_extensions_unsat_base_unsat&#39;vc" expl="VC for lemma_extensions_unsat_base_unsat" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="436"/></proof>
 </goal>
</theory>
<theory name="Lib_Formula_Impl0" proved="true">
 <goal name="Eq1.eq&#39;refn&#39;vc" expl="VC for eq&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="Lib_Lit_Impl1" proved="true">
 <goal name="Eq1.eq&#39;refn&#39;vc" expl="VC for eq&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="Lib_Lit_Impl3" proved="true">
 <goal name="Clone1.clone&#39;&#39;refn&#39;vc" expl="VC for clone&#39;&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="Lib_Lit_Impl2" proved="true">
 <goal name="Not1.not&#39;&#39;refn&#39;vc" expl="VC for not&#39;&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
</file>
</why3session>
