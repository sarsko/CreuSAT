
module Core_Ptr_NonNull_NonNull_Type
  use prelude.Opaque
  type t_nonnull 't =
    | C_NonNull opaque_ptr
    
end
module Core_Marker_PhantomData_Type
  type t_phantomdata 't =
    | C_PhantomData
    
end
module Core_Ptr_Unique_Unique_Type
  use Core_Marker_PhantomData_Type as Core_Marker_PhantomData_Type
  use Core_Ptr_NonNull_NonNull_Type as Core_Ptr_NonNull_NonNull_Type
  type t_unique 't =
    | C_Unique (Core_Ptr_NonNull_NonNull_Type.t_nonnull 't) (Core_Marker_PhantomData_Type.t_phantomdata 't)
    
end
module Alloc_RawVec_Cap_Type
  use prelude.UIntSize
  use prelude.Int
  type t_cap  =
    | C_Cap usize
    
end
module Alloc_RawVec_RawVec_Type
  use Alloc_RawVec_Cap_Type as Alloc_RawVec_Cap_Type
  use Core_Ptr_Unique_Unique_Type as Core_Ptr_Unique_Unique_Type
  type t_rawvec 't 'a =
    | C_RawVec (Core_Ptr_Unique_Unique_Type.t_unique 't) (Alloc_RawVec_Cap_Type.t_cap) 'a
    
end
module Alloc_Vec_Vec_Type
  use prelude.UIntSize
  use prelude.Int
  use Alloc_RawVec_RawVec_Type as Alloc_RawVec_RawVec_Type
  type t_vec 't 'a =
    | C_Vec (Alloc_RawVec_RawVec_Type.t_rawvec 't 'a) usize
    
end
module Alloc_Alloc_Global_Type
  type t_global  =
    | C_Global
    
end
module Friday_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_assignments  =
    | C_Assignments (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
    
  let function assignments_0 (self : t_assignments) : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)
   = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_Assignments a -> a
      end
end
module Friday_Impl8_Clone
  use seq.Seq
  predicate invariant2 (self : Seq.seq bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant2 (self : Seq.seq bool) : bool
    ensures { result = invariant2 self }
    
  predicate inv2 (_x : Seq.seq bool)
  val inv2 (_x : Seq.seq bool) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : Seq.seq bool . inv2 x = true
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use prelude.Int
  use prelude.UIntSize
  let constant max0  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
  use seq.Seq
  predicate inv1 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
  val inv1 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv1 _x }
    
  function shallow_model0 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
  val shallow_model0 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv1 self}
    ensures { result = shallow_model0 self }
    
  axiom shallow_model0_spec : forall self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv1 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv2 (shallow_model0 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model0 self) <= UIntSize.to_int max0)
  predicate invariant1 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv2 (shallow_model0 self)
  val invariant1 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant1 self }
    
  axiom inv1 : forall x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . inv1 x = true
  predicate invariant0 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant0 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
  val inv0 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . inv0 x = true
  use prelude.Borrow
  val clone0 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)
    requires {inv0 self}
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/clone.rs" 7 0 20 1] result = self }
    ensures { inv1 result }
    
  use Friday_Assignments_Type as Friday_Assignments_Type
  let rec cfg clone' [#"../../../Friday/src/lib.rs" 13 9 13 14] [@cfg:stackify] [@cfg:subregion_analysis] (self : Friday_Assignments_Type.t_assignments) : Friday_Assignments_Type.t_assignments
    ensures { [#"../../../Friday/src/lib.rs" 13 9 13 14] result = self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Friday_Assignments_Type.t_assignments;
  var self : Friday_Assignments_Type.t_assignments = self;
  var _3 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _5 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  {
    goto BB0
  }
  BB0 {
    [#"../../../Friday/src/lib.rs" 13 9 13 14] _5 <- Friday_Assignments_Type.assignments_0 self;
    [#"../../../Friday/src/lib.rs" 14 19 14 28] _3 <- ([#"../../../Friday/src/lib.rs" 14 19 14 28] clone0 _5);
    goto BB1
  }
  BB1 {
    [#"../../../Friday/src/lib.rs" 13 9 13 14] _0 <- Friday_Assignments_Type.C_Assignments _3;
    _3 <- any Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
    goto BB2
  }
  BB2 {
    return _0
  }
  
end
module Friday_Pasn_Type
  use prelude.UIntSize
  use prelude.Int
  use Friday_Assignments_Type as Friday_Assignments_Type
  type t_pasn  =
    | C_Pasn (Friday_Assignments_Type.t_assignments) usize
    
  let function pasn_assign (self : t_pasn) : Friday_Assignments_Type.t_assignments = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_Pasn a _ -> a
      end
  let function pasn_ix (self : t_pasn) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_Pasn _ a -> a
      end
end
module Friday_Impl9_Clone
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use Friday_Assignments_Type as Friday_Assignments_Type
  val clone1 (self : usize) : usize
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/clone.rs" 7 0 20 1] result = self }
    
  val clone0 [#"../../../Friday/src/lib.rs" 13 9 13 14] (self : Friday_Assignments_Type.t_assignments) : Friday_Assignments_Type.t_assignments
    ensures { [#"../../../Friday/src/lib.rs" 13 9 13 14] result = self }
    
  use Friday_Pasn_Type as Friday_Pasn_Type
  let rec cfg clone' [#"../../../Friday/src/lib.rs" 21 9 21 14] [@cfg:stackify] [@cfg:subregion_analysis] (self : Friday_Pasn_Type.t_pasn) : Friday_Pasn_Type.t_pasn
    ensures { [#"../../../Friday/src/lib.rs" 21 9 21 14] result = self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Friday_Pasn_Type.t_pasn;
  var self : Friday_Pasn_Type.t_pasn = self;
  var _3 : Friday_Assignments_Type.t_assignments;
  var _5 : Friday_Assignments_Type.t_assignments;
  var _6 : usize;
  var _8 : usize;
  {
    goto BB0
  }
  BB0 {
    [#"../../../Friday/src/lib.rs" 23 4 23 23] _5 <- Friday_Pasn_Type.pasn_assign self;
    [#"../../../Friday/src/lib.rs" 23 4 23 23] _3 <- ([#"../../../Friday/src/lib.rs" 23 4 23 23] clone0 _5);
    goto BB1
  }
  BB1 {
    [#"../../../Friday/src/lib.rs" 24 4 24 13] _8 <- Friday_Pasn_Type.pasn_ix self;
    [#"../../../Friday/src/lib.rs" 24 4 24 13] _6 <- ([#"../../../Friday/src/lib.rs" 24 4 24 13] clone1 _8);
    goto BB2
  }
  BB2 {
    [#"../../../Friday/src/lib.rs" 21 9 21 14] _0 <- Friday_Pasn_Type.C_Pasn _3 _6;
    _3 <- any Friday_Assignments_Type.t_assignments;
    _6 <- any usize;
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module Friday_Lit_Type
  use prelude.UIntSize
  use prelude.Int
  type t_lit  =
    | C_Lit usize bool
    
  let function lit_var (self : t_lit) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_Lit a _ -> a
      end
  let function lit_value (self : t_lit) : bool = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_Lit _ a -> a
      end
end
module Friday_Clause_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Friday_Lit_Type as Friday_Lit_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_clause  =
    | C_Clause (Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global))
    
  let function clause_0 (self : t_clause) : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_Clause a -> a
      end
end
module Friday_Formula_Type
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Friday_Clause_Type as Friday_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_formula  =
    | C_Formula (Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) usize
    
  let function formula_clauses (self : t_formula) : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_Formula a _ -> a
      end
  let function formula_num_vars (self : t_formula) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match self with
      | C_Formula _ a -> a
      end
end
module Friday_Impl6_Eval
  use seq.Seq
  predicate invariant8 (self : Seq.seq bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant8 (self : Seq.seq bool) : bool
    ensures { result = invariant8 self }
    
  predicate inv8 (_x : Seq.seq bool)
  val inv8 (_x : Seq.seq bool) : bool
    ensures { result = inv8 _x }
    
  axiom inv8 : forall x : Seq.seq bool . inv8 x = true
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use prelude.Int
  use prelude.UIntSize
  let constant max0  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
  use seq.Seq
  predicate inv7 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
  val inv7 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv7 _x }
    
  function shallow_model2 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
  val shallow_model2 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv7 self}
    ensures { result = shallow_model2 self }
    
  axiom shallow_model2_spec : forall self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv7 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv8 (shallow_model2 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model2 self) <= UIntSize.to_int max0)
  predicate invariant7 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv8 (shallow_model2 self)
  val invariant7 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant7 self }
    
  axiom inv7 : forall x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . inv7 x = true
  predicate invariant6 (self : bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant6 (self : bool) : bool
    ensures { result = invariant6 self }
    
  predicate inv6 (_x : bool)
  val inv6 (_x : bool) : bool
    ensures { result = inv6 _x }
    
  axiom inv6 : forall x : bool . inv6 x = true
  predicate invariant5 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant5 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant5 self }
    
  predicate inv5 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
  val inv5 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv5 _x }
    
  axiom inv5 : forall x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . inv5 x = true
  use Friday_Lit_Type as Friday_Lit_Type
  predicate invariant4 (self : Friday_Lit_Type.t_lit) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant4 (self : Friday_Lit_Type.t_lit) : bool
    ensures { result = invariant4 self }
    
  predicate inv4 (_x : Friday_Lit_Type.t_lit)
  val inv4 (_x : Friday_Lit_Type.t_lit) : bool
    ensures { result = inv4 _x }
    
  axiom inv4 : forall x : Friday_Lit_Type.t_lit . inv4 x = true
  predicate invariant3 (self : usize) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant3 (self : usize) : bool
    ensures { result = invariant3 self }
    
  predicate inv3 (_x : usize)
  val inv3 (_x : usize) : bool
    ensures { result = inv3 _x }
    
  axiom inv3 : forall x : usize . inv3 x = true
  predicate invariant2 (self : Seq.seq (Friday_Lit_Type.t_lit)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant2 (self : Seq.seq (Friday_Lit_Type.t_lit)) : bool
    ensures { result = invariant2 self }
    
  predicate inv2 (_x : Seq.seq (Friday_Lit_Type.t_lit))
  val inv2 (_x : Seq.seq (Friday_Lit_Type.t_lit)) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : Seq.seq (Friday_Lit_Type.t_lit) . inv2 x = true
  use seq.Seq
  predicate inv1 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global))
  val inv1 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv1 _x }
    
  function shallow_model1 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Lit_Type.t_lit)
    
  val shallow_model1 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Lit_Type.t_lit)
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv1 self}
    ensures { result = shallow_model1 self }
    
  axiom shallow_model1_spec : forall self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv1 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv2 (shallow_model1 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model1 self) <= UIntSize.to_int max0)
  predicate invariant1 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv2 (shallow_model1 self)
  val invariant1 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant1 self }
    
  axiom inv1 : forall x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global) . inv1 x = true
  predicate invariant0 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant0 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global))
  val inv0 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global) . inv0 x = true
  use seq.Seq
  use Friday_Assignments_Type as Friday_Assignments_Type
  predicate sat0 [#"../../../Friday/src/lib.rs" 68 4 68 40] (self : Friday_Lit_Type.t_lit) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 70 12 70 41] Seq.get (shallow_model2 (Friday_Assignments_Type.assignments_0 a)) (UIntSize.to_int (Friday_Lit_Type.lit_var self)) = Friday_Lit_Type.lit_value self
  val sat0 [#"../../../Friday/src/lib.rs" 68 4 68 40] (self : Friday_Lit_Type.t_lit) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat0 self a }
    
  use seq.Seq
  use Friday_Clause_Type as Friday_Clause_Type
  predicate sat1 [#"../../../Friday/src/lib.rs" 98 4 98 40] (self : Friday_Clause_Type.t_clause) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 99 8 102 9] exists i : int . 0 <= i /\ i < Seq.length (shallow_model1 (Friday_Clause_Type.clause_0 self)) /\ sat0 (Seq.get (shallow_model1 (Friday_Clause_Type.clause_0 self)) i) a
  val sat1 [#"../../../Friday/src/lib.rs" 98 4 98 40] (self : Friday_Clause_Type.t_clause) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat1 self a }
    
  predicate var_in_range0 [#"../../../Friday/src/lib.rs" 61 4 61 41] (self : Friday_Lit_Type.t_lit) (n : int) =
    [#"../../../Friday/src/lib.rs" 63 12 63 25] UIntSize.to_int (Friday_Lit_Type.lit_var self) < n
  val var_in_range0 [#"../../../Friday/src/lib.rs" 61 4 61 41] (self : Friday_Lit_Type.t_lit) (n : int) : bool
    ensures { result = var_in_range0 self n }
    
  predicate vars_in_range0 [#"../../../Friday/src/lib.rs" 51 4 51 42] (self : Friday_Clause_Type.t_clause) (n : int) =
    [#"../../../Friday/src/lib.rs" 52 8 55 9] forall i : int . 0 <= i /\ i < Seq.length (shallow_model1 (Friday_Clause_Type.clause_0 self))
     -> var_in_range0 (Seq.get (shallow_model1 (Friday_Clause_Type.clause_0 self)) i) n
  val vars_in_range0 [#"../../../Friday/src/lib.rs" 51 4 51 42] (self : Friday_Clause_Type.t_clause) (n : int) : bool
    ensures { result = vars_in_range0 self n }
    
  use prelude.Borrow
  use prelude.Bool
  use prelude.Slice
  predicate has_value1 [@inline:trivial] (self : usize) (seq : Seq.seq bool) (out : bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/slice.rs" 122 20 122 37] Seq.get seq (UIntSize.to_int self) = out
  val has_value1 [@inline:trivial] (self : usize) (seq : Seq.seq bool) (out : bool) : bool
    ensures { result = has_value1 self seq out }
    
  predicate in_bounds1 [@inline:trivial] (self : usize) (seq : Seq.seq bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/slice.rs" 115 20 115 37] UIntSize.to_int self < Seq.length seq
  val in_bounds1 [@inline:trivial] (self : usize) (seq : Seq.seq bool) : bool
    ensures { result = in_bounds1 self seq }
    
  function shallow_model4 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/model.rs" 79 8 79 31] shallow_model2 self
  val shallow_model4 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
    ensures { result = shallow_model4 self }
    
  val index1 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) (index : usize) : bool
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 141 27 141 46] in_bounds1 index (shallow_model4 self)}
    requires {inv5 self}
    requires {inv3 index}
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 142 26 142 54] has_value1 index (shallow_model4 self) result }
    ensures { inv6 result }
    
  predicate has_value0 [@inline:trivial] (self : usize) (seq : Seq.seq (Friday_Lit_Type.t_lit)) (out : Friday_Lit_Type.t_lit)
    
   =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/slice.rs" 122 20 122 37] Seq.get seq (UIntSize.to_int self) = out
  val has_value0 [@inline:trivial] (self : usize) (seq : Seq.seq (Friday_Lit_Type.t_lit)) (out : Friday_Lit_Type.t_lit) : bool
    ensures { result = has_value0 self seq out }
    
  predicate in_bounds0 [@inline:trivial] (self : usize) (seq : Seq.seq (Friday_Lit_Type.t_lit)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/slice.rs" 115 20 115 37] UIntSize.to_int self < Seq.length seq
  val in_bounds0 [@inline:trivial] (self : usize) (seq : Seq.seq (Friday_Lit_Type.t_lit)) : bool
    ensures { result = in_bounds0 self seq }
    
  function shallow_model3 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Lit_Type.t_lit)
    
   =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/model.rs" 79 8 79 31] shallow_model1 self
  val shallow_model3 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Lit_Type.t_lit)
    ensures { result = shallow_model3 self }
    
  val index0 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) (index : usize) : Friday_Lit_Type.t_lit
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 141 27 141 46] in_bounds0 index (shallow_model3 self)}
    requires {inv0 self}
    requires {inv3 index}
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 142 26 142 54] has_value0 index (shallow_model3 self) result }
    ensures { inv4 result }
    
  val len0 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : usize
    requires {inv0 self}
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 75 26 75 48] UIntSize.to_int result = Seq.length (shallow_model3 self) }
    
  let rec cfg eval [#"../../../Friday/src/lib.rs" 109 4 109 43] [@cfg:stackify] [@cfg:subregion_analysis] (self : Friday_Clause_Type.t_clause) (a : Friday_Assignments_Type.t_assignments) : bool
    requires {[#"../../../Friday/src/lib.rs" 107 15 107 45] vars_in_range0 self (Seq.length (shallow_model2 (Friday_Assignments_Type.assignments_0 a)))}
    ensures { [#"../../../Friday/src/lib.rs" 108 14 108 36] result = sat1 self a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self : Friday_Clause_Type.t_clause = self;
  var a : Friday_Assignments_Type.t_assignments = a;
  var i : usize;
  var clause_len : usize;
  var _12 : bool;
  var _16 : bool;
  var _18 : bool;
  var _21 : Friday_Lit_Type.t_lit;
  var _25 : Friday_Lit_Type.t_lit;
  {
    goto BB0
  }
  BB0 {
    [#"../../../Friday/src/lib.rs" 110 27 110 28] i <- ([#"../../../Friday/src/lib.rs" 110 27 110 28] (0 : usize));
    [#"../../../Friday/src/lib.rs" 111 25 111 37] clause_len <- ([#"../../../Friday/src/lib.rs" 111 25 111 37] len0 (Friday_Clause_Type.clause_0 self));
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    invariant { [#"../../../Friday/src/lib.rs" 112 8 112 77] forall j : int . 0 <= j /\ j < UIntSize.to_int i
     -> not sat0 (Seq.get (shallow_model1 (Friday_Clause_Type.clause_0 self)) j) a };
    invariant { [#"../../../Friday/src/lib.rs" 113 20 113 37] UIntSize.to_int i <= UIntSize.to_int clause_len };
    goto BB3
  }
  BB3 {
    [#"../../../Friday/src/lib.rs" 114 14 114 28] _12 <- i < clause_len;
    switch (_12)
      | False -> goto BB10
      | True -> goto BB4
      end
  }
  BB4 {
    [#"../../../Friday/src/lib.rs" 115 25 115 28] _21 <- ([#"../../../Friday/src/lib.rs" 115 25 115 28] index0 (Friday_Clause_Type.clause_0 self) i);
    goto BB5
  }
  BB5 {
    [#"../../../Friday/src/lib.rs" 115 18 115 33] _18 <- ([#"../../../Friday/src/lib.rs" 115 18 115 33] index1 (Friday_Assignments_Type.assignments_0 a) (Friday_Lit_Type.lit_var _21));
    goto BB6
  }
  BB6 {
    [#"../../../Friday/src/lib.rs" 115 43 115 46] _25 <- ([#"../../../Friday/src/lib.rs" 115 43 115 46] index0 (Friday_Clause_Type.clause_0 self) i);
    goto BB7
  }
  BB7 {
    [#"../../../Friday/src/lib.rs" 115 15 115 52] _16 <- Bool.eqb _18 (Friday_Lit_Type.lit_value _25);
    switch (_16)
      | False -> goto BB9
      | True -> goto BB8
      end
  }
  BB8 {
    [#"../../../Friday/src/lib.rs" 116 23 116 27] _0 <- ([#"../../../Friday/src/lib.rs" 116 23 116 27] true);
    goto BB11
  }
  BB9 {
    [#"../../../Friday/src/lib.rs" 118 12 118 18] i <- i + ([#"../../../Friday/src/lib.rs" 118 17 118 18] (1 : usize));
    goto BB2
  }
  BB10 {
    [#"../../../Friday/src/lib.rs" 120 8 120 13] _0 <- ([#"../../../Friday/src/lib.rs" 120 8 120 13] false);
    goto BB11
  }
  BB11 {
    return _0
  }
  
end
module Friday_Impl7_Eval
  use Friday_Lit_Type as Friday_Lit_Type
  use seq.Seq
  predicate invariant9 (self : Seq.seq (Friday_Lit_Type.t_lit)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant9 (self : Seq.seq (Friday_Lit_Type.t_lit)) : bool
    ensures { result = invariant9 self }
    
  predicate inv8 (_x : Seq.seq (Friday_Lit_Type.t_lit))
  val inv8 (_x : Seq.seq (Friday_Lit_Type.t_lit)) : bool
    ensures { result = inv8 _x }
    
  axiom inv8 : forall x : Seq.seq (Friday_Lit_Type.t_lit) . inv8 x = true
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use prelude.Int
  use prelude.UIntSize
  let constant max0  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
  use seq.Seq
  predicate inv7 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global))
  val inv7 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv7 _x }
    
  function shallow_model3 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Lit_Type.t_lit)
    
  val shallow_model3 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Lit_Type.t_lit)
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv7 self}
    ensures { result = shallow_model3 self }
    
  axiom shallow_model3_spec : forall self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv7 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv8 (shallow_model3 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model3 self) <= UIntSize.to_int max0)
  predicate invariant8 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv8 (shallow_model3 self)
  val invariant8 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant8 self }
    
  axiom inv7 : forall x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global) . inv7 x = true
  predicate invariant7 (self : Seq.seq bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant7 (self : Seq.seq bool) : bool
    ensures { result = invariant7 self }
    
  predicate inv6 (_x : Seq.seq bool)
  val inv6 (_x : Seq.seq bool) : bool
    ensures { result = inv6 _x }
    
  axiom inv6 : forall x : Seq.seq bool . inv6 x = true
  use seq.Seq
  predicate inv5 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
  val inv5 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv5 _x }
    
  function shallow_model2 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
  val shallow_model2 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv5 self}
    ensures { result = shallow_model2 self }
    
  axiom shallow_model2_spec : forall self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv5 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv6 (shallow_model2 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model2 self) <= UIntSize.to_int max0)
  predicate invariant6 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv6 (shallow_model2 self)
  val invariant6 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant6 self }
    
  axiom inv5 : forall x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . inv5 x = true
  use Friday_Clause_Type as Friday_Clause_Type
  predicate invariant5 (self : Friday_Clause_Type.t_clause) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant5 (self : Friday_Clause_Type.t_clause) : bool
    ensures { result = invariant5 self }
    
  predicate inv4 (_x : Friday_Clause_Type.t_clause)
  val inv4 (_x : Friday_Clause_Type.t_clause) : bool
    ensures { result = inv4 _x }
    
  axiom inv4 : forall x : Friday_Clause_Type.t_clause . inv4 x = true
  predicate invariant4 (self : usize) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant4 (self : usize) : bool
    ensures { result = invariant4 self }
    
  predicate inv3 (_x : usize)
  val inv3 (_x : usize) : bool
    ensures { result = inv3 _x }
    
  axiom inv3 : forall x : usize . inv3 x = true
  predicate invariant3 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global))
    
   =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant3 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant3 self }
    
  predicate inv2 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global))
  val inv2 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global) . inv2 x = true
  predicate invariant2 (self : Seq.seq (Friday_Clause_Type.t_clause)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant2 (self : Seq.seq (Friday_Clause_Type.t_clause)) : bool
    ensures { result = invariant2 self }
    
  predicate inv1 (_x : Seq.seq (Friday_Clause_Type.t_clause))
  val inv1 (_x : Seq.seq (Friday_Clause_Type.t_clause)) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : Seq.seq (Friday_Clause_Type.t_clause) . inv1 x = true
  use seq.Seq
  predicate inv0 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global))
  val inv0 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv0 _x }
    
  function shallow_model1 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Clause_Type.t_clause)
    
  val shallow_model1 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Clause_Type.t_clause)
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv0 self}
    ensures { result = shallow_model1 self }
    
  axiom shallow_model1_spec : forall self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv0 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv1 (shallow_model1 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model1 self) <= UIntSize.to_int max0)
  predicate invariant1 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global))
    
   =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv1 (shallow_model1 self)
  val invariant1 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant1 self }
    
  axiom inv0 : forall x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global) . inv0 x = true
  use seq.Seq
  use Friday_Assignments_Type as Friday_Assignments_Type
  predicate sat2 [#"../../../Friday/src/lib.rs" 68 4 68 40] (self : Friday_Lit_Type.t_lit) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 70 12 70 41] Seq.get (shallow_model2 (Friday_Assignments_Type.assignments_0 a)) (UIntSize.to_int (Friday_Lit_Type.lit_var self)) = Friday_Lit_Type.lit_value self
  val sat2 [#"../../../Friday/src/lib.rs" 68 4 68 40] (self : Friday_Lit_Type.t_lit) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat2 self a }
    
  use seq.Seq
  predicate sat0 [#"../../../Friday/src/lib.rs" 98 4 98 40] (self : Friday_Clause_Type.t_clause) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 99 8 102 9] exists i : int . 0 <= i /\ i < Seq.length (shallow_model3 (Friday_Clause_Type.clause_0 self)) /\ sat2 (Seq.get (shallow_model3 (Friday_Clause_Type.clause_0 self)) i) a
  val sat0 [#"../../../Friday/src/lib.rs" 98 4 98 40] (self : Friday_Clause_Type.t_clause) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat0 self a }
    
  use seq.Seq
  use Friday_Formula_Type as Friday_Formula_Type
  predicate sat1 [#"../../../Friday/src/lib.rs" 41 4 41 40] (self : Friday_Formula_Type.t_formula) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 42 8 45 9] forall i : int . 0 <= i /\ i < Seq.length (shallow_model1 (Friday_Formula_Type.formula_clauses self))
     -> sat0 (Seq.get (shallow_model1 (Friday_Formula_Type.formula_clauses self)) i) a
  val sat1 [#"../../../Friday/src/lib.rs" 41 4 41 40] (self : Friday_Formula_Type.t_formula) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat1 self a }
    
  predicate var_in_range0 [#"../../../Friday/src/lib.rs" 61 4 61 41] (self : Friday_Lit_Type.t_lit) (n : int) =
    [#"../../../Friday/src/lib.rs" 63 12 63 25] UIntSize.to_int (Friday_Lit_Type.lit_var self) < n
  val var_in_range0 [#"../../../Friday/src/lib.rs" 61 4 61 41] (self : Friday_Lit_Type.t_lit) (n : int) : bool
    ensures { result = var_in_range0 self n }
    
  predicate vars_in_range0 [#"../../../Friday/src/lib.rs" 51 4 51 42] (self : Friday_Clause_Type.t_clause) (n : int) =
    [#"../../../Friday/src/lib.rs" 52 8 55 9] forall i : int . 0 <= i /\ i < Seq.length (shallow_model3 (Friday_Clause_Type.clause_0 self))
     -> var_in_range0 (Seq.get (shallow_model3 (Friday_Clause_Type.clause_0 self)) i) n
  val vars_in_range0 [#"../../../Friday/src/lib.rs" 51 4 51 42] (self : Friday_Clause_Type.t_clause) (n : int) : bool
    ensures { result = vars_in_range0 self n }
    
  predicate invariant0 [#"../../../Friday/src/lib.rs" 33 4 33 30] (self : Friday_Formula_Type.t_formula) =
    [#"../../../Friday/src/lib.rs" 34 8 37 9] forall i : int . 0 <= i /\ i < Seq.length (shallow_model1 (Friday_Formula_Type.formula_clauses self))
     -> vars_in_range0 (Seq.get (shallow_model1 (Friday_Formula_Type.formula_clauses self)) i) (UIntSize.to_int (Friday_Formula_Type.formula_num_vars self))
  val invariant0 [#"../../../Friday/src/lib.rs" 33 4 33 30] (self : Friday_Formula_Type.t_formula) : bool
    ensures { result = invariant0 self }
    
  use prelude.Borrow
  val eval0 [#"../../../Friday/src/lib.rs" 109 4 109 43] (self : Friday_Clause_Type.t_clause) (a : Friday_Assignments_Type.t_assignments) : bool
    requires {[#"../../../Friday/src/lib.rs" 107 15 107 45] vars_in_range0 self (Seq.length (shallow_model2 (Friday_Assignments_Type.assignments_0 a)))}
    ensures { [#"../../../Friday/src/lib.rs" 108 14 108 36] result = sat0 self a }
    
  use prelude.Slice
  predicate has_value0 [@inline:trivial] (self : usize) (seq : Seq.seq (Friday_Clause_Type.t_clause)) (out : Friday_Clause_Type.t_clause)
    
   =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/slice.rs" 122 20 122 37] Seq.get seq (UIntSize.to_int self) = out
  val has_value0 [@inline:trivial] (self : usize) (seq : Seq.seq (Friday_Clause_Type.t_clause)) (out : Friday_Clause_Type.t_clause) : bool
    ensures { result = has_value0 self seq out }
    
  predicate in_bounds0 [@inline:trivial] (self : usize) (seq : Seq.seq (Friday_Clause_Type.t_clause)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/slice.rs" 115 20 115 37] UIntSize.to_int self < Seq.length seq
  val in_bounds0 [@inline:trivial] (self : usize) (seq : Seq.seq (Friday_Clause_Type.t_clause)) : bool
    ensures { result = in_bounds0 self seq }
    
  function shallow_model4 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Clause_Type.t_clause)
    
   =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/model.rs" 79 8 79 31] shallow_model1 self
  val shallow_model4 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Clause_Type.t_clause)
    ensures { result = shallow_model4 self }
    
  val index0 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) (index : usize) : Friday_Clause_Type.t_clause
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 141 27 141 46] in_bounds0 index (shallow_model4 self)}
    requires {inv2 self}
    requires {inv3 index}
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 142 26 142 54] has_value0 index (shallow_model4 self) result }
    ensures { inv4 result }
    
  val len0 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : usize
    requires {inv2 self}
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 75 26 75 48] UIntSize.to_int result = Seq.length (shallow_model4 self) }
    
  let rec cfg eval [#"../../../Friday/src/lib.rs" 128 4 128 43] [@cfg:stackify] [@cfg:subregion_analysis] (self : Friday_Formula_Type.t_formula) (a : Friday_Assignments_Type.t_assignments) : bool
    requires {[#"../../../Friday/src/lib.rs" 125 15 125 31] invariant0 self}
    requires {[#"../../../Friday/src/lib.rs" 126 15 126 43] Seq.length (shallow_model2 (Friday_Assignments_Type.assignments_0 a)) = UIntSize.to_int (Friday_Formula_Type.formula_num_vars self)}
    ensures { [#"../../../Friday/src/lib.rs" 127 14 127 36] result = sat1 self a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self : Friday_Formula_Type.t_formula = self;
  var a : Friday_Assignments_Type.t_assignments = a;
  var i : usize;
  var _10 : bool;
  var _12 : usize;
  var _15 : bool;
  var _17 : Friday_Clause_Type.t_clause;
  {
    goto BB0
  }
  BB0 {
    [#"../../../Friday/src/lib.rs" 129 27 129 28] i <- ([#"../../../Friday/src/lib.rs" 129 27 129 28] (0 : usize));
    goto BB1
  }
  BB1 {
    invariant { [#"../../../Friday/src/lib.rs" 130 8 130 82] forall j : int . 0 <= j /\ j < UIntSize.to_int i
     -> sat0 (Seq.get (shallow_model1 (Friday_Formula_Type.formula_clauses self)) j) a };
    goto BB2
  }
  BB2 {
    [#"../../../Friday/src/lib.rs" 131 18 131 36] _12 <- ([#"../../../Friday/src/lib.rs" 131 18 131 36] len0 (Friday_Formula_Type.formula_clauses self));
    goto BB3
  }
  BB3 {
    [#"../../../Friday/src/lib.rs" 131 14 131 36] _10 <- i < _12;
    _12 <- any usize;
    switch (_10)
      | False -> goto BB9
      | True -> goto BB4
      end
  }
  BB4 {
    [#"../../../Friday/src/lib.rs" 132 28 132 31] _17 <- ([#"../../../Friday/src/lib.rs" 132 28 132 31] index0 (Friday_Formula_Type.formula_clauses self) i);
    goto BB5
  }
  BB5 {
    [#"../../../Friday/src/lib.rs" 132 16 132 39] _15 <- ([#"../../../Friday/src/lib.rs" 132 16 132 39] eval0 _17 a);
    goto BB6
  }
  BB6 {
    switch (_15)
      | False -> goto BB8
      | True -> goto BB7
      end
  }
  BB7 {
    [#"../../../Friday/src/lib.rs" 135 12 135 18] i <- i + ([#"../../../Friday/src/lib.rs" 135 17 135 18] (1 : usize));
    goto BB1
  }
  BB8 {
    [#"../../../Friday/src/lib.rs" 133 23 133 28] _0 <- ([#"../../../Friday/src/lib.rs" 133 23 133 28] false);
    goto BB10
  }
  BB9 {
    [#"../../../Friday/src/lib.rs" 137 8 137 12] _0 <- ([#"../../../Friday/src/lib.rs" 137 8 137 12] true);
    goto BB10
  }
  BB10 {
    return _0
  }
  
end
module Friday_SetNext
  use seq.Seq
  predicate invariant4 (self : Seq.seq bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant4 (self : Seq.seq bool) : bool
    ensures { result = invariant4 self }
    
  predicate inv4 (_x : Seq.seq bool)
  val inv4 (_x : Seq.seq bool) : bool
    ensures { result = inv4 _x }
    
  axiom inv4 : forall x : Seq.seq bool . inv4 x = true
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use prelude.Int
  use prelude.UIntSize
  let constant max1  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
  use seq.Seq
  predicate inv3 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
  val inv3 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv3 _x }
    
  function shallow_model1 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
  val shallow_model1 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv3 self}
    ensures { result = shallow_model1 self }
    
  axiom shallow_model1_spec : forall self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv3 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv4 (shallow_model1 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model1 self) <= UIntSize.to_int max1)
  predicate invariant3 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv4 (shallow_model1 self)
  val invariant3 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant3 self }
    
  axiom inv3 : forall x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . inv3 x = true
  use prelude.Borrow
  predicate invariant2 (self : borrowed bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant2 (self : borrowed bool) : bool
    ensures { result = invariant2 self }
    
  predicate inv2 (_x : borrowed bool)
  val inv2 (_x : borrowed bool) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : borrowed bool . inv2 x = true
  predicate invariant1 (self : usize) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant1 (self : usize) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : usize)
  val inv1 (_x : usize) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : usize . inv1 x = true
  predicate invariant0 (self : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant0 (self : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)))
  val inv0 (_x : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) . inv0 x = true
  use seq.Seq
  use Friday_Pasn_Type as Friday_Pasn_Type
  use Friday_Assignments_Type as Friday_Assignments_Type
  predicate compatible0 [#"../../../Friday/src/lib.rs" 77 4 77 41] (self : Friday_Assignments_Type.t_assignments) (pa : Friday_Pasn_Type.t_pasn)
    
   =
    [#"../../../Friday/src/lib.rs" 78 8 82 9] Seq.length (shallow_model1 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa))) = Seq.length (shallow_model1 (Friday_Assignments_Type.assignments_0 self)) /\ (forall i : int . 0 <= i /\ i < UIntSize.to_int (Friday_Pasn_Type.pasn_ix pa)
     -> Seq.get (shallow_model1 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa))) i = Seq.get (shallow_model1 (Friday_Assignments_Type.assignments_0 self)) i)
  val compatible0 [#"../../../Friday/src/lib.rs" 77 4 77 41] (self : Friday_Assignments_Type.t_assignments) (pa : Friday_Pasn_Type.t_pasn) : bool
    ensures { result = compatible0 self pa }
    
  let constant max0  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
  predicate resolve0 (self : borrowed bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/resolve.rs" 26 20 26 34]  ^ self =  * self
  val resolve0 (self : borrowed bool) : bool
    ensures { result = resolve0 self }
    
  use prelude.Slice
  predicate resolve_elswhere0 [@inline:trivial] (self : usize) (old' : Seq.seq bool) (fin : Seq.seq bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/slice.rs" 129 8 129 96] forall i : int . 0 <= i /\ i <> UIntSize.to_int self /\ i < Seq.length old'
     -> Seq.get old' i = Seq.get fin i
  val resolve_elswhere0 [@inline:trivial] (self : usize) (old' : Seq.seq bool) (fin : Seq.seq bool) : bool
    ensures { result = resolve_elswhere0 self old' fin }
    
  predicate has_value0 [@inline:trivial] (self : usize) (seq : Seq.seq bool) (out : bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/slice.rs" 122 20 122 37] Seq.get seq (UIntSize.to_int self) = out
  val has_value0 [@inline:trivial] (self : usize) (seq : Seq.seq bool) (out : bool) : bool
    ensures { result = has_value0 self seq out }
    
  predicate in_bounds0 [@inline:trivial] (self : usize) (seq : Seq.seq bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/slice.rs" 115 20 115 37] UIntSize.to_int self < Seq.length seq
  val in_bounds0 [@inline:trivial] (self : usize) (seq : Seq.seq bool) : bool
    ensures { result = in_bounds0 self seq }
    
  function shallow_model2 (self : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))) : Seq.seq bool
    
   =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/model.rs" 97 8 97 31] shallow_model1 ( * self)
  val shallow_model2 (self : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))) : Seq.seq bool
    ensures { result = shallow_model2 self }
    
  val index_mut0 (self : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))) (index : usize) : borrowed bool
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 132 27 132 46] in_bounds0 index (shallow_model2 self)}
    requires {inv0 self}
    requires {inv1 index}
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 133 26 133 54] has_value0 index (shallow_model2 self) ( * result) }
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 134 26 134 57] has_value0 index (shallow_model1 ( ^ self)) ( ^ result) }
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 135 26 135 62] resolve_elswhere0 index (shallow_model2 self) (shallow_model1 ( ^ self)) }
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 136 26 136 55] Seq.length (shallow_model1 ( ^ self)) = Seq.length (shallow_model2 self) }
    ensures { inv2 result }
    
  val clone0 [#"../../../Friday/src/lib.rs" 21 9 21 14] (self : Friday_Pasn_Type.t_pasn) : Friday_Pasn_Type.t_pasn
    ensures { [#"../../../Friday/src/lib.rs" 21 9 21 14] result = self }
    
  let rec cfg set_next [#"../../../Friday/src/lib.rs" 146 0 146 39] [@cfg:stackify] [@cfg:subregion_analysis] (pa : Friday_Pasn_Type.t_pasn) (b : bool) : Friday_Pasn_Type.t_pasn
    requires {[#"../../../Friday/src/lib.rs" 141 11 141 38] UIntSize.to_int (Friday_Pasn_Type.pasn_ix pa) < Seq.length (shallow_model1 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa)))}
    requires {[#"../../../Friday/src/lib.rs" 142 11 142 44] Seq.length (shallow_model1 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa))) <= UIntSize.to_int max0}
    ensures { [#"../../../Friday/src/lib.rs" 143 0 143 41] compatible0 (Friday_Pasn_Type.pasn_assign result) pa }
    ensures { [#"../../../Friday/src/lib.rs" 144 10 144 39] Seq.get (shallow_model1 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign result))) (UIntSize.to_int (Friday_Pasn_Type.pasn_ix pa)) = b }
    ensures { [#"../../../Friday/src/lib.rs" 145 10 145 34] UIntSize.to_int (Friday_Pasn_Type.pasn_ix result) = UIntSize.to_int (Friday_Pasn_Type.pasn_ix pa) + 1 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Friday_Pasn_Type.t_pasn;
  var pa : Friday_Pasn_Type.t_pasn = pa;
  var b : bool = b;
  var new_pa : Friday_Pasn_Type.t_pasn;
  var _11 : borrowed bool;
  var _12 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  {
    goto BB0
  }
  BB0 {
    [#"../../../Friday/src/lib.rs" 147 21 147 31] new_pa <- ([#"../../../Friday/src/lib.rs" 147 21 147 31] clone0 pa);
    goto BB1
  }
  BB1 {
    [#"../../../Friday/src/lib.rs" 148 4 148 19] _12 <- Borrow.borrow_mut (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign new_pa));
    [#"../../../Friday/src/lib.rs" 148 4 148 19] new_pa <- (let Friday_Pasn_Type.C_Pasn x0 x1 = new_pa in Friday_Pasn_Type.C_Pasn (let Friday_Assignments_Type.C_Assignments x0 = Friday_Pasn_Type.pasn_assign new_pa in Friday_Assignments_Type.C_Assignments ( ^ _12)) x1);
    [#"../../../Friday/src/lib.rs" 148 19 148 26] _11 <- ([#"../../../Friday/src/lib.rs" 148 19 148 26] index_mut0 _12 (Friday_Pasn_Type.pasn_ix pa));
    _12 <- any borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
    goto BB2
  }
  BB2 {
    [#"../../../Friday/src/lib.rs" 148 4 148 30] _11 <- { _11 with current = b ; };
    assume { resolve0 _11 };
    [#"../../../Friday/src/lib.rs" 149 4 149 18] new_pa <- (let Friday_Pasn_Type.C_Pasn x0 x1 = new_pa in Friday_Pasn_Type.C_Pasn x0 (Friday_Pasn_Type.pasn_ix new_pa + ([#"../../../Friday/src/lib.rs" 149 17 149 18] (1 : usize))));
    [#"../../../Friday/src/lib.rs" 150 4 150 10] _0 <- new_pa;
    new_pa <- any Friday_Pasn_Type.t_pasn;
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module Friday_Solve
  use Friday_Lit_Type as Friday_Lit_Type
  use seq.Seq
  predicate invariant8 (self : Seq.seq (Friday_Lit_Type.t_lit)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant8 (self : Seq.seq (Friday_Lit_Type.t_lit)) : bool
    ensures { result = invariant8 self }
    
  predicate inv6 (_x : Seq.seq (Friday_Lit_Type.t_lit))
  val inv6 (_x : Seq.seq (Friday_Lit_Type.t_lit)) : bool
    ensures { result = inv6 _x }
    
  axiom inv6 : forall x : Seq.seq (Friday_Lit_Type.t_lit) . inv6 x = true
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use prelude.Int
  use prelude.UIntSize
  let constant max1  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
  use seq.Seq
  predicate inv5 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global))
  val inv5 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv5 _x }
    
  function shallow_model4 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Lit_Type.t_lit)
    
  val shallow_model4 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Lit_Type.t_lit)
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv5 self}
    ensures { result = shallow_model4 self }
    
  axiom shallow_model4_spec : forall self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv5 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv6 (shallow_model4 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model4 self) <= UIntSize.to_int max1)
  predicate invariant7 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv6 (shallow_model4 self)
  val invariant7 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant7 self }
    
  axiom inv5 : forall x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global) . inv5 x = true
  use Friday_Clause_Type as Friday_Clause_Type
  predicate invariant6 (self : Seq.seq (Friday_Clause_Type.t_clause)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant6 (self : Seq.seq (Friday_Clause_Type.t_clause)) : bool
    ensures { result = invariant6 self }
    
  predicate inv4 (_x : Seq.seq (Friday_Clause_Type.t_clause))
  val inv4 (_x : Seq.seq (Friday_Clause_Type.t_clause)) : bool
    ensures { result = inv4 _x }
    
  axiom inv4 : forall x : Seq.seq (Friday_Clause_Type.t_clause) . inv4 x = true
  use seq.Seq
  predicate inv3 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global))
  val inv3 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv3 _x }
    
  function shallow_model3 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Clause_Type.t_clause)
    
  val shallow_model3 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Clause_Type.t_clause)
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv3 self}
    ensures { result = shallow_model3 self }
    
  axiom shallow_model3_spec : forall self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv3 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv4 (shallow_model3 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model3 self) <= UIntSize.to_int max1)
  predicate invariant5 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global))
    
   =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv4 (shallow_model3 self)
  val invariant5 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant5 self }
    
  axiom inv3 : forall x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global) . inv3 x = true
  predicate invariant4 (self : Seq.seq bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant4 (self : Seq.seq bool) : bool
    ensures { result = invariant4 self }
    
  predicate inv2 (_x : Seq.seq bool)
  val inv2 (_x : Seq.seq bool) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : Seq.seq bool . inv2 x = true
  use seq.Seq
  predicate inv1 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
  val inv1 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv1 _x }
    
  function shallow_model2 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
  val shallow_model2 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv1 self}
    ensures { result = shallow_model2 self }
    
  axiom shallow_model2_spec : forall self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv1 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv2 (shallow_model2 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model2 self) <= UIntSize.to_int max1)
  predicate invariant3 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv2 (shallow_model2 self)
  val invariant3 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant3 self }
    
  axiom inv1 : forall x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . inv1 x = true
  predicate invariant2 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant2 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant2 self }
    
  predicate inv0 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
  val inv0 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . inv0 x = true
  use seq.Seq
  use Friday_Assignments_Type as Friday_Assignments_Type
  predicate sat2 [#"../../../Friday/src/lib.rs" 68 4 68 40] (self : Friday_Lit_Type.t_lit) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 70 12 70 41] Seq.get (shallow_model2 (Friday_Assignments_Type.assignments_0 a)) (UIntSize.to_int (Friday_Lit_Type.lit_var self)) = Friday_Lit_Type.lit_value self
  val sat2 [#"../../../Friday/src/lib.rs" 68 4 68 40] (self : Friday_Lit_Type.t_lit) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat2 self a }
    
  use seq.Seq
  predicate sat1 [#"../../../Friday/src/lib.rs" 98 4 98 40] (self : Friday_Clause_Type.t_clause) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 99 8 102 9] exists i : int . 0 <= i /\ i < Seq.length (shallow_model4 (Friday_Clause_Type.clause_0 self)) /\ sat2 (Seq.get (shallow_model4 (Friday_Clause_Type.clause_0 self)) i) a
  val sat1 [#"../../../Friday/src/lib.rs" 98 4 98 40] (self : Friday_Clause_Type.t_clause) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat1 self a }
    
  use seq.Seq
  use Friday_Formula_Type as Friday_Formula_Type
  predicate sat0 [#"../../../Friday/src/lib.rs" 41 4 41 40] (self : Friday_Formula_Type.t_formula) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 42 8 45 9] forall i : int . 0 <= i /\ i < Seq.length (shallow_model3 (Friday_Formula_Type.formula_clauses self))
     -> sat1 (Seq.get (shallow_model3 (Friday_Formula_Type.formula_clauses self)) i) a
  val sat0 [#"../../../Friday/src/lib.rs" 41 4 41 40] (self : Friday_Formula_Type.t_formula) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat0 self a }
    
  use Friday_Pasn_Type as Friday_Pasn_Type
  predicate compatible0 [#"../../../Friday/src/lib.rs" 77 4 77 41] (self : Friday_Assignments_Type.t_assignments) (pa : Friday_Pasn_Type.t_pasn)
    
   =
    [#"../../../Friday/src/lib.rs" 78 8 82 9] Seq.length (shallow_model2 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa))) = Seq.length (shallow_model2 (Friday_Assignments_Type.assignments_0 self)) /\ (forall i : int . 0 <= i /\ i < UIntSize.to_int (Friday_Pasn_Type.pasn_ix pa)
     -> Seq.get (shallow_model2 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa))) i = Seq.get (shallow_model2 (Friday_Assignments_Type.assignments_0 self)) i)
  val compatible0 [#"../../../Friday/src/lib.rs" 77 4 77 41] (self : Friday_Assignments_Type.t_assignments) (pa : Friday_Pasn_Type.t_pasn) : bool
    ensures { result = compatible0 self pa }
    
  predicate var_in_range0 [#"../../../Friday/src/lib.rs" 61 4 61 41] (self : Friday_Lit_Type.t_lit) (n : int) =
    [#"../../../Friday/src/lib.rs" 63 12 63 25] UIntSize.to_int (Friday_Lit_Type.lit_var self) < n
  val var_in_range0 [#"../../../Friday/src/lib.rs" 61 4 61 41] (self : Friday_Lit_Type.t_lit) (n : int) : bool
    ensures { result = var_in_range0 self n }
    
  predicate vars_in_range0 [#"../../../Friday/src/lib.rs" 51 4 51 42] (self : Friday_Clause_Type.t_clause) (n : int) =
    [#"../../../Friday/src/lib.rs" 52 8 55 9] forall i : int . 0 <= i /\ i < Seq.length (shallow_model4 (Friday_Clause_Type.clause_0 self))
     -> var_in_range0 (Seq.get (shallow_model4 (Friday_Clause_Type.clause_0 self)) i) n
  val vars_in_range0 [#"../../../Friday/src/lib.rs" 51 4 51 42] (self : Friday_Clause_Type.t_clause) (n : int) : bool
    ensures { result = vars_in_range0 self n }
    
  predicate invariant1 [#"../../../Friday/src/lib.rs" 33 4 33 30] (self : Friday_Formula_Type.t_formula) =
    [#"../../../Friday/src/lib.rs" 34 8 37 9] forall i : int . 0 <= i /\ i < Seq.length (shallow_model3 (Friday_Formula_Type.formula_clauses self))
     -> vars_in_range0 (Seq.get (shallow_model3 (Friday_Formula_Type.formula_clauses self)) i) (UIntSize.to_int (Friday_Formula_Type.formula_num_vars self))
  val invariant1 [#"../../../Friday/src/lib.rs" 33 4 33 30] (self : Friday_Formula_Type.t_formula) : bool
    ensures { result = invariant1 self }
    
  predicate invariant0 [#"../../../Friday/src/lib.rs" 88 4 88 38] (self : Friday_Pasn_Type.t_pasn) (n : int) =
    [#"../../../Friday/src/lib.rs" 90 12 91 40] UIntSize.to_int (Friday_Pasn_Type.pasn_ix self) <= Seq.length (shallow_model2 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign self))) /\ Seq.length (shallow_model2 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign self))) = n
  val invariant0 [#"../../../Friday/src/lib.rs" 88 4 88 38] (self : Friday_Pasn_Type.t_pasn) (n : int) : bool
    ensures { result = invariant0 self n }
    
  use prelude.Borrow
  val eval0 [#"../../../Friday/src/lib.rs" 128 4 128 43] (self : Friday_Formula_Type.t_formula) (a : Friday_Assignments_Type.t_assignments) : bool
    requires {[#"../../../Friday/src/lib.rs" 125 15 125 31] invariant1 self}
    requires {[#"../../../Friday/src/lib.rs" 126 15 126 43] Seq.length (shallow_model2 (Friday_Assignments_Type.assignments_0 a)) = UIntSize.to_int (Friday_Formula_Type.formula_num_vars self)}
    ensures { [#"../../../Friday/src/lib.rs" 127 14 127 36] result = sat0 self a }
    
  let constant max0  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
  val set_next0 [#"../../../Friday/src/lib.rs" 146 0 146 39] (pa : Friday_Pasn_Type.t_pasn) (b : bool) : Friday_Pasn_Type.t_pasn
    requires {[#"../../../Friday/src/lib.rs" 141 11 141 38] UIntSize.to_int (Friday_Pasn_Type.pasn_ix pa) < Seq.length (shallow_model2 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa)))}
    requires {[#"../../../Friday/src/lib.rs" 142 11 142 44] Seq.length (shallow_model2 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa))) <= UIntSize.to_int max0}
    ensures { [#"../../../Friday/src/lib.rs" 143 0 143 41] compatible0 (Friday_Pasn_Type.pasn_assign result) pa }
    ensures { [#"../../../Friday/src/lib.rs" 144 10 144 39] Seq.get (shallow_model2 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign result))) (UIntSize.to_int (Friday_Pasn_Type.pasn_ix pa)) = b }
    ensures { [#"../../../Friday/src/lib.rs" 145 10 145 34] UIntSize.to_int (Friday_Pasn_Type.pasn_ix result) = UIntSize.to_int (Friday_Pasn_Type.pasn_ix pa) + 1 }
    
  function shallow_model1 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/model.rs" 79 8 79 31] shallow_model2 self
  val shallow_model1 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
    ensures { result = shallow_model1 self }
    
  val len0 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : usize
    requires {inv0 self}
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 75 26 75 48] UIntSize.to_int result = Seq.length (shallow_model1 self) }
    
  let rec cfg solve [#"../../../Friday/src/lib.rs" 157 0 157 39] [@cfg:stackify] [@cfg:subregion_analysis] (f : Friday_Formula_Type.t_formula) (pa : Friday_Pasn_Type.t_pasn) : bool
    requires {[#"../../../Friday/src/lib.rs" 154 11 154 36] invariant0 pa (UIntSize.to_int (Friday_Formula_Type.formula_num_vars f))}
    requires {[#"../../../Friday/src/lib.rs" 155 11 155 24] invariant1 f}
    ensures { [#"../../../Friday/src/lib.rs" 156 10 156 76] (not result) = (forall a : Friday_Assignments_Type.t_assignments . compatible0 a pa
     -> not sat0 f a) }
    variant {[#"../../../Friday/src/lib.rs" 153 0 153 32] UIntSize.to_int (Friday_Formula_Type.formula_num_vars f) - UIntSize.to_int (Friday_Pasn_Type.pasn_ix pa)}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var f : Friday_Formula_Type.t_formula = f;
  var pa : Friday_Pasn_Type.t_pasn = pa;
  var _8 : bool;
  var _10 : usize;
  var _15 : Friday_Assignments_Type.t_assignments;
  var _16 : bool;
  var _18 : Friday_Pasn_Type.t_pasn;
  var _20 : Friday_Pasn_Type.t_pasn;
  var _22 : Friday_Pasn_Type.t_pasn;
  var _24 : Friday_Pasn_Type.t_pasn;
  {
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    [#"../../../Friday/src/lib.rs" 158 16 158 33] _10 <- ([#"../../../Friday/src/lib.rs" 158 16 158 33] len0 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa)));
    goto BB3
  }
  BB3 {
    [#"../../../Friday/src/lib.rs" 158 7 158 33] _8 <- Friday_Pasn_Type.pasn_ix pa = _10;
    _10 <- any usize;
    switch (_8)
      | False -> goto BB6
      | True -> goto BB4
      end
  }
  BB4 {
    [#"../../../Friday/src/lib.rs" 159 22 159 32] _15 <- Friday_Pasn_Type.pasn_assign pa;
    [#"../../../Friday/src/lib.rs" 159 15 159 33] _0 <- ([#"../../../Friday/src/lib.rs" 159 15 159 33] eval0 f _15);
    goto BB5
  }
  BB5 {
    goto BB15
  }
  BB6 {
    [#"../../../Friday/src/lib.rs" 161 22 161 25] _20 <- pa;
    [#"../../../Friday/src/lib.rs" 161 13 161 32] _18 <- ([#"../../../Friday/src/lib.rs" 161 13 161 32] set_next0 _20 ([#"../../../Friday/src/lib.rs" 161 27 161 31] true));
    goto BB7
  }
  BB7 {
    [#"../../../Friday/src/lib.rs" 161 4 161 33] _16 <- ([#"../../../Friday/src/lib.rs" 161 4 161 33] solve f _18);
    _18 <- any Friday_Pasn_Type.t_pasn;
    goto BB8
  }
  BB8 {
    switch (_16)
      | False -> goto BB10
      | True -> goto BB9
      end
  }
  BB9 {
    [#"../../../Friday/src/lib.rs" 161 4 161 67] _0 <- ([#"../../../Friday/src/lib.rs" 161 4 161 67] true);
    goto BB14
  }
  BB10 {
    goto BB11
  }
  BB11 {
    [#"../../../Friday/src/lib.rs" 161 55 161 58] _24 <- pa;
    [#"../../../Friday/src/lib.rs" 161 46 161 66] _22 <- ([#"../../../Friday/src/lib.rs" 161 46 161 66] set_next0 _24 ([#"../../../Friday/src/lib.rs" 161 60 161 65] false));
    goto BB12
  }
  BB12 {
    [#"../../../Friday/src/lib.rs" 161 37 161 67] _0 <- ([#"../../../Friday/src/lib.rs" 161 37 161 67] solve f _22);
    _22 <- any Friday_Pasn_Type.t_pasn;
    goto BB13
  }
  BB13 {
    goto BB14
  }
  BB14 {
    goto BB15
  }
  BB15 {
    return _0
  }
  
end
module Friday_Solver
  use Friday_Lit_Type as Friday_Lit_Type
  use seq.Seq
  predicate invariant8 (self : Seq.seq (Friday_Lit_Type.t_lit)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant8 (self : Seq.seq (Friday_Lit_Type.t_lit)) : bool
    ensures { result = invariant8 self }
    
  predicate inv6 (_x : Seq.seq (Friday_Lit_Type.t_lit))
  val inv6 (_x : Seq.seq (Friday_Lit_Type.t_lit)) : bool
    ensures { result = inv6 _x }
    
  axiom inv6 : forall x : Seq.seq (Friday_Lit_Type.t_lit) . inv6 x = true
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use prelude.Int
  use prelude.UIntSize
  let constant max0  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
  use seq.Seq
  predicate inv5 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global))
  val inv5 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv5 _x }
    
  function shallow_model3 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Lit_Type.t_lit)
    
  val shallow_model3 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Lit_Type.t_lit)
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv5 self}
    ensures { result = shallow_model3 self }
    
  axiom shallow_model3_spec : forall self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv5 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv6 (shallow_model3 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model3 self) <= UIntSize.to_int max0)
  predicate invariant7 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv6 (shallow_model3 self)
  val invariant7 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant7 self }
    
  axiom inv5 : forall x : Alloc_Vec_Vec_Type.t_vec (Friday_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global) . inv5 x = true
  use Friday_Clause_Type as Friday_Clause_Type
  predicate invariant6 (self : Seq.seq (Friday_Clause_Type.t_clause)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant6 (self : Seq.seq (Friday_Clause_Type.t_clause)) : bool
    ensures { result = invariant6 self }
    
  predicate inv4 (_x : Seq.seq (Friday_Clause_Type.t_clause))
  val inv4 (_x : Seq.seq (Friday_Clause_Type.t_clause)) : bool
    ensures { result = inv4 _x }
    
  axiom inv4 : forall x : Seq.seq (Friday_Clause_Type.t_clause) . inv4 x = true
  use seq.Seq
  predicate inv3 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global))
  val inv3 (_x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv3 _x }
    
  function shallow_model2 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Clause_Type.t_clause)
    
  val shallow_model2 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : Seq.seq (Friday_Clause_Type.t_clause)
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv3 self}
    ensures { result = shallow_model2 self }
    
  axiom shallow_model2_spec : forall self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv3 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv4 (shallow_model2 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model2 self) <= UIntSize.to_int max0)
  predicate invariant5 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global))
    
   =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv4 (shallow_model2 self)
  val invariant5 (self : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant5 self }
    
  axiom inv3 : forall x : Alloc_Vec_Vec_Type.t_vec (Friday_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global) . inv3 x = true
  predicate invariant4 (self : Seq.seq bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant4 (self : Seq.seq bool) : bool
    ensures { result = invariant4 self }
    
  predicate inv2 (_x : Seq.seq bool)
  val inv2 (_x : Seq.seq bool) : bool
    ensures { result = inv2 _x }
    
  axiom inv2 : forall x : Seq.seq bool . inv2 x = true
  use seq.Seq
  predicate inv1 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
  val inv1 (_x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = inv1 _x }
    
  function shallow_model0 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
  val shallow_model0 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Seq.seq bool
    requires {[#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv1 self}
    ensures { result = shallow_model0 self }
    
  axiom shallow_model0_spec : forall self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 21 19 25] inv1 self)
   -> ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 19 4 19 36] inv2 (shallow_model0 self)) && ([#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 18 14 18 41] Seq.length (shallow_model0 self) <= UIntSize.to_int max0)
  predicate invariant3 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 60 20 60 41] inv2 (shallow_model0 self)
  val invariant3 (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = invariant3 self }
    
  axiom inv1 : forall x : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global) . inv1 x = true
  predicate invariant2 (self : bool) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant2 (self : bool) : bool
    ensures { result = invariant2 self }
    
  predicate inv0 (_x : bool)
  val inv0 (_x : bool) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : bool . inv0 x = true
  use seq.Seq
  use Friday_Assignments_Type as Friday_Assignments_Type
  predicate sat2 [#"../../../Friday/src/lib.rs" 68 4 68 40] (self : Friday_Lit_Type.t_lit) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 70 12 70 41] Seq.get (shallow_model0 (Friday_Assignments_Type.assignments_0 a)) (UIntSize.to_int (Friday_Lit_Type.lit_var self)) = Friday_Lit_Type.lit_value self
  val sat2 [#"../../../Friday/src/lib.rs" 68 4 68 40] (self : Friday_Lit_Type.t_lit) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat2 self a }
    
  use seq.Seq
  predicate sat1 [#"../../../Friday/src/lib.rs" 98 4 98 40] (self : Friday_Clause_Type.t_clause) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 99 8 102 9] exists i : int . 0 <= i /\ i < Seq.length (shallow_model3 (Friday_Clause_Type.clause_0 self)) /\ sat2 (Seq.get (shallow_model3 (Friday_Clause_Type.clause_0 self)) i) a
  val sat1 [#"../../../Friday/src/lib.rs" 98 4 98 40] (self : Friday_Clause_Type.t_clause) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat1 self a }
    
  use seq.Seq
  use Friday_Formula_Type as Friday_Formula_Type
  predicate sat0 [#"../../../Friday/src/lib.rs" 41 4 41 40] (self : Friday_Formula_Type.t_formula) (a : Friday_Assignments_Type.t_assignments)
    
   =
    [#"../../../Friday/src/lib.rs" 42 8 45 9] forall i : int . 0 <= i /\ i < Seq.length (shallow_model2 (Friday_Formula_Type.formula_clauses self))
     -> sat1 (Seq.get (shallow_model2 (Friday_Formula_Type.formula_clauses self)) i) a
  val sat0 [#"../../../Friday/src/lib.rs" 41 4 41 40] (self : Friday_Formula_Type.t_formula) (a : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = sat0 self a }
    
  predicate var_in_range0 [#"../../../Friday/src/lib.rs" 61 4 61 41] (self : Friday_Lit_Type.t_lit) (n : int) =
    [#"../../../Friday/src/lib.rs" 63 12 63 25] UIntSize.to_int (Friday_Lit_Type.lit_var self) < n
  val var_in_range0 [#"../../../Friday/src/lib.rs" 61 4 61 41] (self : Friday_Lit_Type.t_lit) (n : int) : bool
    ensures { result = var_in_range0 self n }
    
  predicate vars_in_range0 [#"../../../Friday/src/lib.rs" 51 4 51 42] (self : Friday_Clause_Type.t_clause) (n : int) =
    [#"../../../Friday/src/lib.rs" 52 8 55 9] forall i : int . 0 <= i /\ i < Seq.length (shallow_model3 (Friday_Clause_Type.clause_0 self))
     -> var_in_range0 (Seq.get (shallow_model3 (Friday_Clause_Type.clause_0 self)) i) n
  val vars_in_range0 [#"../../../Friday/src/lib.rs" 51 4 51 42] (self : Friday_Clause_Type.t_clause) (n : int) : bool
    ensures { result = vars_in_range0 self n }
    
  predicate invariant0 [#"../../../Friday/src/lib.rs" 33 4 33 30] (self : Friday_Formula_Type.t_formula) =
    [#"../../../Friday/src/lib.rs" 34 8 37 9] forall i : int . 0 <= i /\ i < Seq.length (shallow_model2 (Friday_Formula_Type.formula_clauses self))
     -> vars_in_range0 (Seq.get (shallow_model2 (Friday_Formula_Type.formula_clauses self)) i) (UIntSize.to_int (Friday_Formula_Type.formula_num_vars self))
  val invariant0 [#"../../../Friday/src/lib.rs" 33 4 33 30] (self : Friday_Formula_Type.t_formula) : bool
    ensures { result = invariant0 self }
    
  use prelude.Borrow
  use Friday_Pasn_Type as Friday_Pasn_Type
  predicate compatible0 [#"../../../Friday/src/lib.rs" 77 4 77 41] (self : Friday_Assignments_Type.t_assignments) (pa : Friday_Pasn_Type.t_pasn)
    
   =
    [#"../../../Friday/src/lib.rs" 78 8 82 9] Seq.length (shallow_model0 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa))) = Seq.length (shallow_model0 (Friday_Assignments_Type.assignments_0 self)) /\ (forall i : int . 0 <= i /\ i < UIntSize.to_int (Friday_Pasn_Type.pasn_ix pa)
     -> Seq.get (shallow_model0 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign pa))) i = Seq.get (shallow_model0 (Friday_Assignments_Type.assignments_0 self)) i)
  val compatible0 [#"../../../Friday/src/lib.rs" 77 4 77 41] (self : Friday_Assignments_Type.t_assignments) (pa : Friday_Pasn_Type.t_pasn) : bool
    ensures { result = compatible0 self pa }
    
  predicate invariant1 [#"../../../Friday/src/lib.rs" 88 4 88 38] (self : Friday_Pasn_Type.t_pasn) (n : int) =
    [#"../../../Friday/src/lib.rs" 90 12 91 40] UIntSize.to_int (Friday_Pasn_Type.pasn_ix self) <= Seq.length (shallow_model0 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign self))) /\ Seq.length (shallow_model0 (Friday_Assignments_Type.assignments_0 (Friday_Pasn_Type.pasn_assign self))) = n
  val invariant1 [#"../../../Friday/src/lib.rs" 88 4 88 38] (self : Friday_Pasn_Type.t_pasn) (n : int) : bool
    ensures { result = invariant1 self n }
    
  val solve0 [#"../../../Friday/src/lib.rs" 157 0 157 39] (f : Friday_Formula_Type.t_formula) (pa : Friday_Pasn_Type.t_pasn) : bool
    requires {[#"../../../Friday/src/lib.rs" 154 11 154 36] invariant1 pa (UIntSize.to_int (Friday_Formula_Type.formula_num_vars f))}
    requires {[#"../../../Friday/src/lib.rs" 155 11 155 24] invariant0 f}
    ensures { [#"../../../Friday/src/lib.rs" 156 10 156 76] (not result) = (forall a : Friday_Assignments_Type.t_assignments . compatible0 a pa
     -> not sat0 f a) }
    
  function index_logic0 [@inline:trivial] (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) (ix : int) : bool
    
   =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/logic/ops.rs" 20 8 20 31] Seq.get (shallow_model0 self) ix
  val index_logic0 [@inline:trivial] (self : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) (ix : int) : bool
    ensures { result = index_logic0 self ix }
    
  val from_elem0 (elem : bool) (n : usize) : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)
    requires {inv0 elem}
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 157 22 157 41] Seq.length (shallow_model0 result) = UIntSize.to_int n }
    ensures { [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/std/vec.rs" 158 12 158 78] forall i : int . 0 <= i /\ i < UIntSize.to_int n
     -> index_logic0 result i = elem }
    ensures { inv1 result }
    
  let rec cfg solver [#"../../../Friday/src/lib.rs" 168 0 168 34] [@cfg:stackify] [@cfg:subregion_analysis] (f : Friday_Formula_Type.t_formula) : bool
    requires {[#"../../../Friday/src/lib.rs" 164 11 164 24] invariant0 f}
    ensures { [#"../../../Friday/src/lib.rs" 165 0 166 33] not result
     -> (forall a : Friday_Assignments_Type.t_assignments . Seq.length (shallow_model0 (Friday_Assignments_Type.assignments_0 a)) = UIntSize.to_int (Friday_Formula_Type.formula_num_vars f)
     -> not sat0 f a) }
    ensures { [#"../../../Friday/src/lib.rs" 167 0 167 55] result
     -> (exists a : Friday_Assignments_Type.t_assignments . sat0 f a) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var f : Friday_Formula_Type.t_formula = f;
  var _6 : Friday_Pasn_Type.t_pasn;
  var _7 : Friday_Assignments_Type.t_assignments;
  var _8 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  {
    goto BB0
  }
  BB0 {
    [#"../../../Friday/src/lib.rs" 169 40 169 63] _8 <- ([#"../../../Friday/src/lib.rs" 169 40 169 63] from_elem0 ([#"../../../Friday/src/lib.rs" 169 45 169 50] false) (Friday_Formula_Type.formula_num_vars f));
    goto BB1
  }
  BB1 {
    [#"../../../Friday/src/lib.rs" 169 28 169 64] _7 <- Friday_Assignments_Type.C_Assignments _8;
    _8 <- any Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
    goto BB2
  }
  BB2 {
    [#"../../../Friday/src/lib.rs" 169 13 169 73] _6 <- Friday_Pasn_Type.C_Pasn _7 ([#"../../../Friday/src/lib.rs" 169 70 169 71] (0 : usize));
    _7 <- any Friday_Assignments_Type.t_assignments;
    goto BB3
  }
  BB3 {
    [#"../../../Friday/src/lib.rs" 169 4 169 74] _0 <- ([#"../../../Friday/src/lib.rs" 169 4 169 74] solve0 f _6);
    _6 <- any Friday_Pasn_Type.t_pasn;
    goto BB4
  }
  BB4 {
    return _0
  }
  
end
module Friday_Impl8
  use Friday_Assignments_Type as Friday_Assignments_Type
  predicate invariant1 (self : Friday_Assignments_Type.t_assignments) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant1 (self : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : Friday_Assignments_Type.t_assignments)
  val inv1 (_x : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : Friday_Assignments_Type.t_assignments . inv1 x = true
  predicate invariant0 (self : Friday_Assignments_Type.t_assignments) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant0 (self : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : Friday_Assignments_Type.t_assignments)
  val inv0 (_x : Friday_Assignments_Type.t_assignments) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : Friday_Assignments_Type.t_assignments . inv0 x = true
  use prelude.Borrow
  goal clone'_refn : [#"../../../Friday/src/lib.rs" 13 9 13 14] forall self : Friday_Assignments_Type.t_assignments . inv0 self
   -> (forall result : Friday_Assignments_Type.t_assignments . result = self  -> inv1 result /\ result = self)
end
module Friday_Impl9
  use Friday_Pasn_Type as Friday_Pasn_Type
  predicate invariant1 (self : Friday_Pasn_Type.t_pasn) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant1 (self : Friday_Pasn_Type.t_pasn) : bool
    ensures { result = invariant1 self }
    
  predicate inv1 (_x : Friday_Pasn_Type.t_pasn)
  val inv1 (_x : Friday_Pasn_Type.t_pasn) : bool
    ensures { result = inv1 _x }
    
  axiom inv1 : forall x : Friday_Pasn_Type.t_pasn . inv1 x = true
  predicate invariant0 (self : Friday_Pasn_Type.t_pasn) =
    [#"../../../../../../../../../.cargo/git/checkouts/creusot-8bb2a9f6fb1f15ef/1357cc9/creusot-contracts/src/invariant.rs" 8 8 8 12] true
  val invariant0 (self : Friday_Pasn_Type.t_pasn) : bool
    ensures { result = invariant0 self }
    
  predicate inv0 (_x : Friday_Pasn_Type.t_pasn)
  val inv0 (_x : Friday_Pasn_Type.t_pasn) : bool
    ensures { result = inv0 _x }
    
  axiom inv0 : forall x : Friday_Pasn_Type.t_pasn . inv0 x = true
  use prelude.Borrow
  goal clone'_refn : [#"../../../Friday/src/lib.rs" 21 9 21 14] forall self : Friday_Pasn_Type.t_pasn . inv0 self
   -> (forall result : Friday_Pasn_Type.t_pasn . result = self  -> inv1 result /\ result = self)
end
