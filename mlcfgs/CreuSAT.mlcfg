
module CreusotContracts_Model_ShallowModel_ShallowModelTy_Type
  type self
  type shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Stub
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Interface
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl1_ShallowModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl1_ShallowModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl1_ShallowModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy =
    [#"../CreuSAT/src/unit_prop.rs" 284 76 284 99] ShallowModel0.shallow_model self
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module Core_Ptr_NonNull_NonNull_Type
  use prelude.Opaque
  type t_nonnull 't =
    | C_NonNull opaque_ptr
    
end
module Core_Marker_PhantomData_Type
  type t_phantomdata 't =
    | C_PhantomData
    
end
module Core_Ptr_Unique_Unique_Type
  use Core_Marker_PhantomData_Type as Core_Marker_PhantomData_Type
  use Core_Ptr_NonNull_NonNull_Type as Core_Ptr_NonNull_NonNull_Type
  type t_unique 't =
    | C_Unique (Core_Ptr_NonNull_NonNull_Type.t_nonnull 't) (Core_Marker_PhantomData_Type.t_phantomdata 't)
    
end
module Alloc_RawVec_RawVec_Type
  use prelude.Int
  use prelude.UIntSize
  use Core_Ptr_Unique_Unique_Type as Core_Ptr_Unique_Unique_Type
  type t_rawvec 't 'a =
    | C_RawVec (Core_Ptr_Unique_Unique_Type.t_unique 't) usize 'a
    
end
module Alloc_Vec_Vec_Type
  use prelude.Int
  use prelude.UIntSize
  use Alloc_RawVec_RawVec_Type as Alloc_RawVec_RawVec_Type
  type t_vec 't 'a =
    | C_Vec (Alloc_RawVec_RawVec_Type.t_rawvec 't 'a) usize
    
end
module Alloc_Alloc_Global_Type
  type t_global  =
    | C_Global
    
end
module CreuSat_Assignments_Assignments_Type
  use prelude.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_assignments  =
    | C_Assignments (Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global))
    
  let function assignments_0 (self : t_assignments) : Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global)
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Assignments a -> a
      end
end
module CreusotContracts_Std1_Slice_SliceIndex_InBounds_Stub
  type self
  type t
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  predicate in_bounds (self : self) (seq : ShallowModelTy0.shallowModelTy)
end
module CreusotContracts_Std1_Slice_SliceIndex_InBounds_Interface
  type self
  type t
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  predicate in_bounds (self : self) (seq : ShallowModelTy0.shallowModelTy)
end
module CreusotContracts_Std1_Slice_SliceIndex_InBounds
  type self
  type t
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  predicate in_bounds (self : self) (seq : ShallowModelTy0.shallowModelTy)
  val in_bounds (self : self) (seq : ShallowModelTy0.shallowModelTy) : bool
    ensures { result = in_bounds self seq }
    
end
module Core_Slice_Index_SliceIndex_Output_Type
  type self
  type t
  type output
end
module CreusotContracts_Std1_Slice_SliceIndex_HasValue_Stub
  type self
  type t
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with
    type self = self,
    type t = t
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  predicate has_value (self : self) (seq : ShallowModelTy0.shallowModelTy) (out : Output0.output)
end
module CreusotContracts_Std1_Slice_SliceIndex_HasValue_Interface
  type self
  type t
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with
    type self = self,
    type t = t
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  predicate has_value (self : self) (seq : ShallowModelTy0.shallowModelTy) (out : Output0.output)
end
module CreusotContracts_Std1_Slice_SliceIndex_HasValue
  type self
  type t
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with
    type self = self,
    type t = t
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  predicate has_value (self : self) (seq : ShallowModelTy0.shallowModelTy) (out : Output0.output)
  val has_value (self : self) (seq : ShallowModelTy0.shallowModelTy) (out : Output0.output) : bool
    ensures { result = has_value self seq out }
    
end
module Alloc_Vec_Impl13_Index_Interface
  type t
  type i
  type a
  use prelude.Borrow
  use prelude.Slice
  use seq.Seq
  use seq.Seq
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with
    type self = i,
    type t = slice t
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Slice_SliceIndex_HasValue_Stub as HasValue0 with
    type self = i,
    type t = slice t,
    type ShallowModelTy0.shallowModelTy = Seq.seq t,
    type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndex_InBounds_Stub as InBounds0 with
    type self = i,
    type t = slice t,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  val index (self : Alloc_Vec_Vec_Type.t_vec t a) (index : i) : Output0.output
    requires {[#"../CreuSAT/src/unit_prop.rs" 137 34 137 53] InBounds0.in_bounds index (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 137 82 138 1] HasValue0.has_value index (ShallowModel0.shallow_model self) result }
    
end
module Core_Num_Impl11_Max_Stub
  use prelude.Int
  use prelude.UIntSize
  val constant mAX'  : usize
end
module Core_Num_Impl11_Max
  use prelude.Int
  use prelude.UIntSize
  let constant mAX'  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
end
module CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub
  type t
  type a
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  function shallow_model (self : Alloc_Vec_Vec_Type.t_vec t a) : Seq.seq t
end
module CreusotContracts_Std1_Vec_Impl0_ShallowModel_Interface
  type t
  type a
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  function shallow_model (self : Alloc_Vec_Vec_Type.t_vec t a) : Seq.seq t
  axiom shallow_model_spec : forall self : Alloc_Vec_Vec_Type.t_vec t a . [#"../CreuSAT/src/unit_prop.rs" 60 19 61 3] Seq.length (shallow_model self) <= UIntSize.to_int Max0.mAX'
end
module CreusotContracts_Std1_Vec_Impl0_ShallowModel
  type t
  type a
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  function shallow_model (self : Alloc_Vec_Vec_Type.t_vec t a) : Seq.seq t
  val shallow_model (self : Alloc_Vec_Vec_Type.t_vec t a) : Seq.seq t
    ensures { result = shallow_model self }
    
  axiom shallow_model_spec : forall self : Alloc_Vec_Vec_Type.t_vec t a . [#"../CreuSAT/src/unit_prop.rs" 60 19 61 3] Seq.length (shallow_model self) <= UIntSize.to_int Max0.mAX'
end
module CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  function shallow_model [#"../CreuSAT/src/logic/logic_assignments.rs" 18 4 18 50] (self : CreuSat_Assignments_Assignments_Type.t_assignments) : Seq.seq uint8
    
end
module CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  function shallow_model [#"../CreuSAT/src/logic/logic_assignments.rs" 18 4 18 50] (self : CreuSat_Assignments_Assignments_Type.t_assignments) : Seq.seq uint8
    
end
module CreuSat_Logic_LogicAssignments_Impl0_ShallowModel
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  function shallow_model [#"../CreuSAT/src/logic/logic_assignments.rs" 18 4 18 50] (self : CreuSat_Assignments_Assignments_Type.t_assignments) : Seq.seq uint8
    
   =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 17 4 17 12] ShallowModel0.shallow_model (CreuSat_Assignments_Assignments_Type.assignments_0 self)
  val shallow_model [#"../CreuSAT/src/logic/logic_assignments.rs" 18 4 18 50] (self : CreuSat_Assignments_Assignments_Type.t_assignments) : Seq.seq uint8
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Std1_Slice_Impl5_InBounds_Stub
  type t
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  predicate in_bounds [@inline:trivial] (self : usize) (seq : Seq.seq t)
end
module CreusotContracts_Std1_Slice_Impl5_InBounds_Interface
  type t
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  predicate in_bounds [@inline:trivial] (self : usize) (seq : Seq.seq t)
end
module CreusotContracts_Std1_Slice_Impl5_InBounds
  type t
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  predicate in_bounds [@inline:trivial] (self : usize) (seq : Seq.seq t) =
    [#"../CreuSAT/src/solver.rs" 334 41 334 58] UIntSize.to_int self < Seq.length seq
  val in_bounds [@inline:trivial] (self : usize) (seq : Seq.seq t) : bool
    ensures { result = in_bounds self seq }
    
end
module CreusotContracts_Std1_Slice_Impl5_HasValue_Stub
  type t
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  predicate has_value [@inline:trivial] (self : usize) (seq : Seq.seq t) (out : t)
end
module CreusotContracts_Std1_Slice_Impl5_HasValue_Interface
  type t
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  predicate has_value [@inline:trivial] (self : usize) (seq : Seq.seq t) (out : t)
end
module CreusotContracts_Std1_Slice_Impl5_HasValue
  type t
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  predicate has_value [@inline:trivial] (self : usize) (seq : Seq.seq t) (out : t) =
    [#"../CreuSAT/src/solver.rs" 344 10 344 27] Seq.get seq (UIntSize.to_int self) = out
  val has_value [@inline:trivial] (self : usize) (seq : Seq.seq t) (out : t) : bool
    ensures { result = has_value self seq out }
    
end
module CreuSat_Assignments_Impl0_Index_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8
  val index [#"../CreuSAT/src/assignments.rs" 22 4 22 48] (self : CreuSat_Assignments_Assignments_Type.t_assignments) (ix : usize) : uint8
    requires {[#"../CreuSAT/src/assignments.rs" 20 15 20 32] UIntSize.to_int ix < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 21 14 21 35] Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int ix) = result }
    
end
module CreuSat_Assignments_Impl0_Index
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use seq.Seq
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = uint8
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = uint8
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = uint8,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = uint8
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg index [#"../CreuSAT/src/assignments.rs" 22 4 22 48] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Assignments_Assignments_Type.t_assignments) (ix : usize) : uint8
    requires {[#"../CreuSAT/src/assignments.rs" 20 15 20 32] UIntSize.to_int ix < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 21 14 21 35] Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int ix) = result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : uint8;
  var self_1 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var ix_2 : usize;
  var _5 : uint8;
  var _6 : uint8;
  var _7 : Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global);
  var _8 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _7 <- CreuSat_Assignments_Assignments_Type.assignments_0 self_1;
    _8 <- ix_2;
    _6 <- ([#"../CreuSAT/src/assignments.rs" 28 9 28 19] Index0.index _7 _8);
    goto BB1
  }
  BB1 {
    _5 <- _6;
    _0 <- _5;
    return _0
  }
  
end
module CreusotContracts_Model_Impl3_ShallowModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl3_ShallowModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl3_ShallowModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy =
    [#"../CreuSAT/src/unit_prop.rs" 292 39 293 22] ShallowModel0.shallow_model ( * self)
  val shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Resolve_Impl1_Resolve_Stub
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Resolve_Impl1_Resolve
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t) =
    [#"../CreuSAT/src/util.rs" 9 19 10 3]  ^ self =  * self
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Std1_Slice_SliceIndex_ResolveElswhere_Stub
  type self
  type t
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  predicate resolve_elswhere (self : self) (old' : ShallowModelTy0.shallowModelTy) (fin : ShallowModelTy0.shallowModelTy)
    
end
module CreusotContracts_Std1_Slice_SliceIndex_ResolveElswhere_Interface
  type self
  type t
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  predicate resolve_elswhere (self : self) (old' : ShallowModelTy0.shallowModelTy) (fin : ShallowModelTy0.shallowModelTy)
    
end
module CreusotContracts_Std1_Slice_SliceIndex_ResolveElswhere
  type self
  type t
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  predicate resolve_elswhere (self : self) (old' : ShallowModelTy0.shallowModelTy) (fin : ShallowModelTy0.shallowModelTy)
    
  val resolve_elswhere (self : self) (old' : ShallowModelTy0.shallowModelTy) (fin : ShallowModelTy0.shallowModelTy) : bool
    ensures { result = resolve_elswhere self old' fin }
    
end
module Alloc_Vec_Impl14_IndexMut_Interface
  type t
  type i
  type a
  use prelude.Borrow
  use seq.Seq
  use prelude.Slice
  clone Core_Num_Impl11_Max_Stub as Max0
  use seq.Seq
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with
    type self = i,
    type t = slice t
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Slice_SliceIndex_ResolveElswhere_Stub as ResolveElswhere0 with
    type self = i,
    type t = slice t,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = t,
    type a = a,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Slice_SliceIndex_HasValue_Stub as HasValue0 with
    type self = i,
    type t = slice t,
    type ShallowModelTy0.shallowModelTy = Seq.seq t,
    type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndex_InBounds_Stub as InBounds0 with
    type self = i,
    type t = slice t,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  val index_mut (self : borrowed (Alloc_Vec_Vec_Type.t_vec t a)) (index : i) : borrowed Output0.output
    requires {[#"../CreuSAT/src/unit_prop.rs" 130 24 130 43] InBounds0.in_bounds index (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 131 1 131 29] HasValue0.has_value index (ShallowModel0.shallow_model self) ( * result) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 132 25 132 56] HasValue0.has_value index (ShallowModel1.shallow_model ( ^ self)) ( ^ result) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 133 10 133 46] ResolveElswhere0.resolve_elswhere index (ShallowModel0.shallow_model self) (ShallowModel1.shallow_model ( ^ self)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 134 15 134 44] Seq.length (ShallowModel1.shallow_model ( ^ self)) = Seq.length (ShallowModel0.shallow_model self) }
    
end
module CreusotContracts_Std1_Slice_Impl5_ResolveElswhere_Stub
  type t
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  predicate resolve_elswhere [@inline:trivial] (self : usize) (old' : Seq.seq t) (fin : Seq.seq t)
end
module CreusotContracts_Std1_Slice_Impl5_ResolveElswhere_Interface
  type t
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  predicate resolve_elswhere [@inline:trivial] (self : usize) (old' : Seq.seq t) (fin : Seq.seq t)
end
module CreusotContracts_Std1_Slice_Impl5_ResolveElswhere
  type t
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  predicate resolve_elswhere [@inline:trivial] (self : usize) (old' : Seq.seq t) (fin : Seq.seq t) =
    [#"../CreuSAT/src/solver.rs" 346 93 347 81] forall i : int . 0 <= i /\ i <> UIntSize.to_int self /\ i < Seq.length old' -> Seq.get old' i = Seq.get fin i
  val resolve_elswhere [@inline:trivial] (self : usize) (old' : Seq.seq t) (fin : Seq.seq t) : bool
    ensures { result = resolve_elswhere self old' fin }
    
end
module CreuSat_Assignments_Impl1_IndexMut_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8
  val index_mut [#"../CreuSAT/src/assignments.rs" 40 4 40 60] (self : borrowed (CreuSat_Assignments_Assignments_Type.t_assignments)) (ix : usize) : borrowed uint8
    requires {[#"../CreuSAT/src/assignments.rs" 35 15 35 32] UIntSize.to_int ix < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 36 14 36 38] Seq.get (ShallowModel1.shallow_model ( * self)) (UIntSize.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/assignments.rs" 37 14 37 38] Seq.get (ShallowModel1.shallow_model ( ^ self)) (UIntSize.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/assignments.rs" 38 4 38 96] forall i : int . 0 <= i /\ i <> UIntSize.to_int ix /\ i < Seq.length (ShallowModel0.shallow_model self) -> Seq.get (ShallowModel0.shallow_model self) i = Seq.get (ShallowModel1.shallow_model ( ^ self)) i }
    ensures { [#"../CreuSAT/src/assignments.rs" 39 14 39 46] Seq.length (ShallowModel1.shallow_model ( ^ self)) = Seq.length (ShallowModel1.shallow_model ( * self)) }
    
end
module CreuSat_Assignments_Impl1_IndexMut
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = uint8
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = uint8
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = uint8
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = uint8
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = uint8,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = uint8,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg index_mut [#"../CreuSAT/src/assignments.rs" 40 4 40 60] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Assignments_Assignments_Type.t_assignments)) (ix : usize) : borrowed uint8
    requires {[#"../CreuSAT/src/assignments.rs" 35 15 35 32] UIntSize.to_int ix < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 36 14 36 38] Seq.get (ShallowModel1.shallow_model ( * self)) (UIntSize.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/assignments.rs" 37 14 37 38] Seq.get (ShallowModel1.shallow_model ( ^ self)) (UIntSize.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/assignments.rs" 38 4 38 96] forall i : int . 0 <= i /\ i <> UIntSize.to_int ix /\ i < Seq.length (ShallowModel0.shallow_model self) -> Seq.get (ShallowModel0.shallow_model self) i = Seq.get (ShallowModel1.shallow_model ( ^ self)) i }
    ensures { [#"../CreuSAT/src/assignments.rs" 39 14 39 46] Seq.length (ShallowModel1.shallow_model ( ^ self)) = Seq.length (ShallowModel1.shallow_model ( * self)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : borrowed uint8;
  var self_1 : borrowed (CreuSat_Assignments_Assignments_Type.t_assignments);
  var ix_2 : usize;
  var _3 : borrowed uint8;
  var _9 : borrowed uint8;
  var _10 : borrowed uint8;
  var _11 : borrowed (Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global));
  var _12 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _11 <- borrow_mut (CreuSat_Assignments_Assignments_Type.assignments_0 ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Assignments_Assignments_Type.C_Assignments a =  * self_1 in CreuSat_Assignments_Assignments_Type.C_Assignments ( ^ _11)) };
    assume { Resolve0.resolve self_1 };
    _12 <- ix_2;
    _10 <- ([#"../CreuSAT/src/assignments.rs" 46 13 46 23] IndexMut0.index_mut _11 _12);
    goto BB1
  }
  BB1 {
    _9 <- borrow_mut ( * _10);
    _10 <- { _10 with current = ( ^ _9) };
    assume { Resolve1.resolve _10 };
    _3 <- borrow_mut ( * _9);
    _9 <- { _9 with current = ( ^ _3) };
    assume { Resolve1.resolve _9 };
    _0 <- borrow_mut ( * _3);
    _3 <- { _3 with current = ( ^ _0) };
    assume { Resolve1.resolve _3 };
    return _0
  }
  
end
module Alloc_Vec_Impl1_Len_Interface
  type t
  type a
  use prelude.UIntSize
  use seq.Seq
  use prelude.Borrow
  use prelude.Int
  use seq.Seq
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  val len (self : Alloc_Vec_Vec_Type.t_vec t a) : usize
    ensures { [#"../CreuSAT/src/unit_prop.rs" 84 34 85 17] UIntSize.to_int result = Seq.length (ShallowModel0.shallow_model self) }
    
end
module CreuSat_Assignments_Impl2_Len_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8
  val len [#"../CreuSAT/src/assignments.rs" 55 4 55 30] (self : CreuSat_Assignments_Assignments_Type.t_assignments) : usize
    ensures { [#"../CreuSAT/src/assignments.rs" 54 14 54 36] UIntSize.to_int result = Seq.length (ShallowModel0.shallow_model self) }
    
end
module CreuSat_Assignments_Impl2_Len
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.UInt8
  use seq.Seq
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg len [#"../CreuSAT/src/assignments.rs" 55 4 55 30] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Assignments_Assignments_Type.t_assignments) : usize
    ensures { [#"../CreuSAT/src/assignments.rs" 54 14 54 36] UIntSize.to_int result = Seq.length (ShallowModel0.shallow_model self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _3 : Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global);
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Assignments_Assignments_Type.assignments_0 self_1;
    _0 <- ([#"../CreuSAT/src/assignments.rs" 56 8 56 20] Len0.len _3);
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module CreuSat_Lit_Lit_Type
  use prelude.Int
  use prelude.UIntSize
  type t_lit  =
    | C_Lit usize bool
    
  let function lit_idx (self : t_lit) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Lit a _ -> a
      end
  let function lit_polarity (self : t_lit) : bool = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Lit _ a -> a
      end
end
module CreuSat_Clause_Clause_Type
  use prelude.Int
  use prelude.UInt32
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_clause  =
    | C_Clause bool uint32 usize (Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global))
    
  let function clause_lits (self : t_clause) : Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Clause _ _ _ a -> a
      end
  let function clause_deleted (self : t_clause) : bool = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Clause a _ _ _ -> a
      end
  let function clause_lbd (self : t_clause) : uint32 = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Clause _ a _ _ -> a
      end
  let function clause_search (self : t_clause) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Clause _ _ a _ -> a
      end
end
module CreuSat_Formula_Formula_Type
  use prelude.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_formula  =
    | C_Formula (Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)) usize
    
  let function formula_num_vars (self : t_formula) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Formula _ a -> a
      end
  let function formula_clauses (self : t_formula) : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Formula a _ -> a
      end
end
module CreuSat_Logic_LogicAssignments_Impl1_Invariant_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_assignments.rs" 46 4 46 46] (self : CreuSat_Assignments_Assignments_Type.t_assignments) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_assignments.rs" 46 4 46 46] (self : CreuSat_Assignments_Assignments_Type.t_assignments) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicAssignments_Impl1_Invariant
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_assignments.rs" 46 4 46 46] (self : CreuSat_Assignments_Assignments_Type.t_assignments) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 47 8 50 9] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) = Seq.length (ShallowModel0.shallow_model self) /\ (forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model self) -> UInt8.to_int (Seq.get (ShallowModel0.shallow_model self) i) <= 3)
  val invariant' [#"../CreuSAT/src/logic/logic_assignments.rs" 46 4 46 46] (self : CreuSat_Assignments_Assignments_Type.t_assignments) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = invariant' self f }
    
end
module CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function index_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 21 4 21 35] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    
end
module CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function index_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 21 4 21 35] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    
end
module CreuSat_Logic_LogicLit_Impl0_IndexLogic
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function index_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 21 4 21 35] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 22 8 22 31] UIntSize.to_int (CreuSat_Lit_Lit_Type.lit_idx self)
  val index_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 21 4 21 35] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    ensures { result = index_logic self }
    
end
module CreuSat_Logic_LogicLit_Impl1_Invariant_Stub
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_lit.rs" 72 4 72 42] (self : CreuSat_Lit_Lit_Type.t_lit) (n : int)
end
module CreuSat_Logic_LogicLit_Impl1_Invariant_Interface
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_lit.rs" 72 4 72 42] (self : CreuSat_Lit_Lit_Type.t_lit) (n : int)
end
module CreuSat_Logic_LogicLit_Impl1_Invariant
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  predicate invariant' [#"../CreuSAT/src/logic/logic_lit.rs" 72 4 72 42] (self : CreuSat_Lit_Lit_Type.t_lit) (n : int) =
    [#"../CreuSAT/src/logic/logic_lit.rs" 73 20 73 42] IndexLogic0.index_logic self < n
  val invariant' [#"../CreuSAT/src/logic/logic_lit.rs" 72 4 72 42] (self : CreuSat_Lit_Lit_Type.t_lit) (n : int) : bool
    ensures { result = invariant' self n }
    
end
module CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  function shallow_model [#"../CreuSAT/src/logic/logic_clause.rs" 15 4 15 50] (self : CreuSat_Clause_Clause_Type.t_clause) : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
    
end
module CreuSat_Logic_LogicClause_Impl0_ShallowModel_Interface
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  function shallow_model [#"../CreuSAT/src/logic/logic_clause.rs" 15 4 15 50] (self : CreuSat_Clause_Clause_Type.t_clause) : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
    
end
module CreuSat_Logic_LogicClause_Impl0_ShallowModel
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  function shallow_model [#"../CreuSAT/src/logic/logic_clause.rs" 15 4 15 50] (self : CreuSat_Clause_Clause_Type.t_clause) : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 14 4 14 12] ShallowModel0.shallow_model (CreuSat_Clause_Clause_Type.clause_lits self)
  val shallow_model [#"../CreuSAT/src/logic/logic_clause.rs" 15 4 15 50] (self : CreuSat_Clause_Clause_Type.t_clause) : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
    ensures { result = shallow_model self }
    
end
module CreuSat_Logic_LogicClause_VarsInRangeInner_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate vars_in_range_inner [#"../CreuSAT/src/logic/logic_clause.rs" 21 0 21 55] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) (n : int)
    
end
module CreuSat_Logic_LogicClause_VarsInRangeInner_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate vars_in_range_inner [#"../CreuSAT/src/logic/logic_clause.rs" 21 0 21 55] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) (n : int)
    
end
module CreuSat_Logic_LogicClause_VarsInRangeInner
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant0
  predicate vars_in_range_inner [#"../CreuSAT/src/logic/logic_clause.rs" 21 0 21 55] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 22 4 25 5] forall i : int . 0 <= i /\ i < Seq.length s -> Invariant0.invariant' (Seq.get s i) n
  val vars_in_range_inner [#"../CreuSAT/src/logic/logic_clause.rs" 21 0 21 55] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) (n : int) : bool
    ensures { result = vars_in_range_inner s n }
    
end
module CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Stub
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate no_duplicate_indexes_inner [#"../CreuSAT/src/logic/logic_clause.rs" 41 0 41 54] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit))
    
end
module CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate no_duplicate_indexes_inner [#"../CreuSAT/src/logic/logic_clause.rs" 41 0 41 54] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit))
    
end
module CreuSat_Logic_LogicClause_NoDuplicateIndexesInner
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  predicate no_duplicate_indexes_inner [#"../CreuSAT/src/logic/logic_clause.rs" 41 0 41 54] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit))
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 42 4 45 5] forall k : int . forall j : int . 0 <= j /\ j < Seq.length s /\ 0 <= k /\ k < j -> not IndexLogic0.index_logic (Seq.get s k) = IndexLogic0.index_logic (Seq.get s j)
  val no_duplicate_indexes_inner [#"../CreuSAT/src/logic/logic_clause.rs" 41 0 41 54] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) : bool
    ensures { result = no_duplicate_indexes_inner s }
    
end
module CreuSat_Logic_LogicClause_InvariantInternal_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate invariant_internal [#"../CreuSAT/src/logic/logic_clause.rs" 29 0 29 54] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) (n : int)
    
end
module CreuSat_Logic_LogicClause_InvariantInternal_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate invariant_internal [#"../CreuSAT/src/logic/logic_clause.rs" 29 0 29 54] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) (n : int)
    
end
module CreuSat_Logic_LogicClause_InvariantInternal
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Stub as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Stub as VarsInRangeInner0
  predicate invariant_internal [#"../CreuSAT/src/logic/logic_clause.rs" 29 0 29 54] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 30 4 30 62] VarsInRangeInner0.vars_in_range_inner s n /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner s
  val invariant_internal [#"../CreuSAT/src/logic/logic_clause.rs" 29 0 29 54] (s : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) (n : int) : bool
    ensures { result = invariant_internal s n }
    
end
module CreuSat_Logic_LogicClause_Impl2_Invariant_Stub
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_clause.rs" 193 4 193 42] (self : CreuSat_Clause_Clause_Type.t_clause) (n : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_Invariant_Interface
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_clause.rs" 193 4 193 42] (self : CreuSat_Clause_Clause_Type.t_clause) (n : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_Invariant
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_InvariantInternal_Stub as InvariantInternal0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate invariant' [#"../CreuSAT/src/logic/logic_clause.rs" 193 4 193 42] (self : CreuSat_Clause_Clause_Type.t_clause) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 194 20 194 48] InvariantInternal0.invariant_internal (ShallowModel0.shallow_model self) n
  val invariant' [#"../CreuSAT/src/logic/logic_clause.rs" 193 4 193 42] (self : CreuSat_Clause_Clause_Type.t_clause) (n : int) : bool
    ensures { result = invariant' self n }
    
end
module CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate invariant_mirror [#"../CreuSAT/src/logic/logic_formula.rs" 72 4 72 37] (self : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate invariant_mirror [#"../CreuSAT/src/logic/logic_formula.rs" 72 4 72 37] (self : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicFormula_Impl1_InvariantMirror
  use prelude.Int
  use seq.Seq
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate invariant_mirror [#"../CreuSAT/src/logic/logic_formula.rs" 72 4 72 37] (self : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 74 12 78 45] (forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self)) -> Invariant0.invariant' (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self)) i) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars self))) /\ (forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self)) -> Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self)) i)) >= 1)
  val invariant_mirror [#"../CreuSAT/src/logic/logic_formula.rs" 72 4 72 37] (self : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = invariant_mirror self }
    
end
module CreuSat_Logic_LogicFormula_Impl0_ShallowModel_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  function shallow_model [#"../CreuSAT/src/logic/logic_formula.rs" 15 4 15 50] (self : CreuSat_Formula_Formula_Type.t_formula) : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
    
end
module CreuSat_Logic_LogicFormula_Impl0_ShallowModel_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  function shallow_model [#"../CreuSAT/src/logic/logic_formula.rs" 15 4 15 50] (self : CreuSat_Formula_Formula_Type.t_formula) : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
    
end
module CreuSat_Logic_LogicFormula_Impl0_ShallowModel
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  function shallow_model [#"../CreuSAT/src/logic/logic_formula.rs" 15 4 15 50] (self : CreuSat_Formula_Formula_Type.t_formula) : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 16 8 16 69] (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self), UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars self))
  val shallow_model [#"../CreuSAT/src/logic/logic_formula.rs" 15 4 15 50] (self : CreuSat_Formula_Formula_Type.t_formula) : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
    ensures { result = shallow_model self }
    
end
module CreuSat_Logic_LogicFormula_FormulaInvariant_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate formula_invariant [#"../CreuSAT/src/logic/logic_formula.rs" 21 0 21 55] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
end
module CreuSat_Logic_LogicFormula_FormulaInvariant_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate formula_invariant [#"../CreuSAT/src/logic/logic_formula.rs" 21 0 21 55] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
end
module CreuSat_Logic_LogicFormula_FormulaInvariant
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant0
  predicate formula_invariant [#"../CreuSAT/src/logic/logic_formula.rs" 21 0 21 55] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 22 4 25 5] forall i : int . 0 <= i /\ i < Seq.length (let (a, _) = f in a) -> Invariant0.invariant' (Seq.get (let (a, _) = f in a) i) (let (_, a) = f in a) /\ Seq.length (ShallowModel0.shallow_model (Seq.get (let (a, _) = f in a) i)) > 0
  val formula_invariant [#"../CreuSAT/src/logic/logic_formula.rs" 21 0 21 55] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) : bool
    ensures { result = formula_invariant f }
    
end
module CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  predicate invariant' [#"../CreuSAT/src/logic/logic_formula.rs" 67 4 67 34] (self : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  predicate invariant' [#"../CreuSAT/src/logic/logic_formula.rs" 67 4 67 34] (self : CreuSat_Formula_Formula_Type.t_formula)
    
  axiom invariant'_spec : forall self : CreuSat_Formula_Formula_Type.t_formula . [#"../CreuSAT/src/logic/logic_formula.rs" 66 14 66 47] invariant' self = InvariantMirror0.invariant_mirror self
end
module CreuSat_Logic_LogicFormula_Impl1_Invariant
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Stub as FormulaInvariant0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel_Stub as ShallowModel0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  predicate invariant' [#"../CreuSAT/src/logic/logic_formula.rs" 67 4 67 34] (self : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 68 20 68 44] FormulaInvariant0.formula_invariant (ShallowModel0.shallow_model self)
  val invariant' [#"../CreuSAT/src/logic/logic_formula.rs" 67 4 67 34] (self : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = invariant' self }
    
  axiom invariant'_spec : forall self : CreuSat_Formula_Formula_Type.t_formula . [#"../CreuSAT/src/logic/logic_formula.rs" 66 14 66 47] invariant' self = InvariantMirror0.invariant_mirror self
end
module CreuSat_Logic_LogicFormula_Impl1_Invariant_Impl
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate Invariant0.invariant' = Invariant0.invariant',
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  let rec Snapshot predicate invariant' [#"../CreuSAT/src/logic/logic_formula.rs" 67 4 67 34] (self : CreuSat_Formula_Formula_Type.t_formula)
    ensures { [#"../CreuSAT/src/logic/logic_formula.rs" 66 14 66 47] result = InvariantMirror0.invariant_mirror self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_formula.rs" 68 20 68 44] let a' = ShallowModel0.shallow_model self in FormulaInvariant0.formula_invariant a'
end
module CreuSat_Trail_Reason_Type
  use prelude.Int
  use prelude.UIntSize
  type t_reason  =
    | C_Decision
    | C_Unit usize
    | C_Long usize
    
  let function long_0 (self : t_reason) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Decision -> any usize
      | C_Unit _ -> any usize
      | C_Long a -> a
      end
  let function unit_0 (self : t_reason) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Decision -> any usize
      | C_Unit a -> a
      | C_Long _ -> any usize
      end
end
module CreuSat_Trail_Step_Type
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  type t_step  =
    | C_Step (CreuSat_Lit_Lit_Type.t_lit) usize (CreuSat_Trail_Reason_Type.t_reason)
    
  let function step_lit (self : t_step) : CreuSat_Lit_Lit_Type.t_lit = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Step a _ _ -> a
      end
  let function step_reason (self : t_step) : CreuSat_Trail_Reason_Type.t_reason = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Step _ _ a -> a
      end
end
module CreuSat_Logic_LogicTrail_Impl0_Invariant_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_trail.rs" 12 4 12 46] (self : CreuSat_Trail_Reason_Type.t_reason) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_Impl0_Invariant_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_trail.rs" 12 4 12 46] (self : CreuSat_Trail_Reason_Type.t_reason) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_Impl0_Invariant
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_trail.rs" 12 4 12 46] (self : CreuSat_Trail_Reason_Type.t_reason) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 14 12 22 13] match (self) with
      | CreuSat_Trail_Reason_Type.C_Long cref -> 0 <= UIntSize.to_int cref /\ UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) /\ Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))) > 1
      | CreuSat_Trail_Reason_Type.C_Unit cref -> 0 <= UIntSize.to_int cref /\ UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) /\ Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))) = 1
      | _ -> true
      end
  val invariant' [#"../CreuSAT/src/logic/logic_trail.rs" 12 4 12 46] (self : CreuSat_Trail_Reason_Type.t_reason) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = invariant' self f }
    
end
module CreuSat_Logic_LogicTrail_TrailInvariant_Stub
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate trail_invariant [#"../CreuSAT/src/logic/logic_trail.rs" 97 0 97 60] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_TrailInvariant_Interface
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate trail_invariant [#"../CreuSAT/src/logic/logic_trail.rs" 97 0 97 60] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_TrailInvariant
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant0
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate trail_invariant [#"../CreuSAT/src/logic/logic_trail.rs" 97 0 97 60] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 98 4 102 5] forall i : int . 0 <= i /\ i < Seq.length trail -> Invariant0.invariant' (CreuSat_Trail_Step_Type.step_lit (Seq.get trail i)) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ Invariant1.invariant' (CreuSat_Trail_Step_Type.step_reason (Seq.get trail i)) f
  val trail_invariant [#"../CreuSAT/src/logic/logic_trail.rs" 97 0 97 60] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = trail_invariant trail f }
    
end
module CreuSat_Logic_Logic_Unset_Stub
  use prelude.Int
  use prelude.UInt8
  predicate unset [#"../CreuSAT/src/logic/logic.rs" 20 0 20 38] (v : uint8)
end
module CreuSat_Logic_Logic_Unset_Interface
  use prelude.Int
  use prelude.UInt8
  predicate unset [#"../CreuSAT/src/logic/logic.rs" 20 0 20 38] (v : uint8)
end
module CreuSat_Logic_Logic_Unset
  use prelude.Int
  use prelude.UInt8
  predicate unset [#"../CreuSAT/src/logic/logic.rs" 20 0 20 38] (v : uint8) =
    [#"../CreuSAT/src/logic/logic.rs" 21 4 27 5] if UInt8.to_int v >= 2 then true else false
  val unset [#"../CreuSAT/src/logic/logic.rs" 20 0 20 38] (v : uint8) : bool
    ensures { result = unset v }
    
end
module CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function is_positive_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 27 4 27 42] (self : CreuSat_Lit_Lit_Type.t_lit) : bool
    
end
module CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function is_positive_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 27 4 27 42] (self : CreuSat_Lit_Lit_Type.t_lit) : bool
    
end
module CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function is_positive_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 27 4 27 42] (self : CreuSat_Lit_Lit_Type.t_lit) : bool
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 28 20 28 33] CreuSat_Lit_Lit_Type.lit_polarity self
  val is_positive_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 27 4 27 42] (self : CreuSat_Lit_Lit_Type.t_lit) : bool
    ensures { result = is_positive_logic self }
    
end
module CreuSat_Logic_LogicLit_Impl1_SatInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate sat_inner [#"../CreuSAT/src/logic/logic_lit.rs" 77 4 77 57] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicLit_Impl1_SatInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate sat_inner [#"../CreuSAT/src/logic/logic_lit.rs" 77 4 77 57] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicLit_Impl1_SatInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  predicate sat_inner [#"../CreuSAT/src/logic/logic_lit.rs" 77 4 77 57] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 79 12 82 13] if IsPositiveLogic0.is_positive_logic self then
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 1
    else
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 0
    
  val sat_inner [#"../CreuSAT/src/logic/logic_lit.rs" 77 4 77 57] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8) : bool
    ensures { result = sat_inner self a }
    
end
module CreuSat_Logic_LogicLit_Impl1_UnsatInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_lit.rs" 87 4 87 59] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_lit.rs" 87 4 87 59] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicLit_Impl1_UnsatInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_lit.rs" 87 4 87 59] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 89 12 92 13] if IsPositiveLogic0.is_positive_logic self then
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 0
    else
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 1
    
  val unsat_inner [#"../CreuSAT/src/logic/logic_lit.rs" 87 4 87 59] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8) : bool
    ensures { result = unsat_inner self a }
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate clause_post_with_regards_to_inner [#"../CreuSAT/src/logic/logic_trail.rs" 119 0 119 90] (c : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) (j : int)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate clause_post_with_regards_to_inner [#"../CreuSAT/src/logic/logic_trail.rs" 119 0 119 90] (c : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) (j : int)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Stub as UnsatInner0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Stub as SatInner0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate clause_post_with_regards_to_inner [#"../CreuSAT/src/logic/logic_trail.rs" 119 0 119 90] (c : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) (j : int)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 120 4 124 5] IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model c) 0) = j /\ SatInner0.sat_inner (Seq.get (ShallowModel0.shallow_model c) 0) a /\ (forall i : int . 1 <= i /\ i < Seq.length (ShallowModel0.shallow_model c) -> UnsatInner0.unsat_inner (Seq.get (ShallowModel0.shallow_model c) i) a)
  val clause_post_with_regards_to_inner [#"../CreuSAT/src/logic/logic_trail.rs" 119 0 119 90] (c : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) (j : int) : bool
    ensures { result = clause_post_with_regards_to_inner c a j }
    
end
module CreuSat_Logic_LogicTrail_LongArePostUnitInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate long_are_post_unit_inner [#"../CreuSAT/src/logic/logic_trail.rs" 153 0 153 92] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate long_are_post_unit_inner [#"../CreuSAT/src/logic/logic_trail.rs" 153 0 153 92] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicTrail_LongArePostUnitInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Stub as ClausePostWithRegardsToInner0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate long_are_post_unit_inner [#"../CreuSAT/src/logic/logic_trail.rs" 153 0 153 92] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 154 4 160 5] forall j : int . 0 <= j /\ j < Seq.length trail -> match (CreuSat_Trail_Step_Type.step_reason (Seq.get trail j)) with
      | CreuSat_Trail_Reason_Type.C_Long k -> ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int k)) a (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit (Seq.get trail j)))
      | _ -> true
      end
  val long_are_post_unit_inner [#"../CreuSAT/src/logic/logic_trail.rs" 153 0 153 92] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8) : bool
    ensures { result = long_are_post_unit_inner trail f a }
    
end
module CreuSat_Logic_LogicLit_Impl1_Sat_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate sat [#"../CreuSAT/src/logic/logic_lit.rs" 102 4 102 44] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicLit_Impl1_Sat_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate sat [#"../CreuSAT/src/logic/logic_lit.rs" 102 4 102 44] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicLit_Impl1_Sat
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Stub as SatInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate sat [#"../CreuSAT/src/logic/logic_lit.rs" 102 4 102 44] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 103 20 103 38] SatInner0.sat_inner self (ShallowModel0.shallow_model a)
  val sat [#"../CreuSAT/src/logic/logic_lit.rs" 102 4 102 44] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = sat self a }
    
end
module CreuSat_Lit_Impl2_IsPositive_Interface
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  val is_positive [#"../CreuSAT/src/lit.rs" 49 4 49 36] (self : CreuSat_Lit_Lit_Type.t_lit) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 48 14 48 48] result = IsPositiveLogic0.is_positive_logic self }
    
end
module CreuSat_Lit_Impl2_IsPositive
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  let rec cfg is_positive [#"../CreuSAT/src/lit.rs" 49 4 49 36] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 48 14 48 48] result = IsPositiveLogic0.is_positive_logic self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _0 <- CreuSat_Lit_Lit_Type.lit_polarity self_1;
    return _0
  }
  
end
module CreuSat_Lit_Impl2_Index_Interface
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  val index [#"../CreuSAT/src/lit.rs" 42 4 42 31] (self : CreuSat_Lit_Lit_Type.t_lit) : usize
    ensures { [#"../CreuSAT/src/lit.rs" 41 14 41 43] UIntSize.to_int result = IndexLogic0.index_logic self }
    
end
module CreuSat_Lit_Impl2_Index
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  let rec cfg index [#"../CreuSAT/src/lit.rs" 42 4 42 31] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) : usize
    ensures { [#"../CreuSAT/src/lit.rs" 41 14 41 43] UIntSize.to_int result = IndexLogic0.index_logic self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _0 <- CreuSat_Lit_Lit_Type.lit_idx self_1;
    return _0
  }
  
end
module CreuSat_Assignments_Impl2_SetAssignment_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Stub as Sat0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel2
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Stub as LongArePostUnitInner0
  clone CreuSat_Logic_Logic_Unset_Stub as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Stub as TrailInvariant0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step)
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant2 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Stub as Invariant0
  val set_assignment [#"../CreuSAT/src/assignments.rs" 72 4 72 76] (self : borrowed (CreuSat_Assignments_Assignments_Type.t_assignments)) (lit : CreuSat_Lit_Lit_Type.t_lit) (_f : CreuSat_Formula_Formula_Type.t_formula) (_t : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global)) : ()
    requires {[#"../CreuSAT/src/assignments.rs" 61 4 61 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/assignments.rs" 62 15 62 42] Invariant1.invariant' lit (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/assignments.rs" 63 15 63 29] Invariant2.invariant' _f}
    requires {[#"../CreuSAT/src/assignments.rs" 64 15 64 40] TrailInvariant0.trail_invariant (ShallowModel0.shallow_model _t) _f}
    requires {[#"../CreuSAT/src/assignments.rs" 65 15 65 46] Unset0.unset (Seq.get (ShallowModel1.shallow_model self) (IndexLogic0.index_logic lit))}
    requires {[#"../CreuSAT/src/assignments.rs" 66 15 66 56] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model _t) _f (ShallowModel1.shallow_model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 61 4 61 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/assignments.rs" 67 14 67 58] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model _t) _f (ShallowModel2.shallow_model ( ^ self)) }
    ensures { [#"../CreuSAT/src/assignments.rs" 68 14 68 49] not Unset0.unset (Seq.get (ShallowModel2.shallow_model ( ^ self)) (IndexLogic0.index_logic lit)) }
    ensures { [#"../CreuSAT/src/assignments.rs" 69 14 69 43] Seq.length (ShallowModel2.shallow_model ( ^ self)) = Seq.length (ShallowModel1.shallow_model self) }
    ensures { [#"../CreuSAT/src/assignments.rs" 70 4 70 112] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel1.shallow_model self) /\ j <> IndexLogic0.index_logic lit -> Seq.get (ShallowModel1.shallow_model self) j = Seq.get (ShallowModel2.shallow_model ( ^ self)) j }
    ensures { [#"../CreuSAT/src/assignments.rs" 71 14 71 28] Sat0.sat lit ( ^ self) }
    
end
module CreuSat_Assignments_Impl2_SetAssignment
  use prelude.Borrow
  use prelude.Snapshot
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel8 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = uint8
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = uint8
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = uint8
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel7 with
    type t = Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = uint8
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = uint8,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = uint8,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments
  clone CreuSat_Lit_Impl2_IsPositive_Interface as IsPositive0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel1 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Invariant1.invariant' = Invariant3.invariant'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  let rec cfg set_assignment [#"../CreuSAT/src/assignments.rs" 72 4 72 76] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Assignments_Assignments_Type.t_assignments)) (lit : CreuSat_Lit_Lit_Type.t_lit) (_f : CreuSat_Formula_Formula_Type.t_formula) (_t : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global)) : ()
    requires {[#"../CreuSAT/src/assignments.rs" 61 4 61 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/assignments.rs" 62 15 62 42] Invariant1.invariant' lit (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/assignments.rs" 63 15 63 29] Invariant2.invariant' _f}
    requires {[#"../CreuSAT/src/assignments.rs" 64 15 64 40] TrailInvariant0.trail_invariant (ShallowModel0.shallow_model _t) _f}
    requires {[#"../CreuSAT/src/assignments.rs" 65 15 65 46] Unset0.unset (Seq.get (ShallowModel1.shallow_model self) (IndexLogic0.index_logic lit))}
    requires {[#"../CreuSAT/src/assignments.rs" 66 15 66 56] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model _t) _f (ShallowModel1.shallow_model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 61 4 61 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/assignments.rs" 67 14 67 58] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model _t) _f (ShallowModel2.shallow_model ( ^ self)) }
    ensures { [#"../CreuSAT/src/assignments.rs" 68 14 68 49] not Unset0.unset (Seq.get (ShallowModel2.shallow_model ( ^ self)) (IndexLogic0.index_logic lit)) }
    ensures { [#"../CreuSAT/src/assignments.rs" 69 14 69 43] Seq.length (ShallowModel2.shallow_model ( ^ self)) = Seq.length (ShallowModel1.shallow_model self) }
    ensures { [#"../CreuSAT/src/assignments.rs" 70 4 70 112] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel1.shallow_model self) /\ j <> IndexLogic0.index_logic lit -> Seq.get (ShallowModel1.shallow_model self) j = Seq.get (ShallowModel2.shallow_model ( ^ self)) j }
    ensures { [#"../CreuSAT/src/assignments.rs" 71 14 71 28] Sat0.sat lit ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Assignments_Assignments_Type.t_assignments);
  var lit_2 : CreuSat_Lit_Lit_Type.t_lit;
  var _f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var _t_4 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var old_self_17 : Snapshot.Snapshot_ty (borrowed (CreuSat_Assignments_Assignments_Type.t_assignments));
  var _19 : ();
  var _20 : bool;
  var _21 : CreuSat_Lit_Lit_Type.t_lit;
  var _22 : borrowed uint8;
  var _23 : borrowed (Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global));
  var _24 : usize;
  var _25 : CreuSat_Lit_Lit_Type.t_lit;
  var _26 : borrowed uint8;
  var _27 : borrowed (Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global));
  var _28 : usize;
  var _29 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    lit_2 <- lit;
    _f_3 <- _f;
    _t_4 <- _t;
    goto BB0
  }
  BB0 {
    _19 <- ();
    old_self_17 <- ([#"../CreuSAT/src/assignments.rs" 73 48 73 63] Snapshot.new self_1);
    goto BB1
  }
  BB1 {
    _21 <- lit_2;
    _20 <- ([#"../CreuSAT/src/assignments.rs" 75 11 75 28] IsPositive0.is_positive _21);
    goto BB2
  }
  BB2 {
    switch (_20)
      | False -> goto BB6
      | True -> goto BB3
      end
  }
  BB3 {
    _23 <- borrow_mut (CreuSat_Assignments_Assignments_Type.assignments_0 ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Assignments_Assignments_Type.C_Assignments a =  * self_1 in CreuSat_Assignments_Assignments_Type.C_Assignments ( ^ _23)) };
    assume { Resolve0.resolve self_1 };
    _25 <- lit_2;
    _24 <- ([#"../CreuSAT/src/assignments.rs" 76 19 76 30] Index0.index _25);
    goto BB4
  }
  BB4 {
    _22 <- ([#"../CreuSAT/src/assignments.rs" 76 12 76 31] IndexMut0.index_mut _23 _24);
    goto BB5
  }
  BB5 {
    _22 <- { _22 with current = ([#"../CreuSAT/src/assignments.rs" 76 34 76 35] (1 : uint8)) };
    assume { Resolve1.resolve _22 };
    _0 <- ();
    goto BB9
  }
  BB6 {
    _27 <- borrow_mut (CreuSat_Assignments_Assignments_Type.assignments_0 ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Assignments_Assignments_Type.C_Assignments a =  * self_1 in CreuSat_Assignments_Assignments_Type.C_Assignments ( ^ _27)) };
    assume { Resolve0.resolve self_1 };
    _29 <- lit_2;
    _28 <- ([#"../CreuSAT/src/assignments.rs" 78 19 78 30] Index0.index _29);
    goto BB7
  }
  BB7 {
    _26 <- ([#"../CreuSAT/src/assignments.rs" 78 12 78 31] IndexMut0.index_mut _27 _28);
    goto BB8
  }
  BB8 {
    _26 <- { _26 with current = ([#"../CreuSAT/src/assignments.rs" 78 34 78 35] (0 : uint8)) };
    assume { Resolve1.resolve _26 };
    _0 <- ();
    goto BB9
  }
  BB9 {
    return _0
  }
  
end
module CreusotContracts_Logic_Ops_Impl0_IndexLogic_Stub
  type t
  type s
  use prelude.Int
  function index_logic [@inline:trivial] (self : s) (ix : int) : t
end
module CreusotContracts_Logic_Ops_Impl0_IndexLogic_Interface
  type t
  type s
  use prelude.Int
  function index_logic [@inline:trivial] (self : s) (ix : int) : t
end
module CreusotContracts_Logic_Ops_Impl0_IndexLogic
  type t
  type s
  use prelude.Int
  use seq.Seq
  use seq.Seq
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = s,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  function index_logic [@inline:trivial] (self : s) (ix : int) : t =
    [#"../CreuSAT/src/conflict_analysis.rs" 174 5 174 28] Seq.get (ShallowModel0.shallow_model self) ix
  val index_logic [@inline:trivial] (self : s) (ix : int) : t
    ensures { result = index_logic self ix }
    
end
module Alloc_Vec_FromElem_Interface
  type t
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic_Stub as IndexLogic0 with
    type t = t,
    type s = Alloc_Vec_Vec_Type.t_vec t (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  val from_elem (elem : t) (n : usize) : Alloc_Vec_Vec_Type.t_vec t (Alloc_Alloc_Global_Type.t_global)
    ensures { [#"../CreuSAT/src/unit_prop.rs" 154 5 154 24] Seq.length (ShallowModel0.shallow_model result) = UIntSize.to_int n }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 154 39 156 3] forall i : int . 0 <= i /\ i < UIntSize.to_int n -> IndexLogic0.index_logic result i = elem }
    
end
module CreuSat_Assignments_Impl2_New_Interface
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val new [#"../CreuSAT/src/assignments.rs" 86 4 86 35] (f : CreuSat_Formula_Formula_Type.t_formula) : CreuSat_Assignments_Assignments_Type.t_assignments
    requires {[#"../CreuSAT/src/assignments.rs" 84 15 84 28] Invariant0.invariant' f}
    ensures { [#"../CreuSAT/src/assignments.rs" 85 14 85 34] Invariant1.invariant' result f }
    
end
module CreuSat_Assignments_Impl2_New
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic1
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant3.invariant'
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use seq.Seq
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic0 with
    type t = uint8,
    type s = Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_FromElem_Interface as FromElem0 with
    type t = uint8,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg new [#"../CreuSAT/src/assignments.rs" 86 4 86 35] [@cfg:stackify] [@cfg:subregion_analysis] (f : CreuSat_Formula_Formula_Type.t_formula) : CreuSat_Assignments_Assignments_Type.t_assignments
    requires {[#"../CreuSAT/src/assignments.rs" 84 15 84 28] Invariant0.invariant' f}
    ensures { [#"../CreuSAT/src/assignments.rs" 85 14 85 34] Invariant1.invariant' result f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var f_1 : CreuSat_Formula_Formula_Type.t_formula;
  var _4 : Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global);
  var _5 : usize;
  {
    f_1 <- f;
    goto BB0
  }
  BB0 {
    _5 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _4 <- ([#"../CreuSAT/src/assignments.rs" 87 20 87 49] FromElem0.from_elem ([#"../CreuSAT/src/assignments.rs" 87 35 87 36] (2 : uint8)) _5);
    goto BB1
  }
  BB1 {
    _0 <- CreuSat_Assignments_Assignments_Type.C_Assignments _4;
    goto BB2
  }
  BB2 {
    return _0
  }
  
end
module Core_Clone_Impls_Impl19_Clone_Interface
  use prelude.Borrow
  val clone' (self : bool) : bool
    ensures { [#"../CreuSAT/src/decision.rs" 225 14 238 3] result = self }
    
end
module Core_Clone_Impls_Impl8_Clone_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  val clone' (self : uint32) : uint32
    ensures { [#"../CreuSAT/src/decision.rs" 225 14 238 3] result = self }
    
end
module Core_Clone_Impls_Impl5_Clone_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  val clone' (self : usize) : usize
    ensures { [#"../CreuSAT/src/decision.rs" 225 14 238 3] result = self }
    
end
module Alloc_Vec_Impl11_Clone_Interface
  type t
  type a
  use prelude.Borrow
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  val clone' (self : Alloc_Vec_Vec_Type.t_vec t a) : Alloc_Vec_Vec_Type.t_vec t a
    ensures { [#"../CreuSAT/src/decision.rs" 225 14 238 3] result = self }
    
end
module CreuSat_Clause_Impl3_Clone_Interface
  use prelude.Borrow
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  val clone' [#"../CreuSAT/src/clause.rs" 10 9 10 14] (self : CreuSat_Clause_Clause_Type.t_clause) : CreuSat_Clause_Clause_Type.t_clause
    ensures { [#"../CreuSAT/src/clause.rs" 10 9 10 14] result = self }
    
end
module CreuSat_Clause_Impl3_Clone
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt32
  use prelude.UIntSize
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone Alloc_Vec_Impl11_Clone_Interface as Clone3 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global
  clone Core_Clone_Impls_Impl5_Clone_Interface as Clone2
  clone Core_Clone_Impls_Impl8_Clone_Interface as Clone1
  clone Core_Clone_Impls_Impl19_Clone_Interface as Clone0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  let rec cfg clone' [#"../CreuSAT/src/clause.rs" 10 9 10 14] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Clause_Clause_Type.t_clause) : CreuSat_Clause_Clause_Type.t_clause
    ensures { [#"../CreuSAT/src/clause.rs" 10 9 10 14] result = self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Clause_Clause_Type.t_clause;
  var self_1 : CreuSat_Clause_Clause_Type.t_clause;
  var _3 : bool;
  var _4 : bool;
  var _5 : uint32;
  var _6 : uint32;
  var _7 : usize;
  var _8 : usize;
  var _9 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global);
  var _10 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global);
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _4 <- CreuSat_Clause_Clause_Type.clause_deleted self_1;
    _3 <- ([#"../CreuSAT/src/clause.rs" 12 4 12 21] Clone0.clone' _4);
    goto BB1
  }
  BB1 {
    _6 <- CreuSat_Clause_Clause_Type.clause_lbd self_1;
    _5 <- ([#"../CreuSAT/src/clause.rs" 13 4 13 16] Clone1.clone' _6);
    goto BB2
  }
  BB2 {
    _8 <- CreuSat_Clause_Clause_Type.clause_search self_1;
    _7 <- ([#"../CreuSAT/src/clause.rs" 14 4 14 21] Clone2.clone' _8);
    goto BB3
  }
  BB3 {
    _10 <- CreuSat_Clause_Clause_Type.clause_lits self_1;
    _9 <- ([#"../CreuSAT/src/clause.rs" 15 4 15 22] Clone3.clone' _10);
    goto BB4
  }
  BB4 {
    _0 <- CreuSat_Clause_Clause_Type.C_Clause _3 _5 _7 _9;
    goto BB5
  }
  BB5 {
    return _0
  }
  
end
module CreuSat_Clause_Impl0_Index_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use seq.Seq
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  val index [#"../CreuSAT/src/clause.rs" 24 4 24 38] (self : CreuSat_Clause_Clause_Type.t_clause) (ix : usize) : CreuSat_Lit_Lit_Type.t_lit
    requires {[#"../CreuSAT/src/clause.rs" 22 15 22 32] UIntSize.to_int ix < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 23 14 23 35] Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int ix) = result }
    
end
module CreuSat_Clause_Impl0_Index
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Lit_Lit_Type.t_lit
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Lit_Lit_Type.t_lit
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Lit_Lit_Type.t_lit
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg index [#"../CreuSAT/src/clause.rs" 24 4 24 38] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Clause_Clause_Type.t_clause) (ix : usize) : CreuSat_Lit_Lit_Type.t_lit
    requires {[#"../CreuSAT/src/clause.rs" 22 15 22 32] UIntSize.to_int ix < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 23 14 23 35] Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int ix) = result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Lit_Lit_Type.t_lit;
  var self_1 : CreuSat_Clause_Clause_Type.t_clause;
  var ix_2 : usize;
  var _5 : CreuSat_Lit_Lit_Type.t_lit;
  var _6 : CreuSat_Lit_Lit_Type.t_lit;
  var _7 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global);
  var _8 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _7 <- CreuSat_Clause_Clause_Type.clause_lits self_1;
    _8 <- ix_2;
    _6 <- ([#"../CreuSAT/src/clause.rs" 30 9 30 22] Index0.index _7 _8);
    goto BB1
  }
  BB1 {
    _5 <- _6;
    _0 <- _5;
    return _0
  }
  
end
module CreuSat_Clause_Impl1_IndexMut_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use seq.Seq
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  val index_mut [#"../CreuSAT/src/clause.rs" 42 4 42 50] (self : borrowed (CreuSat_Clause_Clause_Type.t_clause)) (ix : usize) : borrowed (CreuSat_Lit_Lit_Type.t_lit)
    requires {[#"../CreuSAT/src/clause.rs" 37 15 37 32] UIntSize.to_int ix < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 38 14 38 35] Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/clause.rs" 39 14 39 38] Seq.get (ShallowModel1.shallow_model ( ^ self)) (UIntSize.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/clause.rs" 40 4 40 96] forall i : int . 0 <= i /\ i <> UIntSize.to_int ix /\ i < Seq.length (ShallowModel0.shallow_model self) -> Seq.get (ShallowModel0.shallow_model self) i = Seq.get (ShallowModel1.shallow_model ( ^ self)) i }
    ensures { [#"../CreuSAT/src/clause.rs" 41 14 41 46] Seq.length (ShallowModel1.shallow_model ( ^ self)) = Seq.length (ShallowModel1.shallow_model ( * self)) }
    
end
module CreuSat_Clause_Impl1_IndexMut
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = CreuSat_Lit_Lit_Type.t_lit
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Lit_Lit_Type.t_lit
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Lit_Lit_Type.t_lit
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Lit_Lit_Type.t_lit
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = CreuSat_Lit_Lit_Type.t_lit,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg index_mut [#"../CreuSAT/src/clause.rs" 42 4 42 50] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Clause_Clause_Type.t_clause)) (ix : usize) : borrowed (CreuSat_Lit_Lit_Type.t_lit)
    requires {[#"../CreuSAT/src/clause.rs" 37 15 37 32] UIntSize.to_int ix < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 38 14 38 35] Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/clause.rs" 39 14 39 38] Seq.get (ShallowModel1.shallow_model ( ^ self)) (UIntSize.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/clause.rs" 40 4 40 96] forall i : int . 0 <= i /\ i <> UIntSize.to_int ix /\ i < Seq.length (ShallowModel0.shallow_model self) -> Seq.get (ShallowModel0.shallow_model self) i = Seq.get (ShallowModel1.shallow_model ( ^ self)) i }
    ensures { [#"../CreuSAT/src/clause.rs" 41 14 41 46] Seq.length (ShallowModel1.shallow_model ( ^ self)) = Seq.length (ShallowModel1.shallow_model ( * self)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : borrowed (CreuSat_Lit_Lit_Type.t_lit);
  var self_1 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var ix_2 : usize;
  var _3 : borrowed (CreuSat_Lit_Lit_Type.t_lit);
  var _9 : borrowed (CreuSat_Lit_Lit_Type.t_lit);
  var _10 : borrowed (CreuSat_Lit_Lit_Type.t_lit);
  var _11 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global));
  var _12 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _11 <- borrow_mut (CreuSat_Clause_Clause_Type.clause_lits ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Clause_Clause_Type.C_Clause a b c d =  * self_1 in CreuSat_Clause_Clause_Type.C_Clause a b c ( ^ _11)) };
    assume { Resolve0.resolve self_1 };
    _12 <- ix_2;
    _10 <- ([#"../CreuSAT/src/clause.rs" 48 13 48 26] IndexMut0.index_mut _11 _12);
    goto BB1
  }
  BB1 {
    _9 <- borrow_mut ( * _10);
    _10 <- { _10 with current = ( ^ _9) };
    assume { Resolve1.resolve _10 };
    _3 <- borrow_mut ( * _9);
    _9 <- { _9 with current = ( ^ _3) };
    assume { Resolve1.resolve _9 };
    _0 <- borrow_mut ( * _3);
    _3 <- { _3 with current = ( ^ _0) };
    assume { Resolve1.resolve _3 };
    return _0
  }
  
end
module CreuSat_Clause_Impl2_Len_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Borrow
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use seq.Seq
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  val len [#"../CreuSAT/src/clause.rs" 96 4 96 30] (self : CreuSat_Clause_Clause_Type.t_clause) : usize
    ensures { [#"../CreuSAT/src/clause.rs" 95 14 95 36] UIntSize.to_int result = Seq.length (ShallowModel0.shallow_model self) }
    
end
module CreuSat_Clause_Impl2_Len
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use seq.Seq
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg len [#"../CreuSAT/src/clause.rs" 96 4 96 30] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Clause_Clause_Type.t_clause) : usize
    ensures { [#"../CreuSAT/src/clause.rs" 95 14 95 36] UIntSize.to_int result = Seq.length (ShallowModel0.shallow_model self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Clause_Clause_Type.t_clause;
  var _3 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global);
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Clause_Clause_Type.clause_lits self_1;
    _0 <- ([#"../CreuSAT/src/clause.rs" 97 8 97 23] Len0.len _3);
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module CreuSat_Lit_Impl2_CheckLitInvariant_Interface
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant0
  val check_lit_invariant [#"../CreuSAT/src/lit.rs" 56 4 56 55] (self : CreuSat_Lit_Lit_Type.t_lit) (n : usize) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 55 14 55 42] result = Invariant0.invariant' self (UIntSize.to_int n) }
    
end
module CreuSat_Lit_Impl2_CheckLitInvariant
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg check_lit_invariant [#"../CreuSAT/src/lit.rs" 56 4 56 55] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) (n : usize) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 55 14 55 42] result = Invariant0.invariant' self (UIntSize.to_int n) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  var n_2 : usize;
  var _4 : usize;
  var _5 : CreuSat_Lit_Lit_Type.t_lit;
  var _6 : usize;
  {
    self_1 <- self;
    n_2 <- n;
    goto BB0
  }
  BB0 {
    _5 <- self_1;
    _4 <- ([#"../CreuSAT/src/lit.rs" 57 8 57 20] Index0.index _5);
    goto BB1
  }
  BB1 {
    _6 <- n_2;
    _0 <- ([#"../CreuSAT/src/lit.rs" 57 8 57 24] _4 < _6);
    return _0
  }
  
end
module CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes_Stub
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate no_duplicate_indexes [#"../CreuSAT/src/logic/logic_clause.rs" 183 4 183 45] (self : CreuSat_Clause_Clause_Type.t_clause)
    
end
module CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes_Interface
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate no_duplicate_indexes [#"../CreuSAT/src/logic/logic_clause.rs" 183 4 183 45] (self : CreuSat_Clause_Clause_Type.t_clause)
    
end
module CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Stub as NoDuplicateIndexesInner0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate no_duplicate_indexes [#"../CreuSAT/src/logic/logic_clause.rs" 183 4 183 45] (self : CreuSat_Clause_Clause_Type.t_clause)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 184 20 184 53] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel0.shallow_model self)
  val no_duplicate_indexes [#"../CreuSAT/src/logic/logic_clause.rs" 183 4 183 45] (self : CreuSat_Clause_Clause_Type.t_clause) : bool
    ensures { result = no_duplicate_indexes self }
    
end
module CreuSat_Clause_Impl2_NoDuplicates_Interface
  use prelude.Borrow
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes_Stub as NoDuplicateIndexes0
  val no_duplicates [#"../CreuSAT/src/clause.rs" 72 4 72 39] (self : CreuSat_Clause_Clause_Type.t_clause) : bool
    ensures { [#"../CreuSAT/src/clause.rs" 71 14 71 51] result = NoDuplicateIndexes0.no_duplicate_indexes self }
    
end
module CreuSat_Clause_Impl2_NoDuplicates
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Lit_Impl2_Index_Interface as Index1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes as NoDuplicateIndexes0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  let rec cfg no_duplicates [#"../CreuSAT/src/clause.rs" 72 4 72 39] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Clause_Clause_Type.t_clause) : bool
    ensures { [#"../CreuSAT/src/clause.rs" 71 14 71 51] result = NoDuplicateIndexes0.no_duplicate_indexes self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Clause_Clause_Type.t_clause;
  var i_3 : usize;
  var _4 : ();
  var _6 : ();
  var _7 : bool;
  var _8 : usize;
  var _9 : usize;
  var _10 : CreuSat_Clause_Clause_Type.t_clause;
  var lit1_11 : CreuSat_Lit_Lit_Type.t_lit;
  var _12 : CreuSat_Lit_Lit_Type.t_lit;
  var _13 : CreuSat_Clause_Clause_Type.t_clause;
  var _14 : usize;
  var j_15 : usize;
  var _16 : ();
  var _18 : bool;
  var _19 : usize;
  var _20 : usize;
  var lit2_21 : CreuSat_Lit_Lit_Type.t_lit;
  var _22 : CreuSat_Lit_Lit_Type.t_lit;
  var _23 : CreuSat_Clause_Clause_Type.t_clause;
  var _24 : usize;
  var _25 : ();
  var _26 : bool;
  var _27 : usize;
  var _28 : CreuSat_Lit_Lit_Type.t_lit;
  var _29 : usize;
  var _30 : CreuSat_Lit_Lit_Type.t_lit;
  var _31 : ();
  var _32 : ();
  var _33 : ();
  var _34 : ();
  var _35 : ();
  var _36 : ();
  var _37 : ();
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    i_3 <- ([#"../CreuSAT/src/clause.rs" 73 27 73 28] (0 : usize));
    goto BB1
  }
  BB1 {
    invariant { [#"../CreuSAT/src/clause.rs" 74 8 76 83] forall k : int . forall j : int . 0 <= j /\ j < UIntSize.to_int i_3 /\ 0 <= k /\ k < j -> IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model self_1) j) <> IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model self_1) k) };
    _8 <- i_3;
    _10 <- self_1;
    _9 <- ([#"../CreuSAT/src/clause.rs" 77 18 77 28] Len0.len _10);
    goto BB2
  }
  BB2 {
    _7 <- ([#"../CreuSAT/src/clause.rs" 77 14 77 28] _8 < _9);
    switch (_7)
      | False -> goto BB13
      | True -> goto BB3
      end
  }
  BB3 {
    _13 <- self_1;
    _14 <- i_3;
    _12 <- ([#"../CreuSAT/src/clause.rs" 78 23 78 30] Index0.index _13 _14);
    goto BB4
  }
  BB4 {
    lit1_11 <- _12;
    j_15 <- ([#"../CreuSAT/src/clause.rs" 79 31 79 32] (0 : usize));
    goto BB5
  }
  BB5 {
    invariant { [#"../CreuSAT/src/clause.rs" 80 12 80 106] forall k : int . 0 <= k /\ k < UIntSize.to_int j_15 -> IndexLogic0.index_logic lit1_11 <> IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model self_1) k) };
    _19 <- j_15;
    _20 <- i_3;
    _18 <- ([#"../CreuSAT/src/clause.rs" 81 18 81 23] _19 < _20);
    switch (_18)
      | False -> goto BB12
      | True -> goto BB6
      end
  }
  BB6 {
    _23 <- self_1;
    _24 <- j_15;
    _22 <- ([#"../CreuSAT/src/clause.rs" 82 27 82 34] Index0.index _23 _24);
    goto BB7
  }
  BB7 {
    lit2_21 <- _22;
    _28 <- lit1_11;
    _27 <- ([#"../CreuSAT/src/clause.rs" 83 19 83 31] Index1.index _28);
    goto BB8
  }
  BB8 {
    _30 <- lit2_21;
    _29 <- ([#"../CreuSAT/src/clause.rs" 83 35 83 47] Index1.index _30);
    goto BB9
  }
  BB9 {
    _26 <- ([#"../CreuSAT/src/clause.rs" 83 19 83 47] _27 = _29);
    switch (_26)
      | False -> goto BB11
      | True -> goto BB10
      end
  }
  BB10 {
    _0 <- ([#"../CreuSAT/src/clause.rs" 84 27 84 32] false);
    goto BB14
  }
  BB11 {
    _25 <- ();
    j_15 <- ([#"../CreuSAT/src/clause.rs" 86 16 86 22] j_15 + ([#"../CreuSAT/src/clause.rs" 86 21 86 22] (1 : usize)));
    _6 <- ();
    goto BB5
  }
  BB12 {
    _16 <- ();
    i_3 <- ([#"../CreuSAT/src/clause.rs" 88 12 88 18] i_3 + ([#"../CreuSAT/src/clause.rs" 88 17 88 18] (1 : usize)));
    _6 <- ();
    goto BB1
  }
  BB13 {
    _4 <- ();
    _0 <- ([#"../CreuSAT/src/clause.rs" 90 8 90 12] true);
    goto BB14
  }
  BB14 {
    return _0
  }
  
end
module CreuSat_Clause_Impl2_CheckClauseInvariant_Interface
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant0
  val check_clause_invariant [#"../CreuSAT/src/clause.rs" 55 4 55 58] (self : CreuSat_Clause_Clause_Type.t_clause) (n : usize) : bool
    ensures { [#"../CreuSAT/src/clause.rs" 54 14 54 42] result = Invariant0.invariant' self (UIntSize.to_int n) }
    
end
module CreuSat_Clause_Impl2_CheckClauseInvariant
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes as NoDuplicateIndexes0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use seq.Seq
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Clause_Impl2_NoDuplicates_Interface as NoDuplicates0 with
    predicate NoDuplicateIndexes0.no_duplicate_indexes = NoDuplicateIndexes0.no_duplicate_indexes
  clone CreuSat_Lit_Impl2_CheckLitInvariant_Interface as CheckLitInvariant0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  let rec cfg check_clause_invariant [#"../CreuSAT/src/clause.rs" 55 4 55 58] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Clause_Clause_Type.t_clause) (n : usize) : bool
    ensures { [#"../CreuSAT/src/clause.rs" 54 14 54 42] result = Invariant0.invariant' self (UIntSize.to_int n) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Clause_Clause_Type.t_clause;
  var n_2 : usize;
  var i_4 : usize;
  var _5 : ();
  var _7 : ();
  var _8 : bool;
  var _9 : usize;
  var _10 : usize;
  var _11 : CreuSat_Clause_Clause_Type.t_clause;
  var _12 : ();
  var _13 : bool;
  var _14 : bool;
  var _15 : CreuSat_Lit_Lit_Type.t_lit;
  var _16 : CreuSat_Lit_Lit_Type.t_lit;
  var _17 : CreuSat_Clause_Clause_Type.t_clause;
  var _18 : usize;
  var _19 : usize;
  var _20 : ();
  var _21 : ();
  var _22 : ();
  var _23 : ();
  var _24 : ();
  var _25 : bool;
  var _26 : CreuSat_Clause_Clause_Type.t_clause;
  var _27 : ();
  {
    self_1 <- self;
    n_2 <- n;
    goto BB0
  }
  BB0 {
    i_4 <- ([#"../CreuSAT/src/clause.rs" 56 27 56 28] (0 : usize));
    goto BB1
  }
  BB1 {
    invariant { [#"../CreuSAT/src/clause.rs" 57 8 57 80] forall j : int . 0 <= j /\ j < UIntSize.to_int i_4 -> Invariant1.invariant' (Seq.get (ShallowModel0.shallow_model self_1) j) (UIntSize.to_int n_2) };
    _9 <- i_4;
    _11 <- self_1;
    _10 <- ([#"../CreuSAT/src/clause.rs" 58 18 58 28] Len0.len _11);
    goto BB2
  }
  BB2 {
    _8 <- ([#"../CreuSAT/src/clause.rs" 58 14 58 28] _9 < _10);
    switch (_8)
      | False -> goto BB8
      | True -> goto BB3
      end
  }
  BB3 {
    _17 <- self_1;
    _18 <- i_4;
    _16 <- ([#"../CreuSAT/src/clause.rs" 59 16 59 23] Index0.index _17 _18);
    goto BB4
  }
  BB4 {
    _15 <- _16;
    _19 <- n_2;
    _14 <- ([#"../CreuSAT/src/clause.rs" 59 16 59 46] CheckLitInvariant0.check_lit_invariant _15 _19);
    goto BB5
  }
  BB5 {
    _13 <- not _14;
    switch (_13)
      | False -> goto BB7
      | True -> goto BB6
      end
  }
  BB6 {
    _0 <- ([#"../CreuSAT/src/clause.rs" 60 23 60 28] false);
    goto BB12
  }
  BB7 {
    _12 <- ();
    i_4 <- ([#"../CreuSAT/src/clause.rs" 62 12 62 18] i_4 + ([#"../CreuSAT/src/clause.rs" 62 17 62 18] (1 : usize)));
    _7 <- ();
    goto BB1
  }
  BB8 {
    _5 <- ();
    _26 <- self_1;
    _25 <- ([#"../CreuSAT/src/clause.rs" 64 11 64 31] NoDuplicates0.no_duplicates _26);
    goto BB9
  }
  BB9 {
    switch (_25)
      | False -> goto BB11
      | True -> goto BB10
      end
  }
  BB10 {
    _0 <- ([#"../CreuSAT/src/clause.rs" 65 19 65 23] true);
    goto BB12
  }
  BB11 {
    _24 <- ();
    _0 <- ([#"../CreuSAT/src/clause.rs" 67 8 67 13] false);
    goto BB13
  }
  BB12 {
    goto BB13
  }
  BB13 {
    return _0
  }
  
end
module CreuSat_Clause_Impl2_ClauseFromVec_Interface
  use prelude.Borrow
  use prelude.Slice
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  val clause_from_vec [#"../CreuSAT/src/clause.rs" 103 4 103 49] (vec : slice (CreuSat_Lit_Lit_Type.t_lit)) : CreuSat_Clause_Clause_Type.t_clause
    
end
module CreuSat_Logic_LogicLit_Impl1_LitIn_Stub
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate lit_in [#"../CreuSAT/src/logic/logic_lit.rs" 59 4 59 42] (self : CreuSat_Lit_Lit_Type.t_lit) (c : CreuSat_Clause_Clause_Type.t_clause)
    
end
module CreuSat_Logic_LogicLit_Impl1_LitIn_Interface
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate lit_in [#"../CreuSAT/src/logic/logic_lit.rs" 59 4 59 42] (self : CreuSat_Lit_Lit_Type.t_lit) (c : CreuSat_Clause_Clause_Type.t_clause)
    
end
module CreuSat_Logic_LogicLit_Impl1_LitIn
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate lit_in [#"../CreuSAT/src/logic/logic_lit.rs" 59 4 59 42] (self : CreuSat_Lit_Lit_Type.t_lit) (c : CreuSat_Clause_Clause_Type.t_clause)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 60 8 60 76] exists i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model c) /\ Seq.get (ShallowModel0.shallow_model c) i = self
  val lit_in [#"../CreuSAT/src/logic/logic_lit.rs" 59 4 59 42] (self : CreuSat_Lit_Lit_Type.t_lit) (c : CreuSat_Clause_Clause_Type.t_clause) : bool
    ensures { result = lit_in self c }
    
end
module CreusotContracts_Std1_Slice_Impl0_ShallowModel_Stub
  type t
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use prelude.Slice
  clone Core_Num_Impl11_Max_Stub as Max0
  function shallow_model (self : slice t) : Seq.seq t
end
module CreusotContracts_Std1_Slice_Impl0_ShallowModel_Interface
  type t
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use prelude.Slice
  clone Core_Num_Impl11_Max_Stub as Max0
  function shallow_model (self : slice t) : Seq.seq t
  axiom shallow_model_spec : forall self : slice t . ([#"../CreuSAT/src/solver.rs" 289 10 289 37] shallow_model self = Slice.id self) && ([#"../CreuSAT/src/solver.rs" 287 44 288 21] Seq.length (shallow_model self) <= UIntSize.to_int Max0.mAX')
end
module CreusotContracts_Std1_Slice_Impl0_ShallowModel
  type t
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use prelude.Slice
  clone Core_Num_Impl11_Max_Stub as Max0
  function shallow_model (self : slice t) : Seq.seq t
  val shallow_model (self : slice t) : Seq.seq t
    ensures { result = shallow_model self }
    
  axiom shallow_model_spec : forall self : slice t . ([#"../CreuSAT/src/solver.rs" 289 10 289 37] shallow_model self = Slice.id self) && ([#"../CreuSAT/src/solver.rs" 287 44 288 21] Seq.length (shallow_model self) <= UIntSize.to_int Max0.mAX')
end
module Alloc_Vec_Impl10_DerefMut_Interface
  type t
  type a
  use prelude.Borrow
  use prelude.Slice
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use seq.Seq
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel3 with
    type t = t,
    type a = a,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Slice_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = t,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = slice t,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  val deref_mut (self : borrowed (Alloc_Vec_Vec_Type.t_vec t a)) : borrowed (slice t)
    ensures { [#"../CreuSAT/src/unit_prop.rs" 150 36 150 52] ShallowModel0.shallow_model result = ShallowModel1.shallow_model self }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 151 14 151 36] ShallowModel2.shallow_model ( ^ result) = ShallowModel3.shallow_model ( ^ self) }
    
end
module Core_Slice_Impl0_Swap_Interface
  type t
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use seq.Permut
  use prelude.Slice
  clone Core_Num_Impl11_Max_Stub as Max0
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = t,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = slice t,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  val swap (self : borrowed (slice t)) (a : usize) (b : usize) : ()
    requires {[#"../CreuSAT/src/trail.rs" 65 15 65 31] UIntSize.to_int a < Seq.length (ShallowModel0.shallow_model self)}
    requires {[#"../CreuSAT/src/trail.rs" 66 16 67 11] UIntSize.to_int b < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/trail.rs" 67 22 68 38] Permut.exchange (ShallowModel1.shallow_model ( ^ self)) (ShallowModel0.shallow_model self) (UIntSize.to_int a) (UIntSize.to_int b) }
    
end
module CreuSat_Clause_Impl2_MoveToEnd_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use seq.Seq
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Stub as LitIn0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  val move_to_end [#"../CreuSAT/src/clause.rs" 119 4 119 55] (self : borrowed (CreuSat_Clause_Clause_Type.t_clause)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/clause.rs" 110 4 110 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 111 15 111 30] Seq.length (ShallowModel0.shallow_model self) > 0}
    requires {[#"../CreuSAT/src/clause.rs" 112 15 112 33] UIntSize.to_int idx < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 110 4 110 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 113 4 114 79] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel1.shallow_model ( ^ self)) -> (exists j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) /\ Seq.get (ShallowModel1.shallow_model ( ^ self)) i = Seq.get (ShallowModel0.shallow_model self) j) }
    ensures { [#"../CreuSAT/src/clause.rs" 115 14 115 57] Seq.get (ShallowModel1.shallow_model ( ^ self)) (Seq.length (ShallowModel1.shallow_model ( ^ self)) - 1) = Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int idx) }
    ensures { [#"../CreuSAT/src/clause.rs" 116 14 116 43] Seq.length (ShallowModel1.shallow_model ( ^ self)) = Seq.length (ShallowModel0.shallow_model self) }
    ensures { [#"../CreuSAT/src/clause.rs" 117 4 118 36] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) -> LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model self) j) ( ^ self) }
    
end
module CreuSat_Clause_Impl2_MoveToEnd
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Slice
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Slice_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel5 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel4 with
    type t = slice (CreuSat_Lit_Lit_Type.t_lit),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = slice (CreuSat_Lit_Lit_Type.t_lit)
  clone Alloc_Vec_Impl10_DerefMut_Interface as DerefMut0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreuSat_Clause_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  let rec cfg move_to_end [#"../CreuSAT/src/clause.rs" 119 4 119 55] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Clause_Clause_Type.t_clause)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/clause.rs" 110 4 110 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 111 15 111 30] Seq.length (ShallowModel0.shallow_model self) > 0}
    requires {[#"../CreuSAT/src/clause.rs" 112 15 112 33] UIntSize.to_int idx < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 110 4 110 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 113 4 114 79] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel1.shallow_model ( ^ self)) -> (exists j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) /\ Seq.get (ShallowModel1.shallow_model ( ^ self)) i = Seq.get (ShallowModel0.shallow_model self) j) }
    ensures { [#"../CreuSAT/src/clause.rs" 115 14 115 57] Seq.get (ShallowModel1.shallow_model ( ^ self)) (Seq.length (ShallowModel1.shallow_model ( ^ self)) - 1) = Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int idx) }
    ensures { [#"../CreuSAT/src/clause.rs" 116 14 116 43] Seq.length (ShallowModel1.shallow_model ( ^ self)) = Seq.length (ShallowModel0.shallow_model self) }
    ensures { [#"../CreuSAT/src/clause.rs" 117 4 118 36] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) -> LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model self) j) ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var idx_2 : usize;
  var _f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var end'_12 : usize;
  var _13 : usize;
  var _14 : CreuSat_Clause_Clause_Type.t_clause;
  var _15 : ();
  var _16 : borrowed (slice (CreuSat_Lit_Lit_Type.t_lit));
  var _17 : borrowed (slice (CreuSat_Lit_Lit_Type.t_lit));
  var _18 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global));
  var _19 : usize;
  var _20 : usize;
  {
    self_1 <- self;
    idx_2 <- idx;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    _14 <-  * self_1;
    _13 <- ([#"../CreuSAT/src/clause.rs" 120 18 120 28] Len0.len _14);
    goto BB1
  }
  BB1 {
    end'_12 <- ([#"../CreuSAT/src/clause.rs" 120 18 120 32] _13 - ([#"../CreuSAT/src/clause.rs" 120 31 120 32] (1 : usize)));
    _18 <- borrow_mut (CreuSat_Clause_Clause_Type.clause_lits ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Clause_Clause_Type.C_Clause a b c d =  * self_1 in CreuSat_Clause_Clause_Type.C_Clause a b c ( ^ _18)) };
    assume { Resolve0.resolve self_1 };
    _17 <- ([#"../CreuSAT/src/clause.rs" 121 8 121 32] DerefMut0.deref_mut _18);
    goto BB2
  }
  BB2 {
    _16 <- borrow_mut ( * _17);
    _17 <- { _17 with current = ( ^ _16) };
    assume { Resolve1.resolve _17 };
    _19 <- idx_2;
    _20 <- end'_12;
    _15 <- ([#"../CreuSAT/src/clause.rs" 121 8 121 32] Swap0.swap _16 _19 _20);
    goto BB3
  }
  BB3 {
    _0 <- ();
    return _0
  }
  
end
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
  let function some_0 (self : t_option 't) : 't = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_None -> any 't
      | C_Some a -> a
      end
end
module Alloc_Vec_Impl1_Pop_Interface
  type t
  type a
  use prelude.Borrow
  use seq.Seq
  use prelude.Int
  use seq_ext.SeqExt
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = a,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use Core_Option_Option_Type as Core_Option_Option_Type
  val pop (self : borrowed (Alloc_Vec_Vec_Type.t_vec t a)) : Core_Option_Option_Type.t_option t
    ensures { [#"../CreuSAT/src/unit_prop.rs" 88 36 93 31] match (result) with
      | Core_Option_Option_Type.C_Some t -> ShallowModel0.shallow_model ( ^ self) = SeqExt.subsequence (ShallowModel1.shallow_model self) 0 (Seq.length (ShallowModel1.shallow_model self) - 1) /\ ShallowModel1.shallow_model self = Seq.snoc (ShallowModel0.shallow_model ( ^ self)) t
      | Core_Option_Option_Type.C_None ->  * self =  ^ self /\ Seq.length (ShallowModel1.shallow_model self) = 0
      end }
    
end
module CreuSat_Clause_Impl2_RemoveFromClause_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use seq.Seq
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Stub as LitIn0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  val remove_from_clause [#"../CreuSAT/src/clause.rs" 136 4 136 66] (self : borrowed (CreuSat_Clause_Clause_Type.t_clause)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/clause.rs" 127 4 127 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 128 15 128 30] Seq.length (ShallowModel0.shallow_model self) > 0}
    requires {[#"../CreuSAT/src/clause.rs" 129 15 129 33] UIntSize.to_int idx < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 127 4 127 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 130 4 131 77] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel1.shallow_model ( ^ self)) -> (exists j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) /\ Seq.get (ShallowModel1.shallow_model ( ^ self)) i = Seq.get (ShallowModel0.shallow_model self) j) }
    ensures { [#"../CreuSAT/src/clause.rs" 132 14 132 47] Seq.length (ShallowModel1.shallow_model ( ^ self)) + 1 = Seq.length (ShallowModel0.shallow_model self) }
    ensures { [#"../CreuSAT/src/clause.rs" 133 4 133 42] not LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int idx)) ( ^ self) }
    ensures { [#"../CreuSAT/src/clause.rs" 134 4 135 49] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) /\ j <> UIntSize.to_int idx -> LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model self) j) ( ^ self) }
    
end
module CreuSat_Clause_Impl2_RemoveFromClause
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone Alloc_Vec_Impl1_Pop_Interface as Pop0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Clause_Impl2_MoveToEnd_Interface as MoveToEnd0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate LitIn0.lit_in = LitIn0.lit_in
  let rec cfg remove_from_clause [#"../CreuSAT/src/clause.rs" 136 4 136 66] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Clause_Clause_Type.t_clause)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/clause.rs" 127 4 127 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 128 15 128 30] Seq.length (ShallowModel0.shallow_model self) > 0}
    requires {[#"../CreuSAT/src/clause.rs" 129 15 129 33] UIntSize.to_int idx < Seq.length (ShallowModel0.shallow_model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 127 4 127 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 130 4 131 77] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel1.shallow_model ( ^ self)) -> (exists j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) /\ Seq.get (ShallowModel1.shallow_model ( ^ self)) i = Seq.get (ShallowModel0.shallow_model self) j) }
    ensures { [#"../CreuSAT/src/clause.rs" 132 14 132 47] Seq.length (ShallowModel1.shallow_model ( ^ self)) + 1 = Seq.length (ShallowModel0.shallow_model self) }
    ensures { [#"../CreuSAT/src/clause.rs" 133 4 133 42] not LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int idx)) ( ^ self) }
    ensures { [#"../CreuSAT/src/clause.rs" 134 4 135 49] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) /\ j <> UIntSize.to_int idx -> LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model self) j) ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var idx_2 : usize;
  var _f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var _12 : ();
  var _13 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _14 : usize;
  var _15 : CreuSat_Formula_Formula_Type.t_formula;
  var _16 : Core_Option_Option_Type.t_option (CreuSat_Lit_Lit_Type.t_lit);
  var _17 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global));
  {
    self_1 <- self;
    idx_2 <- idx;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    _13 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _13) };
    _14 <- idx_2;
    _15 <- _f_3;
    _12 <- ([#"../CreuSAT/src/clause.rs" 137 8 137 33] MoveToEnd0.move_to_end _13 _14 _15);
    goto BB1
  }
  BB1 {
    _17 <- borrow_mut (CreuSat_Clause_Clause_Type.clause_lits ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Clause_Clause_Type.C_Clause a b c d =  * self_1 in CreuSat_Clause_Clause_Type.C_Clause a b c ( ^ _17)) };
    assume { Resolve0.resolve self_1 };
    _16 <- ([#"../CreuSAT/src/clause.rs" 138 8 138 23] Pop0.pop _17);
    goto BB2
  }
  BB2 {
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Logic_LogicClause_Impl2_VarsInRange_Stub
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate vars_in_range [#"../CreuSAT/src/logic/logic_clause.rs" 178 4 178 46] (self : CreuSat_Clause_Clause_Type.t_clause) (n : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_VarsInRange_Interface
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate vars_in_range [#"../CreuSAT/src/logic/logic_clause.rs" 178 4 178 46] (self : CreuSat_Clause_Clause_Type.t_clause) (n : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_VarsInRange
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Stub as VarsInRangeInner0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate vars_in_range [#"../CreuSAT/src/logic/logic_clause.rs" 178 4 178 46] (self : CreuSat_Clause_Clause_Type.t_clause) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 179 20 179 49] VarsInRangeInner0.vars_in_range_inner (ShallowModel0.shallow_model self) n
  val vars_in_range [#"../CreuSAT/src/logic/logic_clause.rs" 178 4 178 46] (self : CreuSat_Clause_Clause_Type.t_clause) (n : int) : bool
    ensures { result = vars_in_range self n }
    
end
module CreuSat_Logic_LogicClause_Impl2_SatInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate sat_inner [#"../CreuSAT/src/logic/logic_clause.rs" 158 4 158 57] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl2_SatInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate sat_inner [#"../CreuSAT/src/logic/logic_clause.rs" 158 4 158 57] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl2_SatInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Stub as SatInner0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate sat_inner [#"../CreuSAT/src/logic/logic_clause.rs" 158 4 158 57] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 159 8 162 9] exists i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model self) /\ SatInner0.sat_inner (Seq.get (ShallowModel0.shallow_model self) i) a
  val sat_inner [#"../CreuSAT/src/logic/logic_clause.rs" 158 4 158 57] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) : bool
    ensures { result = sat_inner self a }
    
end
module CreuSat_Logic_LogicLit_Impl1_UnsetInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate unset_inner [#"../CreuSAT/src/logic/logic_lit.rs" 97 4 97 59] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicLit_Impl1_UnsetInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate unset_inner [#"../CreuSAT/src/logic/logic_lit.rs" 97 4 97 59] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicLit_Impl1_UnsetInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  predicate unset_inner [#"../CreuSAT/src/logic/logic_lit.rs" 97 4 97 59] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 98 20 98 47] UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) >= 2
  val unset_inner [#"../CreuSAT/src/logic/logic_lit.rs" 97 4 97 59] (self : CreuSat_Lit_Lit_Type.t_lit) (a : Seq.seq uint8) : bool
    ensures { result = unset_inner self a }
    
end
module CreuSat_Logic_LogicClause_Impl2_UnitInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate unit_inner [#"../CreuSAT/src/logic/logic_clause.rs" 129 4 129 54] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl2_UnitInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate unit_inner [#"../CreuSAT/src/logic/logic_clause.rs" 129 4 129 54] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl2_UnitInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner_Stub as UnsetInner0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Stub as SatInner0
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange_Stub as VarsInRange0
  predicate unit_inner [#"../CreuSAT/src/logic/logic_clause.rs" 129 4 129 54] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 130 8 137 9] VarsInRange0.vars_in_range self (Seq.length a) /\ not SatInner0.sat_inner self a /\ (exists i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model self) /\ UnsetInner0.unset_inner (Seq.get (ShallowModel0.shallow_model self) i) a /\ (forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) /\ j <> i -> not UnsetInner0.unset_inner (Seq.get (ShallowModel0.shallow_model self) j) a))
  val unit_inner [#"../CreuSAT/src/logic/logic_clause.rs" 129 4 129 54] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) : bool
    ensures { result = unit_inner self a }
    
end
module CreuSat_Logic_LogicClause_Impl2_Unit_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate unit [#"../CreuSAT/src/logic/logic_clause.rs" 140 4 140 45] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicClause_Impl2_Unit_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate unit [#"../CreuSAT/src/logic/logic_clause.rs" 140 4 140 45] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicClause_Impl2_Unit
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner_Stub as UnitInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate unit [#"../CreuSAT/src/logic/logic_clause.rs" 140 4 140 45] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 141 20 141 39] UnitInner0.unit_inner self (ShallowModel0.shallow_model a)
  val unit [#"../CreuSAT/src/logic/logic_clause.rs" 140 4 140 45] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = unit self a }
    
end
module CreuSat_Logic_LogicLit_Impl1_Unset_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate unset [#"../CreuSAT/src/logic/logic_lit.rs" 107 4 107 46] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicLit_Impl1_Unset_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate unset [#"../CreuSAT/src/logic/logic_lit.rs" 107 4 107 46] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicLit_Impl1_Unset
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner_Stub as UnsetInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate unset [#"../CreuSAT/src/logic/logic_lit.rs" 107 4 107 46] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 108 20 108 40] UnsetInner0.unset_inner self (ShallowModel0.shallow_model a)
  val unset [#"../CreuSAT/src/logic/logic_lit.rs" 107 4 107 46] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = unset self a }
    
end
module CreuSat_Logic_LogicLit_Impl1_Unsat_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate unsat [#"../CreuSAT/src/logic/logic_lit.rs" 112 4 112 46] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicLit_Impl1_Unsat_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate unsat [#"../CreuSAT/src/logic/logic_lit.rs" 112 4 112 46] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicLit_Impl1_Unsat
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Stub as UnsatInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate unsat [#"../CreuSAT/src/logic/logic_lit.rs" 112 4 112 46] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 113 20 113 40] UnsatInner0.unsat_inner self (ShallowModel0.shallow_model a)
  val unsat [#"../CreuSAT/src/logic/logic_lit.rs" 112 4 112 46] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = unsat self a }
    
end
module CreuSat_Lit_Impl2_LitUnsat_Interface
  use seq.Seq
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Stub as Unsat0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8
  val lit_unsat [#"../CreuSAT/src/lit.rs" 75 4 75 51] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/lit.rs" 73 15 73 39] Invariant0.invariant' self (Seq.length (ShallowModel0.shallow_model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 74 14 74 38] result = Unsat0.unsat self a }
    
end
module CreuSat_Lit_Impl2_LitUnsat
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Assignments_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Lit_Impl2_IsPositive_Interface as IsPositive0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg lit_unsat [#"../CreuSAT/src/lit.rs" 75 4 75 51] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/lit.rs" 73 15 73 39] Invariant0.invariant' self (Seq.length (ShallowModel0.shallow_model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 74 14 74 38] result = Unsat0.unsat self a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  var a_2 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _5 : bool;
  var _6 : CreuSat_Lit_Lit_Type.t_lit;
  var _7 : uint8;
  var _8 : uint8;
  var _9 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _10 : usize;
  var _11 : CreuSat_Lit_Lit_Type.t_lit;
  var _12 : uint8;
  var _13 : uint8;
  var _14 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _15 : usize;
  var _16 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    _6 <- self_1;
    _5 <- ([#"../CreuSAT/src/lit.rs" 76 14 76 32] IsPositive0.is_positive _6);
    goto BB1
  }
  BB1 {
    switch (_5)
      | False -> goto BB2
      | True -> goto BB3
      end
  }
  BB2 {
    _14 <- a_2;
    _16 <- self_1;
    _15 <- ([#"../CreuSAT/src/lit.rs" 78 24 78 36] Index0.index _16);
    goto BB6
  }
  BB3 {
    _9 <- a_2;
    _11 <- self_1;
    _10 <- ([#"../CreuSAT/src/lit.rs" 77 23 77 35] Index0.index _11);
    goto BB4
  }
  BB4 {
    _8 <- ([#"../CreuSAT/src/lit.rs" 77 21 77 36] Index1.index _9 _10);
    goto BB5
  }
  BB5 {
    _7 <- _8;
    _0 <- ([#"../CreuSAT/src/lit.rs" 77 20 77 42] _7 = ([#"../CreuSAT/src/lit.rs" 77 40 77 41] (0 : uint8)));
    goto BB8
  }
  BB6 {
    _13 <- ([#"../CreuSAT/src/lit.rs" 78 22 78 37] Index1.index _14 _15);
    goto BB7
  }
  BB7 {
    _12 <- _13;
    _0 <- ([#"../CreuSAT/src/lit.rs" 78 21 78 43] _12 = ([#"../CreuSAT/src/lit.rs" 78 41 78 42] (1 : uint8)));
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Lit_Impl2_LitUnset_Interface
  use seq.Seq
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Stub as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8
  val lit_unset [#"../CreuSAT/src/lit.rs" 86 4 86 51] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/lit.rs" 84 15 84 39] Invariant0.invariant' self (Seq.length (ShallowModel0.shallow_model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 85 14 85 38] result = Unset0.unset self a }
    
end
module CreuSat_Lit_Impl2_LitUnset
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Assignments_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg lit_unset [#"../CreuSAT/src/lit.rs" 86 4 86 51] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/lit.rs" 84 15 84 39] Invariant0.invariant' self (Seq.length (ShallowModel0.shallow_model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 85 14 85 38] result = Unset0.unset self a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  var a_2 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _5 : uint8;
  var _6 : uint8;
  var _7 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _8 : usize;
  var _9 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    _7 <- a_2;
    _9 <- self_1;
    _8 <- ([#"../CreuSAT/src/lit.rs" 87 10 87 22] Index0.index _9);
    goto BB1
  }
  BB1 {
    _6 <- ([#"../CreuSAT/src/lit.rs" 87 8 87 23] Index1.index _7 _8);
    goto BB2
  }
  BB2 {
    _5 <- _6;
    _0 <- ([#"../CreuSAT/src/lit.rs" 87 8 87 28] _5 >= ([#"../CreuSAT/src/lit.rs" 87 27 87 28] (2 : uint8)));
    return _0
  }
  
end
module CreuSat_Clause_Impl2_UnitAndUnset_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Stub as Unset0
  clone CreuSat_Logic_LogicClause_Impl2_Unit_Stub as Unit0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Stub as Invariant0
  clone CreuSat_Logic_LogicClause_InvariantInternal_Stub as InvariantInternal0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  val unit_and_unset [#"../CreuSAT/src/clause.rs" 148 4 148 71] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (_f : CreuSat_Formula_Formula_Type.t_formula) : bool
    requires {[#"../CreuSAT/src/clause.rs" 143 15 143 54] InvariantInternal0.invariant_internal (ShallowModel0.shallow_model self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 144 15 144 31] Invariant0.invariant' a _f}
    requires {[#"../CreuSAT/src/clause.rs" 145 15 145 30] Seq.length (ShallowModel0.shallow_model self) > 1}
    ensures { [#"../CreuSAT/src/clause.rs" 146 4 146 40] result -> Unit0.unit self a }
    ensures { [#"../CreuSAT/src/clause.rs" 147 4 147 45] result -> Unset0.unset (Seq.get (ShallowModel0.shallow_model self) 0) a }
    
end
module CreuSat_Clause_Impl2_UnitAndUnset
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner as UnitInner0 with
    predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Lit_Impl2_LitUnset_Interface as LitUnset0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Lit_Impl2_LitUnsat_Interface as LitUnsat0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Unsat0.unsat = Unsat0.unsat
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Unit as Unit0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnitInner0.unit_inner = UnitInner0.unit_inner
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  let rec cfg unit_and_unset [#"../CreuSAT/src/clause.rs" 148 4 148 71] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (_f : CreuSat_Formula_Formula_Type.t_formula) : bool
    requires {[#"../CreuSAT/src/clause.rs" 143 15 143 54] InvariantInternal0.invariant_internal (ShallowModel0.shallow_model self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 144 15 144 31] Invariant0.invariant' a _f}
    requires {[#"../CreuSAT/src/clause.rs" 145 15 145 30] Seq.length (ShallowModel0.shallow_model self) > 1}
    ensures { [#"../CreuSAT/src/clause.rs" 146 4 146 40] result -> Unit0.unit self a }
    ensures { [#"../CreuSAT/src/clause.rs" 147 4 147 45] result -> Unset0.unset (Seq.get (ShallowModel0.shallow_model self) 0) a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Clause_Clause_Type.t_clause;
  var a_2 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var i_9 : usize;
  var _10 : ();
  var _12 : ();
  var _13 : bool;
  var _14 : usize;
  var _15 : usize;
  var _16 : CreuSat_Clause_Clause_Type.t_clause;
  var _17 : ();
  var _18 : bool;
  var _19 : bool;
  var _20 : CreuSat_Lit_Lit_Type.t_lit;
  var _21 : CreuSat_Lit_Lit_Type.t_lit;
  var _22 : CreuSat_Clause_Clause_Type.t_clause;
  var _23 : usize;
  var _24 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _25 : ();
  var _26 : ();
  var _27 : ();
  var _28 : ();
  var _29 : CreuSat_Lit_Lit_Type.t_lit;
  var _30 : CreuSat_Lit_Lit_Type.t_lit;
  var _31 : CreuSat_Clause_Clause_Type.t_clause;
  var _32 : CreuSat_Assignments_Assignments_Type.t_assignments;
  {
    self_1 <- self;
    a_2 <- a;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    i_9 <- ([#"../CreuSAT/src/clause.rs" 149 27 149 28] (1 : usize));
    goto BB1
  }
  BB1 {
    invariant { [#"../CreuSAT/src/clause.rs" 150 8 150 76] forall j : int . 1 <= j /\ j < UIntSize.to_int i_9 -> Unsat0.unsat (Seq.get (ShallowModel0.shallow_model self_1) j) a_2 };
    _14 <- i_9;
    _16 <- self_1;
    _15 <- ([#"../CreuSAT/src/clause.rs" 151 18 151 28] Len0.len _16);
    goto BB2
  }
  BB2 {
    _13 <- ([#"../CreuSAT/src/clause.rs" 151 14 151 28] _14 < _15);
    switch (_13)
      | False -> goto BB8
      | True -> goto BB3
      end
  }
  BB3 {
    _22 <- self_1;
    _23 <- i_9;
    _21 <- ([#"../CreuSAT/src/clause.rs" 152 16 152 23] Index0.index _22 _23);
    goto BB4
  }
  BB4 {
    _20 <- _21;
    _24 <- a_2;
    _19 <- ([#"../CreuSAT/src/clause.rs" 152 16 152 36] LitUnsat0.lit_unsat _20 _24);
    goto BB5
  }
  BB5 {
    _18 <- not _19;
    switch (_18)
      | False -> goto BB7
      | True -> goto BB6
      end
  }
  BB6 {
    _0 <- ([#"../CreuSAT/src/clause.rs" 153 23 153 28] false);
    goto BB11
  }
  BB7 {
    _17 <- ();
    i_9 <- ([#"../CreuSAT/src/clause.rs" 155 12 155 18] i_9 + ([#"../CreuSAT/src/clause.rs" 155 17 155 18] (1 : usize)));
    _12 <- ();
    goto BB1
  }
  BB8 {
    _10 <- ();
    _31 <- self_1;
    _30 <- ([#"../CreuSAT/src/clause.rs" 157 8 157 15] Index0.index _31 ([#"../CreuSAT/src/clause.rs" 157 13 157 14] (0 : usize)));
    goto BB9
  }
  BB9 {
    _29 <- _30;
    _32 <- a_2;
    _0 <- ([#"../CreuSAT/src/clause.rs" 157 8 157 28] LitUnset0.lit_unset _29 _32);
    goto BB10
  }
  BB10 {
    goto BB11
  }
  BB11 {
    return _0
  }
  
end
module CreuSat_Logic_LogicAssignments_CompleteInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  predicate complete_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 32 0 32 52] (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicAssignments_CompleteInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  predicate complete_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 32 0 32 52] (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicAssignments_CompleteInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  clone CreuSat_Logic_Logic_Unset_Stub as Unset0
  predicate complete_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 32 0 32 52] (a : Seq.seq uint8) =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 33 4 35 5] forall i : int . 0 <= i /\ i < Seq.length a -> not Unset0.unset (Seq.get a i)
  val complete_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 32 0 32 52] (a : Seq.seq uint8) : bool
    ensures { result = complete_inner a }
    
end
module CreuSat_Logic_LogicFormula_FormulaSatInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate formula_sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 29 0 29 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_FormulaSatInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate formula_sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 29 0 29 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_FormulaSatInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Stub as SatInner0
  predicate formula_sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 29 0 29 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 30 4 33 5] forall i : int . 0 <= i /\ i < Seq.length (let (a, _) = f in a) -> SatInner0.sat_inner (Seq.get (let (a, _) = f in a) i) a
  val formula_sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 29 0 29 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (a : Seq.seq uint8) : bool
    ensures { result = formula_sat_inner f a }
    
end
module CreuSat_Logic_LogicFormula_EventuallySatComplete_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate eventually_sat_complete [#"../CreuSAT/src/logic/logic_formula.rs" 37 0 37 61] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
end
module CreuSat_Logic_LogicFormula_EventuallySatComplete_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate eventually_sat_complete [#"../CreuSAT/src/logic/logic_formula.rs" 37 0 37 61] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
end
module CreuSat_Logic_LogicFormula_EventuallySatComplete
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Stub as FormulaSatInner0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Stub as CompleteInner0
  predicate eventually_sat_complete [#"../CreuSAT/src/logic/logic_formula.rs" 37 0 37 61] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 38 4 40 5] exists a2 : Seq.seq uint8 . Seq.length a2 = (let (_, a) = f in a) /\ CompleteInner0.complete_inner a2 /\ FormulaSatInner0.formula_sat_inner f a2
  val eventually_sat_complete [#"../CreuSAT/src/logic/logic_formula.rs" 37 0 37 61] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) : bool
    ensures { result = eventually_sat_complete f }
    
end
module CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate equisat_extension_inner [#"../CreuSAT/src/logic/logic_clause.rs" 34 0 34 72] (c : CreuSat_Clause_Clause_Type.t_clause) (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
end
module CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate equisat_extension_inner [#"../CreuSAT/src/logic/logic_clause.rs" 34 0 34 72] (c : CreuSat_Clause_Clause_Type.t_clause) (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
end
module CreuSat_Logic_LogicClause_EquisatExtensionInner
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete_Stub as EventuallySatComplete0
  predicate equisat_extension_inner [#"../CreuSAT/src/logic/logic_clause.rs" 34 0 34 72] (c : CreuSat_Clause_Clause_Type.t_clause) (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 35 4 37 5] EventuallySatComplete0.eventually_sat_complete f -> EventuallySatComplete0.eventually_sat_complete (Seq.snoc (let (a, _) = f in a) c, let (_, a) = f in a)
  val equisat_extension_inner [#"../CreuSAT/src/logic/logic_clause.rs" 34 0 34 72] (c : CreuSat_Clause_Clause_Type.t_clause) (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) : bool
    ensures { result = equisat_extension_inner c f }
    
end
module CreuSat_Logic_LogicClause_Impl2_EquisatExtension_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate equisat_extension [#"../CreuSAT/src/logic/logic_clause.rs" 87 4 87 54] (self : CreuSat_Clause_Clause_Type.t_clause) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicClause_Impl2_EquisatExtension_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate equisat_extension [#"../CreuSAT/src/logic/logic_clause.rs" 87 4 87 54] (self : CreuSat_Clause_Clause_Type.t_clause) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicClause_Impl2_EquisatExtension
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel_Stub as ShallowModel0
  predicate equisat_extension [#"../CreuSAT/src/logic/logic_clause.rs" 87 4 87 54] (self : CreuSat_Clause_Clause_Type.t_clause) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 88 20 88 53] EquisatExtensionInner0.equisat_extension_inner self (ShallowModel0.shallow_model f)
  val equisat_extension [#"../CreuSAT/src/logic/logic_clause.rs" 87 4 87 54] (self : CreuSat_Clause_Clause_Type.t_clause) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = equisat_extension self f }
    
end
module CreuSat_Clause_Impl2_SwapLitsInClause_Interface
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use seq.Seq
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension_Stub as EquisatExtension0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant0
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  val swap_lits_in_clause [#"../CreuSAT/src/clause.rs" 167 4 167 75] (self : borrowed (CreuSat_Clause_Clause_Type.t_clause)) (_f : CreuSat_Formula_Formula_Type.t_formula) (j : usize) (k : usize) : ()
    requires {[#"../CreuSAT/src/clause.rs" 162 15 162 31] Seq.length (ShallowModel0.shallow_model self) > UIntSize.to_int j}
    requires {[#"../CreuSAT/src/clause.rs" 163 15 163 31] Seq.length (ShallowModel0.shallow_model self) > UIntSize.to_int k}
    requires {[#"../CreuSAT/src/clause.rs" 164 4 164 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 165 4 165 51] EquisatExtension0.equisat_extension ( * self) _f}
    ensures { [#"../CreuSAT/src/clause.rs" 164 4 164 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 165 4 165 51] EquisatExtension0.equisat_extension ( ^ self) _f }
    ensures { [#"../CreuSAT/src/clause.rs" 166 14 166 43] Seq.length (ShallowModel0.shallow_model self) = Seq.length (ShallowModel1.shallow_model ( ^ self)) }
    
end
module CreuSat_Clause_Impl2_SwapLitsInClause
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use prelude.Slice
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Slice_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel5 with
    type t = slice (CreuSat_Lit_Lit_Type.t_lit),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = slice (CreuSat_Lit_Lit_Type.t_lit)
  clone Alloc_Vec_Impl10_DerefMut_Interface as DerefMut0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg swap_lits_in_clause [#"../CreuSAT/src/clause.rs" 167 4 167 75] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Clause_Clause_Type.t_clause)) (_f : CreuSat_Formula_Formula_Type.t_formula) (j : usize) (k : usize) : ()
    requires {[#"../CreuSAT/src/clause.rs" 162 15 162 31] Seq.length (ShallowModel0.shallow_model self) > UIntSize.to_int j}
    requires {[#"../CreuSAT/src/clause.rs" 163 15 163 31] Seq.length (ShallowModel0.shallow_model self) > UIntSize.to_int k}
    requires {[#"../CreuSAT/src/clause.rs" 164 4 164 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 165 4 165 51] EquisatExtension0.equisat_extension ( * self) _f}
    ensures { [#"../CreuSAT/src/clause.rs" 164 4 164 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 165 4 165 51] EquisatExtension0.equisat_extension ( ^ self) _f }
    ensures { [#"../CreuSAT/src/clause.rs" 166 14 166 43] Seq.length (ShallowModel0.shallow_model self) = Seq.length (ShallowModel1.shallow_model ( ^ self)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _f_2 : CreuSat_Formula_Formula_Type.t_formula;
  var j_3 : usize;
  var k_4 : usize;
  var old_c_12 : Snapshot.Snapshot_ty (borrowed (CreuSat_Clause_Clause_Type.t_clause));
  var _14 : ();
  var _15 : ();
  var _16 : borrowed (slice (CreuSat_Lit_Lit_Type.t_lit));
  var _17 : borrowed (slice (CreuSat_Lit_Lit_Type.t_lit));
  var _18 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global));
  var _19 : usize;
  var _20 : usize;
  var _21 : ();
  {
    self_1 <- self;
    _f_2 <- _f;
    j_3 <- j;
    k_4 <- k;
    goto BB0
  }
  BB0 {
    _14 <- ();
    old_c_12 <- ([#"../CreuSAT/src/clause.rs" 168 40 168 55] Snapshot.new self_1);
    goto BB1
  }
  BB1 {
    _18 <- borrow_mut (CreuSat_Clause_Clause_Type.clause_lits ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Clause_Clause_Type.C_Clause a b c d =  * self_1 in CreuSat_Clause_Clause_Type.C_Clause a b c ( ^ _18)) };
    assume { Resolve0.resolve self_1 };
    _17 <- ([#"../CreuSAT/src/clause.rs" 169 8 169 28] DerefMut0.deref_mut _18);
    goto BB2
  }
  BB2 {
    _16 <- borrow_mut ( * _17);
    _17 <- { _17 with current = ( ^ _16) };
    assume { Resolve1.resolve _17 };
    _19 <- j_3;
    _20 <- k_4;
    _15 <- ([#"../CreuSAT/src/clause.rs" 169 8 169 28] Swap0.swap _16 _19 _20);
    goto BB3
  }
  BB3 {
    assert { [#"../CreuSAT/src/clause.rs" 170 8 171 85] EventuallySatComplete0.eventually_sat_complete (Seq.snoc (let (a, _) = ShallowModel2.shallow_model _f_2 in a) ( * self_1), let (_, a) = ShallowModel2.shallow_model _f_2 in a) -> EventuallySatComplete0.eventually_sat_complete (Seq.snoc (let (a, _) = ShallowModel2.shallow_model _f_2 in a) ( * Snapshot.inner old_c_12), let (_, a) = ShallowModel2.shallow_model _f_2 in a) };
    _21 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Trail_Trail_Type
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  type t_trail  =
    | C_Trail (CreuSat_Assignments_Assignments_Type.t_assignments) (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)) (Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global)) usize (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global))
    
  let function trail_lit_to_level (self : t_trail) : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Trail _ a _ _ _ -> a
      end
  let function trail_assignments (self : t_trail) : CreuSat_Assignments_Assignments_Type.t_assignments
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Trail a _ _ _ _ -> a
      end
  let function trail_trail (self : t_trail) : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Trail _ _ a _ _ -> a
      end
  let function trail_decisions (self : t_trail) : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Trail _ _ _ _ a -> a
      end
  let function trail_curr_i (self : t_trail) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Trail _ _ _ a _ -> a
      end
end
module CreuSat_Solver_Solver_Type
  use prelude.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_solver  =
    | C_Solver usize usize usize usize usize usize usize (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global))
    
  let function solver_perm_diff (self : t_solver) : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Solver _ _ _ _ _ _ _ a -> a
      end
  let function solver_num_conflicts (self : t_solver) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Solver _ _ a _ _ _ _ _ -> a
      end
  let function solver_num_lemmas (self : t_solver) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Solver a _ _ _ _ _ _ _ -> a
      end
  let function solver_max_lemmas (self : t_solver) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Solver _ a _ _ _ _ _ _ -> a
      end
  let function solver_initial_len (self : t_solver) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Solver _ _ _ a _ _ _ _ -> a
      end
  let function solver_fast (self : t_solver) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Solver _ _ _ _ _ a _ _ -> a
      end
  let function solver_slow (self : t_solver) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Solver _ _ _ _ _ _ a _ -> a
      end
end
module CreuSat_Clause_Impl2_CalcLbd_Interface
  use seq.Seq
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  val calc_lbd [#"../CreuSAT/src/clause.rs" 177 4 177 76] (self : CreuSat_Clause_Clause_Type.t_clause) (_f : CreuSat_Formula_Formula_Type.t_formula) (s : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (t : CreuSat_Trail_Trail_Type.t_trail) : usize
    requires {[#"../CreuSAT/src/clause.rs" 175 15 175 52] Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_lit_to_level t)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    requires {[#"../CreuSAT/src/clause.rs" 176 15 176 43] Invariant0.invariant' self (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    
end
module CreuSat_Clause_Impl2_CalcLbd
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = usize
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = usize
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Solver_Solver_Type.t_solver
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = usize
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = usize,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len1 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index2 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = usize
  clone CreuSat_Lit_Impl2_Index_Interface as Index1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  let rec cfg calc_lbd [#"../CreuSAT/src/clause.rs" 177 4 177 76] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Clause_Clause_Type.t_clause) (_f : CreuSat_Formula_Formula_Type.t_formula) (s : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (t : CreuSat_Trail_Trail_Type.t_trail) : usize
    requires {[#"../CreuSAT/src/clause.rs" 175 15 175 52] Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_lit_to_level t)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    requires {[#"../CreuSAT/src/clause.rs" 176 15 176 43] Invariant0.invariant' self (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Clause_Clause_Type.t_clause;
  var _f_2 : CreuSat_Formula_Formula_Type.t_formula;
  var s_3 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var t_4 : CreuSat_Trail_Trail_Type.t_trail;
  var i_7 : usize;
  var lbd_8 : usize;
  var _9 : ();
  var _11 : ();
  var _12 : bool;
  var _13 : usize;
  var _14 : usize;
  var _15 : CreuSat_Clause_Clause_Type.t_clause;
  var level_16 : usize;
  var _17 : usize;
  var _18 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _19 : usize;
  var _20 : CreuSat_Lit_Lit_Type.t_lit;
  var _21 : CreuSat_Lit_Lit_Type.t_lit;
  var _22 : CreuSat_Clause_Clause_Type.t_clause;
  var _23 : usize;
  var _24 : ();
  var _25 : bool;
  var _26 : bool;
  var _27 : usize;
  var _28 : usize;
  var _29 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _30 : bool;
  var _31 : usize;
  var _32 : usize;
  var _33 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _34 : usize;
  var _35 : usize;
  var _36 : usize;
  var _37 : borrowed usize;
  var _38 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _39 : usize;
  var _40 : ();
  var _41 : ();
  var _42 : ();
  {
    self_1 <- self;
    _f_2 <- _f;
    s_3 <- s;
    t_4 <- t;
    goto BB0
  }
  BB0 {
    i_7 <- ([#"../CreuSAT/src/clause.rs" 178 27 178 28] (0 : usize));
    lbd_8 <- ([#"../CreuSAT/src/clause.rs" 179 29 179 30] (0 : usize));
    goto BB1
  }
  BB1 {
    invariant { [#"../CreuSAT/src/clause.rs" 180 20 180 30] UIntSize.to_int lbd_8 <= UIntSize.to_int i_7 };
    _13 <- i_7;
    _15 <- self_1;
    _14 <- ([#"../CreuSAT/src/clause.rs" 181 18 181 28] Len0.len _15);
    goto BB2
  }
  BB2 {
    _12 <- ([#"../CreuSAT/src/clause.rs" 181 14 181 28] _13 < _14);
    switch (_12)
      | False -> goto BB16
      | True -> goto BB3
      end
  }
  BB3 {
    _18 <- CreuSat_Trail_Trail_Type.trail_lit_to_level t_4;
    _22 <- self_1;
    _23 <- i_7;
    _21 <- ([#"../CreuSAT/src/clause.rs" 182 39 182 46] Index0.index _22 _23);
    goto BB4
  }
  BB4 {
    _20 <- _21;
    _19 <- ([#"../CreuSAT/src/clause.rs" 182 39 182 54] Index1.index _20);
    goto BB5
  }
  BB5 {
    _17 <- ([#"../CreuSAT/src/clause.rs" 182 24 182 55] Index2.index _18 _19);
    goto BB6
  }
  BB6 {
    level_16 <- _17;
    _27 <- level_16;
    _29 <- CreuSat_Solver_Solver_Type.solver_perm_diff ( * s_3);
    _28 <- ([#"../CreuSAT/src/clause.rs" 183 23 183 40] Len1.len _29);
    goto BB10
  }
  BB7 {
    _25 <- ([#"../CreuSAT/src/clause.rs" 183 15 184 53] false);
    goto BB9
  }
  BB8 {
    _33 <- CreuSat_Solver_Solver_Type.solver_perm_diff ( * s_3);
    _34 <- level_16;
    _32 <- ([#"../CreuSAT/src/clause.rs" 184 16 184 34] Index2.index _33 _34);
    goto BB11
  }
  BB9 {
    switch (_25)
      | False -> goto BB14
      | True -> goto BB12
      end
  }
  BB10 {
    _26 <- ([#"../CreuSAT/src/clause.rs" 183 15 183 40] _27 < _28);
    switch (_26)
      | False -> goto BB7
      | True -> goto BB8
      end
  }
  BB11 {
    _31 <- _32;
    _35 <- CreuSat_Solver_Solver_Type.solver_num_conflicts ( * s_3);
    _30 <- ([#"../CreuSAT/src/clause.rs" 184 16 184 53] _31 <> _35);
    _25 <- _30;
    _30 <- any bool;
    goto BB9
  }
  BB12 {
    _36 <- CreuSat_Solver_Solver_Type.solver_num_conflicts ( * s_3);
    _38 <- borrow_mut (CreuSat_Solver_Solver_Type.solver_perm_diff ( * s_3));
    s_3 <- { s_3 with current = (let CreuSat_Solver_Solver_Type.C_Solver a b c d e f g h =  * s_3 in CreuSat_Solver_Solver_Type.C_Solver a b c d e f g ( ^ _38)) };
    _39 <- level_16;
    _37 <- ([#"../CreuSAT/src/clause.rs" 186 16 186 34] IndexMut0.index_mut _38 _39);
    goto BB13
  }
  BB13 {
    _37 <- { _37 with current = _36 };
    _36 <- any usize;
    assume { Resolve0.resolve _37 };
    lbd_8 <- ([#"../CreuSAT/src/clause.rs" 187 16 187 24] lbd_8 + ([#"../CreuSAT/src/clause.rs" 187 23 187 24] (1 : usize)));
    _24 <- ();
    goto BB15
  }
  BB14 {
    _24 <- ();
    goto BB15
  }
  BB15 {
    i_7 <- ([#"../CreuSAT/src/clause.rs" 189 12 189 18] i_7 + ([#"../CreuSAT/src/clause.rs" 189 17 189 18] (1 : usize)));
    _11 <- ();
    goto BB1
  }
  BB16 {
    assume { Resolve1.resolve s_3 };
    _9 <- ();
    _0 <- lbd_8;
    return _0
  }
  
end
module CreuSat_Logic_LogicLit_IdxInLogic_Stub
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate idx_in_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 10 0 10 50] (idx : int) (c : Seq.seq (CreuSat_Lit_Lit_Type.t_lit))
    
end
module CreuSat_Logic_LogicLit_IdxInLogic_Interface
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate idx_in_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 10 0 10 50] (idx : int) (c : Seq.seq (CreuSat_Lit_Lit_Type.t_lit))
    
end
module CreuSat_Logic_LogicLit_IdxInLogic
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  predicate idx_in_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 10 0 10 50] (idx : int) (c : Seq.seq (CreuSat_Lit_Lit_Type.t_lit))
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 11 4 14 5] exists i : int . 0 <= i /\ i < Seq.length c /\ IndexLogic0.index_logic (Seq.get c i) = idx
  val idx_in_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 10 0 10 50] (idx : int) (c : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) : bool
    ensures { result = idx_in_logic idx c }
    
end
module CreuSat_ConflictAnalysis_IdxIn_Interface
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use prelude.Borrow
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicLit_IdxInLogic_Stub as IdxInLogic0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Stub as VarsInRangeInner0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  val idx_in [#"../CreuSAT/src/conflict_analysis.rs" 25 0 25 61] (c : Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) (idx : usize) (seen : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 21 11 21 47] VarsInRangeInner0.vars_in_range_inner (ShallowModel0.shallow_model c) (Seq.length (ShallowModel1.shallow_model seen))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 22 11 22 29] UIntSize.to_int idx < Seq.length (ShallowModel1.shallow_model seen)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 23 11 23 48] Seq.get (ShallowModel1.shallow_model seen) (UIntSize.to_int idx) = IdxInLogic0.idx_in_logic (UIntSize.to_int idx) (ShallowModel0.shallow_model c)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 24 10 24 90] result = (exists i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model c) /\ IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model c) i) = UIntSize.to_int idx) }
    
end
module CreuSat_ConflictAnalysis_IdxIn
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = bool
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = bool
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = bool,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = bool,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = bool
  clone CreuSat_Logic_LogicLit_IdxInLogic as IdxInLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant0.invariant'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  let rec cfg idx_in [#"../CreuSAT/src/conflict_analysis.rs" 25 0 25 61] [@cfg:stackify] [@cfg:subregion_analysis] (c : Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global)) (idx : usize) (seen : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 21 11 21 47] VarsInRangeInner0.vars_in_range_inner (ShallowModel0.shallow_model c) (Seq.length (ShallowModel1.shallow_model seen))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 22 11 22 29] UIntSize.to_int idx < Seq.length (ShallowModel1.shallow_model seen)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 23 11 23 48] Seq.get (ShallowModel1.shallow_model seen) (UIntSize.to_int idx) = IdxInLogic0.idx_in_logic (UIntSize.to_int idx) (ShallowModel0.shallow_model c)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 24 10 24 90] result = (exists i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model c) /\ IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model c) i) = UIntSize.to_int idx) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var c_1 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global);
  var idx_2 : usize;
  var seen_3 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _8 : bool;
  var _9 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _10 : usize;
  {
    c_1 <- c;
    idx_2 <- idx;
    seen_3 <- seen;
    goto BB0
  }
  BB0 {
    _9 <- seen_3;
    _10 <- idx_2;
    _8 <- ([#"../CreuSAT/src/conflict_analysis.rs" 26 4 26 13] Index0.index _9 _10);
    goto BB1
  }
  BB1 {
    _0 <- _8;
    return _0
  }
  
end
module CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Stub
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate lit_idx_in [#"../CreuSAT/src/logic/logic_lit.rs" 64 4 64 46] (self : CreuSat_Lit_Lit_Type.t_lit) (c : CreuSat_Clause_Clause_Type.t_clause)
    
end
module CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Interface
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate lit_idx_in [#"../CreuSAT/src/logic/logic_lit.rs" 64 4 64 46] (self : CreuSat_Lit_Lit_Type.t_lit) (c : CreuSat_Clause_Clause_Type.t_clause)
    
end
module CreuSat_Logic_LogicLit_Impl1_LitIdxIn
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate lit_idx_in [#"../CreuSAT/src/logic/logic_lit.rs" 64 4 64 46] (self : CreuSat_Lit_Lit_Type.t_lit) (c : CreuSat_Clause_Clause_Type.t_clause)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 65 8 68 9] exists i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model c) /\ IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model c) i) = IndexLogic0.index_logic self
  val lit_idx_in [#"../CreuSAT/src/logic/logic_lit.rs" 64 4 64 46] (self : CreuSat_Lit_Lit_Type.t_lit) (c : CreuSat_Clause_Clause_Type.t_clause) : bool
    ensures { result = lit_idx_in self c }
    
end
module CreuSat_Logic_LogicTrail_LitNotInLessInner_Stub
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate lit_not_in_less_inner [#"../CreuSAT/src/logic/logic_trail.rs" 85 0 85 62] (t : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate lit_not_in_less_inner [#"../CreuSAT/src/logic/logic_trail.rs" 85 0 85 62] (t : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_LitNotInLessInner
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Stub as LitIdxIn0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate lit_not_in_less_inner [#"../CreuSAT/src/logic/logic_trail.rs" 85 0 85 62] (t : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 86 4 93 5] forall i : int . 0 <= i /\ i < Seq.length t -> (forall j : int . 0 <= j /\ j < i -> match (CreuSat_Trail_Step_Type.step_reason (Seq.get t j)) with
      | CreuSat_Trail_Reason_Type.C_Long cref -> not LitIdxIn0.lit_idx_in (CreuSat_Trail_Step_Type.step_lit (Seq.get t i)) (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))
      | _ -> true
      end)
  val lit_not_in_less_inner [#"../CreuSAT/src/logic/logic_trail.rs" 85 0 85 62] (t : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = lit_not_in_less_inner t f }
    
end
module CreuSat_Logic_LogicTrail_LitIsUniqueInner_Stub
  use seq.Seq
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate lit_is_unique_inner [#"../CreuSAT/src/logic/logic_trail.rs" 133 0 133 48] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step))
    
end
module CreuSat_Logic_LogicTrail_LitIsUniqueInner_Interface
  use seq.Seq
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate lit_is_unique_inner [#"../CreuSAT/src/logic/logic_trail.rs" 133 0 133 48] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step))
    
end
module CreuSat_Logic_LogicTrail_LitIsUniqueInner
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate lit_is_unique_inner [#"../CreuSAT/src/logic/logic_trail.rs" 133 0 133 48] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step))
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 134 4 138 5] forall i : int . 0 <= i /\ i < Seq.length trail -> (forall j : int . 0 <= j /\ j < i -> IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit (Seq.get trail j)) <> IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit (Seq.get trail i)))
  val lit_is_unique_inner [#"../CreuSAT/src/logic/logic_trail.rs" 133 0 133 48] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) : bool
    ensures { result = lit_is_unique_inner trail }
    
end
module CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate trail_entries_are_assigned_inner [#"../CreuSAT/src/logic/logic_trail.rs" 106 0 106 80] (t : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate trail_entries_are_assigned_inner [#"../CreuSAT/src/logic/logic_trail.rs" 106 0 106 80] (t : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Stub as SatInner0
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate trail_entries_are_assigned_inner [#"../CreuSAT/src/logic/logic_trail.rs" 106 0 106 80] (t : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 107 4 110 5] forall j : int . 0 <= j /\ j < Seq.length t -> SatInner0.sat_inner (CreuSat_Trail_Step_Type.step_lit (Seq.get t j)) a
  val trail_entries_are_assigned_inner [#"../CreuSAT/src/logic/logic_trail.rs" 106 0 106 80] (t : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (a : Seq.seq uint8) : bool
    ensures { result = trail_entries_are_assigned_inner t a }
    
end
module CreuSat_Logic_LogicUtil_SortedRange_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_range [#"../CreuSAT/src/logic/logic_util.rs" 18 0 18 58] (s : Seq.seq usize) (l : int) (u : int)
end
module CreuSat_Logic_LogicUtil_SortedRange_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_range [#"../CreuSAT/src/logic/logic_util.rs" 18 0 18 58] (s : Seq.seq usize) (l : int) (u : int)
end
module CreuSat_Logic_LogicUtil_SortedRange
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_range [#"../CreuSAT/src/logic/logic_util.rs" 18 0 18 58] (s : Seq.seq usize) (l : int) (u : int) =
    [#"../CreuSAT/src/logic/logic_util.rs" 19 4 19 82] forall j : int . forall i : int . l <= i /\ i < j /\ j < u -> Seq.get s i <= Seq.get s j
  val sorted_range [#"../CreuSAT/src/logic/logic_util.rs" 18 0 18 58] (s : Seq.seq usize) (l : int) (u : int) : bool
    ensures { result = sorted_range s l u }
    
end
module CreuSat_Logic_LogicUtil_Sorted_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted [#"../CreuSAT/src/logic/logic_util.rs" 23 0 23 36] (s : Seq.seq usize)
end
module CreuSat_Logic_LogicUtil_Sorted_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted [#"../CreuSAT/src/logic/logic_util.rs" 23 0 23 36] (s : Seq.seq usize)
end
module CreuSat_Logic_LogicUtil_Sorted
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  clone CreuSat_Logic_LogicUtil_SortedRange_Stub as SortedRange0
  predicate sorted [#"../CreuSAT/src/logic/logic_util.rs" 23 0 23 36] (s : Seq.seq usize) =
    [#"../CreuSAT/src/logic/logic_util.rs" 24 4 24 31] SortedRange0.sorted_range s 0 (Seq.length s)
  val sorted [#"../CreuSAT/src/logic/logic_util.rs" 23 0 23 36] (s : Seq.seq usize) : bool
    ensures { result = sorted s }
    
end
module CreuSat_Logic_LogicTrail_UnitAreSat_Stub
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate unit_are_sat [#"../CreuSAT/src/logic/logic_trail.rs" 164 0 164 69] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicTrail_UnitAreSat_Interface
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate unit_are_sat [#"../CreuSAT/src/logic/logic_trail.rs" 164 0 164 69] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicTrail_UnitAreSat
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Stub as Sat0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  predicate unit_are_sat [#"../CreuSAT/src/logic/logic_trail.rs" 164 0 164 69] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 165 4 173 5] forall j : int . 0 <= j /\ j < Seq.length trail -> match (CreuSat_Trail_Step_Type.step_reason (Seq.get trail j)) with
      | CreuSat_Trail_Reason_Type.C_Unit k -> CreuSat_Trail_Step_Type.step_lit (Seq.get trail j) = Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int k))) 0 /\ Sat0.sat (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int k))) 0) a
      | _ -> true
      end
  val unit_are_sat [#"../CreuSAT/src/logic/logic_trail.rs" 164 0 164 69] (trail : Seq.seq (CreuSat_Trail_Step_Type.t_step)) (f : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = unit_are_sat trail f a }
    
end
module CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  predicate invariant' [@inline:trivial] [#"../CreuSAT/src/logic/logic_trail.rs" 52 4 52 46] (self : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  predicate invariant' [@inline:trivial] [#"../CreuSAT/src/logic/logic_trail.rs" 52 4 52 46] (self : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_Impl1_Invariant
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat_Stub as UnitAreSat0
  clone CreuSat_Logic_LogicUtil_Sorted_Stub as Sorted0
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner_Stub as TrailEntriesAreAssignedInner0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Stub as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel2
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner_Stub as LitIsUniqueInner0
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Stub as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Stub as TrailInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Stub as Invariant0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  predicate invariant' [@inline:trivial] [#"../CreuSAT/src/logic/logic_trail.rs" 52 4 52 46] (self : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 53 8 64 9] Invariant0.invariant' (CreuSat_Trail_Trail_Type.trail_assignments self) f /\ TrailInvariant0.trail_invariant (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) f /\ Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_lit_to_level self)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) /\ LitNotInLessInner0.lit_not_in_less_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) f /\ LitIsUniqueInner0.lit_is_unique_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) /\ LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) f (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments self)) /\ TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments self)) /\ Sorted0.sorted (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions self)) /\ UnitAreSat0.unit_are_sat (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) f (CreuSat_Trail_Trail_Type.trail_assignments self) /\ (forall i : int . 0 <= i /\ i < Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions self)) -> UIntSize.to_int (Seq.get (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions self)) i) <= Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)))
  val invariant' [@inline:trivial] [#"../CreuSAT/src/logic/logic_trail.rs" 52 4 52 46] (self : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = invariant' self f }
    
end
module CreuSat_Logic_LogicClause_Impl2_InFormula_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate in_formula [#"../CreuSAT/src/logic/logic_clause.rs" 114 4 114 47] (self : CreuSat_Clause_Clause_Type.t_clause) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicClause_Impl2_InFormula_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate in_formula [#"../CreuSAT/src/logic/logic_clause.rs" 114 4 114 47] (self : CreuSat_Clause_Clause_Type.t_clause) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicClause_Impl2_InFormula
  use prelude.Int
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate in_formula [#"../CreuSAT/src/logic/logic_clause.rs" 114 4 114 47] (self : CreuSat_Clause_Clause_Type.t_clause) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 115 8 118 9] exists i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) /\ Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) i = self
  val in_formula [#"../CreuSAT/src/logic/logic_clause.rs" 114 4 114 47] (self : CreuSat_Clause_Clause_Type.t_clause) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = in_formula self f }
    
end
module CreuSat_Logic_LogicLit_Impl1_IsOpp_Stub
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate is_opp [#"../CreuSAT/src/logic/logic_lit.rs" 47 4 47 39] (self : CreuSat_Lit_Lit_Type.t_lit) (o : CreuSat_Lit_Lit_Type.t_lit)
    
end
module CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate is_opp [#"../CreuSAT/src/logic/logic_lit.rs" 47 4 47 39] (self : CreuSat_Lit_Lit_Type.t_lit) (o : CreuSat_Lit_Lit_Type.t_lit)
    
end
module CreuSat_Logic_LogicLit_Impl1_IsOpp
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  predicate is_opp [#"../CreuSAT/src/logic/logic_lit.rs" 47 4 47 39] (self : CreuSat_Lit_Lit_Type.t_lit) (o : CreuSat_Lit_Lit_Type.t_lit)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 49 12 49 102] IndexLogic0.index_logic self = IndexLogic0.index_logic o /\ IsPositiveLogic0.is_positive_logic self <> IsPositiveLogic0.is_positive_logic o
  val is_opp [#"../CreuSAT/src/logic/logic_lit.rs" 47 4 47 39] (self : CreuSat_Lit_Lit_Type.t_lit) (o : CreuSat_Lit_Lit_Type.t_lit) : bool
    ensures { result = is_opp self o }
    
end
module CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept_Stub
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate same_idx_same_polarity_except [#"../CreuSAT/src/logic/logic_clause.rs" 92 4 92 85] (self : CreuSat_Clause_Clause_Type.t_clause) (other : CreuSat_Clause_Clause_Type.t_clause) (exception' : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept_Interface
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate same_idx_same_polarity_except [#"../CreuSAT/src/logic/logic_clause.rs" 92 4 92 85] (self : CreuSat_Clause_Clause_Type.t_clause) (other : CreuSat_Clause_Clause_Type.t_clause) (exception' : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate same_idx_same_polarity_except [#"../CreuSAT/src/logic/logic_clause.rs" 92 4 92 85] (self : CreuSat_Clause_Clause_Type.t_clause) (other : CreuSat_Clause_Clause_Type.t_clause) (exception' : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 93 8 98 9] forall j : int . forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model self) /\ 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model other) -> IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model self) i) <> exception' /\ IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model self) i) = IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model other) j) -> IsPositiveLogic0.is_positive_logic (Seq.get (ShallowModel0.shallow_model self) i) = IsPositiveLogic0.is_positive_logic (Seq.get (ShallowModel0.shallow_model other) j)
  val same_idx_same_polarity_except [#"../CreuSAT/src/logic/logic_clause.rs" 92 4 92 85] (self : CreuSat_Clause_Clause_Type.t_clause) (other : CreuSat_Clause_Clause_Type.t_clause) (exception' : int) : bool
    ensures { result = same_idx_same_polarity_except self other exception' }
    
end
module CreuSat_Logic_LogicUtil_ElemsLessThan_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate elems_less_than [#"../CreuSAT/src/logic/logic_util.rs" 50 0 50 53] (v : Seq.seq usize) (n : int)
end
module CreuSat_Logic_LogicUtil_ElemsLessThan_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate elems_less_than [#"../CreuSAT/src/logic/logic_util.rs" 50 0 50 53] (v : Seq.seq usize) (n : int)
end
module CreuSat_Logic_LogicUtil_ElemsLessThan
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate elems_less_than [#"../CreuSAT/src/logic/logic_util.rs" 50 0 50 53] (v : Seq.seq usize) (n : int) =
    [#"../CreuSAT/src/logic/logic_util.rs" 51 4 51 68] forall i : int . 0 <= i /\ i < Seq.length v -> UIntSize.to_int (Seq.get v i) < n
  val elems_less_than [#"../CreuSAT/src/logic/logic_util.rs" 50 0 50 53] (v : Seq.seq usize) (n : int) : bool
    ensures { result = elems_less_than v n }
    
end
module CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen_Stub
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate clause_is_seen [#"../CreuSAT/src/logic/logic_clause.rs" 198 4 198 56] (self : CreuSat_Clause_Clause_Type.t_clause) (seen : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
    
end
module CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen_Interface
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate clause_is_seen [#"../CreuSAT/src/logic/logic_clause.rs" 198 4 198 56] (self : CreuSat_Clause_Clause_Type.t_clause) (seen : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
    
end
module CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicLit_IdxInLogic_Stub as IdxInLogic0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = bool,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  predicate clause_is_seen [#"../CreuSAT/src/logic/logic_clause.rs" 198 4 198 56] (self : CreuSat_Clause_Clause_Type.t_clause) (seen : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 199 8 202 9] forall idx : int . 0 <= idx /\ idx < Seq.length (ShallowModel0.shallow_model seen) -> Seq.get (ShallowModel0.shallow_model seen) idx = IdxInLogic0.idx_in_logic idx (ShallowModel1.shallow_model self)
  val clause_is_seen [#"../CreuSAT/src/logic/logic_clause.rs" 198 4 198 56] (self : CreuSat_Clause_Clause_Type.t_clause) (seen : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = clause_is_seen self seen }
    
end
module CreuSat_Logic_LogicClause_Impl2_UnsatInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_clause.rs" 145 4 145 59] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_clause.rs" 145 4 145 59] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl2_UnsatInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Stub as UnsatInner0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_clause.rs" 145 4 145 59] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 146 8 149 9] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model self) -> UnsatInner0.unsat_inner (Seq.get (ShallowModel0.shallow_model self) i) a
  val unsat_inner [#"../CreuSAT/src/logic/logic_clause.rs" 145 4 145 59] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) : bool
    ensures { result = unsat_inner self a }
    
end
module CreuSat_Logic_LogicClause_Impl2_Unsat_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate unsat [#"../CreuSAT/src/logic/logic_clause.rs" 153 4 153 46] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicClause_Impl2_Unsat_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate unsat [#"../CreuSAT/src/logic/logic_clause.rs" 153 4 153 46] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicClause_Impl2_Unsat
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Stub as UnsatInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate unsat [#"../CreuSAT/src/logic/logic_clause.rs" 153 4 153 46] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 154 20 154 40] UnsatInner0.unsat_inner self (ShallowModel0.shallow_model a)
  val unsat [#"../CreuSAT/src/logic/logic_clause.rs" 153 4 153 46] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = unsat self a }
    
end
module CreusotContracts_Snapshot_Impl1_ShallowModel_Stub
  type t
  use prelude.Snapshot
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : Snapshot.Snapshot_ty t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Snapshot_Impl1_ShallowModel_Interface
  type t
  use prelude.Snapshot
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : Snapshot.Snapshot_ty t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Snapshot_Impl1_ShallowModel
  type t
  use prelude.Snapshot
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : Snapshot.Snapshot_ty t) : ShallowModelTy0.shallowModelTy =
    [#"../CreuSAT/src/unit_prop.rs" 211 51 211 79] ShallowModel0.shallow_model (Snapshot.inner self)
  val shallow_model (self : Snapshot.Snapshot_ty t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOf_Stub
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate resolvent_of [#"../CreuSAT/src/logic/logic_clause.rs" 102 4 102 76] (self : CreuSat_Clause_Clause_Type.t_clause) (c : CreuSat_Clause_Clause_Type.t_clause) (c2 : CreuSat_Clause_Clause_Type.t_clause) (k : int) (m : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate resolvent_of [#"../CreuSAT/src/logic/logic_clause.rs" 102 4 102 76] (self : CreuSat_Clause_Clause_Type.t_clause) (c : CreuSat_Clause_Clause_Type.t_clause) (c2 : CreuSat_Clause_Clause_Type.t_clause) (k : int) (m : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOf
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Stub as IsOpp0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Stub as LitIn0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate resolvent_of [#"../CreuSAT/src/logic/logic_clause.rs" 102 4 102 76] (self : CreuSat_Clause_Clause_Type.t_clause) (c : CreuSat_Clause_Clause_Type.t_clause) (c2 : CreuSat_Clause_Clause_Type.t_clause) (k : int) (m : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 103 8 110 9] (forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model c) /\ i <> m -> LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model c) i) self) /\ (forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model c2) /\ i <> k -> LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model c2) i) self) /\ (forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model self) -> LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model self) i) c \/ LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model self) i) c2) /\ not LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model c) m) self /\ not LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model c2) k) self /\ IsOpp0.is_opp (Seq.get (ShallowModel0.shallow_model c2) k) (Seq.get (ShallowModel0.shallow_model c) m)
  val resolvent_of [#"../CreuSAT/src/logic/logic_clause.rs" 102 4 102 76] (self : CreuSat_Clause_Clause_Type.t_clause) (c : CreuSat_Clause_Clause_Type.t_clause) (c2 : CreuSat_Clause_Clause_Type.t_clause) (k : int) (m : int) : bool
    ensures { result = resolvent_of self c c2 k m }
    
end
module CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate in_formula_inner [#"../CreuSAT/src/logic/logic_clause.rs" 122 4 122 64] (self : CreuSat_Clause_Clause_Type.t_clause) (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
end
module CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate in_formula_inner [#"../CreuSAT/src/logic/logic_clause.rs" 122 4 122 64] (self : CreuSat_Clause_Clause_Type.t_clause) (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
end
module CreuSat_Logic_LogicClause_Impl2_InFormulaInner
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate in_formula_inner [#"../CreuSAT/src/logic/logic_clause.rs" 122 4 122 64] (self : CreuSat_Clause_Clause_Type.t_clause) (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 123 8 125 9] exists i : int . 0 <= i /\ i < Seq.length (let (a, _) = f in a) /\ Seq.get (let (a, _) = f in a) i = self
  val in_formula_inner [#"../CreuSAT/src/logic/logic_clause.rs" 122 4 122 64] (self : CreuSat_Clause_Clause_Type.t_clause) (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) : bool
    ensures { result = in_formula_inner self f }
    
end
module CreuSat_Logic_LogicClause_Impl2_Equals_Stub
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate equals [#"../CreuSAT/src/logic/logic_clause.rs" 206 4 206 42] (self : CreuSat_Clause_Clause_Type.t_clause) (o : CreuSat_Clause_Clause_Type.t_clause)
    
end
module CreuSat_Logic_LogicClause_Impl2_Equals_Interface
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate equals [#"../CreuSAT/src/logic/logic_clause.rs" 206 4 206 42] (self : CreuSat_Clause_Clause_Type.t_clause) (o : CreuSat_Clause_Clause_Type.t_clause)
    
end
module CreuSat_Logic_LogicClause_Impl2_Equals
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate equals [#"../CreuSAT/src/logic/logic_clause.rs" 206 4 206 42] (self : CreuSat_Clause_Clause_Type.t_clause) (o : CreuSat_Clause_Clause_Type.t_clause)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 207 8 211 9] Seq.length (ShallowModel0.shallow_model self) = Seq.length (ShallowModel0.shallow_model o) /\ (forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) -> Seq.get (ShallowModel0.shallow_model self) j = Seq.get (ShallowModel0.shallow_model o) j)
  val equals [#"../CreuSAT/src/logic/logic_clause.rs" 206 4 206 42] (self : CreuSat_Clause_Clause_Type.t_clause) (o : CreuSat_Clause_Clause_Type.t_clause) : bool
    ensures { result = equals self o }
    
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Stub as Equals0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Stub as FormulaInvariant0
  function lemma_eq_formulas [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 17 0 17 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (f2 : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (c : CreuSat_Clause_Clause_Type.t_clause) : ()
    
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Stub as Equals0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Stub as FormulaInvariant0
  function lemma_eq_formulas [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 17 0 17 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (f2 : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (c : CreuSat_Clause_Clause_Type.t_clause) : ()
    
  axiom lemma_eq_formulas_spec : forall f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int), f2 : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int), c : CreuSat_Clause_Clause_Type.t_clause . ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 10 11 10 30] (let (a, _) = f2 in a) = Seq.snoc (let (a, _) = f in a) c) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 11 11 11 31] FormulaInvariant0.formula_invariant f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 14 10 14 35] ShallowModel0.shallow_model (Seq.get (let (a, _) = f2 in a) (Seq.length (let (a, _) = f2 in a) - 1)) = ShallowModel0.shallow_model c) && ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 13 0 13 77] forall i : int . 0 <= i /\ i < Seq.length (let (a, _) = f in a) -> Equals0.equals (Seq.get (let (a, _) = f in a) i) (Seq.get (let (a, _) = f2 in a) i)) && ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 12 10 12 37] Seq.length (let (a, _) = f in a) + 1 = Seq.length (let (a, _) = f2 in a))
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Stub as Equals0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Stub as FormulaInvariant0
  function lemma_eq_formulas [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 17 0 17 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (f2 : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (c : CreuSat_Clause_Clause_Type.t_clause) : ()
    
   =
    [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 9 0 9 8] ()
  val lemma_eq_formulas [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 17 0 17 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (f2 : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (c : CreuSat_Clause_Clause_Type.t_clause) : ()
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 10 11 10 30] (let (a, _) = f2 in a) = Seq.snoc (let (a, _) = f in a) c}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 11 11 11 31] FormulaInvariant0.formula_invariant f}
    ensures { result = lemma_eq_formulas f f2 c }
    
  axiom lemma_eq_formulas_spec : forall f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int), f2 : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int), c : CreuSat_Clause_Clause_Type.t_clause . ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 10 11 10 30] (let (a, _) = f2 in a) = Seq.snoc (let (a, _) = f in a) c) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 11 11 11 31] FormulaInvariant0.formula_invariant f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 14 10 14 35] ShallowModel0.shallow_model (Seq.get (let (a, _) = f2 in a) (Seq.length (let (a, _) = f2 in a) - 1)) = ShallowModel0.shallow_model c) && ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 13 0 13 77] forall i : int . 0 <= i /\ i < Seq.length (let (a, _) = f in a) -> Equals0.equals (Seq.get (let (a, _) = f in a) i) (Seq.get (let (a, _) = f2 in a) i)) && ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 12 10 12 37] Seq.length (let (a, _) = f in a) + 1 = Seq.length (let (a, _) = f2 in a))
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas_Impl
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_Equals as Equals0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  let rec Snapshot function lemma_eq_formulas [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 17 0 17 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (f2 : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (c : CreuSat_Clause_Clause_Type.t_clause) : ()
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 10 11 10 30] (let (a, _) = f2 in a) = Seq.snoc (let (a, _) = f in a) c}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 11 11 11 31] FormulaInvariant0.formula_invariant f}
    ensures { [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 12 10 12 37] Seq.length (let (a, _) = f in a) + 1 = Seq.length (let (a, _) = f2 in a) }
    ensures { [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 13 0 13 77] forall i : int . 0 <= i /\ i < Seq.length (let (a, _) = f in a) -> Equals0.equals (Seq.get (let (a, _) = f in a) i) (Seq.get (let (a, _) = f2 in a) i) }
    ensures { [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 14 10 14 35] ShallowModel0.shallow_model (Seq.get (let (a, _) = f2 in a) (Seq.length (let (a, _) = f2 in a) - 1)) = ShallowModel0.shallow_model c }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 9 0 9 8] ()
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaResolventOfEquisatExtensionIsEquisat_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Stub as ResolventOf0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Stub as InFormulaInner0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Stub as FormulaInvariant0
  function lemma_resolvent_of_equisat_extension_is_equisat [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 26 0 28 1] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (c : CreuSat_Clause_Clause_Type.t_clause) (c2 : CreuSat_Clause_Clause_Type.t_clause) (c3 : CreuSat_Clause_Clause_Type.t_clause) (k : int) (m : int) : ()
    
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaResolventOfEquisatExtensionIsEquisat_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Stub as ResolventOf0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Stub as InFormulaInner0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Stub as FormulaInvariant0
  function lemma_resolvent_of_equisat_extension_is_equisat [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 26 0 28 1] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (c : CreuSat_Clause_Clause_Type.t_clause) (c2 : CreuSat_Clause_Clause_Type.t_clause) (c3 : CreuSat_Clause_Clause_Type.t_clause) (k : int) (m : int) : ()
    
  axiom lemma_resolvent_of_equisat_extension_is_equisat_spec : forall f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int), c : CreuSat_Clause_Clause_Type.t_clause, c2 : CreuSat_Clause_Clause_Type.t_clause, c3 : CreuSat_Clause_Clause_Type.t_clause, k : int, m : int . ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 21 11 21 31] FormulaInvariant0.formula_invariant f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 22 11 22 40] EquisatExtensionInner0.equisat_extension_inner c f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 23 11 23 33] InFormulaInner0.in_formula_inner c2 f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 24 11 24 39] ResolventOf0.resolvent_of c3 c c2 k m) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 25 10 25 40] EquisatExtensionInner0.equisat_extension_inner c3 f)
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaResolventOfEquisatExtensionIsEquisat
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Stub as Equals0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Stub as FormulaInvariant0
  clone CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas_Stub as LemmaEqFormulas0 with
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    predicate Equals0.equals = Equals0.equals,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    axiom .
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Stub as ResolventOf0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Stub as InFormulaInner0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  function lemma_resolvent_of_equisat_extension_is_equisat [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 26 0 28 1] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (c : CreuSat_Clause_Clause_Type.t_clause) (c2 : CreuSat_Clause_Clause_Type.t_clause) (c3 : CreuSat_Clause_Clause_Type.t_clause) (k : int) (m : int) : ()
    
   =
    [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 29 4 29 49] let _ = LemmaEqFormulas0.lemma_eq_formulas f (Seq.snoc (let (a, _) = f in a) c3, let (_, a) = f in a) c3 in ()
  val lemma_resolvent_of_equisat_extension_is_equisat [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 26 0 28 1] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (c : CreuSat_Clause_Clause_Type.t_clause) (c2 : CreuSat_Clause_Clause_Type.t_clause) (c3 : CreuSat_Clause_Clause_Type.t_clause) (k : int) (m : int) : ()
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 21 11 21 31] FormulaInvariant0.formula_invariant f}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 22 11 22 40] EquisatExtensionInner0.equisat_extension_inner c f}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 23 11 23 33] InFormulaInner0.in_formula_inner c2 f}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 24 11 24 39] ResolventOf0.resolvent_of c3 c c2 k m}
    ensures { result = lemma_resolvent_of_equisat_extension_is_equisat f c c2 c3 k m }
    
  axiom lemma_resolvent_of_equisat_extension_is_equisat_spec : forall f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int), c : CreuSat_Clause_Clause_Type.t_clause, c2 : CreuSat_Clause_Clause_Type.t_clause, c3 : CreuSat_Clause_Clause_Type.t_clause, k : int, m : int . ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 21 11 21 31] FormulaInvariant0.formula_invariant f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 22 11 22 40] EquisatExtensionInner0.equisat_extension_inner c f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 23 11 23 33] InFormulaInner0.in_formula_inner c2 f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 24 11 24 39] ResolventOf0.resolvent_of c3 c c2 k m) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 25 10 25 40] EquisatExtensionInner0.equisat_extension_inner c3 f)
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaResolventOfEquisatExtensionIsEquisat_Impl
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Equals as Equals0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas as LemmaEqFormulas0 with
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    predicate Equals0.equals = Equals0.equals,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    axiom .
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf as ResolventOf0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIn0.lit_in = LitIn0.lit_in,
    predicate IsOpp0.is_opp = IsOpp0.is_opp
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner as InFormulaInner0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  let rec Snapshot function lemma_resolvent_of_equisat_extension_is_equisat [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 26 0 28 1] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (c : CreuSat_Clause_Clause_Type.t_clause) (c2 : CreuSat_Clause_Clause_Type.t_clause) (c3 : CreuSat_Clause_Clause_Type.t_clause) (k : int) (m : int) : ()
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 21 11 21 31] FormulaInvariant0.formula_invariant f}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 22 11 22 40] EquisatExtensionInner0.equisat_extension_inner c f}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 23 11 23 33] InFormulaInner0.in_formula_inner c2 f}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 24 11 24 39] ResolventOf0.resolvent_of c3 c c2 k m}
    ensures { [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 25 10 25 40] EquisatExtensionInner0.equisat_extension_inner c3 f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 29 4 29 49] let _ = LemmaEqFormulas0.lemma_eq_formulas f (Seq.snoc (let (a, _) = f in a) c3, let (_, a) = f in a) c3 in ()
end
module Alloc_Vec_Impl1_Push_Interface
  type t
  type a
  use prelude.Borrow
  use seq.Seq
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec t a,
    type ShallowModelTy0.shallowModelTy = Seq.seq t
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = a,
    val Max0.mAX' = Max0.mAX',
    axiom .
  val push (self : borrowed (Alloc_Vec_Vec_Type.t_vec t a)) (value : t) : ()
    ensures { [#"../CreuSAT/src/unit_prop.rs" 87 1 87 26] ShallowModel0.shallow_model ( ^ self) = Seq.snoc (ShallowModel1.shallow_model self) value }
    
end
module CreuSat_Trail_Impl0_DecisionLevel_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Borrow
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  val decision_level [#"../CreuSAT/src/trail.rs" 35 4 35 41] (self : CreuSat_Trail_Trail_Type.t_trail) : usize
    ensures { [#"../CreuSAT/src/trail.rs" 34 14 34 46] UIntSize.to_int result = Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions self)) }
    
end
module CreuSat_Trail_Impl0_DecisionLevel
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use seq.Seq
  use seq.Seq
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  let rec cfg decision_level [#"../CreuSAT/src/trail.rs" 35 4 35 41] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Trail_Trail_Type.t_trail) : usize
    ensures { [#"../CreuSAT/src/trail.rs" 34 14 34 46] UIntSize.to_int result = Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions self)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Trail_Trail_Type.t_trail;
  var _3 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Trail_Trail_Type.trail_decisions self_1;
    _0 <- ([#"../CreuSAT/src/trail.rs" 36 8 36 28] Len0.len _3);
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module CreusotContracts_Std1_Num_Impl15_ShallowModel_Stub
  use prelude.Int
  use prelude.UIntSize
  function shallow_model (self : usize) : int
end
module CreusotContracts_Std1_Num_Impl15_ShallowModel_Interface
  use prelude.Int
  use prelude.UIntSize
  function shallow_model (self : usize) : int
end
module CreusotContracts_Std1_Num_Impl15_ShallowModel
  use prelude.Int
  use prelude.UIntSize
  function shallow_model (self : usize) : int =
    UIntSize.to_int self
  val shallow_model (self : usize) : int
    ensures { result = shallow_model self }
    
end
module CreuSat_ConflictAnalysis_Resolve_Interface
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use prelude.Borrow
  clone Core_Num_Impl11_Max_Stub as Max0
  use seq.Seq
  use prelude.Int
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel9 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel8 with
    type t = bool,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel7
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Stub as Unsat0
  clone CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen_Stub as ClauseIsSeen0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel6 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
  clone CreuSat_Logic_LogicUtil_ElemsLessThan_Stub as ElemsLessThan0
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel5 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel3 with
    type t = usize,
    type ShallowModelTy0.shallowModelTy = int
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Stub as SatInner0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Stub as UnsatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel2
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept_Stub as SameIdxSamePolarityExcept0
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Stub as IsOpp0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  clone CreuSat_Logic_LogicClause_Impl2_InFormula_Stub as InFormula0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val resolve [#"../CreuSAT/src/conflict_analysis.rs" 53 0 56 1] (_f : CreuSat_Formula_Formula_Type.t_formula) (c : borrowed (CreuSat_Clause_Clause_Type.t_clause)) (o : CreuSat_Clause_Clause_Type.t_clause) (idx : usize) (c_idx : usize) (trail : CreuSat_Trail_Trail_Type.t_trail) (seen : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))) (path_c : borrowed usize) (to_bump : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global))) : ()
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 30 11 30 25] Invariant0.invariant' _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 31 11 31 31] Invariant1.invariant' trail _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 32 11 32 30] UIntSize.to_int idx < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 33 11 33 28] InFormula0.in_formula o _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 34 0 37 2] UIntSize.to_int c_idx < Seq.length (ShallowModel0.shallow_model c) /\ IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model c) (UIntSize.to_int c_idx)) = UIntSize.to_int idx /\ IsOpp0.is_opp (Seq.get (ShallowModel1.shallow_model o) 0) (Seq.get (ShallowModel0.shallow_model c) (UIntSize.to_int c_idx))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 38 11 38 52] SameIdxSamePolarityExcept0.same_idx_same_polarity_except ( * c) o (UIntSize.to_int idx)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 40 0 40 92] forall j : int . 1 <= j /\ j < Seq.length (ShallowModel1.shallow_model o) -> UnsatInner0.unsat_inner (Seq.get (ShallowModel1.shallow_model o) j) (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 41 0 41 48] SatInner0.sat_inner (Seq.get (ShallowModel1.shallow_model o) 0) (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 42 11 42 45] ShallowModel3.shallow_model path_c > 0 /\ ShallowModel3.shallow_model path_c <= Seq.length (ShallowModel0.shallow_model c)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 45 11 45 38] Seq.length (ShallowModel4.shallow_model seen) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 47 11 47 50] ElemsLessThan0.elems_less_than (ShallowModel5.shallow_model to_bump) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 49 0 49 49] EquisatExtensionInner0.equisat_extension_inner ( * c) (ShallowModel6.shallow_model _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 50 0 50 46] ClauseIsSeen0.clause_is_seen ( * c) ( * seen)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 51 0 51 46] Unsat0.unsat ( * c) (CreuSat_Trail_Trail_Type.trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 52 0 52 45] Invariant2.invariant' ( * c) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 43 10 43 35] UIntSize.to_int ( ^ path_c) <= Seq.length (ShallowModel7.shallow_model ( ^ c)) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 46 10 46 40] Seq.length (ShallowModel8.shallow_model ( ^ seen)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 48 10 48 52] ElemsLessThan0.elems_less_than (ShallowModel9.shallow_model ( ^ to_bump)) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 49 0 49 49] EquisatExtensionInner0.equisat_extension_inner ( ^ c) (ShallowModel6.shallow_model _f) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 50 0 50 46] ClauseIsSeen0.clause_is_seen ( ^ c) ( ^ seen) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 51 0 51 46] Unsat0.unsat ( ^ c) (CreuSat_Trail_Trail_Type.trail_assignments trail) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 52 0 52 45] Invariant2.invariant' ( ^ c) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    
end
module CreuSat_ConflictAnalysis_Resolve
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel16 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel7 with
    function ShallowModel0.shallow_model = ShallowModel16.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel14 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel13 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_Equals as Equals0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas as LemmaEqFormulas0 with
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    predicate Equals0.equals = Equals0.equals,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    axiom .
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner as InFormulaInner0
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = usize
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel21 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel20 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel16.shallow_model
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = bool,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel19 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel18 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel16.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel17 with
    type t = borrowed (CreuSat_Clause_Clause_Type.t_clause),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = bool
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = bool
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = bool
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_IdxInLogic as IdxInLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreusotContracts_Std1_Num_Impl15_ShallowModel as ShallowModel15
  use prelude.Int
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel11 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf as ResolventOf0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate LitIn0.lit_in = LitIn0.lit_in,
    predicate IsOpp0.is_opp = IsOpp0.is_opp
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicConflictAnalysis_LemmaResolventOfEquisatExtensionIsEquisat as LemmaResolventOfEquisatExtensionIsEquisat0 with
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
    predicate InFormulaInner0.in_formula_inner = InFormulaInner0.in_formula_inner,
    predicate ResolventOf0.resolvent_of = ResolventOf0.resolvent_of,
    function LemmaEqFormulas0.lemma_eq_formulas = LemmaEqFormulas0.lemma_eq_formulas,
    predicate Equals0.equals = Equals0.equals,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    axiom .
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve4 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve3 with
    type t = usize
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index2 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel21.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    type Output0.output = usize
  clone Alloc_Vec_Impl1_Push_Interface as Push1 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel16.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel20.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel5 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_ConflictAnalysis_IdxIn_Interface as IdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel18.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel19.shallow_model,
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate IdxInLogic0.idx_in_logic = IdxInLogic0.idx_in_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Lit_Impl2_Index_Interface as Index1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel1 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Snapshot_Impl1_ShallowModel as ShallowModel10 with
    type t = borrowed (CreuSat_Clause_Clause_Type.t_clause),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel17.shallow_model
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = bool
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = bool,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = bool,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Clause_Impl2_RemoveFromClause_Interface as RemoveFromClause0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate LitIn0.lit_in = LitIn0.lit_in
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen as ClauseIsSeen0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate IdxInLogic0.idx_in_logic = IdxInLogic0.idx_in_logic,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel6 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model
  clone CreuSat_Logic_LogicUtil_ElemsLessThan as ElemsLessThan0
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel3 with
    type t = usize,
    type ShallowModelTy0.shallowModelTy = int,
    function ShallowModel0.shallow_model = ShallowModel15.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept as SameIdxSamePolarityExcept0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicClause_Impl2_InFormula as InFormula0 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg resolve [#"../CreuSAT/src/conflict_analysis.rs" 53 0 56 1] [@cfg:stackify] [@cfg:subregion_analysis] (_f : CreuSat_Formula_Formula_Type.t_formula) (c : borrowed (CreuSat_Clause_Clause_Type.t_clause)) (o : CreuSat_Clause_Clause_Type.t_clause) (idx : usize) (c_idx : usize) (trail : CreuSat_Trail_Trail_Type.t_trail) (seen : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global))) (path_c : borrowed usize) (to_bump : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global))) : ()
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 30 11 30 25] Invariant0.invariant' _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 31 11 31 31] Invariant1.invariant' trail _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 32 11 32 30] UIntSize.to_int idx < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 33 11 33 28] InFormula0.in_formula o _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 34 0 37 2] UIntSize.to_int c_idx < Seq.length (ShallowModel0.shallow_model c) /\ IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model c) (UIntSize.to_int c_idx)) = UIntSize.to_int idx /\ IsOpp0.is_opp (Seq.get (ShallowModel1.shallow_model o) 0) (Seq.get (ShallowModel0.shallow_model c) (UIntSize.to_int c_idx))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 38 11 38 52] SameIdxSamePolarityExcept0.same_idx_same_polarity_except ( * c) o (UIntSize.to_int idx)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 40 0 40 92] forall j : int . 1 <= j /\ j < Seq.length (ShallowModel1.shallow_model o) -> UnsatInner0.unsat_inner (Seq.get (ShallowModel1.shallow_model o) j) (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 41 0 41 48] SatInner0.sat_inner (Seq.get (ShallowModel1.shallow_model o) 0) (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 42 11 42 45] ShallowModel3.shallow_model path_c > 0 /\ ShallowModel3.shallow_model path_c <= Seq.length (ShallowModel0.shallow_model c)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 45 11 45 38] Seq.length (ShallowModel4.shallow_model seen) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 47 11 47 50] ElemsLessThan0.elems_less_than (ShallowModel5.shallow_model to_bump) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 49 0 49 49] EquisatExtensionInner0.equisat_extension_inner ( * c) (ShallowModel6.shallow_model _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 50 0 50 46] ClauseIsSeen0.clause_is_seen ( * c) ( * seen)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 51 0 51 46] Unsat0.unsat ( * c) (CreuSat_Trail_Trail_Type.trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 52 0 52 45] Invariant2.invariant' ( * c) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 43 10 43 35] UIntSize.to_int ( ^ path_c) <= Seq.length (ShallowModel7.shallow_model ( ^ c)) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 46 10 46 40] Seq.length (ShallowModel8.shallow_model ( ^ seen)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 48 10 48 52] ElemsLessThan0.elems_less_than (ShallowModel9.shallow_model ( ^ to_bump)) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 49 0 49 49] EquisatExtensionInner0.equisat_extension_inner ( ^ c) (ShallowModel6.shallow_model _f) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 50 0 50 46] ClauseIsSeen0.clause_is_seen ( ^ c) ( ^ seen) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 51 0 51 46] Unsat0.unsat ( ^ c) (CreuSat_Trail_Trail_Type.trail_assignments trail) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 52 0 52 45] Invariant2.invariant' ( ^ c) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _f_1 : CreuSat_Formula_Formula_Type.t_formula;
  var c_2 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var o_3 : CreuSat_Clause_Clause_Type.t_clause;
  var idx_4 : usize;
  var c_idx_5 : usize;
  var trail_6 : CreuSat_Trail_Trail_Type.t_trail;
  var seen_7 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  var path_c_8 : borrowed usize;
  var to_bump_9 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var old_c_32 : Snapshot.Snapshot_ty (borrowed (CreuSat_Clause_Clause_Type.t_clause));
  var _34 : ();
  var old_seen_35 : Snapshot.Snapshot_ty (borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)));
  var _37 : ();
  var old_path_c_38 : Snapshot.Snapshot_ty (borrowed usize);
  var _40 : ();
  var old_to_bump_41 : Snapshot.Snapshot_ty (borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)));
  var _43 : ();
  var _44 : ();
  var _46 : ();
  var _47 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _48 : usize;
  var _49 : CreuSat_Formula_Formula_Type.t_formula;
  var _50 : borrowed bool;
  var _51 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  var _52 : usize;
  var _53 : ();
  var _55 : ();
  var old_c2_57 : Snapshot.Snapshot_ty (borrowed (CreuSat_Clause_Clause_Type.t_clause));
  var _59 : ();
  var _60 : ();
  var _62 : ();
  var _64 : ();
  var i_66 : usize;
  var _67 : ();
  var _79 : ();
  var _80 : bool;
  var _81 : usize;
  var _82 : usize;
  var _83 : CreuSat_Clause_Clause_Type.t_clause;
  var old_c3_84 : Snapshot.Snapshot_ty (borrowed (CreuSat_Clause_Clause_Type.t_clause));
  var _86 : ();
  var _87 : ();
  var _89 : ();
  var _90 : bool;
  var _91 : bool;
  var _92 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global);
  var _93 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global);
  var _94 : usize;
  var _95 : CreuSat_Lit_Lit_Type.t_lit;
  var _96 : CreuSat_Lit_Lit_Type.t_lit;
  var _97 : CreuSat_Clause_Clause_Type.t_clause;
  var _98 : usize;
  var _99 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _100 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  var _101 : borrowed bool;
  var _102 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  var _103 : usize;
  var _104 : CreuSat_Lit_Lit_Type.t_lit;
  var _105 : CreuSat_Lit_Lit_Type.t_lit;
  var _106 : CreuSat_Clause_Clause_Type.t_clause;
  var _107 : usize;
  var _108 : ();
  var _109 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _110 : usize;
  var _111 : CreuSat_Lit_Lit_Type.t_lit;
  var _112 : CreuSat_Lit_Lit_Type.t_lit;
  var _113 : CreuSat_Clause_Clause_Type.t_clause;
  var _114 : usize;
  var _115 : ();
  var _116 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global));
  var _117 : CreuSat_Lit_Lit_Type.t_lit;
  var _118 : CreuSat_Lit_Lit_Type.t_lit;
  var _119 : CreuSat_Clause_Clause_Type.t_clause;
  var _120 : usize;
  var _121 : ();
  var _122 : bool;
  var _123 : usize;
  var _124 : usize;
  var _125 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _126 : usize;
  var _127 : CreuSat_Lit_Lit_Type.t_lit;
  var _128 : CreuSat_Lit_Lit_Type.t_lit;
  var _129 : CreuSat_Clause_Clause_Type.t_clause;
  var _130 : usize;
  var _131 : usize;
  var _132 : CreuSat_Trail_Trail_Type.t_trail;
  var _133 : ();
  var _135 : ();
  var _137 : ();
  var _139 : ();
  var _141 : ();
  var _142 : ();
  var _143 : ();
  var _144 : ();
  var _146 : ();
  {
    _f_1 <- _f;
    c_2 <- c;
    o_3 <- o;
    idx_4 <- idx;
    c_idx_5 <- c_idx;
    trail_6 <- trail;
    seen_7 <- seen;
    path_c_8 <- path_c;
    to_bump_9 <- to_bump;
    goto BB0
  }
  BB0 {
    _34 <- ();
    old_c_32 <- ([#"../CreuSAT/src/conflict_analysis.rs" 57 36 57 45] Snapshot.new c_2);
    goto BB1
  }
  BB1 {
    _37 <- ();
    old_seen_35 <- ([#"../CreuSAT/src/conflict_analysis.rs" 58 42 58 54] Snapshot.new seen_7);
    goto BB2
  }
  BB2 {
    _40 <- ();
    old_path_c_38 <- ([#"../CreuSAT/src/conflict_analysis.rs" 59 40 59 54] Snapshot.new path_c_8);
    goto BB3
  }
  BB3 {
    _43 <- ();
    old_to_bump_41 <- ([#"../CreuSAT/src/conflict_analysis.rs" 60 46 60 61] Snapshot.new to_bump_9);
    goto BB4
  }
  BB4 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 62 18 62 41] ClauseIsSeen0.clause_is_seen ( * c_2) ( * seen_7) };
    _44 <- ();
    _47 <- borrow_mut ( * c_2);
    c_2 <- { c_2 with current = ( ^ _47) };
    _48 <- c_idx_5;
    _49 <- _f_1;
    _46 <- ([#"../CreuSAT/src/conflict_analysis.rs" 64 4 64 35] RemoveFromClause0.remove_from_clause _47 _48 _49);
    goto BB5
  }
  BB5 {
    path_c_8 <- { path_c_8 with current = ([#"../CreuSAT/src/conflict_analysis.rs" 66 4 66 16]  * path_c_8 - ([#"../CreuSAT/src/conflict_analysis.rs" 66 15 66 16] (1 : usize))) };
    _51 <- borrow_mut ( * seen_7);
    seen_7 <- { seen_7 with current = ( ^ _51) };
    _52 <- idx_4;
    _50 <- ([#"../CreuSAT/src/conflict_analysis.rs" 67 4 67 13] IndexMut0.index_mut _51 _52);
    goto BB6
  }
  BB6 {
    _50 <- { _50 with current = ([#"../CreuSAT/src/conflict_analysis.rs" 67 16 67 21] false) };
    assume { Resolve0.resolve _50 };
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 69 18 69 44]  ^ seen_7 =  ^ Snapshot.inner old_seen_35 };
    _53 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 70 18 70 41] ClauseIsSeen0.clause_is_seen ( * c_2) ( * seen_7) };
    _55 <- ();
    _59 <- ();
    old_c2_57 <- ([#"../CreuSAT/src/conflict_analysis.rs" 71 37 71 46] Snapshot.new c_2);
    goto BB7
  }
  BB7 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 72 4 72 45] not LitIn0.lit_in (Seq.get (ShallowModel10.shallow_model old_c_32) (UIntSize.to_int c_idx_5)) ( * c_2) };
    _60 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 73 18 73 38]  ^ c_2 =  ^ Snapshot.inner old_c_32 };
    _62 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 74 4 75 48] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel10.shallow_model old_c_32) /\ j <> UIntSize.to_int c_idx_5 -> LitIn0.lit_in (Seq.get (ShallowModel10.shallow_model old_c_32) j) ( * c_2) };
    _64 <- ();
    i_66 <- ([#"../CreuSAT/src/conflict_analysis.rs" 78 23 78 24] (1 : usize));
    goto BB8
  }
  BB8 {
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 79 16 79 41] Invariant2.invariant' ( * c_2) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f_1)) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 80 16 80 42] Unsat0.unsat ( * c_2) (CreuSat_Trail_Trail_Type.trail_assignments trail_6) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 81 16 81 41] 1 <= UIntSize.to_int i_66 /\ UIntSize.to_int i_66 <= Seq.length (ShallowModel1.shallow_model o_3) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 79 4 79 43] not LitIn0.lit_in (Seq.get (ShallowModel10.shallow_model old_c_32) (UIntSize.to_int c_idx_5)) ( * c_2) /\ not LitIn0.lit_in (Seq.get (ShallowModel1.shallow_model o_3) 0) ( * c_2) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 79 4 79 43] forall j : int . 1 <= j /\ j < UIntSize.to_int i_66 -> LitIn0.lit_in (Seq.get (ShallowModel1.shallow_model o_3) j) ( * c_2) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 79 4 79 43] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel10.shallow_model old_c_32) /\ j <> UIntSize.to_int c_idx_5 -> LitIn0.lit_in (Seq.get (ShallowModel10.shallow_model old_c_32) j) ( * c_2) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 79 4 79 43] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model c_2) -> LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model c_2) j) ( * Snapshot.inner old_c_32) \/ LitIn0.lit_in (Seq.get (ShallowModel0.shallow_model c_2) j) o_3 };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 87 16 87 35] ShallowModel3.shallow_model path_c_8 <= Seq.length (ShallowModel0.shallow_model c_2) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 88 16 88 39] ClauseIsSeen0.clause_is_seen ( * c_2) ( * seen_7) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 89 16 89 43] Seq.length (ShallowModel4.shallow_model seen_7) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f_1) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 90 16 90 55] ElemsLessThan0.elems_less_than (ShallowModel5.shallow_model to_bump_9) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f_1)) };
    _81 <- i_66;
    _83 <- o_3;
    _82 <- ([#"../CreuSAT/src/conflict_analysis.rs" 91 14 91 21] Len0.len _83);
    goto BB9
  }
  BB9 {
    _80 <- ([#"../CreuSAT/src/conflict_analysis.rs" 91 10 91 21] _81 < _82);
    switch (_80)
      | False -> goto BB33
      | True -> goto BB10
      end
  }
  BB10 {
    _86 <- ();
    old_c3_84 <- ([#"../CreuSAT/src/conflict_analysis.rs" 92 41 92 50] Snapshot.new c_2);
    goto BB11
  }
  BB11 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 93 22 93 43]  ^ c_2 =  ^ Snapshot.inner old_c3_84 };
    _87 <- ();
    _93 <- CreuSat_Clause_Clause_Type.clause_lits ( * c_2);
    _92 <- _93;
    _97 <- o_3;
    _98 <- i_66;
    _96 <- ([#"../CreuSAT/src/conflict_analysis.rs" 95 28 95 32] Index0.index _97 _98);
    goto BB12
  }
  BB12 {
    _95 <- _96;
    _94 <- ([#"../CreuSAT/src/conflict_analysis.rs" 95 28 95 40] Index1.index _95);
    goto BB13
  }
  BB13 {
    _100 <- seen_7;
    _99 <-  * _100;
    _91 <- ([#"../CreuSAT/src/conflict_analysis.rs" 95 12 95 48] IdxIn0.idx_in _92 _94 _99);
    goto BB14
  }
  BB14 {
    _90 <- not _91;
    switch (_90)
      | False -> goto BB31
      | True -> goto BB15
      end
  }
  BB15 {
    _102 <- borrow_mut ( * seen_7);
    seen_7 <- { seen_7 with current = ( ^ _102) };
    _106 <- o_3;
    _107 <- i_66;
    _105 <- ([#"../CreuSAT/src/conflict_analysis.rs" 96 17 96 21] Index0.index _106 _107);
    goto BB16
  }
  BB16 {
    _104 <- _105;
    _103 <- ([#"../CreuSAT/src/conflict_analysis.rs" 96 17 96 29] Index1.index _104);
    goto BB17
  }
  BB17 {
    _101 <- ([#"../CreuSAT/src/conflict_analysis.rs" 96 12 96 30] IndexMut0.index_mut _102 _103);
    goto BB18
  }
  BB18 {
    _101 <- { _101 with current = ([#"../CreuSAT/src/conflict_analysis.rs" 96 33 96 37] true) };
    assume { Resolve0.resolve _101 };
    _109 <- borrow_mut ( * to_bump_9);
    to_bump_9 <- { to_bump_9 with current = ( ^ _109) };
    _113 <- o_3;
    _114 <- i_66;
    _112 <- ([#"../CreuSAT/src/conflict_analysis.rs" 97 25 97 29] Index0.index _113 _114);
    goto BB19
  }
  BB19 {
    _111 <- _112;
    _110 <- ([#"../CreuSAT/src/conflict_analysis.rs" 97 25 97 37] Index1.index _111);
    goto BB20
  }
  BB20 {
    _108 <- ([#"../CreuSAT/src/conflict_analysis.rs" 97 12 97 38] Push0.push _109 _110);
    goto BB21
  }
  BB21 {
    _116 <- borrow_mut (CreuSat_Clause_Clause_Type.clause_lits ( * c_2));
    c_2 <- { c_2 with current = (let CreuSat_Clause_Clause_Type.C_Clause a b c d =  * c_2 in CreuSat_Clause_Clause_Type.C_Clause a b c ( ^ _116)) };
    _119 <- o_3;
    _120 <- i_66;
    _118 <- ([#"../CreuSAT/src/conflict_analysis.rs" 98 24 98 28] Index0.index _119 _120);
    goto BB22
  }
  BB22 {
    _117 <- _118;
    _115 <- ([#"../CreuSAT/src/conflict_analysis.rs" 98 12 98 29] Push1.push _116 _117);
    goto BB23
  }
  BB23 {
    _125 <- CreuSat_Trail_Trail_Type.trail_lit_to_level trail_6;
    _129 <- o_3;
    _130 <- i_66;
    _128 <- ([#"../CreuSAT/src/conflict_analysis.rs" 99 34 99 38] Index0.index _129 _130);
    goto BB24
  }
  BB24 {
    _127 <- _128;
    _126 <- ([#"../CreuSAT/src/conflict_analysis.rs" 99 34 99 46] Index1.index _127);
    goto BB25
  }
  BB25 {
    _124 <- ([#"../CreuSAT/src/conflict_analysis.rs" 99 15 99 47] Index2.index _125 _126);
    goto BB26
  }
  BB26 {
    _123 <- _124;
    _132 <- trail_6;
    _131 <- ([#"../CreuSAT/src/conflict_analysis.rs" 99 51 99 73] DecisionLevel0.decision_level _132);
    goto BB27
  }
  BB27 {
    _122 <- ([#"../CreuSAT/src/conflict_analysis.rs" 99 15 99 73] _123 >= _131);
    switch (_122)
      | False -> goto BB29
      | True -> goto BB28
      end
  }
  BB28 {
    path_c_8 <- { path_c_8 with current = ([#"../CreuSAT/src/conflict_analysis.rs" 100 16 100 28]  * path_c_8 + ([#"../CreuSAT/src/conflict_analysis.rs" 100 27 100 28] (1 : usize))) };
    _121 <- ();
    goto BB30
  }
  BB29 {
    _121 <- ();
    goto BB30
  }
  BB30 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 102 26 102 52] ShallowModel0.shallow_model c_2 = Seq.snoc (ShallowModel10.shallow_model old_c3_84) (Seq.get (ShallowModel1.shallow_model o_3) (UIntSize.to_int i_66)) };
    _133 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 103 26 103 55] Seq.length (ShallowModel0.shallow_model c_2) = Seq.length (ShallowModel10.shallow_model old_c3_84) + 1 };
    _135 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 104 12 104 44] LitIn0.lit_in (Seq.get (ShallowModel1.shallow_model o_3) (UIntSize.to_int i_66)) ( * c_2) };
    _137 <- ();
    _89 <- ();
    goto BB32
  }
  BB31 {
    _89 <- ();
    goto BB32
  }
  BB32 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 107 8 108 34] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel10.shallow_model old_c3_84) -> Seq.get (ShallowModel10.shallow_model old_c3_84) j = Seq.get (ShallowModel0.shallow_model c_2) j };
    _139 <- ();
    i_66 <- ([#"../CreuSAT/src/conflict_analysis.rs" 109 8 109 14] i_66 + ([#"../CreuSAT/src/conflict_analysis.rs" 109 13 109 14] (1 : usize)));
    _79 <- ();
    goto BB8
  }
  BB33 {
    assume { Resolve1.resolve c_2 };
    assume { Resolve2.resolve seen_7 };
    assume { Resolve3.resolve path_c_8 };
    assume { Resolve4.resolve to_bump_9 };
    _67 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 111 18 111 63] ResolventOf0.resolvent_of ( * c_2) ( * Snapshot.inner old_c_32) o_3 0 (UIntSize.to_int c_idx_5) };
    _144 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 112 18 112 105] let _ = LemmaResolventOfEquisatExtensionIsEquisat0.lemma_resolvent_of_equisat_extension_is_equisat (ShallowModel6.shallow_model _f_1) ( * Snapshot.inner old_c_32) o_3 ( * c_2) (UIntSize.to_int c_idx_5) 0 in true };
    _146 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_ConflictAnalysis_ChooseLiteral_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use prelude.Int
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Stub as IsOpp0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel3 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  use Core_Option_Option_Type as Core_Option_Option_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = usize,
    type ShallowModelTy0.shallowModelTy = int
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Stub as Unsat0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant0
  val choose_literal [#"../CreuSAT/src/conflict_analysis.rs" 129 0 129 108] (c : CreuSat_Clause_Clause_Type.t_clause) (trail : CreuSat_Trail_Trail_Type.t_trail) (i : borrowed usize) (_f : CreuSat_Formula_Formula_Type.t_formula) (seen : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Core_Option_Option_Type.t_option usize
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 116 11 116 31] Invariant0.invariant' trail _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 117 11 117 37] Unsat0.unsat c (CreuSat_Trail_Trail_Type.trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 118 11 118 35] ShallowModel0.shallow_model i <= Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 119 11 119 40] Seq.length (ShallowModel2.shallow_model seen) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 120 10 128 1] match (result) with
      | Core_Option_Option_Type.C_Some r -> UIntSize.to_int r < Seq.length (ShallowModel3.shallow_model c) /\ IsOpp0.is_opp (Seq.get (ShallowModel3.shallow_model c) (UIntSize.to_int r)) (CreuSat_Trail_Step_Type.step_lit (Seq.get (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail)) (UIntSize.to_int ( ^ i)))) /\ IndexLogic0.index_logic (Seq.get (ShallowModel3.shallow_model c) (UIntSize.to_int r)) = IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit (Seq.get (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail)) (UIntSize.to_int ( ^ i)))) /\ UIntSize.to_int ( ^ i) < Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail))
      | Core_Option_Option_Type.C_None -> UIntSize.to_int ( ^ i) = 0
      end }
    
end
module CreuSat_ConflictAnalysis_ChooseLiteral
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Snapshot
  use seq.Seq
  use prelude.UInt8
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel11 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel8 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = bool
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = bool
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Trail_Step_Type.t_step
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Trail_Step_Type.t_step
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = bool,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Num_Impl15_ShallowModel as ShallowModel6
  use prelude.Int
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    predicate Invariant1.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = usize
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Clause_Impl0_Index_Interface as Index3 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index2 with
    type t = bool,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    type Output0.output = bool
  clone CreuSat_Lit_Impl2_Index_Interface as Index1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Trail_Step_Type.t_step
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = usize,
    type ShallowModelTy0.shallowModelTy = int,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel5.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  use Core_Option_Option_Type as Core_Option_Option_Type
  let rec cfg choose_literal [#"../CreuSAT/src/conflict_analysis.rs" 129 0 129 108] [@cfg:stackify] [@cfg:subregion_analysis] (c : CreuSat_Clause_Clause_Type.t_clause) (trail : CreuSat_Trail_Trail_Type.t_trail) (i : borrowed usize) (_f : CreuSat_Formula_Formula_Type.t_formula) (seen : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)) : Core_Option_Option_Type.t_option usize
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 116 11 116 31] Invariant0.invariant' trail _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 117 11 117 37] Unsat0.unsat c (CreuSat_Trail_Trail_Type.trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 118 11 118 35] ShallowModel0.shallow_model i <= Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 119 11 119 40] Seq.length (ShallowModel2.shallow_model seen) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 120 10 128 1] match (result) with
      | Core_Option_Option_Type.C_Some r -> UIntSize.to_int r < Seq.length (ShallowModel3.shallow_model c) /\ IsOpp0.is_opp (Seq.get (ShallowModel3.shallow_model c) (UIntSize.to_int r)) (CreuSat_Trail_Step_Type.step_lit (Seq.get (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail)) (UIntSize.to_int ( ^ i)))) /\ IndexLogic0.index_logic (Seq.get (ShallowModel3.shallow_model c) (UIntSize.to_int r)) = IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit (Seq.get (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail)) (UIntSize.to_int ( ^ i)))) /\ UIntSize.to_int ( ^ i) < Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail))
      | Core_Option_Option_Type.C_None -> UIntSize.to_int ( ^ i) = 0
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.t_option usize;
  var c_1 : CreuSat_Clause_Clause_Type.t_clause;
  var trail_2 : CreuSat_Trail_Trail_Type.t_trail;
  var i_3 : borrowed usize;
  var _f_4 : CreuSat_Formula_Formula_Type.t_formula;
  var seen_5 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var old_i_11 : Snapshot.Snapshot_ty (borrowed usize);
  var _13 : ();
  var _14 : ();
  var _16 : ();
  var _17 : bool;
  var _18 : usize;
  var _19 : bool;
  var _20 : bool;
  var _21 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _22 : usize;
  var _23 : CreuSat_Lit_Lit_Type.t_lit;
  var _24 : CreuSat_Trail_Step_Type.t_step;
  var _25 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _26 : usize;
  var k_27 : usize;
  var _30 : bool;
  var _31 : usize;
  var _32 : usize;
  var _33 : CreuSat_Clause_Clause_Type.t_clause;
  var _34 : ();
  var _35 : bool;
  var _36 : usize;
  var _37 : CreuSat_Lit_Lit_Type.t_lit;
  var _38 : CreuSat_Trail_Step_Type.t_step;
  var _39 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _40 : usize;
  var _41 : usize;
  var _42 : CreuSat_Lit_Lit_Type.t_lit;
  var _43 : CreuSat_Lit_Lit_Type.t_lit;
  var _44 : CreuSat_Clause_Clause_Type.t_clause;
  var _45 : usize;
  var _46 : ();
  var _47 : usize;
  var _48 : ();
  var _49 : ();
  var _50 : ();
  var _51 : ();
  var _52 : ();
  var _53 : ();
  {
    c_1 <- c;
    trail_2 <- trail;
    i_3 <- i;
    _f_4 <- _f;
    seen_5 <- seen;
    goto BB0
  }
  BB0 {
    _13 <- ();
    old_i_11 <- ([#"../CreuSAT/src/conflict_analysis.rs" 130 35 130 45] Snapshot.new i_3);
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 131 16 131 51] 0 <= ShallowModel0.shallow_model i_3 /\ ShallowModel0.shallow_model i_3 <= Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail_2)) };
    _18 <-  * i_3;
    _17 <- ([#"../CreuSAT/src/conflict_analysis.rs" 132 10 132 16] _18 > ([#"../CreuSAT/src/conflict_analysis.rs" 132 15 132 16] (0 : usize)));
    switch (_17)
      | False -> goto BB20
      | True -> goto BB3
      end
  }
  BB3 {
    i_3 <- { i_3 with current = ([#"../CreuSAT/src/conflict_analysis.rs" 133 8 133 15]  * i_3 - ([#"../CreuSAT/src/conflict_analysis.rs" 133 14 133 15] (1 : usize))) };
    _21 <- seen_5;
    _25 <- CreuSat_Trail_Trail_Type.trail_trail trail_2;
    _26 <-  * i_3;
    _24 <- ([#"../CreuSAT/src/conflict_analysis.rs" 134 16 134 31] Index0.index _25 _26);
    goto BB4
  }
  BB4 {
    _23 <- CreuSat_Trail_Step_Type.step_lit _24;
    _22 <- ([#"../CreuSAT/src/conflict_analysis.rs" 134 16 134 43] Index1.index _23);
    goto BB5
  }
  BB5 {
    _20 <- ([#"../CreuSAT/src/conflict_analysis.rs" 134 11 134 44] Index2.index _21 _22);
    goto BB6
  }
  BB6 {
    _19 <- _20;
    switch (_19)
      | False -> goto BB18
      | True -> goto BB7
      end
  }
  BB7 {
    k_27 <- ([#"../CreuSAT/src/conflict_analysis.rs" 135 31 135 32] (0 : usize));
    goto BB8
  }
  BB8 {
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 136 24 136 58] 0 <= ShallowModel0.shallow_model i_3 /\ ShallowModel0.shallow_model i_3 < Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail_2)) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 137 24 137 49] 0 <= UIntSize.to_int k_27 /\ UIntSize.to_int k_27 <= Seq.length (ShallowModel3.shallow_model c_1) };
    _31 <- k_27;
    _33 <- c_1;
    _32 <- ([#"../CreuSAT/src/conflict_analysis.rs" 138 22 138 29] Len0.len _33);
    goto BB9
  }
  BB9 {
    _30 <- ([#"../CreuSAT/src/conflict_analysis.rs" 138 18 138 29] _31 < _32);
    switch (_30)
      | False -> goto BB17
      | True -> goto BB10
      end
  }
  BB10 {
    _39 <- CreuSat_Trail_Trail_Type.trail_trail trail_2;
    _40 <-  * i_3;
    _38 <- ([#"../CreuSAT/src/conflict_analysis.rs" 139 19 139 34] Index0.index _39 _40);
    goto BB11
  }
  BB11 {
    _37 <- CreuSat_Trail_Step_Type.step_lit _38;
    _36 <- ([#"../CreuSAT/src/conflict_analysis.rs" 139 19 139 46] Index1.index _37);
    goto BB12
  }
  BB12 {
    _44 <- c_1;
    _45 <- k_27;
    _43 <- ([#"../CreuSAT/src/conflict_analysis.rs" 139 50 139 54] Index3.index _44 _45);
    goto BB13
  }
  BB13 {
    _42 <- _43;
    _41 <- ([#"../CreuSAT/src/conflict_analysis.rs" 139 50 139 62] Index1.index _42);
    goto BB14
  }
  BB14 {
    _35 <- ([#"../CreuSAT/src/conflict_analysis.rs" 139 19 139 62] _36 = _41);
    switch (_35)
      | False -> goto BB16
      | True -> goto BB15
      end
  }
  BB15 {
    assume { Resolve0.resolve i_3 };
    _47 <- k_27;
    _0 <- Core_Option_Option_Type.C_Some _47;
    goto BB21
  }
  BB16 {
    _34 <- ();
    k_27 <- ([#"../CreuSAT/src/conflict_analysis.rs" 142 16 142 22] k_27 + ([#"../CreuSAT/src/conflict_analysis.rs" 142 21 142 22] (1 : usize)));
    _16 <- ();
    goto BB8
  }
  BB17 {
    _16 <- ();
    goto BB19
  }
  BB18 {
    _16 <- ();
    goto BB19
  }
  BB19 {
    goto BB2
  }
  BB20 {
    assume { Resolve0.resolve i_3 };
    _14 <- ();
    _0 <- Core_Option_Option_Type.C_None;
    goto BB21
  }
  BB21 {
    return _0
  }
  
end
module CreuSat_Decision_Node_Type
  use prelude.Int
  use prelude.UIntSize
  type t_node  =
    | C_Node usize usize usize
    
  let function node_next (self : t_node) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Node a _ _ -> a
      end
  let function node_prev (self : t_node) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Node _ a _ -> a
      end
  let function node_ts (self : t_node) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Node _ _ a -> a
      end
end
module CreuSat_Decision_Decisions_Type
  use prelude.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_decisions  =
    | C_Decisions (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global)) usize usize usize
    
  let function decisions_linked_list (self : t_decisions) : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Decisions a _ _ _ -> a
      end
  let function decisions_search (self : t_decisions) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Decisions _ _ _ a -> a
      end
  let function decisions_start (self : t_decisions) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Decisions _ _ a _ -> a
      end
  let function decisions_timestamp (self : t_decisions) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Decisions _ a _ _ -> a
      end
end
module Core_Usize_Max_Stub
  use prelude.Int
  use prelude.UIntSize
  val constant mAX'  : usize
end
module Core_Usize_Max
  use prelude.Int
  use prelude.UIntSize
  let constant mAX'  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
end
module CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub
  use prelude.Int
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_decision.rs" 9 4 9 42] (self : CreuSat_Decision_Decisions_Type.t_decisions) (n : int)
    
end
module CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface
  use prelude.Int
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_decision.rs" 9 4 9 42] (self : CreuSat_Decision_Decisions_Type.t_decisions) (n : int)
    
end
module CreuSat_Logic_LogicDecision_Impl0_Invariant
  use prelude.Int
  use seq.Seq
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  clone Core_Usize_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_decision.rs" 9 4 9 42] (self : CreuSat_Decision_Decisions_Type.t_decisions) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_decision.rs" 10 8 17 9] Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list self)) = n /\ (UIntSize.to_int (CreuSat_Decision_Decisions_Type.decisions_search self) < Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list self)) \/ UIntSize.to_int (CreuSat_Decision_Decisions_Type.decisions_search self) = UIntSize.to_int Max0.mAX') /\ UIntSize.to_int (CreuSat_Decision_Decisions_Type.decisions_start self) < Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list self)) /\ (forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list self)) -> (UIntSize.to_int (CreuSat_Decision_Node_Type.node_next (Seq.get (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list self)) i)) = UIntSize.to_int Max0.mAX' \/ UIntSize.to_int (CreuSat_Decision_Node_Type.node_next (Seq.get (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list self)) i)) < n) /\ (UIntSize.to_int (CreuSat_Decision_Node_Type.node_prev (Seq.get (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list self)) i)) = UIntSize.to_int Max0.mAX' \/ UIntSize.to_int (CreuSat_Decision_Node_Type.node_prev (Seq.get (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list self)) i)) < n))
  val invariant' [#"../CreuSAT/src/logic/logic_decision.rs" 9 4 9 42] (self : CreuSat_Decision_Decisions_Type.t_decisions) (n : int) : bool
    ensures { result = invariant' self n }
    
end
module CreuSat_ConflictAnalysis_Conflict_Type
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  type t_conflict  =
    | C_Ground
    | C_Unit (CreuSat_Clause_Clause_Type.t_clause)
    | C_Learned usize (CreuSat_Clause_Clause_Type.t_clause)
    | C_Restart (CreuSat_Clause_Clause_Type.t_clause)
    
  let function restart_0 (self : t_conflict) : CreuSat_Clause_Clause_Type.t_clause = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Ground -> any CreuSat_Clause_Clause_Type.t_clause
      | C_Unit _ -> any CreuSat_Clause_Clause_Type.t_clause
      | C_Learned _ _ -> any CreuSat_Clause_Clause_Type.t_clause
      | C_Restart a -> a
      end
  let function learned_0 (self : t_conflict) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Ground -> any usize
      | C_Unit _ -> any usize
      | C_Learned a _ -> a
      | C_Restart _ -> any usize
      end
  let function learned_1 (self : t_conflict) : CreuSat_Clause_Clause_Type.t_clause = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Ground -> any CreuSat_Clause_Clause_Type.t_clause
      | C_Unit _ -> any CreuSat_Clause_Clause_Type.t_clause
      | C_Learned _ a -> a
      | C_Restart _ -> any CreuSat_Clause_Clause_Type.t_clause
      end
  let function unit_0 (self : t_conflict) : CreuSat_Clause_Clause_Type.t_clause = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Ground -> any CreuSat_Clause_Clause_Type.t_clause
      | C_Unit a -> a
      | C_Learned _ _ -> any CreuSat_Clause_Clause_Type.t_clause
      | C_Restart _ -> any CreuSat_Clause_Clause_Type.t_clause
      end
end
module CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate not_satisfiable [#"../CreuSAT/src/logic/logic_formula.rs" 129 4 129 40] (self : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate not_satisfiable [#"../CreuSAT/src/logic/logic_formula.rs" 129 4 129 40] (self : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension_Stub as EquisatExtension0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate not_satisfiable [#"../CreuSAT/src/logic/logic_formula.rs" 129 4 129 40] (self : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 130 8 130 82] exists c : CreuSat_Clause_Clause_Type.t_clause . Seq.length (ShallowModel0.shallow_model c) = 0 /\ EquisatExtension0.equisat_extension c self
  val not_satisfiable [#"../CreuSAT/src/logic/logic_formula.rs" 129 4 129 40] (self : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = not_satisfiable self }
    
end
module CreusotContracts_Resolve_Resolve_Resolve_Stub
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Resolve_Resolve_Resolve_Interface
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Resolve_Resolve_Resolve
  type self
  predicate resolve (self : self)
  val resolve (self : self) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Std1_Vec_Impl10_Resolve_Stub
  type t
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  predicate resolve (self : Alloc_Vec_Vec_Type.t_vec t (Alloc_Alloc_Global_Type.t_global))
end
module CreusotContracts_Std1_Vec_Impl10_Resolve_Interface
  type t
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  predicate resolve (self : Alloc_Vec_Vec_Type.t_vec t (Alloc_Alloc_Global_Type.t_global))
end
module CreusotContracts_Std1_Vec_Impl10_Resolve
  type t
  use prelude.Int
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Resolve_Resolve_Resolve_Stub as Resolve0 with
    type self = t
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic_Stub as IndexLogic0 with
    type t = t,
    type s = Alloc_Vec_Vec_Type.t_vec t (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  predicate resolve (self : Alloc_Vec_Vec_Type.t_vec t (Alloc_Alloc_Global_Type.t_global)) =
    [#"../CreuSAT/src/unit_prop.rs" 76 21 76 98] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model self) -> Resolve0.resolve (IndexLogic0.index_logic self i)
  val resolve (self : Alloc_Vec_Vec_Type.t_vec t (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = resolve self }
    
end
module Alloc_Vec_Impl0_New_Interface
  type t
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  val new (_1' : ()) : Alloc_Vec_Vec_Type.t_vec t (Alloc_Alloc_Global_Type.t_global)
    ensures { [#"../CreuSAT/src/unit_prop.rs" 77 38 77 56] Seq.length (ShallowModel0.shallow_model result) = 0 }
    
end
module CreuSat_Formula_Impl0_Index_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
  val index [#"../CreuSAT/src/formula.rs" 30 4 30 41] (self : CreuSat_Formula_Formula_Type.t_formula) (ix : usize) : CreuSat_Clause_Clause_Type.t_clause
    requires {[#"../CreuSAT/src/formula.rs" 28 15 28 34] UIntSize.to_int ix < Seq.length (let (a, _) = ShallowModel0.shallow_model self in a)}
    ensures { [#"../CreuSAT/src/formula.rs" 29 14 29 37] Seq.get (let (a, _) = ShallowModel0.shallow_model self in a) (UIntSize.to_int ix) = result }
    
end
module CreuSat_Formula_Impl0_Index
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg index [#"../CreuSAT/src/formula.rs" 30 4 30 41] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Formula_Formula_Type.t_formula) (ix : usize) : CreuSat_Clause_Clause_Type.t_clause
    requires {[#"../CreuSAT/src/formula.rs" 28 15 28 34] UIntSize.to_int ix < Seq.length (let (a, _) = ShallowModel0.shallow_model self in a)}
    ensures { [#"../CreuSAT/src/formula.rs" 29 14 29 37] Seq.get (let (a, _) = ShallowModel0.shallow_model self in a) (UIntSize.to_int ix) = result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Clause_Clause_Type.t_clause;
  var self_1 : CreuSat_Formula_Formula_Type.t_formula;
  var ix_2 : usize;
  var _5 : CreuSat_Clause_Clause_Type.t_clause;
  var _6 : CreuSat_Clause_Clause_Type.t_clause;
  var _7 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _8 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _7 <- CreuSat_Formula_Formula_Type.formula_clauses self_1;
    _8 <- ix_2;
    _6 <- ([#"../CreuSAT/src/formula.rs" 36 9 36 25] Index0.index _7 _8);
    goto BB1
  }
  BB1 {
    _5 <- _6;
    _0 <- _5;
    return _0
  }
  
end
module CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_range_tuple_zeroth [#"../CreuSAT/src/logic/logic_util.rs" 28 0 28 80] (s : Seq.seq (usize, usize)) (l : int) (u : int)
    
end
module CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_range_tuple_zeroth [#"../CreuSAT/src/logic/logic_util.rs" 28 0 28 80] (s : Seq.seq (usize, usize)) (l : int) (u : int)
    
end
module CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_range_tuple_zeroth [#"../CreuSAT/src/logic/logic_util.rs" 28 0 28 80] (s : Seq.seq (usize, usize)) (l : int) (u : int)
    
   =
    [#"../CreuSAT/src/logic/logic_util.rs" 29 4 31 5] forall j : int . forall i : int . l <= i /\ i < j /\ j < u -> (let (a, _) = Seq.get s i in a) <= (let (a, _) = Seq.get s j in a)
  val sorted_range_tuple_zeroth [#"../CreuSAT/src/logic/logic_util.rs" 28 0 28 80] (s : Seq.seq (usize, usize)) (l : int) (u : int) : bool
    ensures { result = sorted_range_tuple_zeroth s l u }
    
end
module CreuSat_Logic_LogicUtil_SortedTupleZeroth_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_tuple_zeroth [#"../CreuSAT/src/logic/logic_util.rs" 35 0 35 58] (s : Seq.seq (usize, usize))
end
module CreuSat_Logic_LogicUtil_SortedTupleZeroth_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_tuple_zeroth [#"../CreuSAT/src/logic/logic_util.rs" 35 0 35 58] (s : Seq.seq (usize, usize))
end
module CreuSat_Logic_LogicUtil_SortedTupleZeroth
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  clone CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth_Stub as SortedRangeTupleZeroth0
  predicate sorted_tuple_zeroth [#"../CreuSAT/src/logic/logic_util.rs" 35 0 35 58] (s : Seq.seq (usize, usize)) =
    [#"../CreuSAT/src/logic/logic_util.rs" 36 4 36 44] SortedRangeTupleZeroth0.sorted_range_tuple_zeroth s 0 (Seq.length s)
  val sorted_tuple_zeroth [#"../CreuSAT/src/logic/logic_util.rs" 35 0 35 58] (s : Seq.seq (usize, usize)) : bool
    ensures { result = sorted_tuple_zeroth s }
    
end
module CreusotContracts_Logic_Seq_Impl0_PermutationOf_Stub
  type t
  use seq.Seq
  predicate permutation_of (self : Seq.seq t) (o : Seq.seq t)
end
module CreusotContracts_Logic_Seq_Impl0_PermutationOf_Interface
  type t
  use seq.Seq
  predicate permutation_of (self : Seq.seq t) (o : Seq.seq t)
end
module CreusotContracts_Logic_Seq_Impl0_PermutationOf
  type t
  use seq.Seq
  use seq.Permut
  predicate permutation_of (self : Seq.seq t) (o : Seq.seq t) =
    [#"../CreuSAT/src/decision.rs" 113 69 113 98] Permut.permut self o 0 (Seq.length self)
  val permutation_of (self : Seq.seq t) (o : Seq.seq t) : bool
    ensures { result = permutation_of self o }
    
end
module CreuSat_Logic_LogicUtil_Partition_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate partition [#"../CreuSAT/src/logic/logic_util.rs" 40 0 40 56] (v : Seq.seq (usize, usize)) (i : int)
end
module CreuSat_Logic_LogicUtil_Partition_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate partition [#"../CreuSAT/src/logic/logic_util.rs" 40 0 40 56] (v : Seq.seq (usize, usize)) (i : int)
end
module CreuSat_Logic_LogicUtil_Partition
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate partition [#"../CreuSAT/src/logic/logic_util.rs" 40 0 40 56] (v : Seq.seq (usize, usize)) (i : int) =
    [#"../CreuSAT/src/logic/logic_util.rs" 41 4 41 110] forall k2 : int . forall k1 : int . 0 <= k1 /\ k1 < i /\ i <= k2 /\ k2 < Seq.length v -> (let (a, _) = Seq.get v k1 in a) <= (let (a, _) = Seq.get v k2 in a)
  val partition [#"../CreuSAT/src/logic/logic_util.rs" 40 0 40 56] (v : Seq.seq (usize, usize)) (i : int) : bool
    ensures { result = partition v i }
    
end
module CreuSat_Util_Sort_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Logic_Seq_Impl0_PermutationOf_Stub as PermutationOf0 with
    type t = (usize, usize)
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize)
  clone CreuSat_Logic_LogicUtil_SortedTupleZeroth_Stub as SortedTupleZeroth0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  val sort [#"../CreuSAT/src/util.rs" 59 0 59 40] (v : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global))) : ()
    ensures { [#"../CreuSAT/src/util.rs" 57 10 57 36] SortedTupleZeroth0.sorted_tuple_zeroth (ShallowModel0.shallow_model ( ^ v)) }
    ensures { [#"../CreuSAT/src/util.rs" 58 0 58 36] PermutationOf0.permutation_of (ShallowModel0.shallow_model ( ^ v)) (ShallowModel1.shallow_model v) }
    
end
module CreuSat_Util_Sort
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use prelude.Slice
  use seq.Seq
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Slice_Impl0_ShallowModel as ShallowModel6 with
    type t = (usize, usize),
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel5 with
    type t = slice (usize, usize),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = (usize, usize)
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global)),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global)
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with
    type t = (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = slice (usize, usize)
  clone Alloc_Vec_Impl10_DerefMut_Interface as DerefMut0 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = (usize, usize),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = (usize, usize)
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicUtil_Partition as Partition0
  clone CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth as SortedRangeTupleZeroth0
  clone CreusotContracts_Snapshot_Impl1_ShallowModel as ShallowModel2 with
    type t = borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global)),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Logic_Seq_Impl0_PermutationOf as PermutationOf0 with
    type t = (usize, usize)
  clone CreuSat_Logic_LogicUtil_SortedTupleZeroth as SortedTupleZeroth0 with
    predicate SortedRangeTupleZeroth0.sorted_range_tuple_zeroth = SortedRangeTupleZeroth0.sorted_range_tuple_zeroth
  let rec cfg sort [#"../CreuSAT/src/util.rs" 59 0 59 40] [@cfg:stackify] [@cfg:subregion_analysis] (v : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global))) : ()
    ensures { [#"../CreuSAT/src/util.rs" 57 10 57 36] SortedTupleZeroth0.sorted_tuple_zeroth (ShallowModel0.shallow_model ( ^ v)) }
    ensures { [#"../CreuSAT/src/util.rs" 58 0 58 36] PermutationOf0.permutation_of (ShallowModel0.shallow_model ( ^ v)) (ShallowModel1.shallow_model v) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var v_1 : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global));
  var i_4 : usize;
  var old_v_5 : Snapshot.Snapshot_ty (borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global)));
  var _7 : ();
  var _12 : ();
  var _13 : bool;
  var _14 : usize;
  var _15 : usize;
  var _16 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var max_17 : usize;
  var j_18 : usize;
  var _19 : usize;
  var _20 : ();
  var _24 : bool;
  var _25 : usize;
  var _26 : usize;
  var _27 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _28 : ();
  var _29 : bool;
  var _30 : usize;
  var _31 : (usize, usize);
  var _32 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _33 : usize;
  var _34 : usize;
  var _35 : (usize, usize);
  var _36 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _37 : usize;
  var _38 : usize;
  var _39 : ();
  var _40 : ();
  var _41 : ();
  var _42 : ();
  var _43 : borrowed (slice (usize, usize));
  var _44 : borrowed (slice (usize, usize));
  var _45 : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global));
  var _46 : usize;
  var _47 : usize;
  var _48 : ();
  var _49 : ();
  var _50 : ();
  {
    v_1 <- v;
    goto BB0
  }
  BB0 {
    i_4 <- ([#"../CreuSAT/src/util.rs" 60 23 60 24] (0 : usize));
    _7 <- ();
    old_v_5 <- ([#"../CreuSAT/src/util.rs" 61 49 61 61] Snapshot.new v_1);
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    invariant { [#"../CreuSAT/src/util.rs" 62 4 62 43] PermutationOf0.permutation_of (ShallowModel1.shallow_model v_1) (ShallowModel2.shallow_model old_v_5) };
    invariant { [#"../CreuSAT/src/util.rs" 63 16 63 30] UIntSize.to_int i_4 <= Seq.length (ShallowModel1.shallow_model v_1) };
    invariant { [#"../CreuSAT/src/util.rs" 64 16 64 52] SortedRangeTupleZeroth0.sorted_range_tuple_zeroth (ShallowModel1.shallow_model v_1) 0 (UIntSize.to_int i_4) };
    invariant { [#"../CreuSAT/src/util.rs" 65 16 65 33] Partition0.partition (ShallowModel1.shallow_model v_1) (UIntSize.to_int i_4) };
    _14 <- i_4;
    _16 <-  * v_1;
    _15 <- ([#"../CreuSAT/src/util.rs" 66 14 66 21] Len0.len _16);
    goto BB3
  }
  BB3 {
    _13 <- ([#"../CreuSAT/src/util.rs" 66 10 66 21] _14 < _15);
    switch (_13)
      | False -> goto BB16
      | True -> goto BB4
      end
  }
  BB4 {
    max_17 <- i_4;
    _19 <- i_4;
    j_18 <- ([#"../CreuSAT/src/util.rs" 68 20 68 25] _19 + ([#"../CreuSAT/src/util.rs" 68 24 68 25] (1 : usize)));
    goto BB5
  }
  BB5 {
    invariant { [#"../CreuSAT/src/util.rs" 69 8 69 80] forall k : int . UIntSize.to_int i_4 <= k /\ k < UIntSize.to_int j_18 -> (let (a, _) = Seq.get (ShallowModel1.shallow_model v_1) (UIntSize.to_int max_17) in a) <= (let (a, _) = Seq.get (ShallowModel1.shallow_model v_1) k in a) };
    invariant { [#"../CreuSAT/src/util.rs" 70 20 70 46] UIntSize.to_int i_4 <= UIntSize.to_int j_18 /\ UIntSize.to_int j_18 <= Seq.length (ShallowModel1.shallow_model v_1) };
    invariant { [#"../CreuSAT/src/util.rs" 71 20 71 43] UIntSize.to_int i_4 <= UIntSize.to_int max_17 /\ UIntSize.to_int max_17 < UIntSize.to_int j_18 };
    _25 <- j_18;
    _27 <-  * v_1;
    _26 <- ([#"../CreuSAT/src/util.rs" 72 18 72 25] Len0.len _27);
    goto BB6
  }
  BB6 {
    _24 <- ([#"../CreuSAT/src/util.rs" 72 14 72 25] _25 < _26);
    switch (_24)
      | False -> goto BB13
      | True -> goto BB7
      end
  }
  BB7 {
    _32 <-  * v_1;
    _33 <- j_18;
    _31 <- ([#"../CreuSAT/src/util.rs" 73 15 73 19] Index0.index _32 _33);
    goto BB8
  }
  BB8 {
    _30 <- (let (a, _) = _31 in a);
    _36 <-  * v_1;
    _37 <- max_17;
    _35 <- ([#"../CreuSAT/src/util.rs" 73 24 73 30] Index0.index _36 _37);
    goto BB9
  }
  BB9 {
    _34 <- (let (a, _) = _35 in a);
    _29 <- ([#"../CreuSAT/src/util.rs" 73 15 73 32] _30 < _34);
    switch (_29)
      | False -> goto BB11
      | True -> goto BB10
      end
  }
  BB10 {
    _38 <- j_18;
    max_17 <- _38;
    _38 <- any usize;
    _28 <- ();
    goto BB12
  }
  BB11 {
    _28 <- ();
    goto BB12
  }
  BB12 {
    j_18 <- ([#"../CreuSAT/src/util.rs" 76 12 76 18] j_18 + ([#"../CreuSAT/src/util.rs" 76 17 76 18] (1 : usize)));
    _12 <- ();
    goto BB5
  }
  BB13 {
    _20 <- ();
    _45 <- borrow_mut ( * v_1);
    v_1 <- { v_1 with current = ( ^ _45) };
    _44 <- ([#"../CreuSAT/src/util.rs" 78 8 78 22] DerefMut0.deref_mut _45);
    goto BB14
  }
  BB14 {
    _43 <- borrow_mut ( * _44);
    _44 <- { _44 with current = ( ^ _43) };
    assume { Resolve0.resolve _44 };
    _46 <- i_4;
    _47 <- max_17;
    _42 <- ([#"../CreuSAT/src/util.rs" 78 8 78 22] Swap0.swap _43 _46 _47);
    goto BB15
  }
  BB15 {
    i_4 <- ([#"../CreuSAT/src/util.rs" 79 8 79 14] i_4 + ([#"../CreuSAT/src/util.rs" 79 13 79 14] (1 : usize)));
    _12 <- ();
    goto BB2
  }
  BB16 {
    assume { Resolve1.resolve v_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Decision_Impl2_Rescore_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  val rescore [#"../CreuSAT/src/decision.rs" 136 4 136 39] (self : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/decision.rs" 132 4 132 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/decision.rs" 133 15 133 52] Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self))) < UIntSize.to_int Max0.mAX'}
    ensures { [#"../CreuSAT/src/decision.rs" 132 4 132 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/decision.rs" 134 14 134 63] UIntSize.to_int (CreuSat_Decision_Decisions_Type.decisions_timestamp ( ^ self)) = Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self))) + 1 }
    ensures { [#"../CreuSAT/src/decision.rs" 135 14 135 67] Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( ^ self))) = Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self))) }
    
end
module CreuSat_Decision_Impl2_Rescore
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use seq.Seq
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Decision_Node_Type.t_node
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Decision_Node_Type.t_node),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Decision_Node_Type.t_node),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone Core_Usize_Max as Max1
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = CreuSat_Decision_Node_Type.t_node,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX'
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  let rec cfg rescore [#"../CreuSAT/src/decision.rs" 136 4 136 39] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/decision.rs" 132 4 132 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/decision.rs" 133 15 133 52] Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self))) < UIntSize.to_int Max0.mAX'}
    ensures { [#"../CreuSAT/src/decision.rs" 132 4 132 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/decision.rs" 134 14 134 63] UIntSize.to_int (CreuSat_Decision_Decisions_Type.decisions_timestamp ( ^ self)) = Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self))) + 1 }
    ensures { [#"../CreuSAT/src/decision.rs" 135 14 135 67] Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( ^ self))) = Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _f_2 : CreuSat_Formula_Formula_Type.t_formula;
  var iNVALID'_8 : usize;
  var old_self_9 : Snapshot.Snapshot_ty (borrowed (CreuSat_Decision_Decisions_Type.t_decisions));
  var _11 : ();
  var curr_score_12 : usize;
  var _13 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
  var i_14 : usize;
  var curr_15 : usize;
  var _16 : ();
  var _20 : ();
  var _21 : bool;
  var _22 : usize;
  var _23 : usize;
  var _24 : usize;
  var _25 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _26 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _27 : usize;
  var _28 : ();
  var _29 : bool;
  var _30 : usize;
  var _31 : ();
  var _32 : usize;
  var _33 : CreuSat_Decision_Node_Type.t_node;
  var _34 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
  var _35 : usize;
  var _36 : ();
  var _37 : ();
  var _38 : ();
  var _39 : usize;
  var _40 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
  {
    self_1 <- self;
    _f_2 <- _f;
    goto BB0
  }
  BB0 {
    iNVALID'_8 <- ([#"../CreuSAT/src/decision.rs" 137 29 137 39] (18446744073709551615 : usize));
    _11 <- ();
    old_self_9 <- ([#"../CreuSAT/src/decision.rs" 138 46 138 61] Snapshot.new self_1);
    goto BB1
  }
  BB1 {
    _13 <- CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1);
    curr_score_12 <- ([#"../CreuSAT/src/decision.rs" 139 29 139 51] Len0.len _13);
    goto BB2
  }
  BB2 {
    i_14 <- ([#"../CreuSAT/src/decision.rs" 140 27 140 28] (0 : usize));
    curr_15 <- CreuSat_Decision_Decisions_Type.decisions_start ( * self_1);
    goto BB3
  }
  BB3 {
    invariant { [#"../CreuSAT/src/decision.rs" 142 20 142 73] curr_15 = Max0.mAX' \/ UIntSize.to_int curr_15 < Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1))) };
    invariant { [#"../CreuSAT/src/decision.rs" 142 8 142 75] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1))) -> CreuSat_Decision_Node_Type.node_next (Seq.get (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1))) j) = CreuSat_Decision_Node_Type.node_next (Seq.get (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * Snapshot.inner old_self_9))) j) /\ CreuSat_Decision_Node_Type.node_prev (Seq.get (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1))) j) = CreuSat_Decision_Node_Type.node_prev (Seq.get (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * Snapshot.inner old_self_9))) j) };
    invariant { [#"../CreuSAT/src/decision.rs" 147 20 147 48] Invariant0.invariant' ( * self_1) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f_2)) };
    _22 <- curr_15;
    _23 <- iNVALID'_8;
    _21 <- ([#"../CreuSAT/src/decision.rs" 148 14 148 29] _22 <> _23);
    switch (_21)
      | False -> goto BB9
      | True -> goto BB4
      end
  }
  BB4 {
    _24 <- curr_score_12;
    _26 <- borrow_mut (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.C_Decisions a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.C_Decisions ( ^ _26) b c d) };
    _27 <- curr_15;
    _25 <- ([#"../CreuSAT/src/decision.rs" 149 12 149 34] IndexMut0.index_mut _26 _27);
    goto BB5
  }
  BB5 {
    _25 <- { _25 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _25 in CreuSat_Decision_Node_Type.C_Node a b _24) };
    _24 <- any usize;
    assume { Resolve0.resolve _25 };
    _30 <- curr_score_12;
    _29 <- ([#"../CreuSAT/src/decision.rs" 150 15 150 29] _30 > ([#"../CreuSAT/src/decision.rs" 150 28 150 29] (0 : usize)));
    switch (_29)
      | False -> goto BB7
      | True -> goto BB6
      end
  }
  BB6 {
    curr_score_12 <- ([#"../CreuSAT/src/decision.rs" 151 16 151 31] curr_score_12 - ([#"../CreuSAT/src/decision.rs" 151 30 151 31] (1 : usize)));
    _28 <- ();
    _34 <- CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1);
    _35 <- curr_15;
    _33 <- ([#"../CreuSAT/src/decision.rs" 155 19 155 41] Index0.index _34 _35);
    goto BB8
  }
  BB7 {
    _16 <- ();
    goto BB10
  }
  BB8 {
    _32 <- CreuSat_Decision_Node_Type.node_next _33;
    curr_15 <- _32;
    _32 <- any usize;
    _20 <- ();
    goto BB3
  }
  BB9 {
    _16 <- ();
    goto BB10
  }
  BB10 {
    _40 <- CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1);
    _39 <- ([#"../CreuSAT/src/decision.rs" 157 25 157 47] Len0.len _40);
    goto BB11
  }
  BB11 {
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.C_Decisions a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.C_Decisions a ([#"../CreuSAT/src/decision.rs" 157 8 157 51] _39 + ([#"../CreuSAT/src/decision.rs" 157 50 157 51] (1 : usize))) c d) };
    assume { Resolve1.resolve self_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Decision_Impl2_MoveToFront_Interface
  use prelude.UIntSize
  use prelude.Int
  use prelude.Borrow
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant0
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  val move_to_front [#"../CreuSAT/src/decision.rs" 164 4 164 60] (self : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (tomove : usize) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/decision.rs" 161 15 161 41] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f) < UIntSize.to_int Max0.mAX'}
    requires {[#"../CreuSAT/src/decision.rs" 162 15 162 48] UIntSize.to_int tomove < Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self)))}
    requires {[#"../CreuSAT/src/decision.rs" 163 4 163 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    ensures { [#"../CreuSAT/src/decision.rs" 163 4 163 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    
end
module CreuSat_Decision_Impl2_MoveToFront
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Decision_Node_Type.t_node
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Decision_Node_Type.t_node),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone Core_Usize_Max as Max1
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX'
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Decision_Impl2_Rescore_Interface as Rescore0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = CreuSat_Decision_Node_Type.t_node,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  let rec cfg move_to_front [#"../CreuSAT/src/decision.rs" 164 4 164 60] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (tomove : usize) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/decision.rs" 161 15 161 41] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f) < UIntSize.to_int Max0.mAX'}
    requires {[#"../CreuSAT/src/decision.rs" 162 15 162 48] UIntSize.to_int tomove < Seq.length (ShallowModel0.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self)))}
    requires {[#"../CreuSAT/src/decision.rs" 163 4 163 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    ensures { [#"../CreuSAT/src/decision.rs" 163 4 163 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var tomove_2 : usize;
  var _f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var iNVALID'_8 : usize;
  var _9 : ();
  var _10 : bool;
  var _11 : usize;
  var _12 : usize;
  var _13 : ();
  var moving_14 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _15 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _16 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _17 : usize;
  var prev_18 : usize;
  var old_next_19 : usize;
  var _20 : usize;
  var _21 : usize;
  var _22 : usize;
  var _23 : ();
  var _24 : bool;
  var _25 : usize;
  var _26 : ();
  var _27 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _28 : CreuSat_Formula_Formula_Type.t_formula;
  var _29 : ();
  var _31 : usize;
  var _32 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _33 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _34 : usize;
  var _35 : usize;
  var _36 : ();
  var _37 : bool;
  var _38 : usize;
  var _39 : usize;
  var _40 : usize;
  var _41 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _42 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _43 : usize;
  var _44 : bool;
  var _45 : usize;
  var _46 : usize;
  var _47 : usize;
  var _48 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _49 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _50 : usize;
  {
    self_1 <- self;
    tomove_2 <- tomove;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    iNVALID'_8 <- ([#"../CreuSAT/src/decision.rs" 165 29 165 39] (18446744073709551615 : usize));
    _11 <- tomove_2;
    _12 <- CreuSat_Decision_Decisions_Type.decisions_start ( * self_1);
    _10 <- ([#"../CreuSAT/src/decision.rs" 166 11 166 31] _11 = _12);
    switch (_10)
      | False -> goto BB2
      | True -> goto BB1
      end
  }
  BB1 {
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB17
  }
  BB2 {
    _9 <- ();
    _16 <- borrow_mut (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.C_Decisions a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.C_Decisions ( ^ _16) b c d) };
    _17 <- tomove_2;
    _15 <- ([#"../CreuSAT/src/decision.rs" 169 30 169 54] IndexMut0.index_mut _16 _17);
    goto BB3
  }
  BB3 {
    moving_14 <- borrow_mut ( * _15);
    _15 <- { _15 with current = ( ^ moving_14) };
    assume { Resolve1.resolve _15 };
    prev_18 <- CreuSat_Decision_Node_Type.node_prev ( * moving_14);
    old_next_19 <- CreuSat_Decision_Node_Type.node_next ( * moving_14);
    _20 <- iNVALID'_8;
    moving_14 <- { moving_14 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * moving_14 in CreuSat_Decision_Node_Type.C_Node a _20 c) };
    _20 <- any usize;
    _21 <- CreuSat_Decision_Decisions_Type.decisions_start ( * self_1);
    moving_14 <- { moving_14 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * moving_14 in CreuSat_Decision_Node_Type.C_Node _21 b c) };
    _21 <- any usize;
    _22 <- CreuSat_Decision_Decisions_Type.decisions_timestamp ( * self_1);
    moving_14 <- { moving_14 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * moving_14 in CreuSat_Decision_Node_Type.C_Node a b _22) };
    _22 <- any usize;
    assume { Resolve1.resolve moving_14 };
    _25 <- CreuSat_Decision_Decisions_Type.decisions_timestamp ( * self_1);
    _24 <- ([#"../CreuSAT/src/decision.rs" 175 11 175 39] _25 = ([#"../CreuSAT/src/decision.rs" 175 29 175 39] (18446744073709551615 : usize)));
    switch (_24)
      | False -> goto BB6
      | True -> goto BB4
      end
  }
  BB4 {
    _27 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _27) };
    _28 <- _f_3;
    _26 <- ([#"../CreuSAT/src/decision.rs" 176 12 176 28] Rescore0.rescore _27 _28);
    goto BB5
  }
  BB5 {
    _23 <- ();
    goto BB7
  }
  BB6 {
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.C_Decisions a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.C_Decisions a ([#"../CreuSAT/src/decision.rs" 178 12 178 31] CreuSat_Decision_Decisions_Type.decisions_timestamp ( * self_1) + ([#"../CreuSAT/src/decision.rs" 178 30 178 31] (1 : usize))) c d) };
    _23 <- ();
    goto BB7
  }
  BB7 {
    assert { [#"../CreuSAT/src/decision.rs" 180 22 180 48] UIntSize.to_int (CreuSat_Decision_Decisions_Type.decisions_start ( * self_1)) < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f_3) };
    _29 <- ();
    _31 <- tomove_2;
    _33 <- borrow_mut (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.C_Decisions a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.C_Decisions ( ^ _33) b c d) };
    _34 <- CreuSat_Decision_Decisions_Type.decisions_start ( * self_1);
    _32 <- ([#"../CreuSAT/src/decision.rs" 181 8 181 36] IndexMut0.index_mut _33 _34);
    goto BB8
  }
  BB8 {
    _32 <- { _32 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _32 in CreuSat_Decision_Node_Type.C_Node a _31 c) };
    _31 <- any usize;
    assume { Resolve1.resolve _32 };
    _35 <- tomove_2;
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.C_Decisions a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.C_Decisions a b _35 d) };
    _35 <- any usize;
    _38 <- prev_18;
    _39 <- iNVALID'_8;
    _37 <- ([#"../CreuSAT/src/decision.rs" 183 11 183 26] _38 <> _39);
    switch (_37)
      | False -> goto BB11
      | True -> goto BB9
      end
  }
  BB9 {
    _40 <- old_next_19;
    _42 <- borrow_mut (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.C_Decisions a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.C_Decisions ( ^ _42) b c d) };
    _43 <- prev_18;
    _41 <- ([#"../CreuSAT/src/decision.rs" 185 12 185 34] IndexMut0.index_mut _42 _43);
    goto BB10
  }
  BB10 {
    _41 <- { _41 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _41 in CreuSat_Decision_Node_Type.C_Node _40 b c) };
    _40 <- any usize;
    assume { Resolve1.resolve _41 };
    _36 <- ();
    goto BB12
  }
  BB11 {
    _36 <- ();
    goto BB12
  }
  BB12 {
    _45 <- old_next_19;
    _46 <- iNVALID'_8;
    _44 <- ([#"../CreuSAT/src/decision.rs" 187 11 187 30] _45 <> _46);
    switch (_44)
      | False -> goto BB15
      | True -> goto BB13
      end
  }
  BB13 {
    _47 <- prev_18;
    _49 <- borrow_mut (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.C_Decisions a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.C_Decisions ( ^ _49) b c d) };
    assume { Resolve0.resolve self_1 };
    _50 <- old_next_19;
    _48 <- ([#"../CreuSAT/src/decision.rs" 188 12 188 38] IndexMut0.index_mut _49 _50);
    goto BB14
  }
  BB14 {
    _48 <- { _48 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _48 in CreuSat_Decision_Node_Type.C_Node a _47 c) };
    _47 <- any usize;
    assume { Resolve1.resolve _48 };
    _0 <- ();
    goto BB16
  }
  BB15 {
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB16
  }
  BB16 {
    goto BB17
  }
  BB17 {
    return _0
  }
  
end
module CreusotContracts_Resolve_Impl2_Resolve_Stub
  type t
  predicate resolve (self : t)
end
module CreusotContracts_Resolve_Impl2_Resolve_Interface
  type t
  predicate resolve (self : t)
end
module CreusotContracts_Resolve_Impl2_Resolve
  type t
  predicate resolve (self : t) =
    [#"../CreuSAT/src/util.rs" 14 10 14 14] true
  val resolve (self : t) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Impl0_Resolve_Stub
  type t1
  type t2
  predicate resolve (self : (t1, t2))
end
module CreusotContracts_Resolve_Impl0_Resolve_Interface
  type t1
  type t2
  predicate resolve (self : (t1, t2))
end
module CreusotContracts_Resolve_Impl0_Resolve
  type t1
  type t2
  clone CreusotContracts_Resolve_Resolve_Resolve_Stub as Resolve1 with
    type self = t2
  clone CreusotContracts_Resolve_Resolve_Resolve_Stub as Resolve0 with
    type self = t1
  predicate resolve (self : (t1, t2)) =
    [#"../CreuSAT/src/util.rs" 5 15 7 33] Resolve0.resolve (let (a, _) = self in a) /\ Resolve1.resolve (let (_, a) = self in a)
  val resolve (self : (t1, t2)) : bool
    ensures { result = resolve self }
    
end
module CreuSat_Decision_Impl2_IncrementAndMove_Interface
  use prelude.UIntSize
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicUtil_ElemsLessThan_Stub as ElemsLessThan0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  val increment_and_move [#"../CreuSAT/src/decision.rs" 204 4 204 68] (self : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (f : CreuSat_Formula_Formula_Type.t_formula) (v : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)) : ()
    requires {[#"../CreuSAT/src/decision.rs" 200 15 200 47] ElemsLessThan0.elems_less_than (ShallowModel0.shallow_model v) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/decision.rs" 201 15 201 40] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < UIntSize.to_int Max0.mAX'}
    requires {[#"../CreuSAT/src/decision.rs" 202 15 202 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 203 4 203 51] Invariant1.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    ensures { [#"../CreuSAT/src/decision.rs" 203 4 203 51] Invariant1.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl2_IncrementAndMove
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic2
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with
    function IndexLogic0.index_logic = IndexLogic2.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic2.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant3.invariant'
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth as SortedRangeTupleZeroth0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel9 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve5 with
    type t = usize
  clone CreusotContracts_Resolve_Impl0_Resolve as Resolve6 with
    type t1 = usize,
    type t2 = usize,
    predicate Resolve0.resolve = Resolve5.resolve,
    predicate Resolve1.resolve = Resolve5.resolve
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel7 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Logic_Seq_Impl0_PermutationOf as PermutationOf0 with
    type t = (usize, usize)
  clone CreuSat_Logic_LogicUtil_SortedTupleZeroth as SortedTupleZeroth0 with
    predicate SortedRangeTupleZeroth0.sorted_range_tuple_zeroth = SortedRangeTupleZeroth0.sorted_range_tuple_zeroth
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic1 with
    type t = usize,
    type s = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue2 with
    type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds2 with
    type t = (usize, usize)
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel5 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Decision_Node_Type.t_node),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = usize
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic0 with
    type t = (usize, usize),
    type s = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone Core_Usize_Max as Max1
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve4 with
    type t = (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Resolve0.resolve = Resolve6.resolve,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve3 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX'
  clone CreuSat_Decision_Impl2_MoveToFront_Interface as MoveToFront0 with
    val Max0.mAX' = Max0.mAX',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate Invariant0.invariant' = Invariant1.invariant'
  clone Alloc_Vec_Impl13_Index_Interface as Index2 with
    type t = (usize, usize),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate InBounds0.in_bounds = InBounds2.in_bounds,
    predicate HasValue0.has_value = HasValue2.has_value,
    type Output0.output = (usize, usize)
  clone Alloc_Vec_Impl1_Len_Interface as Len1 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Util_Sort_Interface as Sort0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SortedTupleZeroth0.sorted_tuple_zeroth = SortedTupleZeroth0.sorted_tuple_zeroth,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    predicate PermutationOf0.permutation_of = PermutationOf0.permutation_of,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve1 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    predicate Resolve0.resolve = Resolve5.resolve,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = (usize, usize)
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = (usize, usize),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate InBounds0.in_bounds = InBounds2.in_bounds,
    predicate HasValue0.has_value = HasValue2.has_value,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = (usize, usize),
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index1 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    type Output0.output = CreuSat_Decision_Node_Type.t_node
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = usize
  clone Alloc_Vec_FromElem_Interface as FromElem0 with
    type t = (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicUtil_ElemsLessThan as ElemsLessThan0
  let rec cfg increment_and_move [#"../CreuSAT/src/decision.rs" 204 4 204 68] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (f : CreuSat_Formula_Formula_Type.t_formula) (v : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)) : ()
    requires {[#"../CreuSAT/src/decision.rs" 200 15 200 47] ElemsLessThan0.elems_less_than (ShallowModel0.shallow_model v) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/decision.rs" 201 15 201 40] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < UIntSize.to_int Max0.mAX'}
    requires {[#"../CreuSAT/src/decision.rs" 202 15 202 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 203 4 203 51] Invariant1.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    ensures { [#"../CreuSAT/src/decision.rs" 203 4 203 51] Invariant1.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var f_2 : CreuSat_Formula_Formula_Type.t_formula;
  var v_3 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var counts_with_index_9 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _10 : (usize, usize);
  var _11 : usize;
  var _12 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var old_self_13 : Snapshot.Snapshot_ty (borrowed (CreuSat_Decision_Decisions_Type.t_decisions));
  var _15 : ();
  var i_16 : usize;
  var _17 : ();
  var _21 : ();
  var _22 : bool;
  var _23 : usize;
  var _24 : usize;
  var _25 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _26 : usize;
  var _27 : CreuSat_Decision_Node_Type.t_node;
  var _28 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
  var _29 : usize;
  var _30 : usize;
  var _31 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _32 : usize;
  var _33 : usize;
  var _34 : usize;
  var _35 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _36 : usize;
  var _37 : borrowed (usize, usize);
  var _38 : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global));
  var _39 : usize;
  var _40 : ();
  var _41 : ();
  var _42 : ();
  var _43 : ();
  var _44 : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global));
  var _45 : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global));
  var _48 : bool;
  var _49 : usize;
  var _50 : usize;
  var _51 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _52 : ();
  var _53 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _54 : usize;
  var _55 : (usize, usize);
  var _56 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _57 : usize;
  var _58 : CreuSat_Formula_Formula_Type.t_formula;
  var _59 : ();
  var _60 : ();
  var _61 : ();
  {
    self_1 <- self;
    f_2 <- f;
    v_3 <- v;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    _10 <- ([#"../CreuSAT/src/decision.rs" 205 63 205 64] (0 : usize), [#"../CreuSAT/src/decision.rs" 205 66 205 67] (0 : usize));
    _12 <- v_3;
    _11 <- ([#"../CreuSAT/src/decision.rs" 205 70 205 77] Len0.len _12);
    goto BB2
  }
  BB2 {
    counts_with_index_9 <- ([#"../CreuSAT/src/decision.rs" 205 57 205 78] FromElem0.from_elem _10 _11);
    goto BB3
  }
  BB3 {
    _15 <- ();
    old_self_13 <- ([#"../CreuSAT/src/decision.rs" 206 46 206 61] Snapshot.new self_1);
    goto BB4
  }
  BB4 {
    i_16 <- ([#"../CreuSAT/src/decision.rs" 207 27 207 28] (0 : usize));
    goto BB5
  }
  BB5 {
    goto BB6
  }
  BB6 {
    goto BB7
  }
  BB7 {
    invariant { [#"../CreuSAT/src/decision.rs" 208 20 208 44] Snapshot.inner old_self_13 = self_1 };
    invariant { [#"../CreuSAT/src/decision.rs" 209 20 209 56] Seq.length (ShallowModel0.shallow_model v_3) = Seq.length (ShallowModel1.shallow_model counts_with_index_9) };
    invariant { [#"../CreuSAT/src/decision.rs" 208 8 208 46] forall j : int . 0 <= j /\ j < UIntSize.to_int i_16 -> UIntSize.to_int (let (_, a) = Seq.get (ShallowModel1.shallow_model counts_with_index_9) j in a) < Seq.length (ShallowModel2.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1))) };
    _23 <- i_16;
    _25 <- v_3;
    _24 <- ([#"../CreuSAT/src/decision.rs" 211 18 211 25] Len0.len _25);
    goto BB8
  }
  BB8 {
    _22 <- ([#"../CreuSAT/src/decision.rs" 211 14 211 25] _23 < _24);
    switch (_22)
      | False -> goto BB14
      | True -> goto BB9
      end
  }
  BB9 {
    _28 <- CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1);
    _31 <- v_3;
    _32 <- i_16;
    _30 <- ([#"../CreuSAT/src/decision.rs" 212 53 212 57] Index0.index _31 _32);
    goto BB10
  }
  BB10 {
    _29 <- _30;
    _27 <- ([#"../CreuSAT/src/decision.rs" 212 36 212 58] Index1.index _28 _29);
    goto BB11
  }
  BB11 {
    _26 <- CreuSat_Decision_Node_Type.node_ts _27;
    _35 <- v_3;
    _36 <- i_16;
    _34 <- ([#"../CreuSAT/src/decision.rs" 212 63 212 67] Index0.index _35 _36);
    goto BB12
  }
  BB12 {
    _33 <- _34;
    _38 <- borrow_mut counts_with_index_9;
    counts_with_index_9 <-  ^ _38;
    _39 <- i_16;
    _37 <- ([#"../CreuSAT/src/decision.rs" 212 12 212 32] IndexMut0.index_mut _38 _39);
    goto BB13
  }
  BB13 {
    _37 <- { _37 with current = (_26, _33) };
    assume { Resolve0.resolve _37 };
    i_16 <- ([#"../CreuSAT/src/decision.rs" 213 12 213 18] i_16 + ([#"../CreuSAT/src/decision.rs" 213 17 213 18] (1 : usize)));
    _21 <- ();
    goto BB7
  }
  BB14 {
    assume { Resolve1.resolve v_3 };
    _17 <- ();
    _45 <- borrow_mut counts_with_index_9;
    counts_with_index_9 <-  ^ _45;
    _44 <- borrow_mut ( * _45);
    _45 <- { _45 with current = ( ^ _44) };
    assume { Resolve2.resolve _45 };
    _43 <- ([#"../CreuSAT/src/decision.rs" 217 8 217 36] Sort0.sort _44);
    goto BB15
  }
  BB15 {
    i_16 <- ([#"../CreuSAT/src/decision.rs" 220 12 220 13] (0 : usize));
    goto BB16
  }
  BB16 {
    goto BB17
  }
  BB17 {
    invariant { [#"../CreuSAT/src/decision.rs" 221 20 221 47] Invariant1.invariant' ( * self_1) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_2)) };
    invariant { [#"../CreuSAT/src/decision.rs" 222 20 222 56] Seq.length (ShallowModel0.shallow_model v_3) = Seq.length (ShallowModel1.shallow_model counts_with_index_9) };
    _49 <- i_16;
    _51 <- counts_with_index_9;
    _50 <- ([#"../CreuSAT/src/decision.rs" 223 18 223 41] Len1.len _51);
    goto BB18
  }
  BB18 {
    _48 <- ([#"../CreuSAT/src/decision.rs" 223 14 223 41] _49 < _50);
    switch (_48)
      | False -> goto BB22
      | True -> goto BB19
      end
  }
  BB19 {
    _53 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _53) };
    _56 <- counts_with_index_9;
    _57 <- i_16;
    _55 <- ([#"../CreuSAT/src/decision.rs" 224 31 224 51] Index2.index _56 _57);
    goto BB20
  }
  BB20 {
    _54 <- (let (_, a) = _55 in a);
    _58 <- f_2;
    _52 <- ([#"../CreuSAT/src/decision.rs" 224 12 224 57] MoveToFront0.move_to_front _53 _54 _58);
    goto BB21
  }
  BB21 {
    i_16 <- ([#"../CreuSAT/src/decision.rs" 225 12 225 18] i_16 + ([#"../CreuSAT/src/decision.rs" 225 17 225 18] (1 : usize)));
    _21 <- ();
    goto BB17
  }
  BB22 {
    assume { Resolve3.resolve self_1 };
    assume { Resolve4.resolve counts_with_index_9 };
    _0 <- ();
    goto BB23
  }
  BB23 {
    goto BB24
  }
  BB24 {
    return _0
  }
  
end
module CreuSat_ConflictAnalysis_AnalyzeConflict_Interface
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel2 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Stub as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Stub as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant3
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub as NotSatisfiable0
  use CreuSat_ConflictAnalysis_Conflict_Type as CreuSat_ConflictAnalysis_Conflict_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Stub as Unsat0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val analyze_conflict [#"../CreuSAT/src/conflict_analysis.rs" 181 0 181 95] (f : CreuSat_Formula_Formula_Type.t_formula) (trail : CreuSat_Trail_Trail_Type.t_trail) (cref : usize) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : CreuSat_ConflictAnalysis_Conflict_Type.t_conflict
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 150 11 150 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 151 11 151 36] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < UIntSize.to_int Max0.mAX'}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 152 11 152 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 153 11 153 35] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 154 0 154 55] Unsat0.unsat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref)) (CreuSat_Trail_Trail_Type.trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 180 0 180 44] Invariant2.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 155 10 179 1] match (result) with
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Ground -> NotSatisfiable0.not_satisfiable f
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Unit clause -> Invariant3.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ Seq.length (ShallowModel1.shallow_model clause) = 1 /\ VarsInRangeInner0.vars_in_range_inner (ShallowModel1.shallow_model clause) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel1.shallow_model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel2.shallow_model f)
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Learned s_idx clause -> Invariant3.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ Seq.length (ShallowModel1.shallow_model clause) > 1 /\ VarsInRangeInner0.vars_in_range_inner (ShallowModel1.shallow_model clause) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel1.shallow_model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel2.shallow_model f) /\ UIntSize.to_int s_idx < Seq.length (ShallowModel1.shallow_model clause)
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Restart clause -> Invariant3.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ Seq.length (ShallowModel1.shallow_model clause) > 1 /\ VarsInRangeInner0.vars_in_range_inner (ShallowModel1.shallow_model clause) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel1.shallow_model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel2.shallow_model f)
      end }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 180 0 180 44] Invariant2.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    
end
module CreuSat_ConflictAnalysis_AnalyzeConflict
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.IntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreusotContracts_Std1_Num_Impl15_ShallowModel as ShallowModel19
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel18 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel7 with
    function ShallowModel0.shallow_model = ShallowModel18.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_IdxInLogic as IdxInLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = bool,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen as ClauseIsSeen0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate IdxInLogic0.idx_in_logic = IdxInLogic0.idx_in_logic,
    val Max0.mAX' = Max1.mAX'
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel17 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_InFormula as InFormula0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue2 with
    type t = CreuSat_Trail_Step_Type.t_step
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds2 with
    type t = CreuSat_Trail_Step_Type.t_step
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve10 with
    type t = bool
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve9 with
    type t = usize
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic2 with
    type t = usize,
    type s = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  use prelude.Int
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel16 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel15 with
    type t = usize,
    type ShallowModelTy0.shallowModelTy = int,
    function ShallowModel0.shallow_model = ShallowModel19.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = usize
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel14 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel13 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = bool
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = bool
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = bool
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel12 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel11 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel10 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic1 with
    type t = bool,
    type s = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX',
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicUtil_ElemsLessThan as ElemsLessThan0
  clone CreuSat_Decision_Impl2_IncrementAndMove_Interface as IncrementAndMove0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate ElemsLessThan0.elems_less_than = ElemsLessThan0.elems_less_than,
    val Max0.mAX' = Max1.mAX',
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant2.invariant',
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept as SameIdxSamePolarityExcept0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel7.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_ConflictAnalysis_Resolve_Interface as Resolve8 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate InFormula0.in_formula = InFormula0.in_formula,
    function ShallowModel0.shallow_model = ShallowModel17.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function ShallowModel1.shallow_model = ShallowModel11.shallow_model,
    predicate IsOpp0.is_opp = IsOpp0.is_opp,
    predicate SameIdxSamePolarityExcept0.same_idx_same_polarity_except = SameIdxSamePolarityExcept0.same_idx_same_polarity_except,
    function ShallowModel2.shallow_model = ShallowModel7.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    function ShallowModel3.shallow_model = ShallowModel15.shallow_model,
    function ShallowModel4.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel5.shallow_model = ShallowModel13.shallow_model,
    predicate ElemsLessThan0.elems_less_than = ElemsLessThan0.elems_less_than,
    function ShallowModel6.shallow_model = ShallowModel2.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
    predicate ClauseIsSeen0.clause_is_seen = ClauseIsSeen0.clause_is_seen,
    predicate Unsat0.unsat = Unsat0.unsat,
    predicate Invariant2.invariant' = Invariant3.invariant',
    function ShallowModel7.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel8.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel9.shallow_model = ShallowModel4.shallow_model,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve7 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve6 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve5 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone Alloc_Vec_Impl13_Index_Interface as Index4 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate InBounds0.in_bounds = InBounds2.in_bounds,
    predicate HasValue0.has_value = HasValue2.has_value,
    type Output0.output = CreuSat_Trail_Step_Type.t_step
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve4 with
    type t = bool,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    predicate Resolve0.resolve = Resolve10.resolve,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve3 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    function IndexLogic0.index_logic = IndexLogic2.index_logic,
    predicate Resolve0.resolve = Resolve9.resolve,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreuSat_ConflictAnalysis_ChooseLiteral_Interface as ChooseLiteral0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Unsat0.unsat = Unsat0.unsat,
    function ShallowModel0.shallow_model = ShallowModel15.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel16.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel11.shallow_model,
    predicate IsOpp0.is_opp = IsOpp0.is_opp,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = usize
  clone Alloc_Vec_Impl13_Index_Interface as Index3 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    type Output0.output = usize
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel13.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = bool
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = bool,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = bool,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Lit_Impl2_Index_Interface as Index2 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len1 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model
  clone CreuSat_Clause_Impl3_Clone_Interface as Clone0
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  clone Alloc_Vec_FromElem_Interface as FromElem0 with
    type t = bool,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl0_New_Interface as New0 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use CreuSat_ConflictAnalysis_Conflict_Type as CreuSat_ConflictAnalysis_Conflict_Type
  let rec cfg analyze_conflict [#"../CreuSAT/src/conflict_analysis.rs" 181 0 181 95] [@cfg:stackify] [@cfg:subregion_analysis] (f : CreuSat_Formula_Formula_Type.t_formula) (trail : CreuSat_Trail_Trail_Type.t_trail) (cref : usize) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : CreuSat_ConflictAnalysis_Conflict_Type.t_conflict
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 150 11 150 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 151 11 151 36] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < UIntSize.to_int Max0.mAX'}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 152 11 152 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 153 11 153 35] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 154 0 154 55] Unsat0.unsat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref)) (CreuSat_Trail_Trail_Type.trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 180 0 180 44] Invariant2.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 155 10 179 1] match (result) with
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Ground -> NotSatisfiable0.not_satisfiable f
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Unit clause -> Invariant3.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ Seq.length (ShallowModel1.shallow_model clause) = 1 /\ VarsInRangeInner0.vars_in_range_inner (ShallowModel1.shallow_model clause) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel1.shallow_model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel2.shallow_model f)
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Learned s_idx clause -> Invariant3.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ Seq.length (ShallowModel1.shallow_model clause) > 1 /\ VarsInRangeInner0.vars_in_range_inner (ShallowModel1.shallow_model clause) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel1.shallow_model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel2.shallow_model f) /\ UIntSize.to_int s_idx < Seq.length (ShallowModel1.shallow_model clause)
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Restart clause -> Invariant3.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ Seq.length (ShallowModel1.shallow_model clause) > 1 /\ VarsInRangeInner0.vars_in_range_inner (ShallowModel1.shallow_model clause) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel1.shallow_model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel2.shallow_model f)
      end }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 180 0 180 44] Invariant2.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_ConflictAnalysis_Conflict_Type.t_conflict;
  var f_1 : CreuSat_Formula_Formula_Type.t_formula;
  var trail_2 : CreuSat_Trail_Trail_Type.t_trail;
  var cref_3 : usize;
  var d_4 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var decisionlevel_13 : usize;
  var _14 : CreuSat_Trail_Trail_Type.t_trail;
  var to_bump_15 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var break_cond_16 : usize;
  var _17 : bool;
  var _18 : usize;
  var path_c_19 : usize;
  var seen_20 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _21 : usize;
  var i_22 : usize;
  var _23 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var clause_24 : CreuSat_Clause_Clause_Type.t_clause;
  var _25 : CreuSat_Clause_Clause_Type.t_clause;
  var _26 : CreuSat_Clause_Clause_Type.t_clause;
  var _27 : CreuSat_Formula_Formula_Type.t_formula;
  var _28 : usize;
  var j_29 : usize;
  var _30 : ();
  var _36 : ();
  var _37 : bool;
  var _38 : usize;
  var _39 : usize;
  var _40 : CreuSat_Clause_Clause_Type.t_clause;
  var _41 : borrowed bool;
  var _42 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  var _43 : usize;
  var _44 : CreuSat_Lit_Lit_Type.t_lit;
  var _45 : CreuSat_Lit_Lit_Type.t_lit;
  var _46 : CreuSat_Clause_Clause_Type.t_clause;
  var _47 : usize;
  var _48 : ();
  var _49 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _50 : usize;
  var _51 : CreuSat_Lit_Lit_Type.t_lit;
  var _52 : CreuSat_Lit_Lit_Type.t_lit;
  var _53 : CreuSat_Clause_Clause_Type.t_clause;
  var _54 : usize;
  var _55 : ();
  var _56 : bool;
  var _57 : usize;
  var _58 : usize;
  var _59 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _60 : usize;
  var _61 : CreuSat_Lit_Lit_Type.t_lit;
  var _62 : CreuSat_Lit_Lit_Type.t_lit;
  var _63 : CreuSat_Clause_Clause_Type.t_clause;
  var _64 : usize;
  var _65 : usize;
  var _66 : ();
  var _67 : ();
  var _68 : ();
  var clause_69 : CreuSat_Clause_Clause_Type.t_clause;
  var _70 : ();
  var _79 : bool;
  var _80 : usize;
  var _81 : usize;
  var c_idx_82 : usize;
  var _83 : Core_Option_Option_Type.t_option usize;
  var _84 : CreuSat_Clause_Clause_Type.t_clause;
  var _85 : CreuSat_Clause_Clause_Type.t_clause;
  var _86 : CreuSat_Trail_Trail_Type.t_trail;
  var _87 : borrowed usize;
  var _88 : borrowed usize;
  var _89 : CreuSat_Formula_Formula_Type.t_formula;
  var _90 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _91 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _92 : isize;
  var c_idx_93 : usize;
  var _94 : ();
  var ante_95 : CreuSat_Clause_Clause_Type.t_clause;
  var _96 : CreuSat_Trail_Reason_Type.t_reason;
  var _97 : CreuSat_Trail_Step_Type.t_step;
  var _98 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _99 : usize;
  var _100 : isize;
  var c_101 : usize;
  var _102 : CreuSat_Clause_Clause_Type.t_clause;
  var _103 : CreuSat_Formula_Formula_Type.t_formula;
  var _104 : usize;
  var c_105 : usize;
  var _106 : CreuSat_Clause_Clause_Type.t_clause;
  var _107 : CreuSat_Clause_Clause_Type.t_clause;
  var _108 : CreuSat_Formula_Formula_Type.t_formula;
  var _109 : usize;
  var _110 : ();
  var idx_111 : usize;
  var _112 : CreuSat_Lit_Lit_Type.t_lit;
  var _113 : CreuSat_Trail_Step_Type.t_step;
  var _114 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _115 : usize;
  var _116 : ();
  var _118 : ();
  var _119 : CreuSat_Formula_Formula_Type.t_formula;
  var _120 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _121 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _122 : CreuSat_Clause_Clause_Type.t_clause;
  var _123 : usize;
  var _124 : usize;
  var _125 : CreuSat_Trail_Trail_Type.t_trail;
  var _126 : CreuSat_Trail_Trail_Type.t_trail;
  var _127 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  var _128 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  var _129 : borrowed usize;
  var _130 : borrowed usize;
  var _131 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _132 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _133 : ();
  var _134 : ();
  var _135 : ();
  var _136 : ();
  var _137 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _138 : CreuSat_Formula_Formula_Type.t_formula;
  var _139 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _140 : bool;
  var _141 : usize;
  var _142 : CreuSat_Clause_Clause_Type.t_clause;
  var _143 : bool;
  var _144 : usize;
  var _145 : CreuSat_Clause_Clause_Type.t_clause;
  var _146 : CreuSat_Clause_Clause_Type.t_clause;
  var _147 : ();
  var _148 : bool;
  var _149 : usize;
  var _150 : usize;
  var _151 : ();
  var _152 : CreuSat_Clause_Clause_Type.t_clause;
  var k_153 : usize;
  var s_idx_154 : usize;
  var _155 : ();
  var _158 : bool;
  var _159 : usize;
  var _160 : usize;
  var _161 : CreuSat_Clause_Clause_Type.t_clause;
  var _162 : ();
  var _163 : bool;
  var _164 : usize;
  var _165 : usize;
  var _166 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _167 : usize;
  var _168 : CreuSat_Lit_Lit_Type.t_lit;
  var _169 : CreuSat_Lit_Lit_Type.t_lit;
  var _170 : CreuSat_Clause_Clause_Type.t_clause;
  var _171 : usize;
  var _172 : usize;
  var _173 : ();
  var _174 : usize;
  var _175 : ();
  var _176 : ();
  var _177 : ();
  var _178 : usize;
  var _179 : CreuSat_Clause_Clause_Type.t_clause;
  {
    f_1 <- f;
    trail_2 <- trail;
    cref_3 <- cref;
    d_4 <- d;
    goto BB0
  }
  BB0 {
    _14 <- trail_2;
    decisionlevel_13 <- ([#"../CreuSAT/src/conflict_analysis.rs" 182 24 182 46] DecisionLevel0.decision_level _14);
    goto BB1
  }
  BB1 {
    to_bump_15 <- ([#"../CreuSAT/src/conflict_analysis.rs" 183 22 183 32] New0.new ());
    goto BB2
  }
  BB2 {
    _18 <- decisionlevel_13;
    _17 <- ([#"../CreuSAT/src/conflict_analysis.rs" 184 24 184 42] _18 = ([#"../CreuSAT/src/conflict_analysis.rs" 184 41 184 42] (0 : usize)));
    switch (_17)
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    break_cond_16 <- ([#"../CreuSAT/src/conflict_analysis.rs" 184 45 184 46] (0 : usize));
    goto BB5
  }
  BB4 {
    break_cond_16 <- ([#"../CreuSAT/src/conflict_analysis.rs" 184 56 184 57] (1 : usize));
    goto BB5
  }
  BB5 {
    path_c_19 <- ([#"../CreuSAT/src/conflict_analysis.rs" 185 28 185 29] (0 : usize));
    _21 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    seen_20 <- ([#"../CreuSAT/src/conflict_analysis.rs" 186 19 186 42] FromElem0.from_elem ([#"../CreuSAT/src/conflict_analysis.rs" 186 24 186 29] false) _21);
    goto BB6
  }
  BB6 {
    _23 <- CreuSat_Trail_Trail_Type.trail_trail trail_2;
    i_22 <- ([#"../CreuSAT/src/conflict_analysis.rs" 187 16 187 33] Len0.len _23);
    goto BB7
  }
  BB7 {
    _27 <- f_1;
    _28 <- cref_3;
    _26 <- ([#"../CreuSAT/src/conflict_analysis.rs" 188 17 188 24] Index0.index _27 _28);
    goto BB8
  }
  BB8 {
    _25 <- _26;
    clause_24 <- ([#"../CreuSAT/src/conflict_analysis.rs" 188 17 188 32] Clone0.clone' _25);
    goto BB9
  }
  BB9 {
    j_29 <- ([#"../CreuSAT/src/conflict_analysis.rs" 189 23 189 24] (0 : usize));
    goto BB10
  }
  BB10 {
    goto BB11
  }
  BB11 {
    goto BB12
  }
  BB12 {
    goto BB13
  }
  BB13 {
    goto BB14
  }
  BB14 {
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 190 4 191 94] forall idx : int . 0 <= idx /\ idx < Seq.length (ShallowModel3.shallow_model seen_20) -> Seq.get (ShallowModel3.shallow_model seen_20) idx = (exists i : int . 0 <= i /\ i < UIntSize.to_int j_29 /\ IndexLogic0.index_logic (Seq.get (ShallowModel1.shallow_model clause_24) i) = idx) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 192 16 192 42] Seq.length (ShallowModel3.shallow_model seen_20) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 193 16 193 29] UIntSize.to_int path_c_19 <= UIntSize.to_int j_29 };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 194 16 194 35] UIntSize.to_int j_29 <= Seq.length (ShallowModel1.shallow_model clause_24) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 195 16 195 54] ElemsLessThan0.elems_less_than (ShallowModel4.shallow_model to_bump_15) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1)) };
    _38 <- j_29;
    _40 <- clause_24;
    _39 <- ([#"../CreuSAT/src/conflict_analysis.rs" 196 14 196 26] Len1.len _40);
    goto BB15
  }
  BB15 {
    _37 <- ([#"../CreuSAT/src/conflict_analysis.rs" 196 10 196 26] _38 < _39);
    switch (_37)
      | False -> goto BB29
      | True -> goto BB16
      end
  }
  BB16 {
    _42 <- borrow_mut seen_20;
    seen_20 <-  ^ _42;
    _46 <- clause_24;
    _47 <- j_29;
    _45 <- ([#"../CreuSAT/src/conflict_analysis.rs" 197 13 197 22] Index1.index _46 _47);
    goto BB17
  }
  BB17 {
    _44 <- _45;
    _43 <- ([#"../CreuSAT/src/conflict_analysis.rs" 197 13 197 30] Index2.index _44);
    goto BB18
  }
  BB18 {
    _41 <- ([#"../CreuSAT/src/conflict_analysis.rs" 197 8 197 31] IndexMut0.index_mut _42 _43);
    goto BB19
  }
  BB19 {
    _41 <- { _41 with current = ([#"../CreuSAT/src/conflict_analysis.rs" 197 34 197 38] true) };
    assume { Resolve0.resolve _41 };
    _49 <- borrow_mut to_bump_15;
    to_bump_15 <-  ^ _49;
    _53 <- clause_24;
    _54 <- j_29;
    _52 <- ([#"../CreuSAT/src/conflict_analysis.rs" 198 21 198 30] Index1.index _53 _54);
    goto BB20
  }
  BB20 {
    _51 <- _52;
    _50 <- ([#"../CreuSAT/src/conflict_analysis.rs" 198 21 198 38] Index2.index _51);
    goto BB21
  }
  BB21 {
    _48 <- ([#"../CreuSAT/src/conflict_analysis.rs" 198 8 198 39] Push0.push _49 _50);
    goto BB22
  }
  BB22 {
    _59 <- CreuSat_Trail_Trail_Type.trail_lit_to_level trail_2;
    _63 <- clause_24;
    _64 <- j_29;
    _62 <- ([#"../CreuSAT/src/conflict_analysis.rs" 199 30 199 39] Index1.index _63 _64);
    goto BB23
  }
  BB23 {
    _61 <- _62;
    _60 <- ([#"../CreuSAT/src/conflict_analysis.rs" 199 30 199 47] Index2.index _61);
    goto BB24
  }
  BB24 {
    _58 <- ([#"../CreuSAT/src/conflict_analysis.rs" 199 11 199 48] Index3.index _59 _60);
    goto BB25
  }
  BB25 {
    _57 <- _58;
    _65 <- decisionlevel_13;
    _56 <- ([#"../CreuSAT/src/conflict_analysis.rs" 199 11 199 65] _57 >= _65);
    switch (_56)
      | False -> goto BB27
      | True -> goto BB26
      end
  }
  BB26 {
    path_c_19 <- ([#"../CreuSAT/src/conflict_analysis.rs" 200 12 200 23] path_c_19 + ([#"../CreuSAT/src/conflict_analysis.rs" 200 22 200 23] (1 : usize)));
    _55 <- ();
    goto BB28
  }
  BB27 {
    _55 <- ();
    goto BB28
  }
  BB28 {
    j_29 <- ([#"../CreuSAT/src/conflict_analysis.rs" 202 8 202 14] j_29 + ([#"../CreuSAT/src/conflict_analysis.rs" 202 13 202 14] (1 : usize)));
    _36 <- ();
    goto BB14
  }
  BB29 {
    _30 <- ();
    clause_69 <- clause_24;
    clause_24 <- any CreuSat_Clause_Clause_Type.t_clause;
    goto BB30
  }
  BB30 {
    goto BB31
  }
  BB31 {
    goto BB32
  }
  BB32 {
    goto BB33
  }
  BB33 {
    goto BB34
  }
  BB34 {
    goto BB35
  }
  BB35 {
    goto BB36
  }
  BB36 {
    goto BB37
  }
  BB37 {
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 205 16 205 42] Seq.length (ShallowModel3.shallow_model seen_20) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 205 4 205 44] forall idx : int . 0 <= idx /\ idx < Seq.length (ShallowModel3.shallow_model seen_20) -> Seq.get (ShallowModel3.shallow_model seen_20) idx = IdxInLogic0.idx_in_logic idx (ShallowModel1.shallow_model clause_69) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 207 16 207 45] Invariant3.invariant' clause_69 (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1)) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 208 16 208 51] EquisatExtensionInner0.equisat_extension_inner clause_69 (ShallowModel2.shallow_model f_1) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 209 16 209 47] Unsat0.unsat clause_69 (CreuSat_Trail_Trail_Type.trail_assignments trail_2) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 210 16 210 51] 0 <= UIntSize.to_int i_22 /\ UIntSize.to_int i_22 <= Seq.length (ShallowModel5.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail_2)) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 211 16 211 40] UIntSize.to_int path_c_19 <= Seq.length (ShallowModel1.shallow_model clause_69) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 212 16 212 54] ElemsLessThan0.elems_less_than (ShallowModel4.shallow_model to_bump_15) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1)) };
    _80 <- path_c_19;
    _81 <- break_cond_16;
    _79 <- ([#"../CreuSAT/src/conflict_analysis.rs" 213 10 213 29] _80 > _81);
    switch (_79)
      | False -> goto BB54
      | True -> goto BB38
      end
  }
  BB38 {
    _85 <- clause_69;
    _84 <- _85;
    _86 <- trail_2;
    _88 <- borrow_mut i_22;
    i_22 <-  ^ _88;
    _87 <- borrow_mut ( * _88);
    _88 <- { _88 with current = ( ^ _87) };
    assume { Resolve1.resolve _88 };
    _89 <- f_1;
    _91 <- seen_20;
    _90 <- _91;
    _83 <- ([#"../CreuSAT/src/conflict_analysis.rs" 214 26 214 74] ChooseLiteral0.choose_literal _84 _86 _87 _89 _90);
    goto BB39
  }
  BB39 {
    switch (_83)
      | Core_Option_Option_Type.C_None -> goto BB40
      | Core_Option_Option_Type.C_Some _ -> goto BB42
      end
  }
  BB40 {
    assume { Resolve4.resolve seen_20 };
    _70 <- ();
    goto BB55
  }
  BB41 {
    assume { Resolve2.resolve d_4 };
    assume { Resolve3.resolve to_bump_15 };
    assume { Resolve4.resolve seen_20 };
    absurd
  }
  BB42 {
    c_idx_93 <- Core_Option_Option_Type.some_0 _83;
    c_idx_82 <- c_idx_93;
    _98 <- CreuSat_Trail_Trail_Type.trail_trail trail_2;
    _99 <- i_22;
    _97 <- ([#"../CreuSAT/src/conflict_analysis.rs" 218 26 218 40] Index4.index _98 _99);
    goto BB43
  }
  BB43 {
    _96 <- CreuSat_Trail_Step_Type.step_reason _97;
    switch (_96)
      | CreuSat_Trail_Reason_Type.C_Unit _ -> goto BB47
      | CreuSat_Trail_Reason_Type.C_Long _ -> goto BB45
      | _ -> goto BB44
      end
  }
  BB44 {
    assume { Resolve4.resolve seen_20 };
    _70 <- ();
    goto BB55
  }
  BB45 {
    c_101 <- CreuSat_Trail_Reason_Type.long_0 _96;
    _103 <- f_1;
    _104 <- c_101;
    _102 <- ([#"../CreuSAT/src/conflict_analysis.rs" 219 32 219 37] Index0.index _103 _104);
    goto BB46
  }
  BB46 {
    ante_95 <- _102;
    goto BB49
  }
  BB47 {
    c_105 <- CreuSat_Trail_Reason_Type.unit_0 _96;
    _108 <- f_1;
    _109 <- c_105;
    _107 <- ([#"../CreuSAT/src/conflict_analysis.rs" 220 32 220 37] Index0.index _108 _109);
    goto BB48
  }
  BB48 {
    _106 <- _107;
    ante_95 <- _106;
    goto BB49
  }
  BB49 {
    _114 <- CreuSat_Trail_Trail_Type.trail_trail trail_2;
    _115 <- i_22;
    _113 <- ([#"../CreuSAT/src/conflict_analysis.rs" 223 18 223 32] Index4.index _114 _115);
    goto BB50
  }
  BB50 {
    _112 <- CreuSat_Trail_Step_Type.step_lit _113;
    idx_111 <- ([#"../CreuSAT/src/conflict_analysis.rs" 223 18 223 44] Index2.index _112);
    goto BB51
  }
  BB51 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 224 22 224 71] SameIdxSamePolarityExcept0.same_idx_same_polarity_except clause_69 ante_95 (UIntSize.to_int idx_111) };
    goto BB52
  }
  BB52 {
    _116 <- ();
    _119 <- f_1;
    _121 <- borrow_mut clause_69;
    clause_69 <-  ^ _121;
    _120 <- borrow_mut ( * _121);
    _121 <- { _121 with current = ( ^ _120) };
    assume { Resolve5.resolve _121 };
    _122 <- ante_95;
    _123 <- idx_111;
    _124 <- c_idx_82;
    _126 <- trail_2;
    _125 <- _126;
    _128 <- borrow_mut seen_20;
    seen_20 <-  ^ _128;
    _127 <- borrow_mut ( * _128);
    _128 <- { _128 with current = ( ^ _127) };
    assume { Resolve6.resolve _128 };
    _130 <- borrow_mut path_c_19;
    path_c_19 <-  ^ _130;
    _129 <- borrow_mut ( * _130);
    _130 <- { _130 with current = ( ^ _129) };
    assume { Resolve1.resolve _130 };
    _132 <- borrow_mut to_bump_15;
    to_bump_15 <-  ^ _132;
    _131 <- borrow_mut ( * _132);
    _132 <- { _132 with current = ( ^ _131) };
    assume { Resolve7.resolve _132 };
    _118 <- ([#"../CreuSAT/src/conflict_analysis.rs" 225 8 225 95] Resolve8.resolve _119 _120 _122 _123 _124 _125 _127 _129 _131);
    goto BB53
  }
  BB53 {
    _36 <- ();
    goto BB37
  }
  BB54 {
    assume { Resolve4.resolve seen_20 };
    _70 <- ();
    goto BB56
  }
  BB55 {
    goto BB56
  }
  BB56 {
    _137 <- borrow_mut ( * d_4);
    d_4 <- { d_4 with current = ( ^ _137) };
    assume { Resolve2.resolve d_4 };
    _138 <- f_1;
    assume { Resolve3.resolve _139 };
    _139 <- to_bump_15;
    to_bump_15 <- any Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
    _136 <- ([#"../CreuSAT/src/conflict_analysis.rs" 228 4 228 36] IncrementAndMove0.increment_and_move _137 _138 _139);
    goto BB57
  }
  BB57 {
    _142 <- clause_69;
    _141 <- ([#"../CreuSAT/src/conflict_analysis.rs" 229 7 229 19] Len1.len _142);
    goto BB58
  }
  BB58 {
    _140 <- ([#"../CreuSAT/src/conflict_analysis.rs" 229 7 229 24] _141 = ([#"../CreuSAT/src/conflict_analysis.rs" 229 23 229 24] (0 : usize)));
    switch (_140)
      | False -> goto BB60
      | True -> goto BB59
      end
  }
  BB59 {
    _0 <- CreuSat_ConflictAnalysis_Conflict_Type.C_Ground;
    goto BB82
  }
  BB60 {
    _145 <- clause_69;
    _144 <- ([#"../CreuSAT/src/conflict_analysis.rs" 231 14 231 26] Len1.len _145);
    goto BB61
  }
  BB61 {
    _143 <- ([#"../CreuSAT/src/conflict_analysis.rs" 231 14 231 31] _144 = ([#"../CreuSAT/src/conflict_analysis.rs" 231 30 231 31] (1 : usize)));
    switch (_143)
      | False -> goto BB64
      | True -> goto BB62
      end
  }
  BB62 {
    _146 <- clause_69;
    clause_69 <- any CreuSat_Clause_Clause_Type.t_clause;
    _0 <- CreuSat_ConflictAnalysis_Conflict_Type.C_Unit _146;
    goto BB63
  }
  BB63 {
    goto BB81
  }
  BB64 {
    _149 <- path_c_19;
    _150 <- break_cond_16;
    _148 <- ([#"../CreuSAT/src/conflict_analysis.rs" 235 11 235 30] _149 > _150);
    switch (_148)
      | False -> goto BB67
      | True -> goto BB65
      end
  }
  BB65 {
    _152 <- clause_69;
    clause_69 <- any CreuSat_Clause_Clause_Type.t_clause;
    _0 <- CreuSat_ConflictAnalysis_Conflict_Type.C_Restart _152;
    goto BB66
  }
  BB66 {
    goto BB87
  }
  BB67 {
    _147 <- ();
    k_153 <- ([#"../CreuSAT/src/conflict_analysis.rs" 238 27 238 28] (0 : usize));
    s_idx_154 <- ([#"../CreuSAT/src/conflict_analysis.rs" 239 31 239 32] (0 : usize));
    goto BB68
  }
  BB68 {
    goto BB69
  }
  BB69 {
    goto BB70
  }
  BB70 {
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 240 20 240 41] UIntSize.to_int k_153 <= Seq.length (ShallowModel1.shallow_model clause_69) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 241 20 241 44] UIntSize.to_int s_idx_154 < Seq.length (ShallowModel1.shallow_model clause_69) };
    _159 <- k_153;
    _161 <- clause_69;
    _160 <- ([#"../CreuSAT/src/conflict_analysis.rs" 242 18 242 30] Len1.len _161);
    goto BB71
  }
  BB71 {
    _158 <- ([#"../CreuSAT/src/conflict_analysis.rs" 242 14 242 30] _159 < _160);
    switch (_158)
      | False -> goto BB78
      | True -> goto BB72
      end
  }
  BB72 {
    _166 <- CreuSat_Trail_Trail_Type.trail_lit_to_level trail_2;
    _170 <- clause_69;
    _171 <- k_153;
    _169 <- ([#"../CreuSAT/src/conflict_analysis.rs" 243 34 243 43] Index1.index _170 _171);
    goto BB73
  }
  BB73 {
    _168 <- _169;
    _167 <- ([#"../CreuSAT/src/conflict_analysis.rs" 243 34 243 51] Index2.index _168);
    goto BB74
  }
  BB74 {
    _165 <- ([#"../CreuSAT/src/conflict_analysis.rs" 243 15 243 52] Index3.index _166 _167);
    goto BB75
  }
  BB75 {
    _164 <- _165;
    _172 <- decisionlevel_13;
    _163 <- ([#"../CreuSAT/src/conflict_analysis.rs" 243 15 243 69] _164 = _172);
    switch (_163)
      | False -> goto BB77
      | True -> goto BB76
      end
  }
  BB76 {
    _174 <- k_153;
    s_idx_154 <- _174;
    _174 <- any usize;
    _155 <- ();
    goto BB79
  }
  BB77 {
    _162 <- ();
    k_153 <- ([#"../CreuSAT/src/conflict_analysis.rs" 247 12 247 18] k_153 + ([#"../CreuSAT/src/conflict_analysis.rs" 247 17 247 18] (1 : usize)));
    _36 <- ();
    goto BB70
  }
  BB78 {
    _155 <- ();
    goto BB79
  }
  BB79 {
    _178 <- s_idx_154;
    _179 <- clause_69;
    clause_69 <- any CreuSat_Clause_Clause_Type.t_clause;
    _0 <- CreuSat_ConflictAnalysis_Conflict_Type.C_Learned _178 _179;
    goto BB80
  }
  BB80 {
    goto BB81
  }
  BB81 {
    goto BB82
  }
  BB82 {
    goto BB83
  }
  BB83 {
    goto BB84
  }
  BB84 {
    goto BB85
  }
  BB85 {
    goto BB86
  }
  BB86 {
    goto BB91
  }
  BB87 {
    goto BB88
  }
  BB88 {
    goto BB89
  }
  BB89 {
    goto BB90
  }
  BB90 {
    goto BB91
  }
  BB91 {
    return _0
  }
  
end
module CreuSat_ConflictAnalysis_ResolveEmptyClause_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub as NotSatisfiable0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Stub as Unsat0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val resolve_empty_clause [#"../CreuSAT/src/conflict_analysis.rs" 259 0 259 76] (f : CreuSat_Formula_Formula_Type.t_formula) (trail : CreuSat_Trail_Trail_Type.t_trail) (cref : usize) : bool
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 254 11 254 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 255 11 255 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 256 11 256 35] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 257 0 257 55] Unsat0.unsat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref)) (CreuSat_Trail_Trail_Type.trail_assignments trail)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 258 0 258 42] result -> NotSatisfiable0.not_satisfiable f }
    
end
module CreuSat_ConflictAnalysis_ResolveEmptyClause
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.IntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreusotContracts_Std1_Num_Impl15_ShallowModel as ShallowModel17
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel16 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel16.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use seq.Seq
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicUtil_ElemsLessThan as ElemsLessThan0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel15 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept as SameIdxSamePolarityExcept0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel14 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_InFormula as InFormula0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = CreuSat_Trail_Step_Type.t_step
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = CreuSat_Trail_Step_Type.t_step
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve9 with
    type t = usize
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic2 with
    type t = usize,
    type s = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve8 with
    type t = bool
  use prelude.Int
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = bool,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel13 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel12 with
    type t = usize,
    type ShallowModelTy0.shallowModelTy = int,
    function ShallowModel0.shallow_model = ShallowModel17.shallow_model
  clone CreuSat_Logic_LogicLit_IdxInLogic as IdxInLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = bool
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = bool
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = bool
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel11 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq bool,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel10 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel8 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel7 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic1 with
    type t = bool,
    type s = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen as ClauseIsSeen0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate IdxInLogic0.idx_in_logic = IdxInLogic0.idx_in_logic,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_ConflictAnalysis_Resolve_Interface as Resolve7 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate InFormula0.in_formula = InFormula0.in_formula,
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function ShallowModel1.shallow_model = ShallowModel10.shallow_model,
    predicate IsOpp0.is_opp = IsOpp0.is_opp,
    predicate SameIdxSamePolarityExcept0.same_idx_same_polarity_except = SameIdxSamePolarityExcept0.same_idx_same_polarity_except,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    function ShallowModel3.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel4.shallow_model = ShallowModel11.shallow_model,
    function ShallowModel5.shallow_model = ShallowModel15.shallow_model,
    predicate ElemsLessThan0.elems_less_than = ElemsLessThan0.elems_less_than,
    function ShallowModel6.shallow_model = ShallowModel8.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
    predicate ClauseIsSeen0.clause_is_seen = ClauseIsSeen0.clause_is_seen,
    predicate Unsat0.unsat = Unsat0.unsat,
    predicate Invariant2.invariant' = Invariant3.invariant',
    function ShallowModel7.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel8.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel9.shallow_model = ShallowModel5.shallow_model,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve6 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve5 with
    type t = Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve4 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone Alloc_Vec_Impl13_Index_Interface as Index3 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    type Output0.output = CreuSat_Trail_Step_Type.t_step
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve3 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic2.index_logic,
    predicate Resolve0.resolve = Resolve9.resolve,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve2 with
    type t = bool,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    predicate Resolve0.resolve = Resolve8.resolve,
    val Max0.mAX' = Max0.mAX'
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreuSat_ConflictAnalysis_ChooseLiteral_Interface as ChooseLiteral0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Unsat0.unsat = Unsat0.unsat,
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel13.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel10.shallow_model,
    predicate IsOpp0.is_opp = IsOpp0.is_opp,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = usize
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = bool
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = bool,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = bool,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Lit_Impl2_Index_Interface as Index2 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len1 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  clone Alloc_Vec_Impl0_New_Interface as New0 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Clause_Impl3_Clone_Interface as Clone0
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone Alloc_Vec_FromElem_Interface as FromElem0 with
    type t = bool,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  let rec cfg resolve_empty_clause [#"../CreuSAT/src/conflict_analysis.rs" 259 0 259 76] [@cfg:stackify] [@cfg:subregion_analysis] (f : CreuSat_Formula_Formula_Type.t_formula) (trail : CreuSat_Trail_Trail_Type.t_trail) (cref : usize) : bool
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 254 11 254 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 255 11 255 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 256 11 256 35] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 257 0 257 55] Unsat0.unsat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref)) (CreuSat_Trail_Trail_Type.trail_assignments trail)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 258 0 258 42] result -> NotSatisfiable0.not_satisfiable f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var f_1 : CreuSat_Formula_Formula_Type.t_formula;
  var trail_2 : CreuSat_Trail_Trail_Type.t_trail;
  var cref_3 : usize;
  var decisionlevel_9 : usize;
  var _10 : CreuSat_Trail_Trail_Type.t_trail;
  var seen_11 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _12 : usize;
  var i_13 : usize;
  var _14 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var clause_15 : CreuSat_Clause_Clause_Type.t_clause;
  var _16 : CreuSat_Clause_Clause_Type.t_clause;
  var _17 : CreuSat_Clause_Clause_Type.t_clause;
  var _18 : CreuSat_Formula_Formula_Type.t_formula;
  var _19 : usize;
  var to_bump_20 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var j_21 : usize;
  var _22 : ();
  var _26 : ();
  var _27 : bool;
  var _28 : usize;
  var _29 : usize;
  var _30 : CreuSat_Clause_Clause_Type.t_clause;
  var _31 : borrowed bool;
  var _32 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  var _33 : usize;
  var _34 : CreuSat_Lit_Lit_Type.t_lit;
  var _35 : CreuSat_Lit_Lit_Type.t_lit;
  var _36 : CreuSat_Clause_Clause_Type.t_clause;
  var _37 : usize;
  var _38 : ();
  var _39 : ();
  var _40 : ();
  var clause_41 : CreuSat_Clause_Clause_Type.t_clause;
  var _42 : ();
  var c_idx_44 : usize;
  var _45 : Core_Option_Option_Type.t_option usize;
  var _46 : CreuSat_Clause_Clause_Type.t_clause;
  var _47 : CreuSat_Clause_Clause_Type.t_clause;
  var _48 : CreuSat_Trail_Trail_Type.t_trail;
  var _49 : borrowed usize;
  var _50 : borrowed usize;
  var _51 : CreuSat_Formula_Formula_Type.t_formula;
  var _52 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _53 : Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global);
  var _54 : isize;
  var c_idx_55 : usize;
  var _56 : ();
  var ante_57 : CreuSat_Clause_Clause_Type.t_clause;
  var _58 : CreuSat_Trail_Reason_Type.t_reason;
  var _59 : CreuSat_Trail_Step_Type.t_step;
  var _60 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _61 : usize;
  var _62 : isize;
  var c_63 : usize;
  var _64 : CreuSat_Clause_Clause_Type.t_clause;
  var _65 : CreuSat_Formula_Formula_Type.t_formula;
  var _66 : usize;
  var _67 : ();
  var path_c_68 : usize;
  var _69 : ();
  var _70 : CreuSat_Formula_Formula_Type.t_formula;
  var _71 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _72 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _73 : CreuSat_Clause_Clause_Type.t_clause;
  var _74 : usize;
  var _75 : CreuSat_Lit_Lit_Type.t_lit;
  var _76 : CreuSat_Trail_Step_Type.t_step;
  var _77 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _78 : usize;
  var _79 : usize;
  var _80 : CreuSat_Trail_Trail_Type.t_trail;
  var _81 : CreuSat_Trail_Trail_Type.t_trail;
  var _82 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  var _83 : borrowed (Alloc_Vec_Vec_Type.t_vec bool (Alloc_Alloc_Global_Type.t_global));
  var _84 : borrowed usize;
  var _85 : borrowed usize;
  var _86 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _87 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _88 : bool;
  var _89 : usize;
  var _90 : CreuSat_Clause_Clause_Type.t_clause;
  var _91 : ();
  var _92 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    cref_3 <- cref;
    goto BB0
  }
  BB0 {
    _10 <- trail_2;
    decisionlevel_9 <- ([#"../CreuSAT/src/conflict_analysis.rs" 260 24 260 46] DecisionLevel0.decision_level _10);
    goto BB1
  }
  BB1 {
    _12 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    seen_11 <- ([#"../CreuSAT/src/conflict_analysis.rs" 261 19 261 42] FromElem0.from_elem ([#"../CreuSAT/src/conflict_analysis.rs" 261 24 261 29] false) _12);
    goto BB2
  }
  BB2 {
    _14 <- CreuSat_Trail_Trail_Type.trail_trail trail_2;
    i_13 <- ([#"../CreuSAT/src/conflict_analysis.rs" 262 16 262 33] Len0.len _14);
    goto BB3
  }
  BB3 {
    _18 <- f_1;
    _19 <- cref_3;
    _17 <- ([#"../CreuSAT/src/conflict_analysis.rs" 263 17 263 24] Index0.index _18 _19);
    goto BB4
  }
  BB4 {
    _16 <- _17;
    clause_15 <- ([#"../CreuSAT/src/conflict_analysis.rs" 263 17 263 32] Clone0.clone' _16);
    goto BB5
  }
  BB5 {
    to_bump_20 <- ([#"../CreuSAT/src/conflict_analysis.rs" 264 22 264 32] New0.new ());
    goto BB6
  }
  BB6 {
    j_21 <- ([#"../CreuSAT/src/conflict_analysis.rs" 265 23 265 24] (0 : usize));
    goto BB7
  }
  BB7 {
    goto BB8
  }
  BB8 {
    goto BB9
  }
  BB9 {
    goto BB10
  }
  BB10 {
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 266 4 267 96] forall idx : int . 0 <= idx /\ idx < Seq.length (ShallowModel1.shallow_model seen_11) -> Seq.get (ShallowModel1.shallow_model seen_11) idx = (exists i : int . 0 <= i /\ i < UIntSize.to_int j_21 /\ IndexLogic0.index_logic (Seq.get (ShallowModel2.shallow_model clause_15) i) = idx) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 268 16 268 42] Seq.length (ShallowModel1.shallow_model seen_11) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    invariant { [#"../CreuSAT/src/conflict_analysis.rs" 269 16 269 37] UIntSize.to_int j_21 <= Seq.length (ShallowModel2.shallow_model clause_15) };
    _28 <- j_21;
    _30 <- clause_15;
    _29 <- ([#"../CreuSAT/src/conflict_analysis.rs" 271 14 271 26] Len1.len _30);
    goto BB11
  }
  BB11 {
    _27 <- ([#"../CreuSAT/src/conflict_analysis.rs" 271 10 271 26] _28 < _29);
    switch (_27)
      | False -> goto BB16
      | True -> goto BB12
      end
  }
  BB12 {
    _32 <- borrow_mut seen_11;
    seen_11 <-  ^ _32;
    _36 <- clause_15;
    _37 <- j_21;
    _35 <- ([#"../CreuSAT/src/conflict_analysis.rs" 272 13 272 22] Index1.index _36 _37);
    goto BB13
  }
  BB13 {
    _34 <- _35;
    _33 <- ([#"../CreuSAT/src/conflict_analysis.rs" 272 13 272 30] Index2.index _34);
    goto BB14
  }
  BB14 {
    _31 <- ([#"../CreuSAT/src/conflict_analysis.rs" 272 8 272 31] IndexMut0.index_mut _32 _33);
    goto BB15
  }
  BB15 {
    _31 <- { _31 with current = ([#"../CreuSAT/src/conflict_analysis.rs" 272 34 272 38] true) };
    assume { Resolve0.resolve _31 };
    j_21 <- ([#"../CreuSAT/src/conflict_analysis.rs" 273 8 273 14] j_21 + ([#"../CreuSAT/src/conflict_analysis.rs" 273 13 273 14] (1 : usize)));
    _26 <- ();
    goto BB10
  }
  BB16 {
    _22 <- ();
    clause_41 <- clause_15;
    clause_15 <- any CreuSat_Clause_Clause_Type.t_clause;
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 276 18 276 45] ClauseIsSeen0.clause_is_seen clause_41 seen_11 };
    goto BB17
  }
  BB17 {
    _42 <- ();
    _47 <- clause_41;
    _46 <- _47;
    _48 <- trail_2;
    _50 <- borrow_mut i_13;
    i_13 <-  ^ _50;
    _49 <- borrow_mut ( * _50);
    _50 <- { _50 with current = ( ^ _49) };
    assume { Resolve1.resolve _50 };
    _51 <- f_1;
    _53 <- seen_11;
    _52 <- _53;
    _45 <- ([#"../CreuSAT/src/conflict_analysis.rs" 277 22 277 70] ChooseLiteral0.choose_literal _46 _48 _49 _51 _52);
    goto BB18
  }
  BB18 {
    switch (_45)
      | Core_Option_Option_Type.C_None -> goto BB19
      | Core_Option_Option_Type.C_Some _ -> goto BB21
      end
  }
  BB19 {
    assume { Resolve2.resolve seen_11 };
    assume { Resolve3.resolve to_bump_20 };
    _0 <- ([#"../CreuSAT/src/conflict_analysis.rs" 279 23 279 28] false);
    goto BB34
  }
  BB20 {
    assume { Resolve2.resolve seen_11 };
    assume { Resolve3.resolve to_bump_20 };
    absurd
  }
  BB21 {
    c_idx_55 <- Core_Option_Option_Type.some_0 _45;
    c_idx_44 <- c_idx_55;
    _60 <- CreuSat_Trail_Trail_Type.trail_trail trail_2;
    _61 <- i_13;
    _59 <- ([#"../CreuSAT/src/conflict_analysis.rs" 281 22 281 36] Index3.index _60 _61);
    goto BB22
  }
  BB22 {
    _58 <- CreuSat_Trail_Step_Type.step_reason _59;
    switch (_58)
      | CreuSat_Trail_Reason_Type.C_Unit _ -> goto BB24
      | _ -> goto BB23
      end
  }
  BB23 {
    assume { Resolve2.resolve seen_11 };
    assume { Resolve3.resolve to_bump_20 };
    _0 <- ([#"../CreuSAT/src/conflict_analysis.rs" 284 20 284 25] false);
    goto BB33
  }
  BB24 {
    c_63 <- CreuSat_Trail_Reason_Type.unit_0 _58;
    _65 <- f_1;
    _66 <- c_63;
    _64 <- ([#"../CreuSAT/src/conflict_analysis.rs" 283 28 283 33] Index0.index _65 _66);
    goto BB25
  }
  BB25 {
    ante_57 <- _64;
    path_c_68 <- ([#"../CreuSAT/src/conflict_analysis.rs" 286 21 286 22] (1 : usize));
    _70 <- f_1;
    _72 <- borrow_mut clause_41;
    clause_41 <-  ^ _72;
    _71 <- borrow_mut ( * _72);
    _72 <- { _72 with current = ( ^ _71) };
    assume { Resolve4.resolve _72 };
    _73 <- ante_57;
    _77 <- CreuSat_Trail_Trail_Type.trail_trail trail_2;
    _78 <- i_13;
    _76 <- ([#"../CreuSAT/src/conflict_analysis.rs" 287 34 287 48] Index3.index _77 _78);
    goto BB26
  }
  BB26 {
    _75 <- CreuSat_Trail_Step_Type.step_lit _76;
    _74 <- ([#"../CreuSAT/src/conflict_analysis.rs" 287 34 287 60] Index2.index _75);
    goto BB27
  }
  BB27 {
    _79 <- c_idx_44;
    _81 <- trail_2;
    _80 <- _81;
    _83 <- borrow_mut seen_11;
    seen_11 <-  ^ _83;
    assume { Resolve2.resolve seen_11 };
    _82 <- borrow_mut ( * _83);
    _83 <- { _83 with current = ( ^ _82) };
    assume { Resolve5.resolve _83 };
    _85 <- borrow_mut path_c_68;
    path_c_68 <-  ^ _85;
    _84 <- borrow_mut ( * _85);
    _85 <- { _85 with current = ( ^ _84) };
    assume { Resolve1.resolve _85 };
    _87 <- borrow_mut to_bump_20;
    to_bump_20 <-  ^ _87;
    assume { Resolve3.resolve to_bump_20 };
    _86 <- borrow_mut ( * _87);
    _87 <- { _87 with current = ( ^ _86) };
    assume { Resolve6.resolve _87 };
    _69 <- ([#"../CreuSAT/src/conflict_analysis.rs" 287 4 287 114] Resolve7.resolve _70 _71 _73 _74 _79 _80 _82 _84 _86);
    goto BB28
  }
  BB28 {
    _90 <- clause_41;
    _89 <- ([#"../CreuSAT/src/conflict_analysis.rs" 288 7 288 19] Len1.len _90);
    goto BB29
  }
  BB29 {
    _88 <- ([#"../CreuSAT/src/conflict_analysis.rs" 288 7 288 24] _89 = ([#"../CreuSAT/src/conflict_analysis.rs" 288 23 288 24] (0 : usize)));
    switch (_88)
      | False -> goto BB31
      | True -> goto BB30
      end
  }
  BB30 {
    _0 <- ([#"../CreuSAT/src/conflict_analysis.rs" 289 15 289 19] true);
    goto BB32
  }
  BB31 {
    _0 <- ([#"../CreuSAT/src/conflict_analysis.rs" 291 15 291 20] false);
    goto BB32
  }
  BB32 {
    goto BB33
  }
  BB33 {
    goto BB34
  }
  BB34 {
    goto BB35
  }
  BB35 {
    goto BB36
  }
  BB36 {
    goto BB37
  }
  BB37 {
    goto BB38
  }
  BB38 {
    return _0
  }
  
end
module CreuSat_Decision_Impl3_Clone_Interface
  use prelude.Borrow
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  val clone' [#"../CreuSAT/src/decision.rs" 9 9 9 14] (self : CreuSat_Decision_Node_Type.t_node) : CreuSat_Decision_Node_Type.t_node
    ensures { [#"../CreuSAT/src/decision.rs" 9 9 9 14] result = self }
    
end
module CreuSat_Decision_Impl3_Clone
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  clone Core_Clone_Impls_Impl5_Clone_Interface as Clone0
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  let rec cfg clone' [#"../CreuSAT/src/decision.rs" 9 9 9 14] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Decision_Node_Type.t_node) : CreuSat_Decision_Node_Type.t_node
    ensures { [#"../CreuSAT/src/decision.rs" 9 9 9 14] result = self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Decision_Node_Type.t_node;
  var self_1 : CreuSat_Decision_Node_Type.t_node;
  var _3 : usize;
  var _4 : usize;
  var _5 : usize;
  var _6 : usize;
  var _7 : usize;
  var _8 : usize;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _4 <- CreuSat_Decision_Node_Type.node_next self_1;
    _3 <- ([#"../CreuSAT/src/decision.rs" 11 4 11 19] Clone0.clone' _4);
    goto BB1
  }
  BB1 {
    _6 <- CreuSat_Decision_Node_Type.node_prev self_1;
    _5 <- ([#"../CreuSAT/src/decision.rs" 12 4 12 19] Clone0.clone' _6);
    goto BB2
  }
  BB2 {
    _8 <- CreuSat_Decision_Node_Type.node_ts self_1;
    _7 <- ([#"../CreuSAT/src/decision.rs" 13 4 13 17] Clone0.clone' _8);
    goto BB3
  }
  BB3 {
    _0 <- CreuSat_Decision_Node_Type.C_Node _3 _5 _7;
    return _0
  }
  
end
module CreuSat_Decision_Impl0_Default_Interface
  use prelude.UIntSize
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  val default [#"../CreuSAT/src/decision.rs" 22 4 22 24] (_1' : ()) : CreuSat_Decision_Node_Type.t_node
    ensures { [#"../CreuSAT/src/decision.rs" 19 14 19 41] UIntSize.to_int (CreuSat_Decision_Node_Type.node_next result) = UIntSize.to_int Max0.mAX' }
    ensures { [#"../CreuSAT/src/decision.rs" 20 14 20 41] UIntSize.to_int (CreuSat_Decision_Node_Type.node_prev result) = UIntSize.to_int Max0.mAX' }
    ensures { [#"../CreuSAT/src/decision.rs" 21 14 21 31] UIntSize.to_int (CreuSat_Decision_Node_Type.node_ts result) = 0 }
    
end
module CreuSat_Decision_Impl0_Default
  use prelude.UIntSize
  use prelude.Int
  clone Core_Num_Impl11_Max as Max0
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  let rec cfg default [#"../CreuSAT/src/decision.rs" 22 4 22 24] [@cfg:stackify] [@cfg:subregion_analysis] (_1' : ()) : CreuSat_Decision_Node_Type.t_node
    ensures { [#"../CreuSAT/src/decision.rs" 19 14 19 41] UIntSize.to_int (CreuSat_Decision_Node_Type.node_next result) = UIntSize.to_int Max0.mAX' }
    ensures { [#"../CreuSAT/src/decision.rs" 20 14 20 41] UIntSize.to_int (CreuSat_Decision_Node_Type.node_prev result) = UIntSize.to_int Max0.mAX' }
    ensures { [#"../CreuSAT/src/decision.rs" 21 14 21 31] UIntSize.to_int (CreuSat_Decision_Node_Type.node_ts result) = 0 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Decision_Node_Type.t_node;
  {
    goto BB0
  }
  BB0 {
    _0 <- CreuSat_Decision_Node_Type.C_Node ([#"../CreuSAT/src/decision.rs" 23 21 23 31] (18446744073709551615 : usize)) ([#"../CreuSAT/src/decision.rs" 23 39 23 49] (18446744073709551615 : usize)) ([#"../CreuSAT/src/decision.rs" 23 55 23 56] (0 : usize));
    return _0
  }
  
end
module CreuSat_Decision_Impl1_IsDefault_Stub
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  predicate is_default [#"../CreuSAT/src/decision.rs" 29 4 29 31] (self : CreuSat_Decision_Node_Type.t_node)
end
module CreuSat_Decision_Impl1_IsDefault_Interface
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  predicate is_default [#"../CreuSAT/src/decision.rs" 29 4 29 31] (self : CreuSat_Decision_Node_Type.t_node)
end
module CreuSat_Decision_Impl1_IsDefault
  use prelude.UIntSize
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  predicate is_default [#"../CreuSAT/src/decision.rs" 29 4 29 31] (self : CreuSat_Decision_Node_Type.t_node) =
    [#"../CreuSAT/src/decision.rs" 30 20 30 91] UIntSize.to_int (CreuSat_Decision_Node_Type.node_next self) = UIntSize.to_int Max0.mAX' /\ UIntSize.to_int (CreuSat_Decision_Node_Type.node_prev self) = UIntSize.to_int Max0.mAX' /\ UIntSize.to_int (CreuSat_Decision_Node_Type.node_ts self) = 0
  val is_default [#"../CreuSAT/src/decision.rs" 29 4 29 31] (self : CreuSat_Decision_Node_Type.t_node) : bool
    ensures { result = is_default self }
    
end
module CreuSat_Decision_Impl2_MakeLinkedList_Interface
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant1
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val make_linked_list [#"../CreuSAT/src/decision.rs" 50 4 50 76] (f : CreuSat_Formula_Formula_Type.t_formula) (lit_order : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)) : CreuSat_Decision_Decisions_Type.t_decisions
    requires {[#"../CreuSAT/src/decision.rs" 44 15 44 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 45 15 45 61] 0 < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) /\ UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/decision.rs" 46 4 48 46] Seq.length (ShallowModel0.shallow_model lit_order) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) /\ (forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model lit_order) -> UIntSize.to_int (Seq.get (ShallowModel0.shallow_model lit_order) i) < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    ensures { [#"../CreuSAT/src/decision.rs" 49 14 49 43] Invariant1.invariant' result (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl2_MakeLinkedList
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic2
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with
    function IndexLogic0.index_logic = IndexLogic2.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic2.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant3.invariant'
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve4 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve3 with
    type t = usize
  use seq.Seq
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic1 with
    type t = usize,
    type s = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Decision_Node_Type.t_node),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = usize
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type s = Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone Core_Usize_Max as Max1
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve2 with
    type t = CreuSat_Decision_Node_Type.t_node,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Resolve0.resolve = Resolve4.resolve,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve1 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    predicate Resolve0.resolve = Resolve3.resolve,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = CreuSat_Decision_Node_Type.t_node,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = usize
  clone Alloc_Vec_FromElem_Interface as FromElem0 with
    type t = CreuSat_Decision_Node_Type.t_node,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Decision_Impl0_Default_Interface as Default0 with
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg make_linked_list [#"../CreuSAT/src/decision.rs" 50 4 50 76] [@cfg:stackify] [@cfg:subregion_analysis] (f : CreuSat_Formula_Formula_Type.t_formula) (lit_order : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global)) : CreuSat_Decision_Decisions_Type.t_decisions
    requires {[#"../CreuSAT/src/decision.rs" 44 15 44 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 45 15 45 61] 0 < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) /\ UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/decision.rs" 46 4 48 46] Seq.length (ShallowModel0.shallow_model lit_order) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) /\ (forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model lit_order) -> UIntSize.to_int (Seq.get (ShallowModel0.shallow_model lit_order) i) < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    ensures { [#"../CreuSAT/src/decision.rs" 49 14 49 43] Invariant1.invariant' result (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Decision_Decisions_Type.t_decisions;
  var f_1 : CreuSat_Formula_Formula_Type.t_formula;
  var lit_order_2 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var iNVALID'_7 : usize;
  var linked_list_8 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
  var _9 : CreuSat_Decision_Node_Type.t_node;
  var _10 : usize;
  var i_11 : usize;
  var head_12 : usize;
  var _13 : ();
  var _17 : ();
  var _18 : bool;
  var _19 : usize;
  var _20 : usize;
  var j_21 : usize;
  var _22 : usize;
  var _23 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _24 : usize;
  var _25 : ();
  var _26 : bool;
  var _27 : usize;
  var _28 : ();
  var _29 : bool;
  var _30 : usize;
  var _31 : usize;
  var _32 : usize;
  var _33 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _34 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _35 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _36 : usize;
  var _37 : usize;
  var _38 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _39 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _40 : usize;
  var _41 : usize;
  var _42 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _43 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _44 : usize;
  var _45 : usize;
  var _46 : bool;
  var _47 : usize;
  var _48 : usize;
  var _49 : usize;
  var _50 : usize;
  var _51 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _52 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _53 : usize;
  var _54 : usize;
  var _55 : usize;
  var _56 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _57 : usize;
  var _58 : usize;
  var _59 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _60 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _61 : usize;
  var _62 : usize;
  var _63 : usize;
  var _64 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _65 : usize;
  var _66 : usize;
  var _67 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _68 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _69 : usize;
  var _70 : usize;
  var _71 : usize;
  var _72 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _73 : usize;
  var _74 : usize;
  var _75 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _76 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _77 : usize;
  var _78 : usize;
  var _79 : usize;
  var _80 : borrowed (CreuSat_Decision_Node_Type.t_node);
  var _81 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global));
  var _82 : usize;
  var _83 : ();
  var _84 : ();
  var _85 : ();
  var _86 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
  var _87 : usize;
  var _88 : usize;
  var _89 : usize;
  var _90 : usize;
  {
    f_1 <- f;
    lit_order_2 <- lit_order;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    iNVALID'_7 <- ([#"../CreuSAT/src/decision.rs" 51 29 51 39] (18446744073709551615 : usize));
    _9 <- ([#"../CreuSAT/src/decision.rs" 52 56 52 71] Default0.default ());
    goto BB2
  }
  BB2 {
    _10 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    linked_list_8 <- ([#"../CreuSAT/src/decision.rs" 52 41 52 84] FromElem0.from_elem _9 _10);
    goto BB3
  }
  BB3 {
    i_11 <- ([#"../CreuSAT/src/decision.rs" 53 27 53 28] (0 : usize));
    head_12 <- ([#"../CreuSAT/src/decision.rs" 54 30 54 31] (0 : usize));
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    goto BB6
  }
  BB6 {
    invariant { [#"../CreuSAT/src/decision.rs" 55 20 55 53] Seq.length (ShallowModel1.shallow_model linked_list_8) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    invariant { [#"../CreuSAT/src/decision.rs" 56 20 56 39] UIntSize.to_int head_12 < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    invariant { [#"../CreuSAT/src/decision.rs" 55 8 55 55] forall j : int . 0 <= j /\ j < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) -> (UIntSize.to_int (CreuSat_Decision_Node_Type.node_next (Seq.get (ShallowModel1.shallow_model linked_list_8) j)) = UIntSize.to_int Max0.mAX' \/ UIntSize.to_int (CreuSat_Decision_Node_Type.node_next (Seq.get (ShallowModel1.shallow_model linked_list_8) j)) < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1)) /\ (UIntSize.to_int (CreuSat_Decision_Node_Type.node_prev (Seq.get (ShallowModel1.shallow_model linked_list_8) j)) = UIntSize.to_int Max0.mAX' \/ UIntSize.to_int (CreuSat_Decision_Node_Type.node_prev (Seq.get (ShallowModel1.shallow_model linked_list_8) j)) < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1)) };
    _19 <- i_11;
    _20 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _18 <- ([#"../CreuSAT/src/decision.rs" 60 14 60 28] _19 < _20);
    switch (_18)
      | False -> goto BB30
      | True -> goto BB7
      end
  }
  BB7 {
    _23 <- lit_order_2;
    _24 <- i_11;
    _22 <- ([#"../CreuSAT/src/decision.rs" 61 20 61 32] Index0.index _23 _24);
    goto BB8
  }
  BB8 {
    j_21 <- _22;
    _27 <- i_11;
    _26 <- ([#"../CreuSAT/src/decision.rs" 62 15 62 21] _27 = ([#"../CreuSAT/src/decision.rs" 62 20 62 21] (0 : usize)));
    switch (_26)
      | False -> goto BB17
      | True -> goto BB9
      end
  }
  BB9 {
    _30 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _29 <- ([#"../CreuSAT/src/decision.rs" 63 19 63 33] _30 > ([#"../CreuSAT/src/decision.rs" 63 32 63 33] (1 : usize)));
    switch (_29)
      | False -> goto BB13
      | True -> goto BB10
      end
  }
  BB10 {
    _33 <- lit_order_2;
    _32 <- ([#"../CreuSAT/src/decision.rs" 64 42 64 54] Index0.index _33 ([#"../CreuSAT/src/decision.rs" 64 52 64 53] (1 : usize)));
    goto BB11
  }
  BB11 {
    _31 <- _32;
    _35 <- borrow_mut linked_list_8;
    linked_list_8 <-  ^ _35;
    _36 <- j_21;
    _34 <- ([#"../CreuSAT/src/decision.rs" 64 20 64 34] IndexMut0.index_mut _35 _36);
    goto BB12
  }
  BB12 {
    _34 <- { _34 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _34 in CreuSat_Decision_Node_Type.C_Node _31 b c) };
    _31 <- any usize;
    assume { Resolve0.resolve _34 };
    _28 <- ();
    goto BB15
  }
  BB13 {
    _37 <- iNVALID'_7;
    _39 <- borrow_mut linked_list_8;
    linked_list_8 <-  ^ _39;
    _40 <- j_21;
    _38 <- ([#"../CreuSAT/src/decision.rs" 66 20 66 34] IndexMut0.index_mut _39 _40);
    goto BB14
  }
  BB14 {
    _38 <- { _38 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _38 in CreuSat_Decision_Node_Type.C_Node _37 b c) };
    _37 <- any usize;
    assume { Resolve0.resolve _38 };
    _28 <- ();
    goto BB15
  }
  BB15 {
    _41 <- iNVALID'_7;
    _43 <- borrow_mut linked_list_8;
    linked_list_8 <-  ^ _43;
    _44 <- j_21;
    _42 <- ([#"../CreuSAT/src/decision.rs" 68 16 68 30] IndexMut0.index_mut _43 _44);
    goto BB16
  }
  BB16 {
    _42 <- { _42 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _42 in CreuSat_Decision_Node_Type.C_Node a _41 c) };
    _41 <- any usize;
    assume { Resolve0.resolve _42 };
    _45 <- j_21;
    head_12 <- _45;
    _45 <- any usize;
    _25 <- ();
    goto BB28
  }
  BB17 {
    _47 <- i_11;
    _49 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _48 <- ([#"../CreuSAT/src/decision.rs" 70 27 70 41] _49 - ([#"../CreuSAT/src/decision.rs" 70 40 70 41] (1 : usize)));
    _46 <- ([#"../CreuSAT/src/decision.rs" 70 22 70 41] _47 = _48);
    switch (_46)
      | False -> goto BB22
      | True -> goto BB18
      end
  }
  BB18 {
    _50 <- iNVALID'_7;
    _52 <- borrow_mut linked_list_8;
    linked_list_8 <-  ^ _52;
    _53 <- j_21;
    _51 <- ([#"../CreuSAT/src/decision.rs" 71 16 71 30] IndexMut0.index_mut _52 _53);
    goto BB19
  }
  BB19 {
    _51 <- { _51 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _51 in CreuSat_Decision_Node_Type.C_Node _50 b c) };
    _50 <- any usize;
    assume { Resolve0.resolve _51 };
    _56 <- lit_order_2;
    _58 <- i_11;
    _57 <- ([#"../CreuSAT/src/decision.rs" 72 48 72 53] _58 - ([#"../CreuSAT/src/decision.rs" 72 52 72 53] (1 : usize)));
    _55 <- ([#"../CreuSAT/src/decision.rs" 72 38 72 54] Index0.index _56 _57);
    goto BB20
  }
  BB20 {
    _54 <- _55;
    _60 <- borrow_mut linked_list_8;
    linked_list_8 <-  ^ _60;
    _61 <- j_21;
    _59 <- ([#"../CreuSAT/src/decision.rs" 72 16 72 30] IndexMut0.index_mut _60 _61);
    goto BB21
  }
  BB21 {
    _59 <- { _59 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _59 in CreuSat_Decision_Node_Type.C_Node a _54 c) };
    _54 <- any usize;
    assume { Resolve0.resolve _59 };
    _25 <- ();
    goto BB27
  }
  BB22 {
    _64 <- lit_order_2;
    _66 <- i_11;
    _65 <- ([#"../CreuSAT/src/decision.rs" 74 48 74 53] _66 + ([#"../CreuSAT/src/decision.rs" 74 52 74 53] (1 : usize)));
    _63 <- ([#"../CreuSAT/src/decision.rs" 74 38 74 54] Index0.index _64 _65);
    goto BB23
  }
  BB23 {
    _62 <- _63;
    _68 <- borrow_mut linked_list_8;
    linked_list_8 <-  ^ _68;
    _69 <- j_21;
    _67 <- ([#"../CreuSAT/src/decision.rs" 74 16 74 30] IndexMut0.index_mut _68 _69);
    goto BB24
  }
  BB24 {
    _67 <- { _67 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _67 in CreuSat_Decision_Node_Type.C_Node _62 b c) };
    _62 <- any usize;
    assume { Resolve0.resolve _67 };
    _72 <- lit_order_2;
    _74 <- i_11;
    _73 <- ([#"../CreuSAT/src/decision.rs" 75 48 75 53] _74 - ([#"../CreuSAT/src/decision.rs" 75 52 75 53] (1 : usize)));
    _71 <- ([#"../CreuSAT/src/decision.rs" 75 38 75 54] Index0.index _72 _73);
    goto BB25
  }
  BB25 {
    _70 <- _71;
    _76 <- borrow_mut linked_list_8;
    linked_list_8 <-  ^ _76;
    _77 <- j_21;
    _75 <- ([#"../CreuSAT/src/decision.rs" 75 16 75 30] IndexMut0.index_mut _76 _77);
    goto BB26
  }
  BB26 {
    _75 <- { _75 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _75 in CreuSat_Decision_Node_Type.C_Node a _70 c) };
    _70 <- any usize;
    assume { Resolve0.resolve _75 };
    _25 <- ();
    goto BB27
  }
  BB27 {
    goto BB28
  }
  BB28 {
    _78 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _79 <- i_11;
    _81 <- borrow_mut linked_list_8;
    linked_list_8 <-  ^ _81;
    _82 <- j_21;
    _80 <- ([#"../CreuSAT/src/decision.rs" 77 12 77 26] IndexMut0.index_mut _81 _82);
    goto BB29
  }
  BB29 {
    _80 <- { _80 with current = (let CreuSat_Decision_Node_Type.C_Node a b c =  * _80 in CreuSat_Decision_Node_Type.C_Node a b ([#"../CreuSAT/src/decision.rs" 77 12 77 46] _78 - _79)) };
    assume { Resolve0.resolve _80 };
    i_11 <- ([#"../CreuSAT/src/decision.rs" 78 12 78 18] i_11 + ([#"../CreuSAT/src/decision.rs" 78 17 78 18] (1 : usize)));
    _17 <- ();
    goto BB6
  }
  BB30 {
    assume { Resolve1.resolve lit_order_2 };
    _13 <- ();
    assume { Resolve2.resolve _86 };
    _86 <- linked_list_8;
    linked_list_8 <- any Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
    _88 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _87 <- ([#"../CreuSAT/src/decision.rs" 80 57 80 71] _88 + ([#"../CreuSAT/src/decision.rs" 80 70 80 71] (1 : usize)));
    _89 <- head_12;
    _90 <- head_12;
    _0 <- CreuSat_Decision_Decisions_Type.C_Decisions _86 _87 _89 _90;
    goto BB31
  }
  BB31 {
    goto BB32
  }
  BB32 {
    goto BB33
  }
  BB33 {
    return _0
  }
  
end
module CreuSat_Logic_LogicUtil_SortedRangeRev_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_range_rev [#"../CreuSAT/src/logic/logic_util.rs" 6 0 6 71] (s : Seq.seq (usize, usize)) (l : int) (u : int)
    
end
module CreuSat_Logic_LogicUtil_SortedRangeRev_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_range_rev [#"../CreuSAT/src/logic/logic_util.rs" 6 0 6 71] (s : Seq.seq (usize, usize)) (l : int) (u : int)
    
end
module CreuSat_Logic_LogicUtil_SortedRangeRev
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_range_rev [#"../CreuSAT/src/logic/logic_util.rs" 6 0 6 71] (s : Seq.seq (usize, usize)) (l : int) (u : int)
    
   =
    [#"../CreuSAT/src/logic/logic_util.rs" 7 4 9 5] forall j : int . forall i : int . l <= i /\ i < j /\ j < u -> (let (a, _) = Seq.get s i in a) >= (let (a, _) = Seq.get s j in a)
  val sorted_range_rev [#"../CreuSAT/src/logic/logic_util.rs" 6 0 6 71] (s : Seq.seq (usize, usize)) (l : int) (u : int) : bool
    ensures { result = sorted_range_rev s l u }
    
end
module CreuSat_Logic_LogicUtil_SortedRev_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_rev [#"../CreuSAT/src/logic/logic_util.rs" 13 0 13 49] (s : Seq.seq (usize, usize))
end
module CreuSat_Logic_LogicUtil_SortedRev_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate sorted_rev [#"../CreuSAT/src/logic/logic_util.rs" 13 0 13 49] (s : Seq.seq (usize, usize))
end
module CreuSat_Logic_LogicUtil_SortedRev
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  clone CreuSat_Logic_LogicUtil_SortedRangeRev_Stub as SortedRangeRev0
  predicate sorted_rev [#"../CreuSAT/src/logic/logic_util.rs" 13 0 13 49] (s : Seq.seq (usize, usize)) =
    [#"../CreuSAT/src/logic/logic_util.rs" 14 4 14 35] SortedRangeRev0.sorted_range_rev s 0 (Seq.length s)
  val sorted_rev [#"../CreuSAT/src/logic/logic_util.rs" 13 0 13 49] (s : Seq.seq (usize, usize)) : bool
    ensures { result = sorted_rev s }
    
end
module CreuSat_Logic_LogicUtil_PartitionRev_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate partition_rev [#"../CreuSAT/src/logic/logic_util.rs" 45 0 45 60] (v : Seq.seq (usize, usize)) (i : int)
end
module CreuSat_Logic_LogicUtil_PartitionRev_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate partition_rev [#"../CreuSAT/src/logic/logic_util.rs" 45 0 45 60] (v : Seq.seq (usize, usize)) (i : int)
end
module CreuSat_Logic_LogicUtil_PartitionRev
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  predicate partition_rev [#"../CreuSAT/src/logic/logic_util.rs" 45 0 45 60] (v : Seq.seq (usize, usize)) (i : int) =
    [#"../CreuSAT/src/logic/logic_util.rs" 46 4 46 110] forall k2 : int . forall k1 : int . 0 <= k1 /\ k1 < i /\ i <= k2 /\ k2 < Seq.length v -> (let (a, _) = Seq.get v k1 in a) >= (let (a, _) = Seq.get v k2 in a)
  val partition_rev [#"../CreuSAT/src/logic/logic_util.rs" 45 0 45 60] (v : Seq.seq (usize, usize)) (i : int) : bool
    ensures { result = partition_rev v i }
    
end
module CreuSat_Util_SortReverse_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone CreusotContracts_Logic_Seq_Impl0_PermutationOf_Stub as PermutationOf0 with
    type t = (usize, usize)
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize)
  clone CreuSat_Logic_LogicUtil_SortedRev_Stub as SortedRev0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  val sort_reverse [#"../CreuSAT/src/util.rs" 11 0 11 48] (v : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global))) : ()
    ensures { [#"../CreuSAT/src/util.rs" 9 10 9 27] SortedRev0.sorted_rev (ShallowModel0.shallow_model ( ^ v)) }
    ensures { [#"../CreuSAT/src/util.rs" 10 0 10 36] PermutationOf0.permutation_of (ShallowModel0.shallow_model ( ^ v)) (ShallowModel1.shallow_model v) }
    
end
module CreuSat_Util_SortReverse
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use prelude.Slice
  use seq.Seq
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Slice_Impl0_ShallowModel as ShallowModel6 with
    type t = (usize, usize),
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel5 with
    type t = slice (usize, usize),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = (usize, usize)
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global)),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global)
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with
    type t = (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = slice (usize, usize)
  clone Alloc_Vec_Impl10_DerefMut_Interface as DerefMut0 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = (usize, usize),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = (usize, usize)
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicUtil_PartitionRev as PartitionRev0
  clone CreuSat_Logic_LogicUtil_SortedRangeRev as SortedRangeRev0
  clone CreusotContracts_Snapshot_Impl1_ShallowModel as ShallowModel2 with
    type t = borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global)),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Logic_Seq_Impl0_PermutationOf as PermutationOf0 with
    type t = (usize, usize)
  clone CreuSat_Logic_LogicUtil_SortedRev as SortedRev0 with
    predicate SortedRangeRev0.sorted_range_rev = SortedRangeRev0.sorted_range_rev
  let rec cfg sort_reverse [#"../CreuSAT/src/util.rs" 11 0 11 48] [@cfg:stackify] [@cfg:subregion_analysis] (v : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global))) : ()
    ensures { [#"../CreuSAT/src/util.rs" 9 10 9 27] SortedRev0.sorted_rev (ShallowModel0.shallow_model ( ^ v)) }
    ensures { [#"../CreuSAT/src/util.rs" 10 0 10 36] PermutationOf0.permutation_of (ShallowModel0.shallow_model ( ^ v)) (ShallowModel1.shallow_model v) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var v_1 : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global));
  var i_4 : usize;
  var old_v_5 : Snapshot.Snapshot_ty (borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global)));
  var _7 : ();
  var _12 : ();
  var _13 : bool;
  var _14 : usize;
  var _15 : usize;
  var _16 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var max_17 : usize;
  var j_18 : usize;
  var _19 : usize;
  var _20 : ();
  var _24 : bool;
  var _25 : usize;
  var _26 : usize;
  var _27 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _28 : ();
  var _29 : bool;
  var _30 : usize;
  var _31 : (usize, usize);
  var _32 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _33 : usize;
  var _34 : usize;
  var _35 : (usize, usize);
  var _36 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _37 : usize;
  var _38 : usize;
  var _39 : ();
  var _40 : ();
  var _41 : ();
  var _42 : ();
  var _43 : borrowed (slice (usize, usize));
  var _44 : borrowed (slice (usize, usize));
  var _45 : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global));
  var _46 : usize;
  var _47 : usize;
  var _48 : ();
  var _49 : ();
  var _50 : ();
  {
    v_1 <- v;
    goto BB0
  }
  BB0 {
    i_4 <- ([#"../CreuSAT/src/util.rs" 12 23 12 24] (0 : usize));
    _7 <- ();
    old_v_5 <- ([#"../CreuSAT/src/util.rs" 13 49 13 61] Snapshot.new v_1);
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    invariant { [#"../CreuSAT/src/util.rs" 14 4 14 43] PermutationOf0.permutation_of (ShallowModel1.shallow_model v_1) (ShallowModel2.shallow_model old_v_5) };
    invariant { [#"../CreuSAT/src/util.rs" 15 16 15 30] UIntSize.to_int i_4 <= Seq.length (ShallowModel1.shallow_model v_1) };
    invariant { [#"../CreuSAT/src/util.rs" 16 16 16 43] SortedRangeRev0.sorted_range_rev (ShallowModel1.shallow_model v_1) 0 (UIntSize.to_int i_4) };
    invariant { [#"../CreuSAT/src/util.rs" 17 16 17 37] PartitionRev0.partition_rev (ShallowModel1.shallow_model v_1) (UIntSize.to_int i_4) };
    _14 <- i_4;
    _16 <-  * v_1;
    _15 <- ([#"../CreuSAT/src/util.rs" 18 14 18 21] Len0.len _16);
    goto BB3
  }
  BB3 {
    _13 <- ([#"../CreuSAT/src/util.rs" 18 10 18 21] _14 < _15);
    switch (_13)
      | False -> goto BB16
      | True -> goto BB4
      end
  }
  BB4 {
    max_17 <- i_4;
    _19 <- i_4;
    j_18 <- ([#"../CreuSAT/src/util.rs" 20 20 20 25] _19 + ([#"../CreuSAT/src/util.rs" 20 24 20 25] (1 : usize)));
    goto BB5
  }
  BB5 {
    invariant { [#"../CreuSAT/src/util.rs" 21 8 21 80] forall k : int . UIntSize.to_int i_4 <= k /\ k < UIntSize.to_int j_18 -> (let (a, _) = Seq.get (ShallowModel1.shallow_model v_1) (UIntSize.to_int max_17) in a) >= (let (a, _) = Seq.get (ShallowModel1.shallow_model v_1) k in a) };
    invariant { [#"../CreuSAT/src/util.rs" 22 20 22 46] UIntSize.to_int i_4 <= UIntSize.to_int j_18 /\ UIntSize.to_int j_18 <= Seq.length (ShallowModel1.shallow_model v_1) };
    invariant { [#"../CreuSAT/src/util.rs" 23 20 23 43] UIntSize.to_int i_4 <= UIntSize.to_int max_17 /\ UIntSize.to_int max_17 < UIntSize.to_int j_18 };
    _25 <- j_18;
    _27 <-  * v_1;
    _26 <- ([#"../CreuSAT/src/util.rs" 24 18 24 25] Len0.len _27);
    goto BB6
  }
  BB6 {
    _24 <- ([#"../CreuSAT/src/util.rs" 24 14 24 25] _25 < _26);
    switch (_24)
      | False -> goto BB13
      | True -> goto BB7
      end
  }
  BB7 {
    _32 <-  * v_1;
    _33 <- j_18;
    _31 <- ([#"../CreuSAT/src/util.rs" 25 15 25 19] Index0.index _32 _33);
    goto BB8
  }
  BB8 {
    _30 <- (let (a, _) = _31 in a);
    _36 <-  * v_1;
    _37 <- max_17;
    _35 <- ([#"../CreuSAT/src/util.rs" 25 24 25 30] Index0.index _36 _37);
    goto BB9
  }
  BB9 {
    _34 <- (let (a, _) = _35 in a);
    _29 <- ([#"../CreuSAT/src/util.rs" 25 15 25 32] _30 > _34);
    switch (_29)
      | False -> goto BB11
      | True -> goto BB10
      end
  }
  BB10 {
    _38 <- j_18;
    max_17 <- _38;
    _38 <- any usize;
    _28 <- ();
    goto BB12
  }
  BB11 {
    _28 <- ();
    goto BB12
  }
  BB12 {
    j_18 <- ([#"../CreuSAT/src/util.rs" 28 12 28 18] j_18 + ([#"../CreuSAT/src/util.rs" 28 17 28 18] (1 : usize)));
    _12 <- ();
    goto BB5
  }
  BB13 {
    _20 <- ();
    _45 <- borrow_mut ( * v_1);
    v_1 <- { v_1 with current = ( ^ _45) };
    _44 <- ([#"../CreuSAT/src/util.rs" 30 8 30 22] DerefMut0.deref_mut _45);
    goto BB14
  }
  BB14 {
    _43 <- borrow_mut ( * _44);
    _44 <- { _44 with current = ( ^ _43) };
    assume { Resolve0.resolve _44 };
    _46 <- i_4;
    _47 <- max_17;
    _42 <- ([#"../CreuSAT/src/util.rs" 30 8 30 22] Swap0.swap _43 _46 _47);
    goto BB15
  }
  BB15 {
    i_4 <- ([#"../CreuSAT/src/util.rs" 31 8 31 14] i_4 + ([#"../CreuSAT/src/util.rs" 31 13 31 14] (1 : usize)));
    _12 <- ();
    goto BB2
  }
  BB16 {
    assume { Resolve1.resolve v_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Decision_Impl2_New_Interface
  use prelude.UIntSize
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant1
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val new [#"../CreuSAT/src/decision.rs" 87 4 87 40] (f : CreuSat_Formula_Formula_Type.t_formula) : CreuSat_Decision_Decisions_Type.t_decisions
    requires {[#"../CreuSAT/src/decision.rs" 84 15 84 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 85 15 85 61] 0 < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) /\ UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/decision.rs" 86 14 86 43] Invariant1.invariant' result (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl2_New
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic2
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with
    function IndexLogic0.index_logic = IndexLogic2.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic2.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicUtil_SortedRangeRev as SortedRangeRev0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel13 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel8 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve5 with
    type t = usize
  clone CreusotContracts_Resolve_Impl0_Resolve as Resolve6 with
    type t1 = usize,
    type t2 = usize,
    predicate Resolve0.resolve = Resolve5.resolve,
    predicate Resolve1.resolve = Resolve5.resolve
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = (usize, usize),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel12 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Logic_Seq_Impl0_PermutationOf as PermutationOf0 with
    type t = (usize, usize)
  clone CreuSat_Logic_LogicUtil_SortedRev as SortedRev0 with
    predicate SortedRangeRev0.sorted_range_rev = SortedRangeRev0.sorted_range_rev
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere1 with
    type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = (usize, usize)
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel11 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = usize
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel10 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = usize
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel7 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic1 with
    type t = (usize, usize),
    type s = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic0 with
    type t = usize,
    type s = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone Core_Usize_Max as Max1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Decision_Impl2_MakeLinkedList_Interface as MakeLinkedList0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    val Max0.mAX' = Max0.mAX',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve4 with
    type t = (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    predicate Resolve0.resolve = Resolve6.resolve,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index4 with
    type t = (usize, usize),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    type Output0.output = (usize, usize)
  clone CreuSat_Util_SortReverse_Interface as SortReverse0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SortedRev0.sorted_rev = SortedRev0.sorted_rev,
    function ShallowModel1.shallow_model = ShallowModel11.shallow_model,
    predicate PermutationOf0.permutation_of = PermutationOf0.permutation_of,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve3 with
    type t = Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve2 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Resolve0.resolve = Resolve5.resolve,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = (usize, usize)
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut1 with
    type t = (usize, usize),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere1.resolve_elswhere,
    type Output0.output = (usize, usize),
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = usize
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = usize,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index3 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = usize
  clone CreuSat_Lit_Impl2_Index_Interface as Index2 with
    function IndexLogic0.index_logic = IndexLogic2.index_logic
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone Alloc_Vec_FromElem_Interface as FromElem1 with
    type t = (usize, usize),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_FromElem_Interface as FromElem0 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  let rec cfg new [#"../CreuSAT/src/decision.rs" 87 4 87 40] [@cfg:stackify] [@cfg:subregion_analysis] (f : CreuSat_Formula_Formula_Type.t_formula) : CreuSat_Decision_Decisions_Type.t_decisions
    requires {[#"../CreuSAT/src/decision.rs" 84 15 84 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 85 15 85 61] 0 < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) /\ UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/decision.rs" 86 14 86 43] Invariant1.invariant' result (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Decision_Decisions_Type.t_decisions;
  var f_1 : CreuSat_Formula_Formula_Type.t_formula;
  var lit_order_5 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _6 : usize;
  var counts_7 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _8 : usize;
  var counts_with_index_9 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _10 : (usize, usize);
  var _11 : usize;
  var i_12 : usize;
  var _13 : ();
  var _16 : ();
  var _17 : bool;
  var _18 : usize;
  var _19 : usize;
  var _20 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var curr_clause_21 : CreuSat_Clause_Clause_Type.t_clause;
  var _22 : CreuSat_Clause_Clause_Type.t_clause;
  var _23 : CreuSat_Formula_Formula_Type.t_formula;
  var _24 : usize;
  var j_25 : usize;
  var _26 : ();
  var _30 : bool;
  var _31 : usize;
  var _32 : usize;
  var _33 : CreuSat_Clause_Clause_Type.t_clause;
  var _34 : ();
  var _35 : bool;
  var _36 : usize;
  var _37 : usize;
  var _38 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _39 : usize;
  var _40 : CreuSat_Lit_Lit_Type.t_lit;
  var _41 : CreuSat_Lit_Lit_Type.t_lit;
  var _42 : CreuSat_Clause_Clause_Type.t_clause;
  var _43 : usize;
  var _44 : usize;
  var _45 : borrowed usize;
  var _46 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _47 : usize;
  var _48 : CreuSat_Lit_Lit_Type.t_lit;
  var _49 : CreuSat_Lit_Lit_Type.t_lit;
  var _50 : CreuSat_Clause_Clause_Type.t_clause;
  var _51 : usize;
  var _52 : ();
  var _53 : ();
  var _54 : ();
  var _55 : ();
  var _56 : ();
  var _57 : ();
  var _58 : ();
  var _62 : bool;
  var _63 : usize;
  var _64 : usize;
  var _65 : usize;
  var _66 : usize;
  var _67 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _68 : usize;
  var _69 : usize;
  var _70 : borrowed (usize, usize);
  var _71 : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global));
  var _72 : usize;
  var _73 : ();
  var _74 : ();
  var _75 : ();
  var _76 : ();
  var _77 : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global));
  var _78 : borrowed (Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global));
  var _79 : ();
  var _81 : ();
  var _85 : bool;
  var _86 : usize;
  var _87 : usize;
  var _88 : usize;
  var _89 : (usize, usize);
  var _90 : Alloc_Vec_Vec_Type.t_vec (usize, usize) (Alloc_Alloc_Global_Type.t_global);
  var _91 : usize;
  var _92 : borrowed usize;
  var _93 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _94 : usize;
  var _95 : ();
  var _96 : ();
  var _97 : ();
  var _98 : CreuSat_Formula_Formula_Type.t_formula;
  var _99 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  {
    f_1 <- f;
    goto BB0
  }
  BB0 {
    _6 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    lit_order_5 <- ([#"../CreuSAT/src/decision.rs" 88 40 88 69] FromElem0.from_elem ([#"../CreuSAT/src/decision.rs" 88 55 88 56] (0 : usize)) _6);
    goto BB1
  }
  BB1 {
    _8 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    counts_7 <- ([#"../CreuSAT/src/decision.rs" 89 37 89 66] FromElem0.from_elem ([#"../CreuSAT/src/decision.rs" 89 52 89 53] (0 : usize)) _8);
    goto BB2
  }
  BB2 {
    _10 <- ([#"../CreuSAT/src/decision.rs" 90 73 90 74] (0 : usize), [#"../CreuSAT/src/decision.rs" 90 76 90 77] (0 : usize));
    _11 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    counts_with_index_9 <- ([#"../CreuSAT/src/decision.rs" 90 57 90 91] FromElem1.from_elem _10 _11);
    goto BB3
  }
  BB3 {
    i_12 <- ([#"../CreuSAT/src/decision.rs" 91 27 91 28] (0 : usize));
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    invariant { [#"../CreuSAT/src/decision.rs" 92 20 92 42] UIntSize.to_int i_12 <= Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f_1)) };
    invariant { [#"../CreuSAT/src/decision.rs" 93 20 93 48] Seq.length (ShallowModel1.shallow_model counts_7) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    _18 <- i_12;
    _20 <- CreuSat_Formula_Formula_Type.formula_clauses f_1;
    _19 <- ([#"../CreuSAT/src/decision.rs" 94 18 94 33] Len0.len _20);
    goto BB6
  }
  BB6 {
    _17 <- ([#"../CreuSAT/src/decision.rs" 94 14 94 33] _18 < _19);
    switch (_17)
      | False -> goto BB23
      | True -> goto BB7
      end
  }
  BB7 {
    _23 <- f_1;
    _24 <- i_12;
    _22 <- ([#"../CreuSAT/src/decision.rs" 95 31 95 35] Index0.index _23 _24);
    goto BB8
  }
  BB8 {
    curr_clause_21 <- _22;
    j_25 <- ([#"../CreuSAT/src/decision.rs" 96 31 96 32] (0 : usize));
    goto BB9
  }
  BB9 {
    goto BB10
  }
  BB10 {
    invariant { [#"../CreuSAT/src/decision.rs" 97 24 97 46] UIntSize.to_int i_12 <= Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f_1)) };
    invariant { [#"../CreuSAT/src/decision.rs" 98 24 98 48] UIntSize.to_int j_25 <= Seq.length (ShallowModel2.shallow_model curr_clause_21) };
    invariant { [#"../CreuSAT/src/decision.rs" 99 24 99 52] Seq.length (ShallowModel1.shallow_model counts_7) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    _31 <- j_25;
    _33 <- curr_clause_21;
    _32 <- ([#"../CreuSAT/src/decision.rs" 100 22 100 39] Len1.len _33);
    goto BB11
  }
  BB11 {
    _30 <- ([#"../CreuSAT/src/decision.rs" 100 18 100 39] _31 < _32);
    switch (_30)
      | False -> goto BB22
      | True -> goto BB12
      end
  }
  BB12 {
    _38 <- counts_7;
    _42 <- curr_clause_21;
    _43 <- j_25;
    _41 <- ([#"../CreuSAT/src/decision.rs" 103 26 103 40] Index1.index _42 _43);
    goto BB13
  }
  BB13 {
    _40 <- _41;
    _39 <- ([#"../CreuSAT/src/decision.rs" 103 26 103 48] Index2.index _40);
    goto BB14
  }
  BB14 {
    _37 <- ([#"../CreuSAT/src/decision.rs" 103 19 103 49] Index3.index _38 _39);
    goto BB15
  }
  BB15 {
    _36 <- _37;
    _44 <- ([#"../CreuSAT/src/decision.rs" 103 52 103 66] ([#"../CreuSAT/src/decision.rs" 103 52 103 62] (18446744073709551615 : usize)) - ([#"../CreuSAT/src/decision.rs" 103 65 103 66] (1 : usize)));
    _35 <- ([#"../CreuSAT/src/decision.rs" 103 19 103 66] _36 < _44);
    switch (_35)
      | False -> goto BB20
      | True -> goto BB16
      end
  }
  BB16 {
    _46 <- borrow_mut counts_7;
    counts_7 <-  ^ _46;
    _50 <- curr_clause_21;
    _51 <- j_25;
    _49 <- ([#"../CreuSAT/src/decision.rs" 104 27 104 41] Index1.index _50 _51);
    goto BB17
  }
  BB17 {
    _48 <- _49;
    _47 <- ([#"../CreuSAT/src/decision.rs" 104 27 104 49] Index2.index _48);
    goto BB18
  }
  BB18 {
    _45 <- ([#"../CreuSAT/src/decision.rs" 104 20 104 50] IndexMut0.index_mut _46 _47);
    goto BB19
  }
  BB19 {
    _45 <- { _45 with current = ([#"../CreuSAT/src/decision.rs" 104 20 104 55]  * _45 + ([#"../CreuSAT/src/decision.rs" 104 54 104 55] (1 : usize))) };
    assume { Resolve0.resolve _45 };
    _34 <- ();
    goto BB21
  }
  BB20 {
    _34 <- ();
    goto BB21
  }
  BB21 {
    j_25 <- ([#"../CreuSAT/src/decision.rs" 106 16 106 22] j_25 + ([#"../CreuSAT/src/decision.rs" 106 21 106 22] (1 : usize)));
    _16 <- ();
    goto BB10
  }
  BB22 {
    _26 <- ();
    i_12 <- ([#"../CreuSAT/src/decision.rs" 108 12 108 18] i_12 + ([#"../CreuSAT/src/decision.rs" 108 17 108 18] (1 : usize)));
    _16 <- ();
    goto BB5
  }
  BB23 {
    _13 <- ();
    i_12 <- ([#"../CreuSAT/src/decision.rs" 110 12 110 13] (0 : usize));
    goto BB24
  }
  BB24 {
    goto BB25
  }
  BB25 {
    goto BB26
  }
  BB26 {
    invariant { [#"../CreuSAT/src/decision.rs" 111 20 111 37] UIntSize.to_int i_12 <= UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    invariant { [#"../CreuSAT/src/decision.rs" 112 20 112 59] Seq.length (ShallowModel3.shallow_model counts_with_index_9) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    invariant { [#"../CreuSAT/src/decision.rs" 111 8 111 39] forall j : int . 0 <= j /\ j < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) -> UIntSize.to_int (let (_, a) = Seq.get (ShallowModel3.shallow_model counts_with_index_9) j in a) < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    _63 <- i_12;
    _64 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _62 <- ([#"../CreuSAT/src/decision.rs" 114 14 114 28] _63 < _64);
    switch (_62)
      | False -> goto BB30
      | True -> goto BB27
      end
  }
  BB27 {
    _67 <- counts_7;
    _68 <- i_12;
    _66 <- ([#"../CreuSAT/src/decision.rs" 115 36 115 45] Index3.index _67 _68);
    goto BB28
  }
  BB28 {
    _65 <- _66;
    _69 <- i_12;
    _71 <- borrow_mut counts_with_index_9;
    counts_with_index_9 <-  ^ _71;
    _72 <- i_12;
    _70 <- ([#"../CreuSAT/src/decision.rs" 115 12 115 32] IndexMut1.index_mut _71 _72);
    goto BB29
  }
  BB29 {
    _70 <- { _70 with current = (_65, _69) };
    assume { Resolve1.resolve _70 };
    i_12 <- ([#"../CreuSAT/src/decision.rs" 116 12 116 18] i_12 + ([#"../CreuSAT/src/decision.rs" 116 17 116 18] (1 : usize)));
    _16 <- ();
    goto BB26
  }
  BB30 {
    assume { Resolve2.resolve counts_7 };
    _58 <- ();
    _78 <- borrow_mut counts_with_index_9;
    counts_with_index_9 <-  ^ _78;
    _77 <- borrow_mut ( * _78);
    _78 <- { _78 with current = ( ^ _77) };
    assume { Resolve3.resolve _78 };
    _76 <- ([#"../CreuSAT/src/decision.rs" 118 8 118 44] SortReverse0.sort_reverse _77);
    goto BB31
  }
  BB31 {
    assert { [#"../CreuSAT/src/decision.rs" 119 8 119 119] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel3.shallow_model counts_with_index_9) -> UIntSize.to_int (let (_, a) = Seq.get (ShallowModel3.shallow_model counts_with_index_9) j in a) < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    goto BB32
  }
  BB32 {
    _79 <- ();
    i_12 <- ([#"../CreuSAT/src/decision.rs" 120 12 120 13] (0 : usize));
    goto BB33
  }
  BB33 {
    goto BB34
  }
  BB34 {
    goto BB35
  }
  BB35 {
    invariant { [#"../CreuSAT/src/decision.rs" 121 20 121 48] 0 <= UIntSize.to_int i_12 /\ UIntSize.to_int i_12 <= UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    invariant { [#"../CreuSAT/src/decision.rs" 122 20 122 51] Seq.length (ShallowModel1.shallow_model lit_order_5) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    invariant { [#"../CreuSAT/src/decision.rs" 121 8 121 50] forall j : int . 0 <= j /\ j < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) -> UIntSize.to_int (Seq.get (ShallowModel1.shallow_model lit_order_5) j) < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    _86 <- i_12;
    _87 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _85 <- ([#"../CreuSAT/src/decision.rs" 124 14 124 28] _86 < _87);
    switch (_85)
      | False -> goto BB39
      | True -> goto BB36
      end
  }
  BB36 {
    _90 <- counts_with_index_9;
    _91 <- i_12;
    _89 <- ([#"../CreuSAT/src/decision.rs" 125 27 125 47] Index4.index _90 _91);
    goto BB37
  }
  BB37 {
    _88 <- (let (_, a) = _89 in a);
    _93 <- borrow_mut lit_order_5;
    lit_order_5 <-  ^ _93;
    _94 <- i_12;
    _92 <- ([#"../CreuSAT/src/decision.rs" 125 12 125 24] IndexMut0.index_mut _93 _94);
    goto BB38
  }
  BB38 {
    _92 <- { _92 with current = _88 };
    _88 <- any usize;
    assume { Resolve0.resolve _92 };
    i_12 <- ([#"../CreuSAT/src/decision.rs" 126 12 126 18] i_12 + ([#"../CreuSAT/src/decision.rs" 126 17 126 18] (1 : usize)));
    _16 <- ();
    goto BB35
  }
  BB39 {
    assume { Resolve4.resolve counts_with_index_9 };
    _81 <- ();
    _98 <- f_1;
    assume { Resolve2.resolve _99 };
    _99 <- lit_order_5;
    lit_order_5 <- any Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
    _0 <- ([#"../CreuSAT/src/decision.rs" 128 8 128 44] MakeLinkedList0.make_linked_list _98 _99);
    goto BB40
  }
  BB40 {
    goto BB41
  }
  BB41 {
    goto BB42
  }
  BB42 {
    goto BB43
  }
  BB43 {
    return _0
  }
  
end
module CreuSat_Logic_LogicAssignments_Impl1_Complete_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  predicate complete [#"../CreuSAT/src/logic/logic_assignments.rs" 54 4 54 33] (self : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicAssignments_Impl1_Complete_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  predicate complete [#"../CreuSAT/src/logic/logic_assignments.rs" 54 4 54 33] (self : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicAssignments_Impl1_Complete
  use prelude.Int
  use seq.Seq
  clone CreuSat_Logic_Logic_Unset_Stub as Unset0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate complete [#"../CreuSAT/src/logic/logic_assignments.rs" 54 4 54 33] (self : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 55 8 57 9] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model self) -> not Unset0.unset (Seq.get (ShallowModel0.shallow_model self) i)
  val complete [#"../CreuSAT/src/logic/logic_assignments.rs" 54 4 54 33] (self : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = complete self }
    
end
module CreuSat_Decision_Impl2_GetNext_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete_Stub as Complete0
  clone CreuSat_Logic_Logic_Unset_Stub as Unset0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8
  use Core_Option_Option_Type as Core_Option_Option_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant0
  val get_next [#"../CreuSAT/src/decision.rs" 236 4 236 78] (self : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (_f : CreuSat_Formula_Formula_Type.t_formula) : Core_Option_Option_Type.t_option usize
    requires {[#"../CreuSAT/src/decision.rs" 230 4 230 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/decision.rs" 231 15 231 31] Invariant1.invariant' a _f}
    ensures { [#"../CreuSAT/src/decision.rs" 230 4 230 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/decision.rs" 232 14 235 5] match (result) with
      | Core_Option_Option_Type.C_Some k -> UIntSize.to_int k < Seq.length (ShallowModel0.shallow_model a) /\ Unset0.unset (Seq.get (ShallowModel0.shallow_model a) (UIntSize.to_int k))
      | Core_Option_Option_Type.C_None -> Complete0.complete a
      end }
    
end
module CreuSat_Decision_Impl2_GetNext
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.UInt8
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Decision_Node_Type.t_node),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Core_Usize_Max as Max1
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Assignments_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone Alloc_Vec_Impl13_Index_Interface as Index1 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Decision_Node_Type.t_node
  clone CreuSat_Assignments_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete as Complete0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate Unset0.unset = Unset0.unset
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX'
  use Core_Option_Option_Type as Core_Option_Option_Type
  let rec cfg get_next [#"../CreuSAT/src/decision.rs" 236 4 236 78] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (_f : CreuSat_Formula_Formula_Type.t_formula) : Core_Option_Option_Type.t_option usize
    requires {[#"../CreuSAT/src/decision.rs" 230 4 230 52] Invariant0.invariant' ( * self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/decision.rs" 231 15 231 31] Invariant1.invariant' a _f}
    ensures { [#"../CreuSAT/src/decision.rs" 230 4 230 52] Invariant0.invariant' ( ^ self) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/decision.rs" 232 14 235 5] match (result) with
      | Core_Option_Option_Type.C_Some k -> UIntSize.to_int k < Seq.length (ShallowModel0.shallow_model a) /\ Unset0.unset (Seq.get (ShallowModel0.shallow_model a) (UIntSize.to_int k))
      | Core_Option_Option_Type.C_None -> Complete0.complete a
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.t_option usize;
  var self_1 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var a_2 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var iNVALID'_8 : usize;
  var curr_9 : usize;
  var _10 : ();
  var _12 : ();
  var _13 : bool;
  var _14 : usize;
  var _15 : usize;
  var _16 : ();
  var _17 : bool;
  var _18 : uint8;
  var _19 : uint8;
  var _20 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _21 : usize;
  var _22 : ();
  var _23 : usize;
  var _24 : CreuSat_Decision_Node_Type.t_node;
  var _25 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
  var _26 : usize;
  var _27 : usize;
  var _28 : usize;
  var _29 : CreuSat_Decision_Node_Type.t_node;
  var _30 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
  var _31 : usize;
  var _32 : ();
  var _33 : ();
  var _34 : ();
  var i_35 : usize;
  var _36 : ();
  var _38 : bool;
  var _39 : usize;
  var _40 : usize;
  var _41 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _42 : ();
  var _43 : bool;
  var _44 : uint8;
  var _45 : uint8;
  var _46 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _47 : usize;
  var _48 : ();
  var _49 : usize;
  var _50 : ();
  var _51 : ();
  var _52 : ();
  {
    self_1 <- self;
    a_2 <- a;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    iNVALID'_8 <- ([#"../CreuSAT/src/decision.rs" 237 29 237 39] (18446744073709551615 : usize));
    curr_9 <- CreuSat_Decision_Decisions_Type.decisions_search ( * self_1);
    goto BB1
  }
  BB1 {
    invariant { [#"../CreuSAT/src/decision.rs" 239 20 239 60] curr_9 = Max0.mAX' \/ UIntSize.to_int curr_9 < Seq.length (ShallowModel0.shallow_model a_2) };
    _14 <- curr_9;
    _15 <- iNVALID'_8;
    _13 <- ([#"../CreuSAT/src/decision.rs" 240 14 240 29] _14 <> _15);
    switch (_13)
      | False -> goto BB8
      | True -> goto BB2
      end
  }
  BB2 {
    _20 <- a_2;
    _21 <- curr_9;
    _19 <- ([#"../CreuSAT/src/decision.rs" 241 15 241 22] Index0.index _20 _21);
    goto BB3
  }
  BB3 {
    _18 <- _19;
    _17 <- ([#"../CreuSAT/src/decision.rs" 241 15 241 27] _18 >= ([#"../CreuSAT/src/decision.rs" 241 26 241 27] (2 : uint8)));
    switch (_17)
      | False -> goto BB6
      | True -> goto BB4
      end
  }
  BB4 {
    _25 <- CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1);
    _26 <- curr_9;
    _24 <- ([#"../CreuSAT/src/decision.rs" 242 30 242 52] Index1.index _25 _26);
    goto BB5
  }
  BB5 {
    _23 <- CreuSat_Decision_Node_Type.node_next _24;
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.C_Decisions a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.C_Decisions a b c _23) };
    _23 <- any usize;
    assume { Resolve0.resolve self_1 };
    _27 <- curr_9;
    _0 <- Core_Option_Option_Type.C_Some _27;
    goto BB16
  }
  BB6 {
    _16 <- ();
    _30 <- CreuSat_Decision_Decisions_Type.decisions_linked_list ( * self_1);
    _31 <- curr_9;
    _29 <- ([#"../CreuSAT/src/decision.rs" 245 19 245 41] Index1.index _30 _31);
    goto BB7
  }
  BB7 {
    _28 <- CreuSat_Decision_Node_Type.node_next _29;
    curr_9 <- _28;
    _28 <- any usize;
    _12 <- ();
    goto BB1
  }
  BB8 {
    assume { Resolve0.resolve self_1 };
    _10 <- ();
    i_35 <- ([#"../CreuSAT/src/decision.rs" 249 27 249 28] (0 : usize));
    goto BB9
  }
  BB9 {
    invariant { [#"../CreuSAT/src/decision.rs" 250 8 250 73] forall j : int . 0 <= j /\ j < UIntSize.to_int i_35 -> not Unset0.unset (Seq.get (ShallowModel0.shallow_model a_2) j) };
    _39 <- i_35;
    _41 <- a_2;
    _40 <- ([#"../CreuSAT/src/decision.rs" 251 18 251 25] Len0.len _41);
    goto BB10
  }
  BB10 {
    _38 <- ([#"../CreuSAT/src/decision.rs" 251 14 251 25] _39 < _40);
    switch (_38)
      | False -> goto BB15
      | True -> goto BB11
      end
  }
  BB11 {
    _46 <- a_2;
    _47 <- i_35;
    _45 <- ([#"../CreuSAT/src/decision.rs" 252 15 252 19] Index0.index _46 _47);
    goto BB12
  }
  BB12 {
    _44 <- _45;
    _43 <- ([#"../CreuSAT/src/decision.rs" 252 15 252 24] _44 >= ([#"../CreuSAT/src/decision.rs" 252 23 252 24] (2 : uint8)));
    switch (_43)
      | False -> goto BB14
      | True -> goto BB13
      end
  }
  BB13 {
    _49 <- i_35;
    _0 <- Core_Option_Option_Type.C_Some _49;
    goto BB16
  }
  BB14 {
    _42 <- ();
    i_35 <- ([#"../CreuSAT/src/decision.rs" 255 12 255 18] i_35 + ([#"../CreuSAT/src/decision.rs" 255 17 255 18] (1 : usize)));
    _12 <- ();
    goto BB9
  }
  BB15 {
    _36 <- ();
    _0 <- Core_Option_Option_Type.C_None;
    goto BB17
  }
  BB16 {
    goto BB17
  }
  BB17 {
    return _0
  }
  
end
module CreuSat_Formula_Impl1_IndexMut_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
  val index_mut [#"../CreuSAT/src/formula.rs" 48 4 48 53] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (ix : usize) : borrowed (CreuSat_Clause_Clause_Type.t_clause)
    requires {[#"../CreuSAT/src/formula.rs" 43 15 43 34] UIntSize.to_int ix < Seq.length (let (a, _) = ShallowModel0.shallow_model self in a)}
    ensures { [#"../CreuSAT/src/formula.rs" 44 14 44 37] Seq.get (let (a, _) = ShallowModel0.shallow_model self in a) (UIntSize.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/formula.rs" 45 14 45 40] Seq.get (let (a, _) = ShallowModel1.shallow_model ( ^ self) in a) (UIntSize.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/formula.rs" 46 4 46 102] forall i : int . 0 <= i /\ i <> UIntSize.to_int ix /\ i < Seq.length (let (a, _) = ShallowModel0.shallow_model self in a) -> Seq.get (let (a, _) = ShallowModel0.shallow_model self in a) i = Seq.get (let (a, _) = ShallowModel1.shallow_model ( ^ self) in a) i }
    ensures { [#"../CreuSAT/src/formula.rs" 47 14 47 50] Seq.length (let (a, _) = ShallowModel1.shallow_model ( ^ self) in a) = Seq.length (let (a, _) = ShallowModel1.shallow_model ( * self) in a) }
    
end
module CreuSat_Formula_Impl1_IndexMut
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg index_mut [#"../CreuSAT/src/formula.rs" 48 4 48 53] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (ix : usize) : borrowed (CreuSat_Clause_Clause_Type.t_clause)
    requires {[#"../CreuSAT/src/formula.rs" 43 15 43 34] UIntSize.to_int ix < Seq.length (let (a, _) = ShallowModel0.shallow_model self in a)}
    ensures { [#"../CreuSAT/src/formula.rs" 44 14 44 37] Seq.get (let (a, _) = ShallowModel0.shallow_model self in a) (UIntSize.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/formula.rs" 45 14 45 40] Seq.get (let (a, _) = ShallowModel1.shallow_model ( ^ self) in a) (UIntSize.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/formula.rs" 46 4 46 102] forall i : int . 0 <= i /\ i <> UIntSize.to_int ix /\ i < Seq.length (let (a, _) = ShallowModel0.shallow_model self in a) -> Seq.get (let (a, _) = ShallowModel0.shallow_model self in a) i = Seq.get (let (a, _) = ShallowModel1.shallow_model ( ^ self) in a) i }
    ensures { [#"../CreuSAT/src/formula.rs" 47 14 47 50] Seq.length (let (a, _) = ShallowModel1.shallow_model ( ^ self) in a) = Seq.length (let (a, _) = ShallowModel1.shallow_model ( * self) in a) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var ix_2 : usize;
  var _3 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _9 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _10 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _11 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global));
  var _12 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _11 <- borrow_mut (CreuSat_Formula_Formula_Type.formula_clauses ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Formula_Formula_Type.C_Formula a b =  * self_1 in CreuSat_Formula_Formula_Type.C_Formula ( ^ _11) b) };
    assume { Resolve0.resolve self_1 };
    _12 <- ix_2;
    _10 <- ([#"../CreuSAT/src/formula.rs" 54 13 54 29] IndexMut0.index_mut _11 _12);
    goto BB1
  }
  BB1 {
    _9 <- borrow_mut ( * _10);
    _10 <- { _10 with current = ( ^ _9) };
    assume { Resolve1.resolve _10 };
    _3 <- borrow_mut ( * _9);
    _9 <- { _9 with current = ( ^ _3) };
    assume { Resolve1.resolve _9 };
    _0 <- borrow_mut ( * _3);
    _3 <- { _3 with current = ( ^ _0) };
    assume { Resolve1.resolve _3 };
    return _0
  }
  
end
module CreuSat_Solver_SatResult_Type
  use prelude.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_satresult  =
    | C_Sat (Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global))
    | C_Unsat
    | C_Unknown
    | C_Err
    
end
module CreuSat_Formula_Impl2_CheckFormulaInvariant_Interface
  use prelude.UIntSize
  use prelude.Int
  use prelude.Borrow
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Stub as FormulaSatInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
  use CreuSat_Solver_SatResult_Type as CreuSat_Solver_SatResult_Type
  val check_formula_invariant [#"../CreuSAT/src/formula.rs" 66 4 66 54] (self : CreuSat_Formula_Formula_Type.t_formula) : CreuSat_Solver_SatResult_Type.t_satresult
    ensures { [#"../CreuSAT/src/formula.rs" 60 14 65 5] match (result) with
      | CreuSat_Solver_SatResult_Type.C_Sat assn -> FormulaSatInner0.formula_sat_inner (ShallowModel0.shallow_model self) (ShallowModel1.shallow_model assn)
      | CreuSat_Solver_SatResult_Type.C_Unsat -> NotSatisfiable0.not_satisfiable self
      | CreuSat_Solver_SatResult_Type.C_Unknown -> Invariant0.invariant' self /\ 0 < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars self) /\ UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars self) < div (UIntSize.to_int Max0.mAX') 2
      | CreuSat_Solver_SatResult_Type.C_Err -> true
      end }
    
end
module CreuSat_Formula_Impl2_CheckFormulaInvariant
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.UInt8
  use seq.Seq
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant2.invariant'
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel7 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel5 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate Invariant0.invariant' = Invariant1.invariant',
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Clause_Impl2_Len_Interface as Len1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Clause_Impl2_CheckClauseInvariant_Interface as CheckClauseInvariant0 with
    predicate Invariant0.invariant' = Invariant1.invariant'
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone Alloc_Vec_Impl0_New_Interface as New0 with
    type t = uint8,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  use CreuSat_Solver_SatResult_Type as CreuSat_Solver_SatResult_Type
  let rec cfg check_formula_invariant [#"../CreuSAT/src/formula.rs" 66 4 66 54] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Formula_Formula_Type.t_formula) : CreuSat_Solver_SatResult_Type.t_satresult
    ensures { [#"../CreuSAT/src/formula.rs" 60 14 65 5] match (result) with
      | CreuSat_Solver_SatResult_Type.C_Sat assn -> FormulaSatInner0.formula_sat_inner (ShallowModel0.shallow_model self) (ShallowModel1.shallow_model assn)
      | CreuSat_Solver_SatResult_Type.C_Unsat -> NotSatisfiable0.not_satisfiable self
      | CreuSat_Solver_SatResult_Type.C_Unknown -> Invariant0.invariant' self /\ 0 < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars self) /\ UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars self) < div (UIntSize.to_int Max0.mAX') 2
      | CreuSat_Solver_SatResult_Type.C_Err -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_SatResult_Type.t_satresult;
  var self_1 : CreuSat_Formula_Formula_Type.t_formula;
  var _3 : ();
  var _4 : bool;
  var _5 : usize;
  var _6 : usize;
  var _7 : bool;
  var _8 : ();
  var _9 : ();
  var _10 : bool;
  var _11 : usize;
  var _12 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _13 : ();
  var _14 : Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global);
  var _15 : ();
  var _16 : bool;
  var _17 : usize;
  var _18 : ();
  var i_19 : usize;
  var _20 : ();
  var _23 : ();
  var _24 : bool;
  var _25 : usize;
  var _26 : usize;
  var _27 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _28 : ();
  var _29 : bool;
  var _30 : bool;
  var _31 : CreuSat_Clause_Clause_Type.t_clause;
  var _32 : CreuSat_Clause_Clause_Type.t_clause;
  var _33 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _34 : usize;
  var _35 : usize;
  var _36 : ();
  var _37 : ();
  var _38 : bool;
  var _39 : usize;
  var _40 : CreuSat_Clause_Clause_Type.t_clause;
  var _41 : CreuSat_Clause_Clause_Type.t_clause;
  var _42 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _43 : usize;
  var _44 : ();
  var _45 : ();
  var _46 : ();
  var _47 : ();
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _5 <- CreuSat_Formula_Formula_Type.formula_num_vars self_1;
    _7 <- ([#"../CreuSAT/src/formula.rs" 67 28 67 42] ([#"../CreuSAT/src/formula.rs" 67 41 67 42] (2 : usize)) = ([#"../CreuSAT/src/formula.rs" 67 28 67 42] (0 : usize)));
    assert { [#"../CreuSAT/src/formula.rs" 67 28 67 42] not _7 };
    goto BB1
  }
  BB1 {
    _6 <- ([#"../CreuSAT/src/formula.rs" 67 28 67 42] ([#"../CreuSAT/src/formula.rs" 67 28 67 38] (18446744073709551615 : usize)) / ([#"../CreuSAT/src/formula.rs" 67 41 67 42] (2 : usize)));
    _4 <- ([#"../CreuSAT/src/formula.rs" 67 11 67 42] _5 >= _6);
    switch (_4)
      | False -> goto BB3
      | True -> goto BB2
      end
  }
  BB2 {
    _0 <- CreuSat_Solver_SatResult_Type.C_Err;
    goto BB24
  }
  BB3 {
    _3 <- ();
    _12 <- CreuSat_Formula_Formula_Type.formula_clauses self_1;
    _11 <- ([#"../CreuSAT/src/formula.rs" 70 11 70 29] Len0.len _12);
    goto BB4
  }
  BB4 {
    _10 <- ([#"../CreuSAT/src/formula.rs" 70 11 70 34] _11 = ([#"../CreuSAT/src/formula.rs" 70 33 70 34] (0 : usize)));
    switch (_10)
      | False -> goto BB8
      | True -> goto BB5
      end
  }
  BB5 {
    _14 <- ([#"../CreuSAT/src/formula.rs" 71 34 71 44] New0.new ());
    goto BB6
  }
  BB6 {
    _0 <- CreuSat_Solver_SatResult_Type.C_Sat _14;
    goto BB7
  }
  BB7 {
    goto BB24
  }
  BB8 {
    _9 <- ();
    _17 <- CreuSat_Formula_Formula_Type.formula_num_vars self_1;
    _16 <- ([#"../CreuSAT/src/formula.rs" 73 11 73 29] _17 = ([#"../CreuSAT/src/formula.rs" 73 28 73 29] (0 : usize)));
    switch (_16)
      | False -> goto BB10
      | True -> goto BB9
      end
  }
  BB9 {
    _0 <- CreuSat_Solver_SatResult_Type.C_Err;
    goto BB24
  }
  BB10 {
    _15 <- ();
    i_19 <- ([#"../CreuSAT/src/formula.rs" 76 27 76 28] (0 : usize));
    goto BB11
  }
  BB11 {
    invariant { [#"../CreuSAT/src/formula.rs" 77 8 77 100] forall j : int . 0 <= j /\ j < UIntSize.to_int i_19 -> Invariant1.invariant' (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self_1)) j) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars self_1)) };
    invariant { [#"../CreuSAT/src/formula.rs" 77 8 77 100] forall j : int . 0 <= j /\ j < UIntSize.to_int i_19 -> Seq.length (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self_1)) j)) > 0 };
    _25 <- i_19;
    _27 <- CreuSat_Formula_Formula_Type.formula_clauses self_1;
    _26 <- ([#"../CreuSAT/src/formula.rs" 79 18 79 36] Len0.len _27);
    goto BB12
  }
  BB12 {
    _24 <- ([#"../CreuSAT/src/formula.rs" 79 14 79 36] _25 < _26);
    switch (_24)
      | False -> goto BB22
      | True -> goto BB13
      end
  }
  BB13 {
    _33 <- CreuSat_Formula_Formula_Type.formula_clauses self_1;
    _34 <- i_19;
    _32 <- ([#"../CreuSAT/src/formula.rs" 80 16 80 31] Index0.index _33 _34);
    goto BB14
  }
  BB14 {
    _31 <- _32;
    _35 <- CreuSat_Formula_Formula_Type.formula_num_vars self_1;
    _30 <- ([#"../CreuSAT/src/formula.rs" 80 16 80 69] CheckClauseInvariant0.check_clause_invariant _31 _35);
    goto BB15
  }
  BB15 {
    _29 <- not _30;
    switch (_29)
      | False -> goto BB17
      | True -> goto BB16
      end
  }
  BB16 {
    _0 <- CreuSat_Solver_SatResult_Type.C_Err;
    goto BB23
  }
  BB17 {
    _28 <- ();
    _42 <- CreuSat_Formula_Formula_Type.formula_clauses self_1;
    _43 <- i_19;
    _41 <- ([#"../CreuSAT/src/formula.rs" 83 15 83 30] Index0.index _42 _43);
    goto BB18
  }
  BB18 {
    _40 <- _41;
    _39 <- ([#"../CreuSAT/src/formula.rs" 83 15 83 36] Len1.len _40);
    goto BB19
  }
  BB19 {
    _38 <- ([#"../CreuSAT/src/formula.rs" 83 15 83 41] _39 = ([#"../CreuSAT/src/formula.rs" 83 40 83 41] (0 : usize)));
    switch (_38)
      | False -> goto BB21
      | True -> goto BB20
      end
  }
  BB20 {
    _0 <- CreuSat_Solver_SatResult_Type.C_Unsat;
    goto BB23
  }
  BB21 {
    _37 <- ();
    i_19 <- ([#"../CreuSAT/src/formula.rs" 86 12 86 18] i_19 + ([#"../CreuSAT/src/formula.rs" 86 17 86 18] (1 : usize)));
    _23 <- ();
    goto BB11
  }
  BB22 {
    _20 <- ();
    _0 <- CreuSat_Solver_SatResult_Type.C_Unknown;
    goto BB24
  }
  BB23 {
    goto BB24
  }
  BB24 {
    return _0
  }
  
end
module CreuSat_Logic_LogicClause_Impl2_Sat_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate sat [#"../CreuSAT/src/logic/logic_clause.rs" 166 4 166 44] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicClause_Impl2_Sat_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate sat [#"../CreuSAT/src/logic/logic_clause.rs" 166 4 166 44] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicClause_Impl2_Sat
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Stub as SatInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate sat [#"../CreuSAT/src/logic/logic_clause.rs" 166 4 166 44] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 168 12 168 30] SatInner0.sat_inner self (ShallowModel0.shallow_model a)
  val sat [#"../CreuSAT/src/logic/logic_clause.rs" 166 4 166 44] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = sat self a }
    
end
module CreuSat_Lit_Impl2_LitSat_Interface
  use seq.Seq
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Stub as Sat0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8
  val lit_sat [#"../CreuSAT/src/lit.rs" 64 4 64 49] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/lit.rs" 62 15 62 39] Invariant0.invariant' self (Seq.length (ShallowModel0.shallow_model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 63 14 63 36] result = Sat0.sat self a }
    
end
module CreuSat_Lit_Impl2_LitSat
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Assignments_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Lit_Impl2_IsPositive_Interface as IsPositive0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg lit_sat [#"../CreuSAT/src/lit.rs" 64 4 64 49] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/lit.rs" 62 15 62 39] Invariant0.invariant' self (Seq.length (ShallowModel0.shallow_model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 63 14 63 36] result = Sat0.sat self a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  var a_2 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _5 : bool;
  var _6 : CreuSat_Lit_Lit_Type.t_lit;
  var _7 : uint8;
  var _8 : uint8;
  var _9 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _10 : usize;
  var _11 : CreuSat_Lit_Lit_Type.t_lit;
  var _12 : uint8;
  var _13 : uint8;
  var _14 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _15 : usize;
  var _16 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    _6 <- self_1;
    _5 <- ([#"../CreuSAT/src/lit.rs" 65 14 65 32] IsPositive0.is_positive _6);
    goto BB1
  }
  BB1 {
    switch (_5)
      | False -> goto BB2
      | True -> goto BB3
      end
  }
  BB2 {
    _14 <- a_2;
    _16 <- self_1;
    _15 <- ([#"../CreuSAT/src/lit.rs" 67 24 67 36] Index0.index _16);
    goto BB6
  }
  BB3 {
    _9 <- a_2;
    _11 <- self_1;
    _10 <- ([#"../CreuSAT/src/lit.rs" 66 23 66 35] Index0.index _11);
    goto BB4
  }
  BB4 {
    _8 <- ([#"../CreuSAT/src/lit.rs" 66 21 66 36] Index1.index _9 _10);
    goto BB5
  }
  BB5 {
    _7 <- _8;
    _0 <- ([#"../CreuSAT/src/lit.rs" 66 20 66 42] _7 = ([#"../CreuSAT/src/lit.rs" 66 40 66 41] (1 : uint8)));
    goto BB8
  }
  BB6 {
    _13 <- ([#"../CreuSAT/src/lit.rs" 67 22 67 37] Index1.index _14 _15);
    goto BB7
  }
  BB7 {
    _12 <- _13;
    _0 <- ([#"../CreuSAT/src/lit.rs" 67 21 67 43] _12 = ([#"../CreuSAT/src/lit.rs" 67 41 67 42] (0 : uint8)));
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Formula_Impl2_IsClauseSat_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicClause_Impl2_Sat_Stub as Sat0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val is_clause_sat [#"../CreuSAT/src/formula.rs" 96 4 96 68] (self : CreuSat_Formula_Formula_Type.t_formula) (idx : usize) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/formula.rs" 92 15 92 31] Invariant0.invariant' self}
    requires {[#"../CreuSAT/src/formula.rs" 93 15 93 33] Invariant1.invariant' a self}
    requires {[#"../CreuSAT/src/formula.rs" 94 15 94 41] UIntSize.to_int idx < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self))}
    ensures { [#"../CreuSAT/src/formula.rs" 95 14 95 51] result = Sat0.sat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self)) (UIntSize.to_int idx)) a }
    
end
module CreuSat_Formula_Impl2_IsClauseSat
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant2.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel6 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Lit_Impl2_LitSat_Interface as LitSat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    predicate Sat0.sat = Sat1.sat
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel1 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause
  clone CreuSat_Logic_LogicClause_Impl2_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg is_clause_sat [#"../CreuSAT/src/formula.rs" 96 4 96 68] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Formula_Formula_Type.t_formula) (idx : usize) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/formula.rs" 92 15 92 31] Invariant0.invariant' self}
    requires {[#"../CreuSAT/src/formula.rs" 93 15 93 33] Invariant1.invariant' a self}
    requires {[#"../CreuSAT/src/formula.rs" 94 15 94 41] UIntSize.to_int idx < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self))}
    ensures { [#"../CreuSAT/src/formula.rs" 95 14 95 51] result = Sat0.sat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self)) (UIntSize.to_int idx)) a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Formula_Formula_Type.t_formula;
  var idx_2 : usize;
  var a_3 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var clause_8 : CreuSat_Clause_Clause_Type.t_clause;
  var _9 : CreuSat_Clause_Clause_Type.t_clause;
  var _10 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _11 : usize;
  var i_12 : usize;
  var _13 : ();
  var _15 : ();
  var _16 : bool;
  var _17 : usize;
  var _18 : usize;
  var _19 : CreuSat_Clause_Clause_Type.t_clause;
  var _20 : ();
  var _21 : bool;
  var _22 : CreuSat_Lit_Lit_Type.t_lit;
  var _23 : CreuSat_Lit_Lit_Type.t_lit;
  var _24 : CreuSat_Clause_Clause_Type.t_clause;
  var _25 : usize;
  var _26 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _27 : ();
  var _28 : ();
  var _29 : ();
  var _30 : ();
  {
    self_1 <- self;
    idx_2 <- idx;
    a_3 <- a;
    goto BB0
  }
  BB0 {
    _10 <- CreuSat_Formula_Formula_Type.formula_clauses self_1;
    _11 <- idx_2;
    _9 <- ([#"../CreuSAT/src/formula.rs" 97 22 97 39] Index0.index _10 _11);
    goto BB1
  }
  BB1 {
    clause_8 <- _9;
    i_12 <- ([#"../CreuSAT/src/formula.rs" 98 27 98 28] (0 : usize));
    goto BB2
  }
  BB2 {
    invariant { [#"../CreuSAT/src/formula.rs" 99 8 99 77] forall j : int . 0 <= j /\ j < UIntSize.to_int i_12 -> not Sat1.sat (Seq.get (ShallowModel1.shallow_model clause_8) j) a_3 };
    _17 <- i_12;
    _19 <- clause_8;
    _18 <- ([#"../CreuSAT/src/formula.rs" 100 18 100 30] Len0.len _19);
    goto BB3
  }
  BB3 {
    _16 <- ([#"../CreuSAT/src/formula.rs" 100 14 100 30] _17 < _18);
    switch (_16)
      | False -> goto BB9
      | True -> goto BB4
      end
  }
  BB4 {
    _24 <- clause_8;
    _25 <- i_12;
    _23 <- ([#"../CreuSAT/src/formula.rs" 101 15 101 24] Index1.index _24 _25);
    goto BB5
  }
  BB5 {
    _22 <- _23;
    _26 <- a_3;
    _21 <- ([#"../CreuSAT/src/formula.rs" 101 15 101 35] LitSat0.lit_sat _22 _26);
    goto BB6
  }
  BB6 {
    switch (_21)
      | False -> goto BB8
      | True -> goto BB7
      end
  }
  BB7 {
    _0 <- ([#"../CreuSAT/src/formula.rs" 102 23 102 27] true);
    goto BB10
  }
  BB8 {
    _20 <- ();
    i_12 <- ([#"../CreuSAT/src/formula.rs" 104 12 104 18] i_12 + ([#"../CreuSAT/src/formula.rs" 104 17 104 18] (1 : usize)));
    _15 <- ();
    goto BB2
  }
  BB9 {
    _13 <- ();
    _0 <- ([#"../CreuSAT/src/formula.rs" 106 8 106 13] false);
    goto BB10
  }
  BB10 {
    return _0
  }
  
end
module CreuSat_Watches_Watcher_Type
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  type t_watcher  =
    | C_Watcher usize (CreuSat_Lit_Lit_Type.t_lit)
    
  let function watcher_cref (self : t_watcher) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Watcher a _ -> a
      end
  let function watcher_blocker (self : t_watcher) : CreuSat_Lit_Lit_Type.t_lit = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Watcher _ a -> a
      end
end
module CreuSat_Watches_Watches_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  type t_watches  =
    | C_Watches (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global))
    
  let function watches_watches (self : t_watches) : Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Watches a -> a
      end
end
module CreuSat_Logic_LogicWatches_WatchesInvariantInternal_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  predicate watches_invariant_internal [#"../CreuSAT/src/logic/logic_watches.rs" 11 0 11 83] (w : Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global))) (n : int) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicWatches_WatchesInvariantInternal_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  predicate watches_invariant_internal [#"../CreuSAT/src/logic/logic_watches.rs" 11 0 11 83] (w : Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global))) (n : int) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicWatches_WatchesInvariantInternal
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel2
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate watches_invariant_internal [#"../CreuSAT/src/logic/logic_watches.rs" 11 0 11 83] (w : Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global))) (n : int) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 12 4 20 5] 2 * n = Seq.length w /\ (forall i : int . 0 <= i /\ i < Seq.length w -> (forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model (Seq.get w i)) -> UIntSize.to_int (CreuSat_Watches_Watcher_Type.watcher_cref (Seq.get (ShallowModel0.shallow_model (Seq.get w i)) j)) < Seq.length (ShallowModel1.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) /\ Seq.length (ShallowModel2.shallow_model (Seq.get (ShallowModel1.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int (CreuSat_Watches_Watcher_Type.watcher_cref (Seq.get (ShallowModel0.shallow_model (Seq.get w i)) j))))) > 1 /\ IndexLogic0.index_logic (CreuSat_Watches_Watcher_Type.watcher_blocker (Seq.get (ShallowModel0.shallow_model (Seq.get w i)) j)) < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)))
  val watches_invariant_internal [#"../CreuSAT/src/logic/logic_watches.rs" 11 0 11 83] (w : Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global))) (n : int) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = watches_invariant_internal w n f }
    
end
module CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_watches.rs" 67 4 67 46] (self : CreuSat_Watches_Watches_Type.t_watches) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_watches.rs" 67 4 67 46] (self : CreuSat_Watches_Watches_Type.t_watches) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicWatches_Impl0_Invariant
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal_Stub as WatchesInvariantInternal0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  predicate invariant' [#"../CreuSAT/src/logic/logic_watches.rs" 67 4 67 46] (self : CreuSat_Watches_Watches_Type.t_watches) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 69 12 69 69] WatchesInvariantInternal0.watches_invariant_internal (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches self)) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) f
  val invariant' [#"../CreuSAT/src/logic/logic_watches.rs" 67 4 67 46] (self : CreuSat_Watches_Watches_Type.t_watches) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = invariant' self f }
    
end
module CreuSat_Logic_LogicFormula_Impl1_SatInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 103 4 103 57] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 103 4 103 57] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_Impl1_SatInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Stub as SatInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 103 4 103 57] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 104 8 107 9] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self)) -> SatInner0.sat_inner (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self)) i) a
  val sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 103 4 103 57] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8) : bool
    ensures { result = sat_inner self a }
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate eventually_sat_complete [#"../CreuSAT/src/logic/logic_formula.rs" 53 4 53 48] (self : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate eventually_sat_complete [#"../CreuSAT/src/logic/logic_formula.rs" 53 4 53 48] (self : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Stub as SatInner0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Stub as CompleteInner0
  predicate eventually_sat_complete [#"../CreuSAT/src/logic/logic_formula.rs" 53 4 53 48] (self : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 54 8 56 9] exists a2 : Seq.seq uint8 . Seq.length a2 = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars self) /\ CompleteInner0.complete_inner a2 /\ SatInner0.sat_inner self a2
  val eventually_sat_complete [#"../CreuSAT/src/logic/logic_formula.rs" 53 4 53 48] (self : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = eventually_sat_complete self }
    
end
module CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate equisat [#"../CreuSAT/src/logic/logic_formula.rs" 60 4 60 44] (self : CreuSat_Formula_Formula_Type.t_formula) (o : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate equisat [#"../CreuSAT/src/logic/logic_formula.rs" 60 4 60 44] (self : CreuSat_Formula_Formula_Type.t_formula) (o : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicFormula_Impl1_Equisat
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete_Stub as EventuallySatComplete0
  predicate equisat [#"../CreuSAT/src/logic/logic_formula.rs" 60 4 60 44] (self : CreuSat_Formula_Formula_Type.t_formula) (o : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 61 8 61 69] EventuallySatComplete0.eventually_sat_complete self = EventuallySatComplete0.eventually_sat_complete o
  val equisat [#"../CreuSAT/src/logic/logic_formula.rs" 60 4 60 44] (self : CreuSat_Formula_Formula_Type.t_formula) (o : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = equisat self o }
    
end
module CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Stub
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function to_neg_watchidx_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 39 4 39 45] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    
end
module CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Interface
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function to_neg_watchidx_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 39 4 39 45] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    
end
module CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  function to_neg_watchidx_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 39 4 39 45] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 40 8 40 91] IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      1
    else
      0
    )
  val to_neg_watchidx_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 39 4 39 45] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    ensures { result = to_neg_watchidx_logic self }
    
end
module CreuSat_Lit_Impl2_ToNegWatchidx_Interface
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Stub as ToNegWatchidxLogic0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  val to_neg_watchidx [#"../CreuSAT/src/lit.rs" 111 4 111 41] (self : CreuSat_Lit_Lit_Type.t_lit) : usize
    requires {[#"../CreuSAT/src/lit.rs" 108 15 108 49] IndexLogic0.index_logic self < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/lit.rs" 109 14 109 53] UIntSize.to_int result = ToNegWatchidxLogic0.to_neg_watchidx_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 110 14 110 94] UIntSize.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      1
    else
      0
    ) }
    
end
module CreuSat_Lit_Impl2_ToNegWatchidx
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Lit_Impl2_IsPositive_Interface as IsPositive0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone Core_Usize_Max as Max0
  let rec cfg to_neg_watchidx [#"../CreuSAT/src/lit.rs" 111 4 111 41] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) : usize
    requires {[#"../CreuSAT/src/lit.rs" 108 15 108 49] IndexLogic0.index_logic self < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/lit.rs" 109 14 109 53] UIntSize.to_int result = ToNegWatchidxLogic0.to_neg_watchidx_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 110 14 110 94] UIntSize.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      1
    else
      0
    ) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  var _5 : usize;
  var _6 : usize;
  var _7 : CreuSat_Lit_Lit_Type.t_lit;
  var _8 : usize;
  var _9 : bool;
  var _10 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _7 <- self_1;
    _6 <- ([#"../CreuSAT/src/lit.rs" 112 8 112 20] Index0.index _7);
    goto BB1
  }
  BB1 {
    _5 <- ([#"../CreuSAT/src/lit.rs" 112 8 112 24] _6 * ([#"../CreuSAT/src/lit.rs" 112 23 112 24] (2 : usize)));
    _10 <- self_1;
    _9 <- ([#"../CreuSAT/src/lit.rs" 112 30 112 48] IsPositive0.is_positive _10);
    goto BB2
  }
  BB2 {
    switch (_9)
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    _8 <- ([#"../CreuSAT/src/lit.rs" 112 51 112 52] (1 : usize));
    goto BB5
  }
  BB4 {
    _8 <- ([#"../CreuSAT/src/lit.rs" 112 62 112 63] (0 : usize));
    goto BB5
  }
  BB5 {
    _0 <- ([#"../CreuSAT/src/lit.rs" 112 8 112 65] _5 + _8);
    return _0
  }
  
end
module CreuSat_Watches_Impl0_AddWatcher_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel2
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Stub as ToNegWatchidxLogic0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant0
  val add_watcher [#"../CreuSAT/src/watches.rs" 109 4 109 84] (self : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (lit : CreuSat_Lit_Lit_Type.t_lit) (cref : usize) (_f : CreuSat_Formula_Formula_Type.t_formula) (blocker : CreuSat_Lit_Lit_Type.t_lit) : ()
    requires {[#"../CreuSAT/src/watches.rs" 102 4 102 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/watches.rs" 103 15 103 40] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f))}
    requires {[#"../CreuSAT/src/watches.rs" 104 15 104 48] IndexLogic0.index_logic lit < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/watches.rs" 105 15 105 51] IndexLogic0.index_logic blocker < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    requires {[#"../CreuSAT/src/watches.rs" 106 15 106 64] ToNegWatchidxLogic0.to_neg_watchidx_logic lit < Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 107 15 107 44] Seq.length (ShallowModel2.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) > 1}
    ensures { [#"../CreuSAT/src/watches.rs" 102 4 102 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/watches.rs" 108 14 108 59] Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self))) = Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( ^ self))) }
    
end
module CreuSat_Watches_Impl0_AddWatcher
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use seq.Seq
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone Core_Usize_Max as Max0
  clone CreuSat_Lit_Impl2_ToNegWatchidx_Interface as ToNegWatchidx0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX',
    function ToNegWatchidxLogic0.to_neg_watchidx_logic = ToNegWatchidxLogic0.to_neg_watchidx_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  let rec cfg add_watcher [#"../CreuSAT/src/watches.rs" 109 4 109 84] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (lit : CreuSat_Lit_Lit_Type.t_lit) (cref : usize) (_f : CreuSat_Formula_Formula_Type.t_formula) (blocker : CreuSat_Lit_Lit_Type.t_lit) : ()
    requires {[#"../CreuSAT/src/watches.rs" 102 4 102 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/watches.rs" 103 15 103 40] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f))}
    requires {[#"../CreuSAT/src/watches.rs" 104 15 104 48] IndexLogic0.index_logic lit < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/watches.rs" 105 15 105 51] IndexLogic0.index_logic blocker < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    requires {[#"../CreuSAT/src/watches.rs" 106 15 106 64] ToNegWatchidxLogic0.to_neg_watchidx_logic lit < Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 107 15 107 44] Seq.length (ShallowModel2.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) > 1}
    ensures { [#"../CreuSAT/src/watches.rs" 102 4 102 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/watches.rs" 108 14 108 59] Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self))) = Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var lit_2 : CreuSat_Lit_Lit_Type.t_lit;
  var cref_3 : usize;
  var _f_4 : CreuSat_Formula_Formula_Type.t_formula;
  var blocker_5 : CreuSat_Lit_Lit_Type.t_lit;
  var _14 : ();
  var _15 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _16 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _17 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _18 : usize;
  var _19 : CreuSat_Lit_Lit_Type.t_lit;
  var _20 : CreuSat_Watches_Watcher_Type.t_watcher;
  var _21 : usize;
  var _22 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    lit_2 <- lit;
    cref_3 <- cref;
    _f_4 <- _f;
    blocker_5 <- blocker;
    goto BB0
  }
  BB0 {
    _17 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * self_1 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _17)) };
    assume { Resolve0.resolve self_1 };
    _19 <- lit_2;
    _18 <- ([#"../CreuSAT/src/watches.rs" 110 21 110 42] ToNegWatchidx0.to_neg_watchidx _19);
    goto BB1
  }
  BB1 {
    _16 <- ([#"../CreuSAT/src/watches.rs" 110 8 110 43] IndexMut0.index_mut _17 _18);
    goto BB2
  }
  BB2 {
    _15 <- borrow_mut ( * _16);
    _16 <- { _16 with current = ( ^ _15) };
    assume { Resolve1.resolve _16 };
    _21 <- cref_3;
    _22 <- blocker_5;
    _20 <- CreuSat_Watches_Watcher_Type.C_Watcher _21 _22;
    _14 <- ([#"../CreuSAT/src/watches.rs" 110 8 110 75] Push0.push _15 _20);
    goto BB3
  }
  BB3 {
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Formula_Impl2_AddClause_Interface
  use prelude.Borrow
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant3
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val add_clause [#"../CreuSAT/src/formula.rs" 124 4 124 92] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (clause : CreuSat_Clause_Clause_Type.t_clause) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (_t : CreuSat_Trail_Trail_Type.t_trail) : usize
    requires {[#"../CreuSAT/src/formula.rs" 110 4 110 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 111 4 111 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 112 4 112 51] Invariant2.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 113 15 113 35] Seq.length (ShallowModel0.shallow_model clause) >= 2}
    requires {[#"../CreuSAT/src/formula.rs" 114 15 114 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/formula.rs" 117 15 117 47] Invariant3.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 118 15 118 53] EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel1.shallow_model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 110 4 110 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 111 4 111 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 112 4 112 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 119 14 119 49] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 120 14 120 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 121 14 121 44] UIntSize.to_int result = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 122 14 122 49] Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) (UIntSize.to_int result) = clause }
    ensures { [#"../CreuSAT/src/formula.rs" 123 14 123 63] Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) + 1 = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) }
    
end
module CreuSat_Formula_Impl2_AddClause
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Snapshot
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel13 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel11 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel10 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Watches_Impl0_AddWatcher_Interface as AddWatcher0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX',
    function ToNegWatchidxLogic0.to_neg_watchidx_logic = ToNegWatchidxLogic0.to_neg_watchidx_logic,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel0.shallow_model,
    val Max1.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel1 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg add_clause [#"../CreuSAT/src/formula.rs" 124 4 124 92] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (clause : CreuSat_Clause_Clause_Type.t_clause) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (_t : CreuSat_Trail_Trail_Type.t_trail) : usize
    requires {[#"../CreuSAT/src/formula.rs" 110 4 110 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 111 4 111 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 112 4 112 51] Invariant2.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 113 15 113 35] Seq.length (ShallowModel0.shallow_model clause) >= 2}
    requires {[#"../CreuSAT/src/formula.rs" 114 15 114 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/formula.rs" 117 15 117 47] Invariant3.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 118 15 118 53] EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel1.shallow_model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 110 4 110 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 111 4 111 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 112 4 112 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 119 14 119 49] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 120 14 120 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 121 14 121 44] UIntSize.to_int result = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 122 14 122 49] Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) (UIntSize.to_int result) = clause }
    ensures { [#"../CreuSAT/src/formula.rs" 123 14 123 63] Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) + 1 = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var clause_2 : CreuSat_Clause_Clause_Type.t_clause;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _t_4 : CreuSat_Trail_Trail_Type.t_trail;
  var old_self_20 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _22 : ();
  var cref_23 : usize;
  var _24 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var first_lit_25 : CreuSat_Lit_Lit_Type.t_lit;
  var _26 : CreuSat_Lit_Lit_Type.t_lit;
  var _27 : CreuSat_Clause_Clause_Type.t_clause;
  var second_lit_28 : CreuSat_Lit_Lit_Type.t_lit;
  var _29 : CreuSat_Lit_Lit_Type.t_lit;
  var _30 : CreuSat_Clause_Clause_Type.t_clause;
  var _31 : ();
  var _32 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global));
  var _33 : CreuSat_Clause_Clause_Type.t_clause;
  var _34 : ();
  var _35 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _36 : CreuSat_Lit_Lit_Type.t_lit;
  var _37 : usize;
  var _38 : CreuSat_Formula_Formula_Type.t_formula;
  var _39 : CreuSat_Lit_Lit_Type.t_lit;
  var _40 : ();
  var _41 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _42 : CreuSat_Lit_Lit_Type.t_lit;
  var _43 : usize;
  var _44 : CreuSat_Formula_Formula_Type.t_formula;
  var _45 : CreuSat_Lit_Lit_Type.t_lit;
  var _46 : ();
  var _48 : ();
  var _50 : ();
  {
    self_1 <- self;
    clause_2 <- clause;
    watches_3 <- watches;
    _t_4 <- _t;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    _22 <- ();
    old_self_20 <- ([#"../CreuSAT/src/formula.rs" 125 44 125 59] Snapshot.new self_1);
    goto BB5
  }
  BB5 {
    _24 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    cref_23 <- ([#"../CreuSAT/src/formula.rs" 126 19 126 37] Len0.len _24);
    goto BB6
  }
  BB6 {
    _27 <- clause_2;
    _26 <- ([#"../CreuSAT/src/formula.rs" 131 24 131 33] Index0.index _27 ([#"../CreuSAT/src/formula.rs" 131 31 131 32] (0 : usize)));
    goto BB7
  }
  BB7 {
    first_lit_25 <- _26;
    _30 <- clause_2;
    _29 <- ([#"../CreuSAT/src/formula.rs" 132 25 132 34] Index0.index _30 ([#"../CreuSAT/src/formula.rs" 132 32 132 33] (1 : usize)));
    goto BB8
  }
  BB8 {
    second_lit_28 <- _29;
    _32 <- borrow_mut (CreuSat_Formula_Formula_Type.formula_clauses ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Formula_Formula_Type.C_Formula a b =  * self_1 in CreuSat_Formula_Formula_Type.C_Formula ( ^ _32) b) };
    _33 <- clause_2;
    clause_2 <- any CreuSat_Clause_Clause_Type.t_clause;
    _31 <- ([#"../CreuSAT/src/formula.rs" 133 8 133 33] Push0.push _32 _33);
    goto BB9
  }
  BB9 {
    _35 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _35) };
    _36 <- first_lit_25;
    _37 <- cref_23;
    _38 <-  * self_1;
    _39 <- second_lit_28;
    _34 <- ([#"../CreuSAT/src/formula.rs" 134 8 134 62] AddWatcher0.add_watcher _35 _36 _37 _38 _39);
    goto BB10
  }
  BB10 {
    _41 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _41) };
    assume { Resolve0.resolve watches_3 };
    _42 <- second_lit_28;
    _43 <- cref_23;
    _44 <-  * self_1;
    assume { Resolve1.resolve self_1 };
    _45 <- first_lit_25;
    _40 <- ([#"../CreuSAT/src/formula.rs" 135 8 135 62] AddWatcher0.add_watcher _41 _42 _43 _44 _45);
    goto BB11
  }
  BB11 {
    assert { [#"../CreuSAT/src/formula.rs" 136 22 136 48]  ^ Snapshot.inner old_self_20 =  ^ self_1 };
    _46 <- ();
    assert { [#"../CreuSAT/src/formula.rs" 138 22 138 45] Equisat0.equisat ( * Snapshot.inner old_self_20) ( * self_1) };
    _48 <- ();
    assert { [#"../CreuSAT/src/formula.rs" 139 22 139 55] TrailInvariant0.trail_invariant (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_trail _t_4)) ( * self_1) };
    _50 <- ();
    _0 <- cref_23;
    goto BB12
  }
  BB12 {
    return _0
  }
  
end
module CreuSat_Formula_Impl2_AddUnwatchedClause_Interface
  use prelude.Borrow
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant3
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val add_unwatched_clause [#"../CreuSAT/src/formula.rs" 156 4 156 102] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (clause : CreuSat_Clause_Clause_Type.t_clause) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (_t : CreuSat_Trail_Trail_Type.t_trail) : usize
    requires {[#"../CreuSAT/src/formula.rs" 144 4 144 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 145 4 145 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 146 4 146 51] Invariant2.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 147 15 147 33] Seq.length (ShallowModel0.shallow_model clause) >= 2}
    requires {[#"../CreuSAT/src/formula.rs" 148 15 148 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/formula.rs" 149 15 149 47] Invariant3.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 150 15 150 53] EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel1.shallow_model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 144 4 144 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 145 4 145 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 146 4 146 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 151 14 151 49] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 152 14 152 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 153 14 153 44] UIntSize.to_int result = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 154 14 154 49] Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) (UIntSize.to_int result) = clause }
    ensures { [#"../CreuSAT/src/formula.rs" 155 14 155 63] Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) + 1 = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) }
    
end
module CreuSat_Formula_Impl2_AddUnwatchedClause
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Snapshot
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel11 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel10 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel1 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg add_unwatched_clause [#"../CreuSAT/src/formula.rs" 156 4 156 102] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (clause : CreuSat_Clause_Clause_Type.t_clause) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (_t : CreuSat_Trail_Trail_Type.t_trail) : usize
    requires {[#"../CreuSAT/src/formula.rs" 144 4 144 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 145 4 145 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 146 4 146 51] Invariant2.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 147 15 147 33] Seq.length (ShallowModel0.shallow_model clause) >= 2}
    requires {[#"../CreuSAT/src/formula.rs" 148 15 148 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/formula.rs" 149 15 149 47] Invariant3.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 150 15 150 53] EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel1.shallow_model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 144 4 144 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 145 4 145 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 146 4 146 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 151 14 151 49] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 152 14 152 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 153 14 153 44] UIntSize.to_int result = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 154 14 154 49] Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) (UIntSize.to_int result) = clause }
    ensures { [#"../CreuSAT/src/formula.rs" 155 14 155 63] Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) + 1 = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var clause_2 : CreuSat_Clause_Clause_Type.t_clause;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _t_4 : CreuSat_Trail_Trail_Type.t_trail;
  var old_self_20 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _22 : ();
  var cref_23 : usize;
  var _24 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _25 : ();
  var _26 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global));
  var _27 : CreuSat_Clause_Clause_Type.t_clause;
  {
    self_1 <- self;
    clause_2 <- clause;
    watches_3 <- watches;
    _t_4 <- _t;
    goto BB0
  }
  BB0 {
    assume { Resolve0.resolve watches_3 };
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    _22 <- ();
    old_self_20 <- ([#"../CreuSAT/src/formula.rs" 157 44 157 59] Snapshot.new self_1);
    goto BB5
  }
  BB5 {
    _24 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    cref_23 <- ([#"../CreuSAT/src/formula.rs" 158 19 158 37] Len0.len _24);
    goto BB6
  }
  BB6 {
    _26 <- borrow_mut (CreuSat_Formula_Formula_Type.formula_clauses ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Formula_Formula_Type.C_Formula a b =  * self_1 in CreuSat_Formula_Formula_Type.C_Formula ( ^ _26) b) };
    assume { Resolve1.resolve self_1 };
    _27 <- clause_2;
    clause_2 <- any CreuSat_Clause_Clause_Type.t_clause;
    _25 <- ([#"../CreuSAT/src/formula.rs" 159 8 159 33] Push0.push _26 _27);
    goto BB7
  }
  BB7 {
    _0 <- cref_23;
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Formula_Impl2_AddUnit_Interface
  use prelude.Borrow
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Stub as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Stub as VarsInRangeInner0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val add_unit [#"../CreuSAT/src/formula.rs" 179 4 179 67] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (clause : CreuSat_Clause_Clause_Type.t_clause) (_t : CreuSat_Trail_Trail_Type.t_trail) : usize
    requires {[#"../CreuSAT/src/formula.rs" 164 4 164 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 165 4 165 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 166 15 166 35] Seq.length (ShallowModel0.shallow_model clause) = 1}
    requires {[#"../CreuSAT/src/formula.rs" 167 15 167 47] Invariant2.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 168 15 168 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/formula.rs" 169 15 169 59] VarsInRangeInner0.vars_in_range_inner (ShallowModel0.shallow_model clause) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 170 15 170 50] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel0.shallow_model clause)}
    requires {[#"../CreuSAT/src/formula.rs" 171 15 171 53] EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel1.shallow_model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 164 4 164 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 165 4 165 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 172 14 172 49] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 174 4 174 108] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) -> Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) i = Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) i }
    ensures { [#"../CreuSAT/src/formula.rs" 175 14 175 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 176 14 176 44] UIntSize.to_int result = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 177 14 177 51] Seq.length (ShallowModel0.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) (UIntSize.to_int result))) = 1 }
    ensures { [#"../CreuSAT/src/formula.rs" 178 14 178 63] Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) + 1 = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) }
    
end
module CreuSat_Formula_Impl2_AddUnit
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Snapshot
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel9 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel8 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel1 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone Core_Usize_Max as Max0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg add_unit [#"../CreuSAT/src/formula.rs" 179 4 179 67] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (clause : CreuSat_Clause_Clause_Type.t_clause) (_t : CreuSat_Trail_Trail_Type.t_trail) : usize
    requires {[#"../CreuSAT/src/formula.rs" 164 4 164 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 165 4 165 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 166 15 166 35] Seq.length (ShallowModel0.shallow_model clause) = 1}
    requires {[#"../CreuSAT/src/formula.rs" 167 15 167 47] Invariant2.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 168 15 168 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/formula.rs" 169 15 169 59] VarsInRangeInner0.vars_in_range_inner (ShallowModel0.shallow_model clause) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 170 15 170 50] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel0.shallow_model clause)}
    requires {[#"../CreuSAT/src/formula.rs" 171 15 171 53] EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel1.shallow_model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 164 4 164 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 165 4 165 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 172 14 172 49] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 174 4 174 108] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) -> Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) i = Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) i }
    ensures { [#"../CreuSAT/src/formula.rs" 175 14 175 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 176 14 176 44] UIntSize.to_int result = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 177 14 177 51] Seq.length (ShallowModel0.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) (UIntSize.to_int result))) = 1 }
    ensures { [#"../CreuSAT/src/formula.rs" 178 14 178 63] Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) + 1 = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var clause_2 : CreuSat_Clause_Clause_Type.t_clause;
  var _t_3 : CreuSat_Trail_Trail_Type.t_trail;
  var old_self_20 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _22 : ();
  var cref_23 : usize;
  var _24 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _25 : ();
  var _26 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global));
  var _27 : CreuSat_Clause_Clause_Type.t_clause;
  {
    self_1 <- self;
    clause_2 <- clause;
    _t_3 <- _t;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    _22 <- ();
    old_self_20 <- ([#"../CreuSAT/src/formula.rs" 180 44 180 59] Snapshot.new self_1);
    goto BB6
  }
  BB6 {
    _24 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    cref_23 <- ([#"../CreuSAT/src/formula.rs" 181 19 181 37] Len0.len _24);
    goto BB7
  }
  BB7 {
    _26 <- borrow_mut (CreuSat_Formula_Formula_Type.formula_clauses ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Formula_Formula_Type.C_Formula a b =  * self_1 in CreuSat_Formula_Formula_Type.C_Formula ( ^ _26) b) };
    assume { Resolve0.resolve self_1 };
    _27 <- clause_2;
    clause_2 <- any CreuSat_Clause_Clause_Type.t_clause;
    _25 <- ([#"../CreuSAT/src/formula.rs" 182 8 182 33] Push0.push _26 _27);
    goto BB8
  }
  BB8 {
    _0 <- cref_23;
    goto BB9
  }
  BB9 {
    return _0
  }
  
end
module CreuSat_Logic_LogicFormula_Impl1_Sat_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate sat [#"../CreuSAT/src/logic/logic_formula.rs" 111 4 111 44] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicFormula_Impl1_Sat_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate sat [#"../CreuSAT/src/logic/logic_formula.rs" 111 4 111 44] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicFormula_Impl1_Sat
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Stub as FormulaSatInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel_Stub as ShallowModel0
  predicate sat [#"../CreuSAT/src/logic/logic_formula.rs" 111 4 111 44] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 112 20 112 48] FormulaSatInner0.formula_sat_inner (ShallowModel0.shallow_model self) (ShallowModel1.shallow_model a)
  val sat [#"../CreuSAT/src/logic/logic_formula.rs" 111 4 111 44] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = sat self a }
    
end
module CreuSat_Formula_Impl2_IsSat_Interface
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Sat_Stub as Sat0
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val is_sat [#"../CreuSAT/src/formula.rs" 190 4 190 49] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/formula.rs" 187 15 187 31] Invariant0.invariant' self}
    requires {[#"../CreuSAT/src/formula.rs" 188 15 188 33] Invariant1.invariant' a self}
    ensures { [#"../CreuSAT/src/formula.rs" 189 14 189 36] result = Sat0.sat self a }
    
end
module CreuSat_Formula_Impl2_IsSat
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use seq.Seq
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Sat as Sat1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Formula_Impl2_IsClauseSat_Interface as IsClauseSat0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Sat0.sat = Sat1.sat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  let rec cfg is_sat [#"../CreuSAT/src/formula.rs" 190 4 190 49] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/formula.rs" 187 15 187 31] Invariant0.invariant' self}
    requires {[#"../CreuSAT/src/formula.rs" 188 15 188 33] Invariant1.invariant' a self}
    ensures { [#"../CreuSAT/src/formula.rs" 189 14 189 36] result = Sat0.sat self a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Formula_Formula_Type.t_formula;
  var a_2 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var i_6 : usize;
  var _7 : ();
  var _9 : ();
  var _10 : bool;
  var _11 : usize;
  var _12 : usize;
  var _13 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _14 : ();
  var _15 : bool;
  var _16 : bool;
  var _17 : CreuSat_Formula_Formula_Type.t_formula;
  var _18 : usize;
  var _19 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _20 : ();
  var _21 : ();
  var _22 : ();
  var _23 : ();
  {
    self_1 <- self;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    i_6 <- ([#"../CreuSAT/src/formula.rs" 191 27 191 28] (0 : usize));
    goto BB1
  }
  BB1 {
    invariant { [#"../CreuSAT/src/formula.rs" 192 8 192 82] forall k : int . 0 <= k /\ k < UIntSize.to_int i_6 -> Sat1.sat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self_1)) k) a_2 };
    _11 <- i_6;
    _13 <- CreuSat_Formula_Formula_Type.formula_clauses self_1;
    _12 <- ([#"../CreuSAT/src/formula.rs" 193 18 193 36] Len0.len _13);
    goto BB2
  }
  BB2 {
    _10 <- ([#"../CreuSAT/src/formula.rs" 193 14 193 36] _11 < _12);
    switch (_10)
      | False -> goto BB7
      | True -> goto BB3
      end
  }
  BB3 {
    _17 <- self_1;
    _18 <- i_6;
    _19 <- a_2;
    _16 <- ([#"../CreuSAT/src/formula.rs" 194 16 194 40] IsClauseSat0.is_clause_sat _17 _18 _19);
    goto BB4
  }
  BB4 {
    _15 <- not _16;
    switch (_15)
      | False -> goto BB6
      | True -> goto BB5
      end
  }
  BB5 {
    _0 <- ([#"../CreuSAT/src/formula.rs" 195 23 195 28] false);
    goto BB8
  }
  BB6 {
    _14 <- ();
    i_6 <- ([#"../CreuSAT/src/formula.rs" 197 12 197 18] i_6 + ([#"../CreuSAT/src/formula.rs" 197 17 197 18] (1 : usize)));
    _9 <- ();
    goto BB1
  }
  BB7 {
    _7 <- ();
    _0 <- ([#"../CreuSAT/src/formula.rs" 199 8 199 12] true);
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Watches_Impl0_Unwatch_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant1 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant0
  val unwatch [#"../CreuSAT/src/watches.rs" 158 4 158 80] (self : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (f : CreuSat_Formula_Formula_Type.t_formula) (trail : CreuSat_Trail_Trail_Type.t_trail) (cref : usize) (lit : CreuSat_Lit_Lit_Type.t_lit) : ()
    requires {[#"../CreuSAT/src/watches.rs" 151 4 151 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/watches.rs" 152 15 152 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/watches.rs" 153 15 153 46] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)}
    requires {[#"../CreuSAT/src/watches.rs" 154 15 154 28] Invariant1.invariant' f}
    requires {[#"../CreuSAT/src/watches.rs" 155 15 155 34] Invariant2.invariant' trail f}
    requires {[#"../CreuSAT/src/watches.rs" 156 15 156 39] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    requires {[#"../CreuSAT/src/watches.rs" 157 15 157 44] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))) >= 2}
    ensures { [#"../CreuSAT/src/watches.rs" 151 4 151 42] Invariant0.invariant' ( ^ self) f }
    
end
module CreuSat_Watches_Impl0_Unwatch
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Slice
  use prelude.Snapshot
  use prelude.IntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel15 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel15.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel14 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Slice_Impl0_ShallowModel as ShallowModel13 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel12 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel11 with
    type t = slice (CreuSat_Watches_Watcher_Type.t_watcher),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel10 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel8 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone Alloc_Vec_Impl1_Pop_Interface as Pop0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel13.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = slice (CreuSat_Watches_Watcher_Type.t_watcher)
  clone Alloc_Vec_Impl10_DerefMut_Interface as DerefMut0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel13.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel14.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    val Max0.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    type Output0.output = CreuSat_Watches_Watcher_Type.t_watcher
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone Core_Usize_Max as Max0
  clone CreuSat_Lit_Impl2_ToNegWatchidx_Interface as ToNegWatchidx0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX',
    function ToNegWatchidxLogic0.to_neg_watchidx_logic = ToNegWatchidxLogic0.to_neg_watchidx_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  let rec cfg unwatch [#"../CreuSAT/src/watches.rs" 158 4 158 80] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (f : CreuSat_Formula_Formula_Type.t_formula) (trail : CreuSat_Trail_Trail_Type.t_trail) (cref : usize) (lit : CreuSat_Lit_Lit_Type.t_lit) : ()
    requires {[#"../CreuSAT/src/watches.rs" 151 4 151 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/watches.rs" 152 15 152 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/watches.rs" 153 15 153 46] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)}
    requires {[#"../CreuSAT/src/watches.rs" 154 15 154 28] Invariant1.invariant' f}
    requires {[#"../CreuSAT/src/watches.rs" 155 15 155 34] Invariant2.invariant' trail f}
    requires {[#"../CreuSAT/src/watches.rs" 156 15 156 39] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    requires {[#"../CreuSAT/src/watches.rs" 157 15 157 44] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))) >= 2}
    ensures { [#"../CreuSAT/src/watches.rs" 151 4 151 42] Invariant0.invariant' ( ^ self) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var f_2 : CreuSat_Formula_Formula_Type.t_formula;
  var trail_3 : CreuSat_Trail_Trail_Type.t_trail;
  var cref_4 : usize;
  var lit_5 : CreuSat_Lit_Lit_Type.t_lit;
  var watchidx_14 : usize;
  var _15 : CreuSat_Lit_Lit_Type.t_lit;
  var i_16 : usize;
  var _18 : ();
  var _19 : bool;
  var _20 : usize;
  var _21 : usize;
  var _22 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _23 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _24 : Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global);
  var _25 : usize;
  var _26 : ();
  var _27 : bool;
  var _28 : usize;
  var _29 : CreuSat_Watches_Watcher_Type.t_watcher;
  var _30 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _31 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _32 : Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global);
  var _33 : usize;
  var _34 : usize;
  var _35 : usize;
  var _36 : ();
  var end'_37 : usize;
  var _38 : usize;
  var _39 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _40 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _41 : Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global);
  var _42 : usize;
  var _43 : ();
  var _44 : borrowed (slice (CreuSat_Watches_Watcher_Type.t_watcher));
  var _45 : borrowed (slice (CreuSat_Watches_Watcher_Type.t_watcher));
  var _46 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _47 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _48 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _49 : usize;
  var _50 : usize;
  var _51 : usize;
  var old_w_52 : Snapshot.Snapshot_ty (borrowed (CreuSat_Watches_Watches_Type.t_watches));
  var _54 : ();
  var _55 : ();
  var _56 : Core_Option_Option_Type.t_option (CreuSat_Watches_Watcher_Type.t_watcher);
  var _57 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _58 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _59 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _60 : usize;
  var _61 : isize;
  var w_62 : CreuSat_Watches_Watcher_Type.t_watcher;
  var _63 : ();
  var _65 : ();
  var _67 : ();
  var _68 : ();
  var _69 : ();
  var _70 : ();
  {
    self_1 <- self;
    f_2 <- f;
    trail_3 <- trail;
    cref_4 <- cref;
    lit_5 <- lit;
    goto BB0
  }
  BB0 {
    _15 <- lit_5;
    watchidx_14 <- ([#"../CreuSAT/src/watches.rs" 159 23 159 44] ToNegWatchidx0.to_neg_watchidx _15);
    goto BB1
  }
  BB1 {
    i_16 <- ([#"../CreuSAT/src/watches.rs" 160 27 160 28] (0 : usize));
    goto BB2
  }
  BB2 {
    invariant { [#"../CreuSAT/src/watches.rs" 161 20 161 38] Invariant0.invariant' ( * self_1) f_2 };
    _20 <- i_16;
    _24 <- CreuSat_Watches_Watches_Type.watches_watches ( * self_1);
    _25 <- watchidx_14;
    _23 <- ([#"../CreuSAT/src/watches.rs" 162 18 162 40] Index0.index _24 _25);
    goto BB3
  }
  BB3 {
    _22 <- _23;
    _21 <- ([#"../CreuSAT/src/watches.rs" 162 18 162 46] Len0.len _22);
    goto BB4
  }
  BB4 {
    _19 <- ([#"../CreuSAT/src/watches.rs" 162 14 162 46] _20 < _21);
    switch (_19)
      | False -> goto BB21
      | True -> goto BB5
      end
  }
  BB5 {
    _32 <- CreuSat_Watches_Watches_Type.watches_watches ( * self_1);
    _33 <- watchidx_14;
    _31 <- ([#"../CreuSAT/src/watches.rs" 163 15 163 37] Index0.index _32 _33);
    goto BB6
  }
  BB6 {
    _30 <- _31;
    _34 <- i_16;
    _29 <- ([#"../CreuSAT/src/watches.rs" 163 15 163 40] Index1.index _30 _34);
    goto BB7
  }
  BB7 {
    _28 <- CreuSat_Watches_Watcher_Type.watcher_cref _29;
    _35 <- cref_4;
    _27 <- ([#"../CreuSAT/src/watches.rs" 163 15 163 53] _28 = _35);
    switch (_27)
      | False -> goto BB20
      | True -> goto BB8
      end
  }
  BB8 {
    _41 <- CreuSat_Watches_Watches_Type.watches_watches ( * self_1);
    _42 <- watchidx_14;
    _40 <- ([#"../CreuSAT/src/watches.rs" 164 26 164 48] Index0.index _41 _42);
    goto BB9
  }
  BB9 {
    _39 <- _40;
    _38 <- ([#"../CreuSAT/src/watches.rs" 164 26 164 54] Len0.len _39);
    goto BB10
  }
  BB10 {
    end'_37 <- ([#"../CreuSAT/src/watches.rs" 164 26 164 58] _38 - ([#"../CreuSAT/src/watches.rs" 164 57 164 58] (1 : usize)));
    _48 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * self_1 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _48)) };
    _49 <- watchidx_14;
    _47 <- ([#"../CreuSAT/src/watches.rs" 165 16 165 38] IndexMut0.index_mut _48 _49);
    goto BB11
  }
  BB11 {
    _46 <- borrow_mut ( * _47);
    _47 <- { _47 with current = ( ^ _46) };
    assume { Resolve0.resolve _47 };
    _45 <- ([#"../CreuSAT/src/watches.rs" 165 16 165 51] DerefMut0.deref_mut _46);
    goto BB12
  }
  BB12 {
    _44 <- borrow_mut ( * _45);
    _45 <- { _45 with current = ( ^ _44) };
    assume { Resolve1.resolve _45 };
    _50 <- i_16;
    _51 <- end'_37;
    _43 <- ([#"../CreuSAT/src/watches.rs" 165 16 165 51] Swap0.swap _44 _50 _51);
    goto BB13
  }
  BB13 {
    _54 <- ();
    old_w_52 <- ([#"../CreuSAT/src/watches.rs" 169 49 169 64] Snapshot.new self_1);
    goto BB14
  }
  BB14 {
    _59 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * self_1 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _59)) };
    assume { Resolve2.resolve self_1 };
    _60 <- watchidx_14;
    _58 <- ([#"../CreuSAT/src/watches.rs" 170 22 170 44] IndexMut0.index_mut _59 _60);
    goto BB15
  }
  BB15 {
    _57 <- borrow_mut ( * _58);
    _58 <- { _58 with current = ( ^ _57) };
    assume { Resolve0.resolve _58 };
    _56 <- ([#"../CreuSAT/src/watches.rs" 170 22 170 50] Pop0.pop _57);
    goto BB16
  }
  BB16 {
    switch (_56)
      | Core_Option_Option_Type.C_None -> goto BB17
      | Core_Option_Option_Type.C_Some _ -> goto BB19
      end
  }
  BB17 {
    absurd
  }
  BB18 {
    absurd
  }
  BB19 {
    w_62 <- Core_Option_Option_Type.some_0 _56;
    _56 <- (let Core_Option_Option_Type.C_Some a = _56 in Core_Option_Option_Type.C_Some (any CreuSat_Watches_Watcher_Type.t_watcher));
    assert { [#"../CreuSAT/src/watches.rs" 172 38 172 61]  ^ Snapshot.inner old_w_52 =  ^ self_1 };
    _63 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 173 38 173 56] Invariant0.invariant' ( * self_1) f_2 };
    _65 <- ();
    _55 <- ();
    _0 <- ();
    goto BB22
  }
  BB20 {
    _26 <- ();
    i_16 <- ([#"../CreuSAT/src/watches.rs" 179 12 179 18] i_16 + ([#"../CreuSAT/src/watches.rs" 179 17 179 18] (1 : usize)));
    _18 <- ();
    goto BB2
  }
  BB21 {
    assume { Resolve2.resolve self_1 };
    _0 <- ();
    goto BB22
  }
  BB22 {
    return _0
  }
  
end
module CreuSat_Formula_Impl2_DeleteClause_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant1 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant0
  val delete_clause [#"../CreuSAT/src/formula.rs" 211 4 211 78] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (cref : usize) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (t : CreuSat_Trail_Trail_Type.t_trail) : ()
    requires {[#"../CreuSAT/src/formula.rs" 203 4 203 51] Invariant0.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 204 4 204 40] Invariant1.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 205 4 205 42] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 206 15 206 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/formula.rs" 207 15 207 46] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) (UIntSize.to_int cref))) > 1}
    requires {[#"../CreuSAT/src/formula.rs" 208 15 208 42] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self)))}
    ensures { [#"../CreuSAT/src/formula.rs" 203 4 203 51] Invariant0.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 204 4 204 40] Invariant1.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 205 4 205 42] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 209 14 209 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 210 14 210 47] CreuSat_Formula_Formula_Type.formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self) }
    
end
module CreuSat_Formula_Impl2_DeleteClause
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel11 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel10 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel8 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Watches_Impl0_Unwatch_Interface as Unwatch0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    val Max0.mAX' = Max0.mAX',
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  let rec cfg delete_clause [#"../CreuSAT/src/formula.rs" 211 4 211 78] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (cref : usize) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (t : CreuSat_Trail_Trail_Type.t_trail) : ()
    requires {[#"../CreuSAT/src/formula.rs" 203 4 203 51] Invariant0.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 204 4 204 40] Invariant1.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 205 4 205 42] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 206 15 206 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/formula.rs" 207 15 207 46] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self))) (UIntSize.to_int cref))) > 1}
    requires {[#"../CreuSAT/src/formula.rs" 208 15 208 42] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self)))}
    ensures { [#"../CreuSAT/src/formula.rs" 203 4 203 51] Invariant0.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 204 4 204 40] Invariant1.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 205 4 205 42] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 209 14 209 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 210 14 210 47] CreuSat_Formula_Formula_Type.formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var cref_2 : usize;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var t_4 : CreuSat_Trail_Trail_Type.t_trail;
  var old_f_16 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _18 : ();
  var _19 : ();
  var _20 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _21 : CreuSat_Formula_Formula_Type.t_formula;
  var _22 : CreuSat_Trail_Trail_Type.t_trail;
  var _23 : usize;
  var _24 : CreuSat_Lit_Lit_Type.t_lit;
  var _25 : CreuSat_Lit_Lit_Type.t_lit;
  var _26 : CreuSat_Clause_Clause_Type.t_clause;
  var _27 : CreuSat_Clause_Clause_Type.t_clause;
  var _28 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _29 : usize;
  var _30 : ();
  var _31 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _32 : CreuSat_Formula_Formula_Type.t_formula;
  var _33 : CreuSat_Trail_Trail_Type.t_trail;
  var _34 : usize;
  var _35 : CreuSat_Lit_Lit_Type.t_lit;
  var _36 : CreuSat_Lit_Lit_Type.t_lit;
  var _37 : CreuSat_Clause_Clause_Type.t_clause;
  var _38 : CreuSat_Clause_Clause_Type.t_clause;
  var _39 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _40 : usize;
  var _41 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _42 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global));
  var _43 : usize;
  var _44 : ();
  var _46 : ();
  var _48 : ();
  {
    self_1 <- self;
    cref_2 <- cref;
    watches_3 <- watches;
    t_4 <- t;
    goto BB0
  }
  BB0 {
    _18 <- ();
    old_f_16 <- ([#"../CreuSAT/src/formula.rs" 212 41 212 56] Snapshot.new self_1);
    goto BB1
  }
  BB1 {
    _20 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _20) };
    _21 <-  * self_1;
    _22 <- t_4;
    _23 <- cref_2;
    _28 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    _29 <- cref_2;
    _27 <- ([#"../CreuSAT/src/formula.rs" 213 39 213 57] Index0.index _28 _29);
    goto BB2
  }
  BB2 {
    _26 <- _27;
    _25 <- ([#"../CreuSAT/src/formula.rs" 213 39 213 60] Index1.index _26 ([#"../CreuSAT/src/formula.rs" 213 58 213 59] (0 : usize)));
    goto BB3
  }
  BB3 {
    _24 <- _25;
    _19 <- ([#"../CreuSAT/src/formula.rs" 213 8 213 61] Unwatch0.unwatch _20 _21 _22 _23 _24);
    goto BB4
  }
  BB4 {
    _31 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _31) };
    assume { Resolve0.resolve watches_3 };
    _32 <-  * self_1;
    _33 <- t_4;
    _34 <- cref_2;
    _39 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    _40 <- cref_2;
    _38 <- ([#"../CreuSAT/src/formula.rs" 214 39 214 57] Index0.index _39 _40);
    goto BB5
  }
  BB5 {
    _37 <- _38;
    _36 <- ([#"../CreuSAT/src/formula.rs" 214 39 214 60] Index1.index _37 ([#"../CreuSAT/src/formula.rs" 214 58 214 59] (1 : usize)));
    goto BB6
  }
  BB6 {
    _35 <- _36;
    _30 <- ([#"../CreuSAT/src/formula.rs" 214 8 214 61] Unwatch0.unwatch _31 _32 _33 _34 _35);
    goto BB7
  }
  BB7 {
    _42 <- borrow_mut (CreuSat_Formula_Formula_Type.formula_clauses ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Formula_Formula_Type.C_Formula a b =  * self_1 in CreuSat_Formula_Formula_Type.C_Formula ( ^ _42) b) };
    assume { Resolve1.resolve self_1 };
    _43 <- cref_2;
    _41 <- ([#"../CreuSAT/src/formula.rs" 215 8 215 26] IndexMut0.index_mut _42 _43);
    goto BB8
  }
  BB8 {
    _41 <- { _41 with current = (let CreuSat_Clause_Clause_Type.C_Clause a b c d =  * _41 in CreuSat_Clause_Clause_Type.C_Clause ([#"../CreuSAT/src/formula.rs" 215 37 215 41] true) b c d) };
    assume { Resolve2.resolve _41 };
    assert { [#"../CreuSAT/src/formula.rs" 216 8 217 66] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self_1))) (UIntSize.to_int cref_2))) -> Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * self_1))) (UIntSize.to_int cref_2))) i = Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * Snapshot.inner old_f_16))) (UIntSize.to_int cref_2))) i };
    _44 <- ();
    assert { [#"../CreuSAT/src/formula.rs" 218 22 218 42] Equisat0.equisat ( * Snapshot.inner old_f_16) ( * self_1) };
    _46 <- ();
    assert { [#"../CreuSAT/src/formula.rs" 219 22 219 45]  ^ self_1 =  ^ Snapshot.inner old_f_16 };
    _48 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Formula_Impl2_DeleteClauses_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val delete_clauses [#"../CreuSAT/src/formula.rs" 231 4 231 70] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (t : CreuSat_Trail_Trail_Type.t_trail) : ()
    requires {[#"../CreuSAT/src/formula.rs" 224 4 224 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 225 4 225 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 226 4 226 42] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 227 15 227 33] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 228 15 228 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/formula.rs" 224 4 224 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 225 4 225 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 226 4 226 42] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 229 14 229 47] CreuSat_Formula_Formula_Type.formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 230 14 230 33] Equisat0.equisat ( * self) ( ^ self) }
    
end
module CreuSat_Formula_Impl2_DeleteClauses
  use prelude.Borrow
  use prelude.Snapshot
  use prelude.Int
  use prelude.UIntSize
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel11 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel8 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat1 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel6 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel5 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    predicate Sat0.sat = Sat1.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel4.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Formula_Impl2_DeleteClause_Interface as DeleteClause0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Invariant1.invariant' = Invariant0.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    val Max0.mAX' = Max0.mAX',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Formula_Impl2_IsClauseSat_Interface as IsClauseSat0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Clause_Impl2_Len_Interface as Len1 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  let rec cfg delete_clauses [#"../CreuSAT/src/formula.rs" 231 4 231 70] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (t : CreuSat_Trail_Trail_Type.t_trail) : ()
    requires {[#"../CreuSAT/src/formula.rs" 224 4 224 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 225 4 225 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 226 4 226 42] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 227 15 227 33] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 228 15 228 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/formula.rs" 224 4 224 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 225 4 225 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 226 4 226 42] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 229 14 229 47] CreuSat_Formula_Formula_Type.formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 230 14 230 33] Equisat0.equisat ( * self) ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var watches_2 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var t_3 : CreuSat_Trail_Trail_Type.t_trail;
  var old_f_14 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _16 : ();
  var old_w_17 : Snapshot.Snapshot_ty (borrowed (CreuSat_Watches_Watches_Type.t_watches));
  var _19 : ();
  var i_20 : usize;
  var _26 : ();
  var _27 : bool;
  var _28 : usize;
  var _29 : usize;
  var _30 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _31 : ();
  var _32 : bool;
  var _33 : bool;
  var _34 : CreuSat_Clause_Clause_Type.t_clause;
  var _35 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _36 : usize;
  var _37 : ();
  var _39 : bool;
  var _40 : bool;
  var _41 : usize;
  var _42 : CreuSat_Clause_Clause_Type.t_clause;
  var _43 : CreuSat_Clause_Clause_Type.t_clause;
  var _44 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _45 : usize;
  var _46 : bool;
  var _47 : CreuSat_Formula_Formula_Type.t_formula;
  var _48 : usize;
  var _49 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _50 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _51 : ();
  var _52 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _53 : usize;
  var _54 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _55 : CreuSat_Trail_Trail_Type.t_trail;
  var _56 : ();
  var _57 : ();
  var _58 : ();
  {
    self_1 <- self;
    watches_2 <- watches;
    t_3 <- t;
    goto BB0
  }
  BB0 {
    _16 <- ();
    old_f_14 <- ([#"../CreuSAT/src/formula.rs" 232 41 232 56] Snapshot.new self_1);
    goto BB1
  }
  BB1 {
    _19 <- ();
    old_w_17 <- ([#"../CreuSAT/src/formula.rs" 233 41 233 59] Snapshot.new watches_2);
    goto BB2
  }
  BB2 {
    i_20 <- ([#"../CreuSAT/src/formula.rs" 235 20 235 21] (0 : usize));
    goto BB3
  }
  BB3 {
    invariant { [#"../CreuSAT/src/formula.rs" 236 20 236 44] Invariant1.invariant' ( * watches_2) ( * self_1) };
    invariant { [#"../CreuSAT/src/formula.rs" 237 20 237 38] Invariant2.invariant' t_3 ( * self_1) };
    invariant { [#"../CreuSAT/src/formula.rs" 238 20 238 36] Invariant0.invariant' ( * self_1) };
    invariant { [#"../CreuSAT/src/formula.rs" 239 20 239 53] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self_1)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * Snapshot.inner old_f_14)) };
    invariant { [#"../CreuSAT/src/formula.rs" 240 20 240 48] Equisat0.equisat ( * self_1) ( * Snapshot.inner old_f_14) };
    _28 <- i_20;
    _30 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    _29 <- ([#"../CreuSAT/src/formula.rs" 241 18 241 36] Len0.len _30);
    goto BB4
  }
  BB4 {
    _27 <- ([#"../CreuSAT/src/formula.rs" 241 14 241 36] _28 < _29);
    switch (_27)
      | False -> goto BB20
      | True -> goto BB5
      end
  }
  BB5 {
    _35 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    _36 <- i_20;
    _34 <- ([#"../CreuSAT/src/formula.rs" 242 16 242 31] Index0.index _35 _36);
    goto BB6
  }
  BB6 {
    _33 <- CreuSat_Clause_Clause_Type.clause_deleted _34;
    _32 <- not _33;
    switch (_32)
      | False -> goto BB18
      | True -> goto BB7
      end
  }
  BB7 {
    assert { [#"../CreuSAT/src/formula.rs" 243 16 243 61] Invariant3.invariant' (CreuSat_Trail_Trail_Type.trail_assignments t_3) ( * self_1) };
    _37 <- ();
    _44 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    _45 <- i_20;
    _43 <- ([#"../CreuSAT/src/formula.rs" 244 19 244 34] Index0.index _44 _45);
    goto BB11
  }
  BB8 {
    _39 <- ([#"../CreuSAT/src/formula.rs" 244 19 244 85] false);
    goto BB10
  }
  BB9 {
    _47 <-  * self_1;
    _48 <- i_20;
    _50 <- CreuSat_Trail_Trail_Type.trail_assignments t_3;
    _49 <- _50;
    _46 <- ([#"../CreuSAT/src/formula.rs" 244 48 244 85] IsClauseSat0.is_clause_sat _47 _48 _49);
    goto BB13
  }
  BB10 {
    switch (_39)
      | False -> goto BB16
      | True -> goto BB14
      end
  }
  BB11 {
    _42 <- _43;
    _41 <- ([#"../CreuSAT/src/formula.rs" 244 19 244 40] Len1.len _42);
    goto BB12
  }
  BB12 {
    _40 <- ([#"../CreuSAT/src/formula.rs" 244 19 244 44] _41 > ([#"../CreuSAT/src/formula.rs" 244 43 244 44] (1 : usize)));
    switch (_40)
      | False -> goto BB8
      | True -> goto BB9
      end
  }
  BB13 {
    _39 <- _46;
    _46 <- any bool;
    goto BB10
  }
  BB14 {
    _52 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _52) };
    _53 <- i_20;
    _54 <- borrow_mut ( * watches_2);
    watches_2 <- { watches_2 with current = ( ^ _54) };
    _55 <- t_3;
    _51 <- ([#"../CreuSAT/src/formula.rs" 245 20 245 53] DeleteClause0.delete_clause _52 _53 _54 _55);
    goto BB15
  }
  BB15 {
    _31 <- ();
    goto BB17
  }
  BB16 {
    _31 <- ();
    goto BB17
  }
  BB17 {
    goto BB19
  }
  BB18 {
    _31 <- ();
    goto BB19
  }
  BB19 {
    i_20 <- ([#"../CreuSAT/src/formula.rs" 248 12 248 18] i_20 + ([#"../CreuSAT/src/formula.rs" 248 17 248 18] (1 : usize)));
    _26 <- ();
    goto BB3
  }
  BB20 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve watches_2 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Formula_Impl2_SimplifyFormula_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant2
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val simplify_formula [#"../CreuSAT/src/formula.rs" 263 4 263 72] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (t : CreuSat_Trail_Trail_Type.t_trail) : ()
    requires {[#"../CreuSAT/src/formula.rs" 255 4 255 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 256 4 256 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 258 15 258 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/formula.rs" 259 15 259 33] Invariant2.invariant' t ( * self)}
    ensures { [#"../CreuSAT/src/formula.rs" 255 4 255 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 256 4 256 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 260 14 260 32] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 261 14 261 47] CreuSat_Formula_Formula_Type.formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 262 14 262 33] Equisat0.equisat ( * self) ( ^ self) }
    
end
module CreuSat_Formula_Impl2_SimplifyFormula
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel4.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Formula_Impl2_DeleteClauses_Interface as DeleteClauses0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  let rec cfg simplify_formula [#"../CreuSAT/src/formula.rs" 263 4 263 72] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (t : CreuSat_Trail_Trail_Type.t_trail) : ()
    requires {[#"../CreuSAT/src/formula.rs" 255 4 255 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 256 4 256 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 258 15 258 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/formula.rs" 259 15 259 33] Invariant2.invariant' t ( * self)}
    ensures { [#"../CreuSAT/src/formula.rs" 255 4 255 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 256 4 256 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 260 14 260 32] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 261 14 261 47] CreuSat_Formula_Formula_Type.formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 262 14 262 33] Equisat0.equisat ( * self) ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var watches_2 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var t_3 : CreuSat_Trail_Trail_Type.t_trail;
  var _13 : ();
  var _14 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _15 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _16 : CreuSat_Trail_Trail_Type.t_trail;
  {
    self_1 <- self;
    watches_2 <- watches;
    t_3 <- t;
    goto BB0
  }
  BB0 {
    _14 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _14) };
    assume { Resolve0.resolve self_1 };
    _15 <- borrow_mut ( * watches_2);
    watches_2 <- { watches_2 with current = ( ^ _15) };
    assume { Resolve1.resolve watches_2 };
    _16 <- t_3;
    _13 <- ([#"../CreuSAT/src/formula.rs" 265 8 265 39] DeleteClauses0.delete_clauses _14 _15 _16);
    goto BB1
  }
  BB1 {
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Formula_Impl2_ReduceDb_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val reduceDB [#"../CreuSAT/src/formula.rs" 279 4 279 80] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (t : CreuSat_Trail_Trail_Type.t_trail) (s : borrowed (CreuSat_Solver_Solver_Type.t_solver)) : ()
    requires {[#"../CreuSAT/src/formula.rs" 270 4 270 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 271 4 271 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 273 15 273 31] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 274 15 274 33] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 276 15 276 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/formula.rs" 270 4 270 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 271 4 271 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 275 14 275 32] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 277 14 277 47] CreuSat_Formula_Formula_Type.formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 278 14 278 33] Equisat0.equisat ( * self) ( ^ self) }
    
end
module CreuSat_Formula_Impl2_ReduceDb
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use prelude.Int32
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel9 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel11 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel7 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel6 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel5 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel9.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Solver_Solver_Type.t_solver
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel4.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Formula_Impl2_DeleteClause_Interface as DeleteClause0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Invariant1.invariant' = Invariant0.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    val Max0.mAX' = Max0.mAX',
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Lit_Impl2_LitSat_Interface as LitSat0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Sat0.sat = Sat0.sat
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len1 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  let rec cfg reduceDB [#"../CreuSAT/src/formula.rs" 279 4 279 80] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (t : CreuSat_Trail_Trail_Type.t_trail) (s : borrowed (CreuSat_Solver_Solver_Type.t_solver)) : ()
    requires {[#"../CreuSAT/src/formula.rs" 270 4 270 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 271 4 271 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 273 15 273 31] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 274 15 274 33] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 276 15 276 45] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/formula.rs" 270 4 270 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 271 4 271 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 275 14 275 32] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 277 14 277 47] CreuSat_Formula_Formula_Type.formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 278 14 278 33] Equisat0.equisat ( * self) ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var watches_2 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var t_3 : CreuSat_Trail_Trail_Type.t_trail;
  var s_4 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _15 : ();
  var _16 : ();
  var _17 : bool;
  var _18 : usize;
  var _19 : usize;
  var _20 : bool;
  var _21 : usize;
  var _22 : usize;
  var _23 : ();
  var _24 : ();
  var _25 : ();
  var _26 : ();
  var i_27 : usize;
  var old_f_28 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _30 : ();
  var old_w_31 : Snapshot.Snapshot_ty (borrowed (CreuSat_Watches_Watches_Type.t_watches));
  var _33 : ();
  var _39 : bool;
  var _40 : usize;
  var _41 : usize;
  var _42 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _43 : ();
  var _44 : bool;
  var _45 : bool;
  var _46 : CreuSat_Clause_Clause_Type.t_clause;
  var _47 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _48 : usize;
  var _49 : bool;
  var _50 : usize;
  var _51 : CreuSat_Clause_Clause_Type.t_clause;
  var _52 : CreuSat_Clause_Clause_Type.t_clause;
  var _53 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _54 : usize;
  var cnt_55 : int32;
  var j_56 : usize;
  var _57 : ();
  var _58 : bool;
  var _59 : bool;
  var _60 : usize;
  var _61 : usize;
  var _62 : CreuSat_Clause_Clause_Type.t_clause;
  var _63 : CreuSat_Clause_Clause_Type.t_clause;
  var _64 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _65 : usize;
  var _66 : bool;
  var _67 : int32;
  var _68 : ();
  var _69 : bool;
  var _70 : CreuSat_Lit_Lit_Type.t_lit;
  var _71 : CreuSat_Lit_Lit_Type.t_lit;
  var _72 : CreuSat_Clause_Clause_Type.t_clause;
  var _73 : CreuSat_Clause_Clause_Type.t_clause;
  var _74 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _75 : usize;
  var _76 : usize;
  var _77 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _78 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _79 : ();
  var _80 : ();
  var _81 : ();
  var _82 : bool;
  var _83 : int32;
  var _84 : ();
  var _85 : bool;
  var _86 : usize;
  var _87 : ();
  var _88 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _89 : usize;
  var _90 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _91 : CreuSat_Trail_Trail_Type.t_trail;
  var _92 : ();
  var _93 : ();
  var _94 : ();
  {
    self_1 <- self;
    watches_2 <- watches;
    t_3 <- t;
    s_4 <- s;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    _18 <- CreuSat_Solver_Solver_Type.solver_num_lemmas ( * s_4);
    _19 <- CreuSat_Solver_Solver_Type.solver_max_lemmas ( * s_4);
    _17 <- ([#"../CreuSAT/src/formula.rs" 281 14 281 41] _18 > _19);
    switch (_17)
      | False -> goto BB5
      | True -> goto BB2
      end
  }
  BB2 {
    _21 <- ([#"../CreuSAT/src/formula.rs" 282 15 282 31] ([#"../CreuSAT/src/formula.rs" 282 15 282 25] (18446744073709551615 : usize)) - ([#"../CreuSAT/src/formula.rs" 282 28 282 31] (300 : usize)));
    _22 <- CreuSat_Solver_Solver_Type.solver_max_lemmas ( * s_4);
    _20 <- ([#"../CreuSAT/src/formula.rs" 282 15 282 46] _21 > _22);
    switch (_20)
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    s_4 <- { s_4 with current = (let CreuSat_Solver_Solver_Type.C_Solver a b c d e f g h =  * s_4 in CreuSat_Solver_Solver_Type.C_Solver a ([#"../CreuSAT/src/formula.rs" 283 16 283 35] CreuSat_Solver_Solver_Type.solver_max_lemmas ( * s_4) + ([#"../CreuSAT/src/formula.rs" 283 32 283 35] (300 : usize))) c d e f g h) };
    _16 <- ();
    goto BB1
  }
  BB4 {
    _15 <- ();
    goto BB6
  }
  BB5 {
    _15 <- ();
    goto BB6
  }
  BB6 {
    i_27 <- CreuSat_Solver_Solver_Type.solver_initial_len ( * s_4);
    _30 <- ();
    old_f_28 <- ([#"../CreuSAT/src/formula.rs" 290 41 290 56] Snapshot.new self_1);
    goto BB7
  }
  BB7 {
    _33 <- ();
    old_w_31 <- ([#"../CreuSAT/src/formula.rs" 291 41 291 59] Snapshot.new watches_2);
    goto BB8
  }
  BB8 {
    goto BB9
  }
  BB9 {
    invariant { [#"../CreuSAT/src/formula.rs" 292 20 292 44] Invariant1.invariant' ( * watches_2) ( * self_1) };
    invariant { [#"../CreuSAT/src/formula.rs" 293 20 293 38] Invariant2.invariant' t_3 ( * self_1) };
    invariant { [#"../CreuSAT/src/formula.rs" 294 20 294 36] Invariant0.invariant' ( * self_1) };
    invariant { [#"../CreuSAT/src/formula.rs" 295 20 295 53] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * self_1)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * Snapshot.inner old_f_28)) };
    invariant { [#"../CreuSAT/src/formula.rs" 296 20 296 48] Equisat0.equisat ( * self_1) ( * Snapshot.inner old_f_28) };
    _40 <- i_27;
    _42 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    _41 <- ([#"../CreuSAT/src/formula.rs" 297 18 297 36] Len0.len _42);
    goto BB10
  }
  BB10 {
    _39 <- ([#"../CreuSAT/src/formula.rs" 297 14 297 36] _40 < _41);
    switch (_39)
      | False -> goto BB42
      | True -> goto BB11
      end
  }
  BB11 {
    _47 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    _48 <- i_27;
    _46 <- ([#"../CreuSAT/src/formula.rs" 298 16 298 31] Index0.index _47 _48);
    goto BB12
  }
  BB12 {
    _45 <- CreuSat_Clause_Clause_Type.clause_deleted _46;
    _44 <- not _45;
    switch (_44)
      | False -> goto BB40
      | True -> goto BB13
      end
  }
  BB13 {
    _53 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    _54 <- i_27;
    _52 <- ([#"../CreuSAT/src/formula.rs" 300 19 300 34] Index0.index _53 _54);
    goto BB14
  }
  BB14 {
    _51 <- _52;
    _50 <- ([#"../CreuSAT/src/formula.rs" 300 19 300 40] Len1.len _51);
    goto BB15
  }
  BB15 {
    _49 <- ([#"../CreuSAT/src/formula.rs" 300 19 300 44] _50 > ([#"../CreuSAT/src/formula.rs" 300 43 300 44] (6 : usize)));
    switch (_49)
      | False -> goto BB38
      | True -> goto BB16
      end
  }
  BB16 {
    cnt_55 <- ([#"../CreuSAT/src/formula.rs" 301 34 301 35] (0 : int32));
    j_56 <- ([#"../CreuSAT/src/formula.rs" 302 32 302 33] (0 : usize));
    goto BB17
  }
  BB17 {
    _60 <- j_56;
    _64 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    _65 <- i_27;
    _63 <- ([#"../CreuSAT/src/formula.rs" 303 30 303 45] Index0.index _64 _65);
    goto BB21
  }
  BB18 {
    _58 <- ([#"../CreuSAT/src/formula.rs" 303 26 303 62] false);
    goto BB20
  }
  BB19 {
    _67 <- cnt_55;
    _66 <- ([#"../CreuSAT/src/formula.rs" 303 55 303 62] _67 < ([#"../CreuSAT/src/formula.rs" 303 61 303 62] (6 : int32)));
    _58 <- _66;
    _66 <- any bool;
    goto BB20
  }
  BB20 {
    switch (_58)
      | False -> goto BB30
      | True -> goto BB23
      end
  }
  BB21 {
    _62 <- _63;
    _61 <- ([#"../CreuSAT/src/formula.rs" 303 30 303 51] Len1.len _62);
    goto BB22
  }
  BB22 {
    _59 <- ([#"../CreuSAT/src/formula.rs" 303 26 303 51] _60 < _61);
    switch (_59)
      | False -> goto BB18
      | True -> goto BB19
      end
  }
  BB23 {
    _74 <- CreuSat_Formula_Formula_Type.formula_clauses ( * self_1);
    _75 <- i_27;
    _73 <- ([#"../CreuSAT/src/formula.rs" 304 27 304 42] Index0.index _74 _75);
    goto BB24
  }
  BB24 {
    _72 <- _73;
    _76 <- j_56;
    _71 <- ([#"../CreuSAT/src/formula.rs" 304 27 304 45] Index1.index _72 _76);
    goto BB25
  }
  BB25 {
    _70 <- _71;
    _78 <- CreuSat_Trail_Trail_Type.trail_assignments t_3;
    _77 <- _78;
    _69 <- ([#"../CreuSAT/src/formula.rs" 304 27 304 69] LitSat0.lit_sat _70 _77);
    goto BB26
  }
  BB26 {
    switch (_69)
      | False -> goto BB28
      | True -> goto BB27
      end
  }
  BB27 {
    cnt_55 <- ([#"../CreuSAT/src/formula.rs" 305 28 305 36] cnt_55 + ([#"../CreuSAT/src/formula.rs" 305 35 305 36] (1 : int32)));
    _68 <- ();
    goto BB29
  }
  BB28 {
    _68 <- ();
    goto BB29
  }
  BB29 {
    j_56 <- ([#"../CreuSAT/src/formula.rs" 307 24 307 30] j_56 + ([#"../CreuSAT/src/formula.rs" 307 29 307 30] (1 : usize)));
    _16 <- ();
    goto BB17
  }
  BB30 {
    _57 <- ();
    _83 <- cnt_55;
    _82 <- ([#"../CreuSAT/src/formula.rs" 309 23 309 31] _83 >= ([#"../CreuSAT/src/formula.rs" 309 30 309 31] (6 : int32)));
    switch (_82)
      | False -> goto BB32
      | True -> goto BB31
      end
  }
  BB31 {
    _86 <- CreuSat_Solver_Solver_Type.solver_num_lemmas ( * s_4);
    _85 <- ([#"../CreuSAT/src/formula.rs" 311 27 311 43] _86 > ([#"../CreuSAT/src/formula.rs" 311 42 311 43] (0 : usize)));
    switch (_85)
      | False -> goto BB34
      | True -> goto BB33
      end
  }
  BB32 {
    _43 <- ();
    goto BB37
  }
  BB33 {
    s_4 <- { s_4 with current = (let CreuSat_Solver_Solver_Type.C_Solver a b c d e f g h =  * s_4 in CreuSat_Solver_Solver_Type.C_Solver ([#"../CreuSAT/src/formula.rs" 312 28 312 45] CreuSat_Solver_Solver_Type.solver_num_lemmas ( * s_4) - ([#"../CreuSAT/src/formula.rs" 312 44 312 45] (1 : usize))) b c d e f g h) };
    _84 <- ();
    goto BB35
  }
  BB34 {
    _84 <- ();
    goto BB35
  }
  BB35 {
    _88 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _88) };
    _89 <- i_27;
    _90 <- borrow_mut ( * watches_2);
    watches_2 <- { watches_2 with current = ( ^ _90) };
    _91 <- t_3;
    _87 <- ([#"../CreuSAT/src/formula.rs" 314 24 314 57] DeleteClause0.delete_clause _88 _89 _90 _91);
    goto BB36
  }
  BB36 {
    _43 <- ();
    goto BB37
  }
  BB37 {
    goto BB39
  }
  BB38 {
    _43 <- ();
    goto BB39
  }
  BB39 {
    goto BB41
  }
  BB40 {
    _43 <- ();
    goto BB41
  }
  BB41 {
    i_27 <- ([#"../CreuSAT/src/formula.rs" 318 12 318 18] i_27 + ([#"../CreuSAT/src/formula.rs" 318 17 318 18] (1 : usize)));
    _16 <- ();
    goto BB9
  }
  BB42 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve watches_2 };
    assume { Resolve2.resolve s_4 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Lit_Impl5_Clone_Interface
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  val clone' [#"../CreuSAT/src/lit.rs" 12 9 12 14] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    ensures { [#"../CreuSAT/src/lit.rs" 12 9 12 14] result = self }
    
end
module CreuSat_Lit_Impl5_Clone
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  clone Core_Clone_Impls_Impl19_Clone_Interface as Clone1
  clone Core_Clone_Impls_Impl5_Clone_Interface as Clone0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  let rec cfg clone' [#"../CreuSAT/src/lit.rs" 12 9 12 14] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    ensures { [#"../CreuSAT/src/lit.rs" 12 9 12 14] result = self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Lit_Lit_Type.t_lit;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  var _3 : usize;
  var _4 : usize;
  var _5 : bool;
  var _6 : bool;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _4 <- CreuSat_Lit_Lit_Type.lit_idx self_1;
    _3 <- ([#"../CreuSAT/src/lit.rs" 14 4 14 18] Clone0.clone' _4);
    goto BB1
  }
  BB1 {
    _6 <- CreuSat_Lit_Lit_Type.lit_polarity self_1;
    _5 <- ([#"../CreuSAT/src/lit.rs" 15 4 15 22] Clone1.clone' _6);
    goto BB2
  }
  BB2 {
    _0 <- CreuSat_Lit_Lit_Type.C_Lit _3 _5;
    return _0
  }
  
end
module CreuSat_Lit_Impl0_ShallowModel_Stub
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function shallow_model [#"../CreuSAT/src/lit.rs" 23 4 23 34] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    
end
module CreuSat_Lit_Impl0_ShallowModel_Interface
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function shallow_model [#"../CreuSAT/src/lit.rs" 23 4 23 34] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    
end
module CreuSat_Lit_Impl0_ShallowModel
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function shallow_model [#"../CreuSAT/src/lit.rs" 23 4 23 34] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    
   =
    [#"../CreuSAT/src/lit.rs" 24 8 24 12] self
  val shallow_model [#"../CreuSAT/src/lit.rs" 23 4 23 34] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    ensures { result = shallow_model self }
    
end
module CreuSat_Lit_Impl1_DeepModel_Stub
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function deep_model [#"../CreuSAT/src/lit.rs" 33 4 33 31] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    
end
module CreuSat_Lit_Impl1_DeepModel_Interface
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function deep_model [#"../CreuSAT/src/lit.rs" 33 4 33 31] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    
end
module CreuSat_Lit_Impl1_DeepModel
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function deep_model [#"../CreuSAT/src/lit.rs" 33 4 33 31] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    
   =
    [#"../CreuSAT/src/lit.rs" 34 8 34 12] self
  val deep_model [#"../CreuSAT/src/lit.rs" 33 4 33 31] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    ensures { result = deep_model self }
    
end
module CreuSat_Lit_Impl2_LitSet_Interface
  use seq.Seq
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Stub as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8
  val lit_set [#"../CreuSAT/src/lit.rs" 94 4 94 49] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/lit.rs" 92 15 92 39] Invariant0.invariant' self (Seq.length (ShallowModel0.shallow_model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 93 14 93 39] result = (not Unset0.unset self a) }
    
end
module CreuSat_Lit_Impl2_LitSet
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Assignments_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg lit_set [#"../CreuSAT/src/lit.rs" 94 4 94 49] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    requires {[#"../CreuSAT/src/lit.rs" 92 15 92 39] Invariant0.invariant' self (Seq.length (ShallowModel0.shallow_model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 93 14 93 39] result = (not Unset0.unset self a) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  var a_2 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _5 : uint8;
  var _6 : uint8;
  var _7 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _8 : usize;
  var _9 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    _7 <- a_2;
    _9 <- self_1;
    _8 <- ([#"../CreuSAT/src/lit.rs" 95 10 95 22] Index0.index _9);
    goto BB1
  }
  BB1 {
    _6 <- ([#"../CreuSAT/src/lit.rs" 95 8 95 23] Index1.index _7 _8);
    goto BB2
  }
  BB2 {
    _5 <- _6;
    _0 <- ([#"../CreuSAT/src/lit.rs" 95 8 95 27] _5 < ([#"../CreuSAT/src/lit.rs" 95 26 95 27] (2 : uint8)));
    return _0
  }
  
end
module CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Stub
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function to_watchidx_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 33 4 33 41] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    
end
module CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  function to_watchidx_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 33 4 33 41] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    
end
module CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  function to_watchidx_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 33 4 33 41] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 34 8 34 91] IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      0
    else
      1
    )
  val to_watchidx_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 33 4 33 41] (self : CreuSat_Lit_Lit_Type.t_lit) : int
    ensures { result = to_watchidx_logic self }
    
end
module CreuSat_Lit_Impl2_ToWatchidx_Interface
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Stub as ToWatchidxLogic0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  val to_watchidx [#"../CreuSAT/src/lit.rs" 103 4 103 37] (self : CreuSat_Lit_Lit_Type.t_lit) : usize
    requires {[#"../CreuSAT/src/lit.rs" 100 15 100 49] IndexLogic0.index_logic self < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/lit.rs" 101 14 101 49] UIntSize.to_int result = ToWatchidxLogic0.to_watchidx_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 102 14 102 94] UIntSize.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      0
    else
      1
    ) }
    
end
module CreuSat_Lit_Impl2_ToWatchidx
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Lit_Impl2_IsPositive_Interface as IsPositive0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone Core_Usize_Max as Max0
  let rec cfg to_watchidx [#"../CreuSAT/src/lit.rs" 103 4 103 37] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) : usize
    requires {[#"../CreuSAT/src/lit.rs" 100 15 100 49] IndexLogic0.index_logic self < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/lit.rs" 101 14 101 49] UIntSize.to_int result = ToWatchidxLogic0.to_watchidx_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 102 14 102 94] UIntSize.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      0
    else
      1
    ) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  var _5 : usize;
  var _6 : usize;
  var _7 : CreuSat_Lit_Lit_Type.t_lit;
  var _8 : usize;
  var _9 : bool;
  var _10 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _7 <- self_1;
    _6 <- ([#"../CreuSAT/src/lit.rs" 104 8 104 20] Index0.index _7);
    goto BB1
  }
  BB1 {
    _5 <- ([#"../CreuSAT/src/lit.rs" 104 8 104 24] _6 * ([#"../CreuSAT/src/lit.rs" 104 23 104 24] (2 : usize)));
    _10 <- self_1;
    _9 <- ([#"../CreuSAT/src/lit.rs" 104 30 104 48] IsPositive0.is_positive _10);
    goto BB2
  }
  BB2 {
    switch (_9)
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    _8 <- ([#"../CreuSAT/src/lit.rs" 104 51 104 52] (0 : usize));
    goto BB5
  }
  BB4 {
    _8 <- ([#"../CreuSAT/src/lit.rs" 104 62 104 63] (1 : usize));
    goto BB5
  }
  BB5 {
    _0 <- ([#"../CreuSAT/src/lit.rs" 104 8 104 65] _5 + _8);
    return _0
  }
  
end
module CreuSat_Lit_Impl2_PhaseSaved_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use prelude.Borrow
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8
  val phase_saved [#"../CreuSAT/src/lit.rs" 119 4 119 68] (idx : usize) (assignments : CreuSat_Assignments_Assignments_Type.t_assignments) : CreuSat_Lit_Lit_Type.t_lit
    requires {[#"../CreuSAT/src/lit.rs" 116 15 116 40] UIntSize.to_int idx < Seq.length (ShallowModel0.shallow_model assignments)}
    ensures { [#"../CreuSAT/src/lit.rs" 117 14 117 42] IndexLogic0.index_logic result = UIntSize.to_int idx }
    ensures { [#"../CreuSAT/src/lit.rs" 118 14 118 70] IsPositiveLogic0.is_positive_logic result = (UInt8.to_int (Seq.get (ShallowModel0.shallow_model assignments) (UIntSize.to_int idx)) = 1) }
    
end
module CreuSat_Lit_Impl2_PhaseSaved
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.UInt8
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Assignments_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  let rec cfg phase_saved [#"../CreuSAT/src/lit.rs" 119 4 119 68] [@cfg:stackify] [@cfg:subregion_analysis] (idx : usize) (assignments : CreuSat_Assignments_Assignments_Type.t_assignments) : CreuSat_Lit_Lit_Type.t_lit
    requires {[#"../CreuSAT/src/lit.rs" 116 15 116 40] UIntSize.to_int idx < Seq.length (ShallowModel0.shallow_model assignments)}
    ensures { [#"../CreuSAT/src/lit.rs" 117 14 117 42] IndexLogic0.index_logic result = UIntSize.to_int idx }
    ensures { [#"../CreuSAT/src/lit.rs" 118 14 118 70] IsPositiveLogic0.is_positive_logic result = (UInt8.to_int (Seq.get (ShallowModel0.shallow_model assignments) (UIntSize.to_int idx)) = 1) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Lit_Lit_Type.t_lit;
  var idx_1 : usize;
  var assignments_2 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _6 : usize;
  var _7 : bool;
  var _8 : bool;
  var _9 : uint8;
  var _10 : uint8;
  var _11 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _12 : usize;
  {
    idx_1 <- idx;
    assignments_2 <- assignments;
    goto BB0
  }
  BB0 {
    _6 <- idx_1;
    _11 <- assignments_2;
    _12 <- idx_1;
    _10 <- ([#"../CreuSAT/src/lit.rs" 120 37 120 53] Index0.index _11 _12);
    goto BB1
  }
  BB1 {
    _9 <- _10;
    _8 <- ([#"../CreuSAT/src/lit.rs" 120 37 120 58] _9 = ([#"../CreuSAT/src/lit.rs" 120 57 120 58] (1 : uint8)));
    switch (_8)
      | False -> goto BB3
      | True -> goto BB2
      end
  }
  BB2 {
    _7 <- ([#"../CreuSAT/src/lit.rs" 120 61 120 65] true);
    goto BB4
  }
  BB3 {
    _7 <- ([#"../CreuSAT/src/lit.rs" 120 75 120 80] false);
    goto BB4
  }
  BB4 {
    _0 <- CreuSat_Lit_Lit_Type.C_Lit _6 _7;
    return _0
  }
  
end
module CreuSat_Lit_Impl2_New_Interface
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  val new [#"../CreuSAT/src/lit.rs" 124 4 124 49] (idx : usize) (polarity : bool) : CreuSat_Lit_Lit_Type.t_lit
end
module CreuSat_Lit_Impl2_New
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  let rec cfg new [#"../CreuSAT/src/lit.rs" 124 4 124 49] [@cfg:stackify] [@cfg:subregion_analysis] (idx : usize) (polarity : bool) : CreuSat_Lit_Lit_Type.t_lit
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Lit_Lit_Type.t_lit;
  var idx_1 : usize;
  var polarity_2 : bool;
  var _3 : usize;
  var _4 : bool;
  {
    idx_1 <- idx;
    polarity_2 <- polarity;
    goto BB0
  }
  BB0 {
    _3 <- idx_1;
    _4 <- polarity_2;
    _0 <- CreuSat_Lit_Lit_Type.C_Lit _3 _4;
    return _0
  }
  
end
module CreuSat_Lit_Impl3_Eq_Interface
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  val eq [#"../CreuSAT/src/lit.rs" 133 4 133 37] (self : CreuSat_Lit_Lit_Type.t_lit) (other : CreuSat_Lit_Lit_Type.t_lit) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 131 14 131 39] result = (self = other) }
    
end
module CreuSat_Lit_Impl3_Eq
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Bool
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Lit_Impl2_IsPositive_Interface as IsPositive0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg eq [#"../CreuSAT/src/lit.rs" 133 4 133 37] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) (other : CreuSat_Lit_Lit_Type.t_lit) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 131 14 131 39] result = (self = other) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  var other_2 : CreuSat_Lit_Lit_Type.t_lit;
  var _4 : bool;
  var _5 : usize;
  var _6 : CreuSat_Lit_Lit_Type.t_lit;
  var _7 : usize;
  var _8 : CreuSat_Lit_Lit_Type.t_lit;
  var _9 : bool;
  var _10 : bool;
  var _11 : CreuSat_Lit_Lit_Type.t_lit;
  var _12 : bool;
  var _13 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    other_2 <- other;
    goto BB0
  }
  BB0 {
    _6 <- self_1;
    _5 <- ([#"../CreuSAT/src/lit.rs" 134 8 134 20] Index0.index _6);
    goto BB4
  }
  BB1 {
    _0 <- ([#"../CreuSAT/src/lit.rs" 134 8 134 82] false);
    goto BB3
  }
  BB2 {
    _11 <- self_1;
    _10 <- ([#"../CreuSAT/src/lit.rs" 134 41 134 59] IsPositive0.is_positive _11);
    goto BB6
  }
  BB3 {
    return _0
  }
  BB4 {
    _8 <- other_2;
    _7 <- ([#"../CreuSAT/src/lit.rs" 134 24 134 37] Index0.index _8);
    goto BB5
  }
  BB5 {
    _4 <- ([#"../CreuSAT/src/lit.rs" 134 8 134 37] _5 = _7);
    switch (_4)
      | False -> goto BB1
      | True -> goto BB2
      end
  }
  BB6 {
    _13 <- other_2;
    _12 <- ([#"../CreuSAT/src/lit.rs" 134 63 134 82] IsPositive0.is_positive _13);
    goto BB7
  }
  BB7 {
    _9 <- ([#"../CreuSAT/src/lit.rs" 134 41 134 82] Bool.eqb _10 _12);
    _0 <- _9;
    _9 <- any bool;
    goto BB3
  }
  
end
module CreuSat_Lit_Impl4_Not_Interface
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Stub as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  val not' [#"../CreuSAT/src/lit.rs" 145 4 145 23] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    ensures { [#"../CreuSAT/src/lit.rs" 143 14 143 56] IndexLogic0.index_logic result = IndexLogic0.index_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 144 14 144 69] IsPositiveLogic0.is_positive_logic result = (not IsPositiveLogic0.is_positive_logic self) }
    
end
module CreuSat_Lit_Impl4_Not
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Lit_Impl2_IsPositive_Interface as IsPositive0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg not' [#"../CreuSAT/src/lit.rs" 145 4 145 23] [@cfg:stackify] [@cfg:subregion_analysis] (self : CreuSat_Lit_Lit_Type.t_lit) : CreuSat_Lit_Lit_Type.t_lit
    ensures { [#"../CreuSAT/src/lit.rs" 143 14 143 56] IndexLogic0.index_logic result = IndexLogic0.index_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 144 14 144 69] IsPositiveLogic0.is_positive_logic result = (not IsPositiveLogic0.is_positive_logic self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Lit_Lit_Type.t_lit;
  var self_1 : CreuSat_Lit_Lit_Type.t_lit;
  var _4 : usize;
  var _5 : CreuSat_Lit_Lit_Type.t_lit;
  var _6 : bool;
  var _7 : bool;
  var _8 : CreuSat_Lit_Lit_Type.t_lit;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _5 <- self_1;
    _4 <- ([#"../CreuSAT/src/lit.rs" 146 19 146 31] Index0.index _5);
    goto BB1
  }
  BB1 {
    _8 <- self_1;
    _7 <- ([#"../CreuSAT/src/lit.rs" 146 44 146 62] IsPositive0.is_positive _8);
    goto BB2
  }
  BB2 {
    _6 <- not _7;
    _0 <- CreuSat_Lit_Lit_Type.C_Lit _4 _6;
    return _0
  }
  
end
module CreuSat_Logic_Logic_Pos_Stub
  use prelude.Int
  use prelude.UInt8
  function pos [#"../CreuSAT/src/logic/logic.rs" 10 0 10 25] (_1' : ()) : uint8
end
module CreuSat_Logic_Logic_Pos_Interface
  use prelude.Int
  use prelude.UInt8
  function pos [#"../CreuSAT/src/logic/logic.rs" 10 0 10 25] (_1' : ()) : uint8
end
module CreuSat_Logic_Logic_Pos
  use prelude.Int
  use prelude.UInt8
  function pos [#"../CreuSAT/src/logic/logic.rs" 10 0 10 25] (_1' : ()) : uint8 =
    [#"../CreuSAT/src/logic/logic.rs" 11 4 11 7] (1 : uint8)
  val pos [#"../CreuSAT/src/logic/logic.rs" 10 0 10 25] (_1' : ()) : uint8
    ensures { result = pos _1' }
    
end
module CreuSat_Logic_Logic_Neg_Stub
  use prelude.Int
  use prelude.UInt8
  function neg [#"../CreuSAT/src/logic/logic.rs" 15 0 15 25] (_1' : ()) : uint8
end
module CreuSat_Logic_Logic_Neg_Interface
  use prelude.Int
  use prelude.UInt8
  function neg [#"../CreuSAT/src/logic/logic.rs" 15 0 15 25] (_1' : ()) : uint8
end
module CreuSat_Logic_Logic_Neg
  use prelude.Int
  use prelude.UInt8
  function neg [#"../CreuSAT/src/logic/logic.rs" 15 0 15 25] (_1' : ()) : uint8 =
    [#"../CreuSAT/src/logic/logic.rs" 16 4 16 7] (0 : uint8)
  val neg [#"../CreuSAT/src/logic/logic.rs" 15 0 15 25] (_1' : ()) : uint8
    ensures { result = neg _1' }
    
end
module CreuSat_Logic_Logic_BoolToAssignedstate_Stub
  use prelude.UInt8
  use prelude.Int
  function bool_to_assignedstate [#"../CreuSAT/src/logic/logic.rs" 34 0 34 54] (b : bool) : uint8
end
module CreuSat_Logic_Logic_BoolToAssignedstate_Interface
  use prelude.UInt8
  use prelude.Int
  function bool_to_assignedstate [#"../CreuSAT/src/logic/logic.rs" 34 0 34 54] (b : bool) : uint8
  axiom bool_to_assignedstate_spec : forall b : bool . ([#"../CreuSAT/src/logic/logic.rs" 33 0 33 31] not b -> UInt8.to_int (bool_to_assignedstate b) = 0) && ([#"../CreuSAT/src/logic/logic.rs" 32 0 32 30] b -> UInt8.to_int (bool_to_assignedstate b) = 1)
end
module CreuSat_Logic_Logic_BoolToAssignedstate
  use prelude.UInt8
  use prelude.Int
  function bool_to_assignedstate [#"../CreuSAT/src/logic/logic.rs" 34 0 34 54] (b : bool) : uint8 =
    [#"../CreuSAT/src/logic/logic.rs" 31 0 31 8] if b then (1 : uint8) else (0 : uint8)
  val bool_to_assignedstate [#"../CreuSAT/src/logic/logic.rs" 34 0 34 54] (b : bool) : uint8
    ensures { result = bool_to_assignedstate b }
    
  axiom bool_to_assignedstate_spec : forall b : bool . ([#"../CreuSAT/src/logic/logic.rs" 33 0 33 31] not b -> UInt8.to_int (bool_to_assignedstate b) = 0) && ([#"../CreuSAT/src/logic/logic.rs" 32 0 32 30] b -> UInt8.to_int (bool_to_assignedstate b) = 1)
end
module CreuSat_Logic_Logic_BoolToAssignedstate_Impl
  use prelude.UInt8
  use prelude.Int
  let rec Snapshot function bool_to_assignedstate [#"../CreuSAT/src/logic/logic.rs" 34 0 34 54] (b : bool) : uint8
    ensures { [#"../CreuSAT/src/logic/logic.rs" 32 0 32 30] b -> UInt8.to_int result = 1 }
    ensures { [#"../CreuSAT/src/logic/logic.rs" 33 0 33 31] not b -> UInt8.to_int result = 0 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic.rs" 31 0 31 8] if b then (1 : uint8) else (0 : uint8)
end
module CreuSat_Logic_Logic_FlipV_Stub
  use prelude.Int
  use prelude.UInt8
  function flip_v [#"../CreuSAT/src/logic/logic.rs" 43 0 43 44] (v : uint8) : uint8
end
module CreuSat_Logic_Logic_FlipV_Interface
  use prelude.Int
  use prelude.UInt8
  function flip_v [#"../CreuSAT/src/logic/logic.rs" 43 0 43 44] (v : uint8) : uint8
end
module CreuSat_Logic_Logic_FlipV
  use prelude.Int
  use prelude.UInt8
  function flip_v [#"../CreuSAT/src/logic/logic.rs" 43 0 43 44] (v : uint8) : uint8 =
    [#"../CreuSAT/src/logic/logic.rs" 44 4 52 5] if UInt8.to_int v = 0 then
      (1 : uint8)
    else
      if UInt8.to_int v = 1 then (0 : uint8) else v
    
  val flip_v [#"../CreuSAT/src/logic/logic.rs" 43 0 43 44] (v : uint8) : uint8
    ensures { result = flip_v v }
    
end
module CreuSat_Logic_LogicAssignments_CompatibleInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  predicate compatible_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 24 0 24 78] (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicAssignments_CompatibleInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  predicate compatible_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 24 0 24 78] (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicAssignments_CompatibleInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  clone CreuSat_Logic_Logic_Unset_Stub as Unset0
  predicate compatible_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 24 0 24 78] (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 26 8 27 43] Seq.length a = Seq.length a2 /\ (forall i : int . 0 <= i /\ i < Seq.length a -> Unset0.unset (Seq.get a i) \/ Seq.get a i = Seq.get a2 i)
  val compatible_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 24 0 24 78] (a : Seq.seq uint8) (a2 : Seq.seq uint8) : bool
    ensures { result = compatible_inner a a2 }
    
end
module CreuSat_Logic_LogicAssignments_CompatibleCompleteInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  predicate compatible_complete_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 39 0 39 87] (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicAssignments_CompatibleCompleteInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  predicate compatible_complete_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 39 0 39 87] (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicAssignments_CompatibleCompleteInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Stub as CompleteInner0
  clone CreuSat_Logic_LogicAssignments_CompatibleInner_Stub as CompatibleInner0
  predicate compatible_complete_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 39 0 39 87] (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 40 4 40 49] CompatibleInner0.compatible_inner a a2 /\ CompleteInner0.complete_inner a2
  val compatible_complete_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 39 0 39 87] (a : Seq.seq uint8) (a2 : Seq.seq uint8) : bool
    ensures { result = compatible_complete_inner a a2 }
    
end
module CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate post_unit_inner [#"../CreuSAT/src/logic/logic_clause.rs" 56 4 56 63] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate post_unit_inner [#"../CreuSAT/src/logic/logic_clause.rs" 56 4 56 63] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl1_PostUnitInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Stub as UnsatInner0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Stub as SatInner0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate post_unit_inner [#"../CreuSAT/src/logic/logic_clause.rs" 56 4 56 63] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 57 8 61 9] exists i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model self) /\ SatInner0.sat_inner (Seq.get (ShallowModel0.shallow_model self) i) a /\ (forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) /\ j <> i -> UnsatInner0.unsat_inner (Seq.get (ShallowModel0.shallow_model self) j) a)
  val post_unit_inner [#"../CreuSAT/src/logic/logic_clause.rs" 56 4 56 63] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) : bool
    ensures { result = post_unit_inner self a }
    
end
module CreuSat_Logic_LogicClause_Impl1_NoUnsetInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate no_unset_inner [#"../CreuSAT/src/logic/logic_clause.rs" 65 4 65 62] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl1_NoUnsetInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate no_unset_inner [#"../CreuSAT/src/logic/logic_clause.rs" 65 4 65 62] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl1_NoUnsetInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner_Stub as UnsetInner0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate no_unset_inner [#"../CreuSAT/src/logic/logic_clause.rs" 65 4 65 62] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 66 8 68 9] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model self) -> not UnsetInner0.unset_inner (Seq.get (ShallowModel0.shallow_model self) j) a
  val no_unset_inner [#"../CreuSAT/src/logic/logic_clause.rs" 65 4 65 62] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) : bool
    ensures { result = no_unset_inner self a }
    
end
module CreuSat_Logic_LogicClause_Impl1_PostUnit_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate post_unit [#"../CreuSAT/src/logic/logic_clause.rs" 72 4 72 50] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicClause_Impl1_PostUnit_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate post_unit [#"../CreuSAT/src/logic/logic_clause.rs" 72 4 72 50] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicClause_Impl1_PostUnit
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Stub as PostUnitInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate post_unit [#"../CreuSAT/src/logic/logic_clause.rs" 72 4 72 50] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 73 20 73 44] PostUnitInner0.post_unit_inner self (ShallowModel0.shallow_model a)
  val post_unit [#"../CreuSAT/src/logic/logic_clause.rs" 72 4 72 50] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = post_unit self a }
    
end
module CreuSat_Logic_LogicClause_Impl1_EqAssnInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate eq_assn_inner [#"../CreuSAT/src/logic/logic_clause.rs" 77 4 77 85] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl1_EqAssnInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate eq_assn_inner [#"../CreuSAT/src/logic/logic_clause.rs" 77 4 77 85] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl1_EqAssnInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate eq_assn_inner [#"../CreuSAT/src/logic/logic_clause.rs" 77 4 77 85] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 78 8 81 9] forall i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model self) -> Seq.get a (IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model self) i)) = Seq.get a2 (IndexLogic0.index_logic (Seq.get (ShallowModel0.shallow_model self) i))
  val eq_assn_inner [#"../CreuSAT/src/logic/logic_clause.rs" 77 4 77 85] (self : CreuSat_Clause_Clause_Type.t_clause) (a : Seq.seq uint8) (a2 : Seq.seq uint8) : bool
    ensures { result = eq_assn_inner self a a2 }
    
end
module CreuSat_Logic_LogicClause_Impl2_Unknown_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate unknown [#"../CreuSAT/src/logic/logic_clause.rs" 173 4 173 48] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicClause_Impl2_Unknown_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate unknown [#"../CreuSAT/src/logic/logic_clause.rs" 173 4 173 48] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicClause_Impl2_Unknown
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Stub as Unsat0
  clone CreuSat_Logic_LogicClause_Impl2_Sat_Stub as Sat0
  predicate unknown [#"../CreuSAT/src/logic/logic_clause.rs" 173 4 173 48] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 174 8 174 38] not Sat0.sat self a /\ not Unsat0.unsat self a
  val unknown [#"../CreuSAT/src/logic/logic_clause.rs" 173 4 173 48] (self : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = unknown self a }
    
end
module CreuSat_Logic_LogicClause_Impl2_SearchIdxInRange_Stub
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate search_idx_in_range [#"../CreuSAT/src/logic/logic_clause.rs" 188 4 188 44] (self : CreuSat_Clause_Clause_Type.t_clause)
    
end
module CreuSat_Logic_LogicClause_Impl2_SearchIdxInRange_Interface
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate search_idx_in_range [#"../CreuSAT/src/logic/logic_clause.rs" 188 4 188 44] (self : CreuSat_Clause_Clause_Type.t_clause)
    
end
module CreuSat_Logic_LogicClause_Impl2_SearchIdxInRange
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel0
  predicate search_idx_in_range [#"../CreuSAT/src/logic/logic_clause.rs" 188 4 188 44] (self : CreuSat_Clause_Clause_Type.t_clause)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 189 20 189 68] 2 <= UIntSize.to_int (CreuSat_Clause_Clause_Type.clause_search self) /\ UIntSize.to_int (CreuSat_Clause_Clause_Type.clause_search self) <= Seq.length (ShallowModel0.shallow_model self)
  val search_idx_in_range [#"../CreuSAT/src/logic/logic_clause.rs" 188 4 188 44] (self : CreuSat_Clause_Clause_Type.t_clause) : bool
    ensures { result = search_idx_in_range self }
    
end
module CreuSat_Logic_LogicFormula_Equisat_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate equisat [#"../CreuSAT/src/logic/logic_formula.rs" 44 0 44 64] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (o : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
end
module CreuSat_Logic_LogicFormula_Equisat_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate equisat [#"../CreuSAT/src/logic/logic_formula.rs" 44 0 44 64] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (o : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
end
module CreuSat_Logic_LogicFormula_Equisat
  use seq.Seq
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete_Stub as EventuallySatComplete0
  predicate equisat [#"../CreuSAT/src/logic/logic_formula.rs" 44 0 44 64] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (o : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int))
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 46 8 46 64] EventuallySatComplete0.eventually_sat_complete f = EventuallySatComplete0.eventually_sat_complete o
  val equisat [#"../CreuSAT/src/logic/logic_formula.rs" 44 0 44 64] (f : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) (o : (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)) : bool
    ensures { result = equisat f o }
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate eventually_sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 84 4 84 64] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate eventually_sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 84 4 84 64] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Stub as SatInner0
  clone CreuSat_Logic_LogicAssignments_CompatibleInner_Stub as CompatibleInner0
  predicate eventually_sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 84 4 84 64] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 85 8 87 9] exists a2 : Seq.seq uint8 . Seq.length a2 = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars self) /\ CompatibleInner0.compatible_inner a a2 /\ SatInner0.sat_inner self a2
  val eventually_sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 84 4 84 64] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8) : bool
    ensures { result = eventually_sat_inner self a }
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate eventually_sat_complete_inner [#"../CreuSAT/src/logic/logic_formula.rs" 91 4 91 73] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate eventually_sat_complete_inner [#"../CreuSAT/src/logic/logic_formula.rs" 91 4 91 73] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Stub as SatInner0
  clone CreuSat_Logic_LogicAssignments_CompatibleCompleteInner_Stub as CompatibleCompleteInner0
  predicate eventually_sat_complete_inner [#"../CreuSAT/src/logic/logic_formula.rs" 91 4 91 73] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 92 8 94 9] exists a2 : Seq.seq uint8 . Seq.length a2 = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars self) /\ CompatibleCompleteInner0.compatible_complete_inner a a2 /\ SatInner0.sat_inner self a2
  val eventually_sat_complete_inner [#"../CreuSAT/src/logic/logic_formula.rs" 91 4 91 73] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8) : bool
    ensures { result = eventually_sat_complete_inner self a }
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySat_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate eventually_sat [#"../CreuSAT/src/logic/logic_formula.rs" 98 4 98 51] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySat_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate eventually_sat [#"../CreuSAT/src/logic/logic_formula.rs" 98 4 98 51] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySat
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatInner_Stub as EventuallySatInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate eventually_sat [#"../CreuSAT/src/logic/logic_formula.rs" 98 4 98 51] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 99 20 99 49] EventuallySatInner0.eventually_sat_inner self (ShallowModel0.shallow_model a)
  val eventually_sat [#"../CreuSAT/src/logic/logic_formula.rs" 98 4 98 51] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = eventually_sat self a }
    
end
module CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 116 4 116 55] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 116 4 116 55] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_Impl1_UnsatInner
  use seq.Seq
  use prelude.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Stub as UnsatInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 116 4 116 55] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 117 8 120 9] exists i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self)) /\ UnsatInner0.unsat_inner (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses self)) i) a
  val unsat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 116 4 116 55] (self : CreuSat_Formula_Formula_Type.t_formula) (a : Seq.seq uint8) : bool
    ensures { result = unsat_inner self a }
    
end
module CreuSat_Logic_LogicFormula_Impl1_Unsat_Stub
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate unsat [#"../CreuSAT/src/logic/logic_formula.rs" 124 4 124 46] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  predicate unsat [#"../CreuSAT/src/logic/logic_formula.rs" 124 4 124 46] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
end
module CreuSat_Logic_LogicFormula_Impl1_Unsat
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Stub as UnsatInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate unsat [#"../CreuSAT/src/logic/logic_formula.rs" 124 4 124 46] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 125 20 125 40] UnsatInner0.unsat_inner self (ShallowModel0.shallow_model a)
  val unsat [#"../CreuSAT/src/logic/logic_formula.rs" 124 4 124 46] (self : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : bool
    ensures { result = unsat self a }
    
end
module CreuSat_Logic_LogicLit_Impl1_LitInInternal_Stub
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate lit_in_internal [#"../CreuSAT/src/logic/logic_lit.rs" 54 4 54 53] (self : CreuSat_Lit_Lit_Type.t_lit) (c : Seq.seq (CreuSat_Lit_Lit_Type.t_lit))
    
end
module CreuSat_Logic_LogicLit_Impl1_LitInInternal_Interface
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate lit_in_internal [#"../CreuSAT/src/logic/logic_lit.rs" 54 4 54 53] (self : CreuSat_Lit_Lit_Type.t_lit) (c : Seq.seq (CreuSat_Lit_Lit_Type.t_lit))
    
end
module CreuSat_Logic_LogicLit_Impl1_LitInInternal
  use seq.Seq
  use prelude.Int
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate lit_in_internal [#"../CreuSAT/src/logic/logic_lit.rs" 54 4 54 53] (self : CreuSat_Lit_Lit_Type.t_lit) (c : Seq.seq (CreuSat_Lit_Lit_Type.t_lit))
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 55 8 55 74] exists i : int . 0 <= i /\ i < Seq.length c /\ Seq.get c i = self
  val lit_in_internal [#"../CreuSAT/src/logic/logic_lit.rs" 54 4 54 53] (self : CreuSat_Lit_Lit_Type.t_lit) (c : Seq.seq (CreuSat_Lit_Lit_Type.t_lit)) : bool
    ensures { result = lit_in_internal self c }
    
end
module CreuSat_Logic_LogicLit_Impl1_IdxInTrail_Stub
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate idx_in_trail [#"../CreuSAT/src/logic/logic_lit.rs" 117 4 117 51] (self : CreuSat_Lit_Lit_Type.t_lit) (t : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global))
    
end
module CreuSat_Logic_LogicLit_Impl1_IdxInTrail_Interface
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate idx_in_trail [#"../CreuSAT/src/logic/logic_lit.rs" 117 4 117 51] (self : CreuSat_Lit_Lit_Type.t_lit) (t : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global))
    
end
module CreuSat_Logic_LogicLit_Impl1_IdxInTrail
  use prelude.Int
  use seq.Seq
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  predicate idx_in_trail [#"../CreuSAT/src/logic/logic_lit.rs" 117 4 117 51] (self : CreuSat_Lit_Lit_Type.t_lit) (t : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global))
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 118 8 121 9] exists i : int . 0 <= i /\ i < Seq.length (ShallowModel0.shallow_model t) /\ IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit (Seq.get (ShallowModel0.shallow_model t) i)) = IndexLogic0.index_logic self
  val idx_in_trail [#"../CreuSAT/src/logic/logic_lit.rs" 117 4 117 51] (self : CreuSat_Lit_Lit_Type.t_lit) (t : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global)) : bool
    ensures { result = idx_in_trail self t }
    
end
module CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  predicate invariant_no_decision [@inline:trivial] [#"../CreuSAT/src/logic/logic_trail.rs" 69 4 69 58] (self : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  predicate invariant_no_decision [@inline:trivial] [#"../CreuSAT/src/logic/logic_trail.rs" 69 4 69 58] (self : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat_Stub as UnitAreSat0
  clone CreuSat_Logic_LogicUtil_Sorted_Stub as Sorted0
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner_Stub as TrailEntriesAreAssignedInner0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Stub as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel2
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner_Stub as LitIsUniqueInner0
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Stub as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Stub as TrailInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Stub as Invariant0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  predicate invariant_no_decision [@inline:trivial] [#"../CreuSAT/src/logic/logic_trail.rs" 69 4 69 58] (self : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 70 8 80 9] Invariant0.invariant' (CreuSat_Trail_Trail_Type.trail_assignments self) f /\ TrailInvariant0.trail_invariant (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) f /\ Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_lit_to_level self)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) /\ LitNotInLessInner0.lit_not_in_less_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) f /\ LitIsUniqueInner0.lit_is_unique_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) /\ LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) f (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments self)) /\ TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments self)) /\ Sorted0.sorted (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions self)) /\ UnitAreSat0.unit_are_sat (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail self)) f (CreuSat_Trail_Trail_Type.trail_assignments self)
  val invariant_no_decision [@inline:trivial] [#"../CreuSAT/src/logic/logic_trail.rs" 69 4 69 58] (self : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = invariant_no_decision self f }
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsTo_Stub
  use prelude.Int
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate clause_post_with_regards_to [#"../CreuSAT/src/logic/logic_trail.rs" 114 0 114 77] (c : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (j : int)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsTo_Interface
  use prelude.Int
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate clause_post_with_regards_to [#"../CreuSAT/src/logic/logic_trail.rs" 114 0 114 77] (c : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (j : int)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsTo
  use prelude.Int
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Stub as ClausePostWithRegardsToInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  predicate clause_post_with_regards_to [#"../CreuSAT/src/logic/logic_trail.rs" 114 0 114 77] (c : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (j : int)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 115 16 115 59] ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner c (ShallowModel0.shallow_model a) j
  val clause_post_with_regards_to [#"../CreuSAT/src/logic/logic_trail.rs" 114 0 114 77] (c : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (j : int) : bool
    ensures { result = clause_post_with_regards_to c a j }
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit_Stub
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate clause_post_with_regards_to_lit [#"../CreuSAT/src/logic/logic_trail.rs" 128 0 128 83] (c : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (lit : CreuSat_Lit_Lit_Type.t_lit)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit_Interface
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  predicate clause_post_with_regards_to_lit [#"../CreuSAT/src/logic/logic_trail.rs" 128 0 128 83] (c : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (lit : CreuSat_Lit_Lit_Type.t_lit)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit
  use prelude.UIntSize
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Stub as ClausePostWithRegardsToInner0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  predicate clause_post_with_regards_to_lit [#"../CreuSAT/src/logic/logic_trail.rs" 128 0 128 83] (c : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (lit : CreuSat_Lit_Lit_Type.t_lit)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 129 16 129 66] ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner c (ShallowModel0.shallow_model a) (UIntSize.to_int (CreuSat_Lit_Lit_Type.lit_idx lit))
  val clause_post_with_regards_to_lit [#"../CreuSAT/src/logic/logic_trail.rs" 128 0 128 83] (c : CreuSat_Clause_Clause_Type.t_clause) (a : CreuSat_Assignments_Assignments_Type.t_assignments) (lit : CreuSat_Lit_Lit_Type.t_lit) : bool
    ensures { result = clause_post_with_regards_to_lit c a lit }
    
end
module CreuSat_Logic_LogicTrail_LongArePostUnit_Stub
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  predicate long_are_post_unit [#"../CreuSAT/src/logic/logic_trail.rs" 142 0 142 59] (trail : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_LongArePostUnit_Interface
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  predicate long_are_post_unit [#"../CreuSAT/src/logic/logic_trail.rs" 142 0 142 59] (trail : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicTrail_LongArePostUnit
  use prelude.Int
  use seq.Seq
  use prelude.UIntSize
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsTo_Stub as ClausePostWithRegardsTo0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  predicate long_are_post_unit [#"../CreuSAT/src/logic/logic_trail.rs" 142 0 142 59] (trail : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 143 4 149 5] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail)) -> match (CreuSat_Trail_Step_Type.step_reason (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail)) j)) with
      | CreuSat_Trail_Reason_Type.C_Long k -> ClausePostWithRegardsTo0.clause_post_with_regards_to (Seq.get (ShallowModel1.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int k)) (CreuSat_Trail_Trail_Type.trail_assignments trail) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail trail)) j)))
      | _ -> true
      end
  val long_are_post_unit [#"../CreuSAT/src/logic/logic_trail.rs" 142 0 142 59] (trail : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = long_are_post_unit trail f }
    
end
module CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess_Stub
  use seq.Seq
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Stub as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_Logic_Unset_Stub as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  function lemma_push_maintains_lit_not_in_less [#"../CreuSAT/src/logic/logic_trail.rs" 200 0 200 77] (t : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula) (step : CreuSat_Trail_Step_Type.t_step) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess_Interface
  use seq.Seq
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Stub as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_Logic_Unset_Stub as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  function lemma_push_maintains_lit_not_in_less [#"../CreuSAT/src/logic/logic_trail.rs" 200 0 200 77] (t : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula) (step : CreuSat_Trail_Step_Type.t_step) : ()
    
  axiom lemma_push_maintains_lit_not_in_less_spec : forall t : CreuSat_Trail_Trail_Type.t_trail, f : CreuSat_Formula_Formula_Type.t_formula, step : CreuSat_Trail_Step_Type.t_step . ([#"../CreuSAT/src/logic/logic_trail.rs" 193 11 193 24] Invariant0.invariant' f) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 194 11 194 25] Invariant1.invariant' t f) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 195 11 195 56] Unset0.unset (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments t)) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit step)))) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 196 0 196 44] Invariant2.invariant' (CreuSat_Trail_Step_Type.step_lit step) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 198 11 198 45] LitNotInLessInner0.lit_not_in_less_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail t)) f) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 199 10 199 55] LitNotInLessInner0.lit_not_in_less_inner (Seq.snoc (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail t)) step) f)
end
module CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess
  use seq.Seq
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Stub as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_Logic_Unset_Stub as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  function lemma_push_maintains_lit_not_in_less [#"../CreuSAT/src/logic/logic_trail.rs" 200 0 200 77] (t : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula) (step : CreuSat_Trail_Step_Type.t_step) : ()
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 192 0 192 8] ()
  val lemma_push_maintains_lit_not_in_less [#"../CreuSAT/src/logic/logic_trail.rs" 200 0 200 77] (t : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula) (step : CreuSat_Trail_Step_Type.t_step) : ()
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 193 11 193 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 194 11 194 25] Invariant1.invariant' t f}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 195 11 195 56] Unset0.unset (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments t)) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit step)))}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 196 0 196 44] Invariant2.invariant' (CreuSat_Trail_Step_Type.step_lit step) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 198 11 198 45] LitNotInLessInner0.lit_not_in_less_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail t)) f}
    ensures { result = lemma_push_maintains_lit_not_in_less t f step }
    
  axiom lemma_push_maintains_lit_not_in_less_spec : forall t : CreuSat_Trail_Trail_Type.t_trail, f : CreuSat_Formula_Formula_Type.t_formula, step : CreuSat_Trail_Step_Type.t_step . ([#"../CreuSAT/src/logic/logic_trail.rs" 193 11 193 24] Invariant0.invariant' f) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 194 11 194 25] Invariant1.invariant' t f) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 195 11 195 56] Unset0.unset (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments t)) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit step)))) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 196 0 196 44] Invariant2.invariant' (CreuSat_Trail_Step_Type.step_lit step) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 198 11 198 45] LitNotInLessInner0.lit_not_in_less_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail t)) f) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 199 10 199 55] LitNotInLessInner0.lit_not_in_less_inner (Seq.snoc (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail t)) step) f)
end
module CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess_Impl
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant2.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_Logic_Unset as Unset0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel0.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec Snapshot function lemma_push_maintains_lit_not_in_less [#"../CreuSAT/src/logic/logic_trail.rs" 200 0 200 77] (t : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula) (step : CreuSat_Trail_Step_Type.t_step) : ()
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 193 11 193 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 194 11 194 25] Invariant1.invariant' t f}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 195 11 195 56] Unset0.unset (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments t)) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit step)))}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 196 0 196 44] Invariant2.invariant' (CreuSat_Trail_Step_Type.step_lit step) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 198 11 198 45] LitNotInLessInner0.lit_not_in_less_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail t)) f}
    ensures { [#"../CreuSAT/src/logic/logic_trail.rs" 199 10 199 55] LitNotInLessInner0.lit_not_in_less_inner (Seq.snoc (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail t)) step) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_trail.rs" 192 0 192 8] ()
end
module CreuSat_Logic_LogicUtil_Pop_Stub
  type t
  use seq.Seq
  use prelude.Int
  use seq_ext.SeqExt
  function pop [#"../CreuSAT/src/logic/logic_util.rs" 60 0 60 34] (s : Seq.seq t) : Seq.seq t
end
module CreuSat_Logic_LogicUtil_Pop_Interface
  type t
  use seq.Seq
  use prelude.Int
  use seq_ext.SeqExt
  function pop [#"../CreuSAT/src/logic/logic_util.rs" 60 0 60 34] (s : Seq.seq t) : Seq.seq t
  axiom pop_spec : forall s : Seq.seq t . ([#"../CreuSAT/src/logic/logic_util.rs" 56 11 56 22] Seq.length s > 0) -> ([#"../CreuSAT/src/logic/logic_util.rs" 59 0 59 75] forall i : int . 0 <= i /\ i < Seq.length (pop s) -> Seq.get (pop s) i = Seq.get s i) && ([#"../CreuSAT/src/logic/logic_util.rs" 58 10 58 37] Seq.length (pop s) = Seq.length s - 1) && ([#"../CreuSAT/src/logic/logic_util.rs" 57 10 57 49] pop s = SeqExt.subsequence s 0 (Seq.length s - 1))
end
module CreuSat_Logic_LogicUtil_Pop
  type t
  use seq.Seq
  use prelude.Int
  use seq_ext.SeqExt
  function pop [#"../CreuSAT/src/logic/logic_util.rs" 60 0 60 34] (s : Seq.seq t) : Seq.seq t =
    [#"../CreuSAT/src/logic/logic_util.rs" 61 4 61 33] SeqExt.subsequence s 0 (Seq.length s - 1)
  val pop [#"../CreuSAT/src/logic/logic_util.rs" 60 0 60 34] (s : Seq.seq t) : Seq.seq t
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 56 11 56 22] Seq.length s > 0}
    ensures { result = pop s }
    
  axiom pop_spec : forall s : Seq.seq t . ([#"../CreuSAT/src/logic/logic_util.rs" 56 11 56 22] Seq.length s > 0) -> ([#"../CreuSAT/src/logic/logic_util.rs" 59 0 59 75] forall i : int . 0 <= i /\ i < Seq.length (pop s) -> Seq.get (pop s) i = Seq.get s i) && ([#"../CreuSAT/src/logic/logic_util.rs" 58 10 58 37] Seq.length (pop s) = Seq.length s - 1) && ([#"../CreuSAT/src/logic/logic_util.rs" 57 10 57 49] pop s = SeqExt.subsequence s 0 (Seq.length s - 1))
end
module CreuSat_Logic_LogicUtil_Pop_Impl
  type t
  use seq.Seq
  use prelude.Int
  use seq_ext.SeqExt
  let rec Snapshot function pop [#"../CreuSAT/src/logic/logic_util.rs" 60 0 60 34] (s : Seq.seq t) : Seq.seq t
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 56 11 56 22] Seq.length s > 0}
    ensures { [#"../CreuSAT/src/logic/logic_util.rs" 57 10 57 49] result = SeqExt.subsequence s 0 (Seq.length s - 1) }
    ensures { [#"../CreuSAT/src/logic/logic_util.rs" 58 10 58 37] Seq.length result = Seq.length s - 1 }
    ensures { [#"../CreuSAT/src/logic/logic_util.rs" 59 0 59 75] forall i : int . 0 <= i /\ i < Seq.length result -> Seq.get result i = Seq.get s i }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_util.rs" 61 4 61 33] SeqExt.subsequence s 0 (Seq.length s - 1)
end
module CreuSat_Logic_LogicUtil_LastIdx_Stub
  type t
  use seq.Seq
  use prelude.Int
  function last_idx [#"../CreuSAT/src/logic/logic_util.rs" 67 0 67 36] (s : Seq.seq t) : int
end
module CreuSat_Logic_LogicUtil_LastIdx_Interface
  type t
  use seq.Seq
  use prelude.Int
  function last_idx [#"../CreuSAT/src/logic/logic_util.rs" 67 0 67 36] (s : Seq.seq t) : int
end
module CreuSat_Logic_LogicUtil_LastIdx
  type t
  use seq.Seq
  use prelude.Int
  function last_idx [#"../CreuSAT/src/logic/logic_util.rs" 67 0 67 36] (s : Seq.seq t) : int =
    [#"../CreuSAT/src/logic/logic_util.rs" 68 4 68 15] Seq.length s - 1
  val last_idx [#"../CreuSAT/src/logic/logic_util.rs" 67 0 67 36] (s : Seq.seq t) : int
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 66 11 66 22] Seq.length s > 0}
    ensures { result = last_idx s }
    
end
module CreuSat_Logic_LogicUtil_LastIdx_Impl
  type t
  use seq.Seq
  use prelude.Int
  let rec Snapshot function last_idx [#"../CreuSAT/src/logic/logic_util.rs" 67 0 67 36] (s : Seq.seq t) : int
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 66 11 66 22] Seq.length s > 0}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_util.rs" 68 4 68 15] Seq.length s - 1
end
module CreuSat_Logic_LogicUtil_LastElem_Stub
  type t
  use seq.Seq
  use prelude.Int
  function last_elem [#"../CreuSAT/src/logic/logic_util.rs" 74 0 74 35] (s : Seq.seq t) : t
end
module CreuSat_Logic_LogicUtil_LastElem_Interface
  type t
  use seq.Seq
  use prelude.Int
  function last_elem [#"../CreuSAT/src/logic/logic_util.rs" 74 0 74 35] (s : Seq.seq t) : t
end
module CreuSat_Logic_LogicUtil_LastElem
  type t
  use seq.Seq
  use prelude.Int
  function last_elem [#"../CreuSAT/src/logic/logic_util.rs" 74 0 74 35] (s : Seq.seq t) : t =
    [#"../CreuSAT/src/logic/logic_util.rs" 71 0 71 8] Seq.get s (Seq.length s - 1)
  val last_elem [#"../CreuSAT/src/logic/logic_util.rs" 74 0 74 35] (s : Seq.seq t) : t
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 73 11 73 22] Seq.length s > 0}
    ensures { result = last_elem s }
    
end
module CreuSat_Logic_LogicUtil_LastElem_Impl
  type t
  use seq.Seq
  use prelude.Int
  let rec Snapshot function last_elem [#"../CreuSAT/src/logic/logic_util.rs" 74 0 74 35] (s : Seq.seq t) : t
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 73 11 73 22] Seq.length s > 0}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_util.rs" 71 0 71 8] Seq.get s (Seq.length s - 1)
end
module CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted_Stub
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  clone CreuSat_Logic_LogicUtil_Pop_Stub as Pop0 with
    type t = usize,
    axiom .
  clone CreuSat_Logic_LogicUtil_Sorted_Stub as Sorted0
  function lemma_pop_maintains_sorted [#"../CreuSAT/src/logic/logic_util.rs" 83 0 83 48] (s : Seq.seq usize) : ()
end
module CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted_Interface
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  clone CreuSat_Logic_LogicUtil_Pop_Stub as Pop0 with
    type t = usize,
    axiom .
  clone CreuSat_Logic_LogicUtil_Sorted_Stub as Sorted0
  function lemma_pop_maintains_sorted [#"../CreuSAT/src/logic/logic_util.rs" 83 0 83 48] (s : Seq.seq usize) : ()
  axiom lemma_pop_maintains_sorted_spec : forall s : Seq.seq usize . ([#"../CreuSAT/src/logic/logic_util.rs" 80 11 80 22] Seq.length s > 0) -> ([#"../CreuSAT/src/logic/logic_util.rs" 81 11 81 20] Sorted0.sorted s) -> ([#"../CreuSAT/src/logic/logic_util.rs" 82 10 82 24] Sorted0.sorted (Pop0.pop s))
end
module CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  clone CreuSat_Logic_LogicUtil_Pop_Stub as Pop0 with
    type t = usize,
    axiom .
  clone CreuSat_Logic_LogicUtil_Sorted_Stub as Sorted0
  function lemma_pop_maintains_sorted [#"../CreuSAT/src/logic/logic_util.rs" 83 0 83 48] (s : Seq.seq usize) : () =
    [#"../CreuSAT/src/logic/logic_util.rs" 78 0 78 8] ()
  val lemma_pop_maintains_sorted [#"../CreuSAT/src/logic/logic_util.rs" 83 0 83 48] (s : Seq.seq usize) : ()
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 80 11 80 22] Seq.length s > 0}
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 81 11 81 20] Sorted0.sorted s}
    ensures { result = lemma_pop_maintains_sorted s }
    
  axiom lemma_pop_maintains_sorted_spec : forall s : Seq.seq usize . ([#"../CreuSAT/src/logic/logic_util.rs" 80 11 80 22] Seq.length s > 0) -> ([#"../CreuSAT/src/logic/logic_util.rs" 81 11 81 20] Sorted0.sorted s) -> ([#"../CreuSAT/src/logic/logic_util.rs" 82 10 82 24] Sorted0.sorted (Pop0.pop s))
end
module CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted_Impl
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Pop as Pop0 with
    type t = usize,
    axiom .
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  let rec Snapshot function lemma_pop_maintains_sorted [#"../CreuSAT/src/logic/logic_util.rs" 83 0 83 48] (s : Seq.seq usize) : ()
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 80 11 80 22] Seq.length s > 0}
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 81 11 81 20] Sorted0.sorted s}
    ensures { [#"../CreuSAT/src/logic/logic_util.rs" 82 10 82 24] Sorted0.sorted (Pop0.pop s) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_util.rs" 78 0 78 8] ()
end
module CreuSat_Logic_LogicWatches_WatchValid_Stub
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  predicate watch_valid [#"../CreuSAT/src/logic/logic_watches.rs" 25 0 25 55] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicWatches_WatchValid_Interface
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  predicate watch_valid [#"../CreuSAT/src/logic/logic_watches.rs" 25 0 25 55] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicWatches_WatchValid
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  predicate watch_valid [#"../CreuSAT/src/logic/logic_watches.rs" 25 0 25 55] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 26 4 31 5] forall j : int . 0 <= j /\ j < Seq.length w -> UIntSize.to_int (CreuSat_Watches_Watcher_Type.watcher_cref (Seq.get w j)) < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) /\ Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int (CreuSat_Watches_Watcher_Type.watcher_cref (Seq.get w j))))) > 1 /\ IndexLogic0.index_logic (CreuSat_Watches_Watcher_Type.watcher_blocker (Seq.get w j)) < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)
  val watch_valid [#"../CreuSAT/src/logic/logic_watches.rs" 25 0 25 55] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = watch_valid w f }
    
end
module CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Stub
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  predicate watcher_crefs_in_range [#"../CreuSAT/src/logic/logic_watches.rs" 35 0 35 66] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  predicate watcher_crefs_in_range [#"../CreuSAT/src/logic/logic_watches.rs" 35 0 35 66] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicWatches_WatcherCrefsInRange
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  predicate watcher_crefs_in_range [#"../CreuSAT/src/logic/logic_watches.rs" 35 0 35 66] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 36 4 39 5] forall j : int . 0 <= j /\ j < Seq.length w -> UIntSize.to_int (CreuSat_Watches_Watcher_Type.watcher_cref (Seq.get w j)) < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))
  val watcher_crefs_in_range [#"../CreuSAT/src/logic/logic_watches.rs" 35 0 35 66] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = watcher_crefs_in_range w f }
    
end
module CreuSat_Logic_LogicWatches_WatchesCrefsInRange_Stub
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  predicate watches_crefs_in_range [#"../CreuSAT/src/logic/logic_watches.rs" 43 0 43 71] (w : Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global))) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicWatches_WatchesCrefsInRange_Interface
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  predicate watches_crefs_in_range [#"../CreuSAT/src/logic/logic_watches.rs" 43 0 43 71] (w : Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global))) (f : CreuSat_Formula_Formula_Type.t_formula)
    
end
module CreuSat_Logic_LogicWatches_WatchesCrefsInRange
  use seq.Seq
  use prelude.Int
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Stub as WatcherCrefsInRange0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  predicate watches_crefs_in_range [#"../CreuSAT/src/logic/logic_watches.rs" 43 0 43 71] (w : Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global))) (f : CreuSat_Formula_Formula_Type.t_formula)
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 44 4 47 5] forall i : int . 0 <= i /\ i < Seq.length w -> WatcherCrefsInRange0.watcher_crefs_in_range (ShallowModel0.shallow_model (Seq.get w i)) f
  val watches_crefs_in_range [#"../CreuSAT/src/logic/logic_watches.rs" 43 0 43 71] (w : Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global))) (f : CreuSat_Formula_Formula_Type.t_formula) : bool
    ensures { result = watches_crefs_in_range w f }
    
end
module CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant_Stub
  use seq.Seq
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicUtil_Pop_Stub as Pop0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Stub as WatcherCrefsInRange0
  function lemma_pop_watch_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 55 0 55 79] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) : ()
    
end
module CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant_Interface
  use seq.Seq
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicUtil_Pop_Stub as Pop0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Stub as WatcherCrefsInRange0
  function lemma_pop_watch_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 55 0 55 79] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) : ()
    
  axiom lemma_pop_watch_maintains_watcher_invariant_spec : forall w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher), f : CreuSat_Formula_Formula_Type.t_formula . ([#"../CreuSAT/src/logic/logic_watches.rs" 52 11 52 22] Seq.length w > 0) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 53 11 53 39] WatcherCrefsInRange0.watcher_crefs_in_range w f) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 54 10 54 43] WatcherCrefsInRange0.watcher_crefs_in_range (Pop0.pop w) f)
end
module CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant
  use seq.Seq
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicUtil_Pop_Stub as Pop0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Stub as WatcherCrefsInRange0
  function lemma_pop_watch_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 55 0 55 79] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) : ()
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 50 0 50 8] ()
  val lemma_pop_watch_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 55 0 55 79] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 52 11 52 22] Seq.length w > 0}
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 53 11 53 39] WatcherCrefsInRange0.watcher_crefs_in_range w f}
    ensures { result = lemma_pop_watch_maintains_watcher_invariant w f }
    
  axiom lemma_pop_watch_maintains_watcher_invariant_spec : forall w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher), f : CreuSat_Formula_Formula_Type.t_formula . ([#"../CreuSAT/src/logic/logic_watches.rs" 52 11 52 22] Seq.length w > 0) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 53 11 53 39] WatcherCrefsInRange0.watcher_crefs_in_range w f) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 54 10 54 43] WatcherCrefsInRange0.watcher_crefs_in_range (Pop0.pop w) f)
end
module CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant_Impl
  use seq.Seq
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicUtil_Pop as Pop0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange as WatcherCrefsInRange0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  let rec Snapshot function lemma_pop_watch_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 55 0 55 79] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 52 11 52 22] Seq.length w > 0}
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 53 11 53 39] WatcherCrefsInRange0.watcher_crefs_in_range w f}
    ensures { [#"../CreuSAT/src/logic/logic_watches.rs" 54 10 54 43] WatcherCrefsInRange0.watcher_crefs_in_range (Pop0.pop w) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_watches.rs" 50 0 50 8] ()
end
module CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant_Stub
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Stub as WatcherCrefsInRange0
  function lemma_push_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 62 0 62 86] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) (o : CreuSat_Watches_Watcher_Type.t_watcher) : ()
    
end
module CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Stub as WatcherCrefsInRange0
  function lemma_push_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 62 0 62 86] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) (o : CreuSat_Watches_Watcher_Type.t_watcher) : ()
    
  axiom lemma_push_maintains_watcher_invariant_spec : forall w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher), f : CreuSat_Formula_Formula_Type.t_formula, o : CreuSat_Watches_Watcher_Type.t_watcher . ([#"../CreuSAT/src/logic/logic_watches.rs" 59 11 59 39] WatcherCrefsInRange0.watcher_crefs_in_range w f) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 60 11 60 37] UIntSize.to_int (CreuSat_Watches_Watcher_Type.watcher_cref o) < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 61 10 61 46] WatcherCrefsInRange0.watcher_crefs_in_range (Seq.snoc w o) f)
end
module CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Stub as WatcherCrefsInRange0
  function lemma_push_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 62 0 62 86] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) (o : CreuSat_Watches_Watcher_Type.t_watcher) : ()
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 57 0 57 8] ()
  val lemma_push_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 62 0 62 86] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) (o : CreuSat_Watches_Watcher_Type.t_watcher) : ()
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 59 11 59 39] WatcherCrefsInRange0.watcher_crefs_in_range w f}
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 60 11 60 37] UIntSize.to_int (CreuSat_Watches_Watcher_Type.watcher_cref o) < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    ensures { result = lemma_push_maintains_watcher_invariant w f o }
    
  axiom lemma_push_maintains_watcher_invariant_spec : forall w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher), f : CreuSat_Formula_Formula_Type.t_formula, o : CreuSat_Watches_Watcher_Type.t_watcher . ([#"../CreuSAT/src/logic/logic_watches.rs" 59 11 59 39] WatcherCrefsInRange0.watcher_crefs_in_range w f) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 60 11 60 37] UIntSize.to_int (CreuSat_Watches_Watcher_Type.watcher_cref o) < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 61 10 61 46] WatcherCrefsInRange0.watcher_crefs_in_range (Seq.snoc w o) f)
end
module CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant_Impl
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange as WatcherCrefsInRange0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  let rec Snapshot function lemma_push_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 62 0 62 86] (w : Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher)) (f : CreuSat_Formula_Formula_Type.t_formula) (o : CreuSat_Watches_Watcher_Type.t_watcher) : ()
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 59 11 59 39] WatcherCrefsInRange0.watcher_crefs_in_range w f}
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 60 11 60 37] UIntSize.to_int (CreuSat_Watches_Watcher_Type.watcher_cref o) < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    ensures { [#"../CreuSAT/src/logic/logic_watches.rs" 61 10 61 46] WatcherCrefsInRange0.watcher_crefs_in_range (Seq.snoc w o) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_watches.rs" 57 0 57 8] ()
end
module CreuSat_Solver_GetAssertingLevel_Interface
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use seq.Seq
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Stub as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Stub as VarsInRangeInner0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit)
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  clone CreusotContracts_Model_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val get_asserting_level [#"../CreuSAT/src/solver.rs" 38 0 38 89] (clause : CreuSat_Clause_Clause_Type.t_clause) (trail : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula) : (usize, usize)
    requires {[#"../CreuSAT/src/solver.rs" 30 11 30 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/solver.rs" 31 11 31 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/solver.rs" 32 11 32 47] EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel0.shallow_model f)}
    requires {[#"../CreuSAT/src/solver.rs" 33 11 33 40] Invariant2.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/solver.rs" 34 11 34 28] Seq.length (ShallowModel1.shallow_model clause) > 1}
    requires {[#"../CreuSAT/src/solver.rs" 35 11 35 52] VarsInRangeInner0.vars_in_range_inner (ShallowModel1.shallow_model clause) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/solver.rs" 36 11 36 46] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel1.shallow_model clause)}
    ensures { [#"../CreuSAT/src/solver.rs" 37 10 37 35] UIntSize.to_int (let (a, _) = result in a) < Seq.length (ShallowModel1.shallow_model clause) }
    
end
module CreuSat_Solver_GetAssertingLevel
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = usize
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel7 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel1 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index2 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = usize
  clone CreuSat_Lit_Impl2_Index_Interface as Index1 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel5.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg get_asserting_level [#"../CreuSAT/src/solver.rs" 38 0 38 89] [@cfg:stackify] [@cfg:subregion_analysis] (clause : CreuSat_Clause_Clause_Type.t_clause) (trail : CreuSat_Trail_Trail_Type.t_trail) (f : CreuSat_Formula_Formula_Type.t_formula) : (usize, usize)
    requires {[#"../CreuSAT/src/solver.rs" 30 11 30 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/solver.rs" 31 11 31 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/solver.rs" 32 11 32 47] EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel0.shallow_model f)}
    requires {[#"../CreuSAT/src/solver.rs" 33 11 33 40] Invariant2.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/solver.rs" 34 11 34 28] Seq.length (ShallowModel1.shallow_model clause) > 1}
    requires {[#"../CreuSAT/src/solver.rs" 35 11 35 52] VarsInRangeInner0.vars_in_range_inner (ShallowModel1.shallow_model clause) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/solver.rs" 36 11 36 46] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel1.shallow_model clause)}
    ensures { [#"../CreuSAT/src/solver.rs" 37 10 37 35] UIntSize.to_int (let (a, _) = result in a) < Seq.length (ShallowModel1.shallow_model clause) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : (usize, usize);
  var clause_1 : CreuSat_Clause_Clause_Type.t_clause;
  var trail_2 : CreuSat_Trail_Trail_Type.t_trail;
  var f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var max_i_12 : usize;
  var max_level_13 : usize;
  var _14 : usize;
  var _15 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _16 : usize;
  var _17 : CreuSat_Lit_Lit_Type.t_lit;
  var _18 : CreuSat_Lit_Lit_Type.t_lit;
  var _19 : CreuSat_Clause_Clause_Type.t_clause;
  var i_20 : usize;
  var _21 : ();
  var _23 : ();
  var _24 : bool;
  var _25 : usize;
  var _26 : usize;
  var _27 : CreuSat_Clause_Clause_Type.t_clause;
  var level_28 : usize;
  var _29 : usize;
  var _30 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _31 : usize;
  var _32 : CreuSat_Lit_Lit_Type.t_lit;
  var _33 : CreuSat_Lit_Lit_Type.t_lit;
  var _34 : CreuSat_Clause_Clause_Type.t_clause;
  var _35 : usize;
  var _36 : ();
  var _37 : bool;
  var _38 : usize;
  var _39 : usize;
  var _40 : usize;
  var _41 : usize;
  var _42 : ();
  var _43 : ();
  var _44 : ();
  var _45 : usize;
  var _46 : usize;
  {
    clause_1 <- clause;
    trail_2 <- trail;
    f_3 <- f;
    goto BB0
  }
  BB0 {
    max_i_12 <- ([#"../CreuSAT/src/solver.rs" 39 27 39 28] (1 : usize));
    _15 <- CreuSat_Trail_Trail_Type.trail_lit_to_level trail_2;
    _19 <- clause_1;
    _18 <- ([#"../CreuSAT/src/solver.rs" 40 43 40 52] Index0.index _19 ([#"../CreuSAT/src/solver.rs" 40 50 40 51] (1 : usize)));
    goto BB1
  }
  BB1 {
    _17 <- _18;
    _16 <- ([#"../CreuSAT/src/solver.rs" 40 43 40 60] Index1.index _17);
    goto BB2
  }
  BB2 {
    _14 <- ([#"../CreuSAT/src/solver.rs" 40 24 40 61] Index2.index _15 _16);
    goto BB3
  }
  BB3 {
    max_level_13 <- _14;
    i_20 <- ([#"../CreuSAT/src/solver.rs" 41 23 41 24] (2 : usize));
    goto BB4
  }
  BB4 {
    invariant { [#"../CreuSAT/src/solver.rs" 42 16 42 38] UIntSize.to_int max_i_12 < Seq.length (ShallowModel1.shallow_model clause_1) };
    _25 <- i_20;
    _27 <- clause_1;
    _26 <- ([#"../CreuSAT/src/solver.rs" 43 14 43 26] Len0.len _27);
    goto BB5
  }
  BB5 {
    _24 <- ([#"../CreuSAT/src/solver.rs" 43 10 43 26] _25 < _26);
    switch (_24)
      | False -> goto BB13
      | True -> goto BB6
      end
  }
  BB6 {
    _30 <- CreuSat_Trail_Trail_Type.trail_lit_to_level trail_2;
    _34 <- clause_1;
    _35 <- i_20;
    _33 <- ([#"../CreuSAT/src/solver.rs" 44 39 44 48] Index0.index _34 _35);
    goto BB7
  }
  BB7 {
    _32 <- _33;
    _31 <- ([#"../CreuSAT/src/solver.rs" 44 39 44 56] Index1.index _32);
    goto BB8
  }
  BB8 {
    _29 <- ([#"../CreuSAT/src/solver.rs" 44 20 44 57] Index2.index _30 _31);
    goto BB9
  }
  BB9 {
    level_28 <- _29;
    _38 <- level_28;
    _39 <- max_level_13;
    _37 <- ([#"../CreuSAT/src/solver.rs" 45 11 45 28] _38 > _39);
    switch (_37)
      | False -> goto BB11
      | True -> goto BB10
      end
  }
  BB10 {
    _40 <- level_28;
    max_level_13 <- _40;
    _40 <- any usize;
    _41 <- i_20;
    max_i_12 <- _41;
    _41 <- any usize;
    _36 <- ();
    goto BB12
  }
  BB11 {
    _36 <- ();
    goto BB12
  }
  BB12 {
    i_20 <- ([#"../CreuSAT/src/solver.rs" 49 8 49 14] i_20 + ([#"../CreuSAT/src/solver.rs" 49 13 49 14] (1 : usize)));
    _23 <- ();
    goto BB4
  }
  BB13 {
    _21 <- ();
    _45 <- max_i_12;
    _46 <- max_level_13;
    _0 <- (_45, _46);
    return _0
  }
  
end
module CreuSat_Solver_Impl0_New_Interface
  use prelude.Borrow
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  val new [#"../CreuSAT/src/solver.rs" 74 4 74 37] (f : CreuSat_Formula_Formula_Type.t_formula) : CreuSat_Solver_Solver_Type.t_solver
    
end
module CreuSat_Solver_Impl0_New
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use seq.Seq
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic0 with
    type t = usize,
    type s = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone Alloc_Vec_FromElem_Interface as FromElem0 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  let rec cfg new [#"../CreuSAT/src/solver.rs" 74 4 74 37] [@cfg:stackify] [@cfg:subregion_analysis] (f : CreuSat_Formula_Formula_Type.t_formula) : CreuSat_Solver_Solver_Type.t_solver
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_Solver_Type.t_solver;
  var f_1 : CreuSat_Formula_Formula_Type.t_formula;
  var _2 : usize;
  var _3 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _4 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _5 : usize;
  {
    f_1 <- f;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Formula_Formula_Type.formula_clauses f_1;
    _2 <- ([#"../CreuSAT/src/solver.rs" 79 25 79 40] Len0.len _3);
    goto BB1
  }
  BB1 {
    _5 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _4 <- ([#"../CreuSAT/src/solver.rs" 83 23 83 52] FromElem0.from_elem ([#"../CreuSAT/src/solver.rs" 83 38 83 39] (0 : usize)) _5);
    goto BB2
  }
  BB2 {
    _0 <- CreuSat_Solver_Solver_Type.C_Solver ([#"../CreuSAT/src/solver.rs" 76 24 76 25] (0 : usize)) ([#"../CreuSAT/src/solver.rs" 77 24 77 28] (2000 : usize)) ([#"../CreuSAT/src/solver.rs" 78 27 78 28] (0 : usize)) _2 ([#"../CreuSAT/src/solver.rs" 80 27 80 30] (300 : usize)) ([#"../CreuSAT/src/solver.rs" 81 18 81 26] (16777216 : usize)) ([#"../CreuSAT/src/solver.rs" 82 18 82 26] (16777216 : usize)) _4;
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_IncreaseNumConflicts_Interface
  use prelude.Borrow
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  val increase_num_conflicts [#"../CreuSAT/src/solver.rs" 89 4 89 40] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) : ()
    
end
module CreuSat_Solver_Impl0_IncreaseNumConflicts
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Solver_Solver_Type.t_solver
  let rec cfg increase_num_conflicts [#"../CreuSAT/src/solver.rs" 89 4 89 40] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _2 : bool;
  var _3 : usize;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Solver_Solver_Type.solver_num_conflicts ( * self_1);
    _2 <- ([#"../CreuSAT/src/solver.rs" 90 11 90 42] _3 < ([#"../CreuSAT/src/solver.rs" 90 32 90 42] (18446744073709551615 : usize)));
    switch (_2)
      | False -> goto BB2
      | True -> goto BB1
      end
  }
  BB1 {
    self_1 <- { self_1 with current = (let CreuSat_Solver_Solver_Type.C_Solver a b c d e f g h =  * self_1 in CreuSat_Solver_Solver_Type.C_Solver a b ([#"../CreuSAT/src/solver.rs" 91 12 91 35] CreuSat_Solver_Solver_Type.solver_num_conflicts ( * self_1) + ([#"../CreuSAT/src/solver.rs" 91 34 91 35] (1 : usize))) d e f g h) };
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB3
  }
  BB2 {
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_IncreaseNumLemmas_Interface
  use prelude.Borrow
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  val increase_num_lemmas [#"../CreuSAT/src/solver.rs" 97 4 97 37] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) : ()
    
end
module CreuSat_Solver_Impl0_IncreaseNumLemmas
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Solver_Solver_Type.t_solver
  let rec cfg increase_num_lemmas [#"../CreuSAT/src/solver.rs" 97 4 97 37] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _2 : bool;
  var _3 : usize;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Solver_Solver_Type.solver_num_lemmas ( * self_1);
    _2 <- ([#"../CreuSAT/src/solver.rs" 98 11 98 39] _3 < ([#"../CreuSAT/src/solver.rs" 98 29 98 39] (18446744073709551615 : usize)));
    switch (_2)
      | False -> goto BB2
      | True -> goto BB1
      end
  }
  BB1 {
    self_1 <- { self_1 with current = (let CreuSat_Solver_Solver_Type.C_Solver a b c d e f g h =  * self_1 in CreuSat_Solver_Solver_Type.C_Solver ([#"../CreuSAT/src/solver.rs" 99 12 99 32] CreuSat_Solver_Solver_Type.solver_num_lemmas ( * self_1) + ([#"../CreuSAT/src/solver.rs" 99 31 99 32] (1 : usize))) b c d e f g h) };
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB3
  }
  BB2 {
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module CreuSat_Util_UpdateFast_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  val update_fast [#"../CreuSAT/src/util.rs" 37 0 37 48] (fast : borrowed usize) (lbd : usize) : ()
end
module CreuSat_Util_UpdateFast
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = usize
  let rec cfg update_fast [#"../CreuSAT/src/util.rs" 37 0 37 48] [@cfg:stackify] [@cfg:subregion_analysis] (fast : borrowed usize) (lbd : usize) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var fast_1 : borrowed usize;
  var lbd_2 : usize;
  var _3 : usize;
  var _4 : usize;
  var _5 : bool;
  var lbd_shl_fifteen_6 : usize;
  var _7 : bool;
  var _8 : usize;
  var _9 : usize;
  var _10 : bool;
  var _11 : usize;
  var _12 : bool;
  var _13 : usize;
  var _14 : usize;
  var _15 : usize;
  var _16 : usize;
  {
    fast_1 <- fast;
    lbd_2 <- lbd;
    goto BB0
  }
  BB0 {
    _4 <-  * fast_1;
    _5 <- ([#"../CreuSAT/src/util.rs" 38 13 38 23] ([#"../CreuSAT/src/util.rs" 38 21 38 23] (32 : usize)) = ([#"../CreuSAT/src/util.rs" 38 13 38 23] (0 : usize)));
    assert { [#"../CreuSAT/src/util.rs" 38 13 38 23] not _5 };
    goto BB1
  }
  BB1 {
    _3 <- ([#"../CreuSAT/src/util.rs" 38 13 38 23] _4 / ([#"../CreuSAT/src/util.rs" 38 21 38 23] (32 : usize)));
    fast_1 <- { fast_1 with current = ([#"../CreuSAT/src/util.rs" 38 4 38 23]  * fast_1 - _3) };
    _8 <- lbd_2;
    _10 <- ([#"../CreuSAT/src/util.rs" 39 35 39 53] ([#"../CreuSAT/src/util.rs" 39 48 39 53] (32768 : usize)) = ([#"../CreuSAT/src/util.rs" 39 35 39 53] (0 : usize)));
    assert { [#"../CreuSAT/src/util.rs" 39 35 39 53] not _10 };
    goto BB2
  }
  BB2 {
    _9 <- ([#"../CreuSAT/src/util.rs" 39 35 39 53] ([#"../CreuSAT/src/util.rs" 39 35 39 45] (18446744073709551615 : usize)) / ([#"../CreuSAT/src/util.rs" 39 48 39 53] (32768 : usize)));
    _7 <- ([#"../CreuSAT/src/util.rs" 39 29 39 53] _8 < _9);
    switch (_7)
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    _11 <- lbd_2;
    lbd_shl_fifteen_6 <- ([#"../CreuSAT/src/util.rs" 39 56 39 67] _11 * ([#"../CreuSAT/src/util.rs" 39 62 39 67] (32768 : usize)));
    goto BB5
  }
  BB4 {
    lbd_shl_fifteen_6 <- lbd_2;
    goto BB5
  }
  BB5 {
    _14 <-  * fast_1;
    _13 <- ([#"../CreuSAT/src/util.rs" 40 7 40 25] ([#"../CreuSAT/src/util.rs" 40 7 40 17] (18446744073709551615 : usize)) - _14);
    _15 <- lbd_shl_fifteen_6;
    _12 <- ([#"../CreuSAT/src/util.rs" 40 7 40 43] _13 > _15);
    switch (_12)
      | False -> goto BB7
      | True -> goto BB6
      end
  }
  BB6 {
    _16 <- lbd_shl_fifteen_6;
    fast_1 <- { fast_1 with current = ([#"../CreuSAT/src/util.rs" 41 8 41 32]  * fast_1 + _16) };
    assume { Resolve0.resolve fast_1 };
    _0 <- ();
    goto BB8
  }
  BB7 {
    assume { Resolve0.resolve fast_1 };
    _0 <- ();
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Util_UpdateSlow_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  val update_slow [#"../CreuSAT/src/util.rs" 47 0 47 48] (slow : borrowed usize) (lbd : usize) : ()
end
module CreuSat_Util_UpdateSlow
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = usize
  let rec cfg update_slow [#"../CreuSAT/src/util.rs" 47 0 47 48] [@cfg:stackify] [@cfg:subregion_analysis] (slow : borrowed usize) (lbd : usize) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var slow_1 : borrowed usize;
  var lbd_2 : usize;
  var _3 : usize;
  var _4 : usize;
  var _5 : bool;
  var lbd_shl_five_6 : usize;
  var _7 : bool;
  var _8 : usize;
  var _9 : usize;
  var _10 : bool;
  var _11 : usize;
  var _12 : bool;
  var _13 : usize;
  var _14 : usize;
  var _15 : usize;
  var _16 : usize;
  {
    slow_1 <- slow;
    lbd_2 <- lbd;
    goto BB0
  }
  BB0 {
    _4 <-  * slow_1;
    _5 <- ([#"../CreuSAT/src/util.rs" 48 13 48 26] ([#"../CreuSAT/src/util.rs" 48 21 48 26] (32768 : usize)) = ([#"../CreuSAT/src/util.rs" 48 13 48 26] (0 : usize)));
    assert { [#"../CreuSAT/src/util.rs" 48 13 48 26] not _5 };
    goto BB1
  }
  BB1 {
    _3 <- ([#"../CreuSAT/src/util.rs" 48 13 48 26] _4 / ([#"../CreuSAT/src/util.rs" 48 21 48 26] (32768 : usize)));
    slow_1 <- { slow_1 with current = ([#"../CreuSAT/src/util.rs" 48 4 48 26]  * slow_1 - _3) };
    _8 <- lbd_2;
    _10 <- ([#"../CreuSAT/src/util.rs" 49 32 49 47] ([#"../CreuSAT/src/util.rs" 49 45 49 47] (32 : usize)) = ([#"../CreuSAT/src/util.rs" 49 32 49 47] (0 : usize)));
    assert { [#"../CreuSAT/src/util.rs" 49 32 49 47] not _10 };
    goto BB2
  }
  BB2 {
    _9 <- ([#"../CreuSAT/src/util.rs" 49 32 49 47] ([#"../CreuSAT/src/util.rs" 49 32 49 42] (18446744073709551615 : usize)) / ([#"../CreuSAT/src/util.rs" 49 45 49 47] (32 : usize)));
    _7 <- ([#"../CreuSAT/src/util.rs" 49 26 49 47] _8 < _9);
    switch (_7)
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    _11 <- lbd_2;
    lbd_shl_five_6 <- ([#"../CreuSAT/src/util.rs" 49 50 49 58] _11 * ([#"../CreuSAT/src/util.rs" 49 56 49 58] (32 : usize)));
    goto BB5
  }
  BB4 {
    lbd_shl_five_6 <- lbd_2;
    goto BB5
  }
  BB5 {
    _14 <-  * slow_1;
    _13 <- ([#"../CreuSAT/src/util.rs" 50 7 50 25] ([#"../CreuSAT/src/util.rs" 50 7 50 17] (18446744073709551615 : usize)) - _14);
    _15 <- lbd_shl_five_6;
    _12 <- ([#"../CreuSAT/src/util.rs" 50 7 50 40] _13 > _15);
    switch (_12)
      | False -> goto BB7
      | True -> goto BB6
      end
  }
  BB6 {
    _16 <- lbd_shl_five_6;
    slow_1 <- { slow_1 with current = ([#"../CreuSAT/src/util.rs" 51 8 51 29]  * slow_1 + _16) };
    assume { Resolve0.resolve slow_1 };
    _0 <- ();
    goto BB8
  }
  BB7 {
    assume { Resolve0.resolve slow_1 };
    _0 <- ();
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_Backstep_Interface
  use prelude.UIntSize
  use prelude.Int
  use prelude.Borrow
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Stub as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision_Stub as InvariantNoDecision0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val backstep [#"../CreuSAT/src/trail.rs" 62 4 62 48] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (f : CreuSat_Formula_Formula_Type.t_formula) : usize
    requires {[#"../CreuSAT/src/trail.rs" 55 15 55 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 56 15 56 30] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) > 0}
    requires {[#"../CreuSAT/src/trail.rs" 57 4 57 54] InvariantNoDecision0.invariant_no_decision ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 58 15 58 75] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) f (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 57 4 57 54] InvariantNoDecision0.invariant_no_decision ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 59 14 59 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) f (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 60 14 60 35] UIntSize.to_int result < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) }
    
end
module CreuSat_Trail_Impl0_Backstep
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Snapshot
  use prelude.IntSize
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel9 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = usize
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel8 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel7 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    predicate Invariant1.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = usize
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut1 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = usize,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Pop as Pop1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    axiom .
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = uint8
  clone CreuSat_Assignments_Impl1_IndexMut_Interface as IndexMut0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone Alloc_Vec_Impl1_Pop_Interface as Pop0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision as InvariantNoDecision0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel1.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg backstep [#"../CreuSAT/src/trail.rs" 62 4 62 48] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (f : CreuSat_Formula_Formula_Type.t_formula) : usize
    requires {[#"../CreuSAT/src/trail.rs" 55 15 55 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 56 15 56 30] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) > 0}
    requires {[#"../CreuSAT/src/trail.rs" 57 4 57 54] InvariantNoDecision0.invariant_no_decision ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 58 15 58 75] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) f (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 57 4 57 54] InvariantNoDecision0.invariant_no_decision ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 59 14 59 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) f (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 60 14 60 35] UIntSize.to_int result < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var f_2 : CreuSat_Formula_Formula_Type.t_formula;
  var _3 : ();
  var old_t_11 : Snapshot.Snapshot_ty (borrowed (CreuSat_Trail_Trail_Type.t_trail));
  var _13 : ();
  var last_14 : Core_Option_Option_Type.t_option (CreuSat_Trail_Step_Type.t_step);
  var _15 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global));
  var _16 : ();
  var _17 : isize;
  var step_18 : CreuSat_Trail_Step_Type.t_step;
  var _19 : ();
  var _20 : borrowed uint8;
  var _21 : borrowed (CreuSat_Assignments_Assignments_Type.t_assignments);
  var _22 : usize;
  var _23 : CreuSat_Lit_Lit_Type.t_lit;
  var _24 : ();
  var _26 : ();
  var _28 : borrowed usize;
  var _29 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _30 : usize;
  var _31 : CreuSat_Lit_Lit_Type.t_lit;
  var _32 : ();
  var _34 : CreuSat_Lit_Lit_Type.t_lit;
  var _35 : ();
  var _37 : ();
  var _39 : ();
  {
    self_1 <- self;
    f_2 <- f;
    goto BB0
  }
  BB0 {
    _13 <- ();
    old_t_11 <- ([#"../CreuSAT/src/trail.rs" 63 39 63 54] Snapshot.new self_1);
    goto BB1
  }
  BB1 {
    _15 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_trail ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail a b ( ^ _15) d e) };
    last_14 <- ([#"../CreuSAT/src/trail.rs" 65 19 65 35] Pop0.pop _15);
    goto BB2
  }
  BB2 {
    switch (last_14)
      | Core_Option_Option_Type.C_None -> goto BB3
      | Core_Option_Option_Type.C_Some _ -> goto BB5
      end
  }
  BB3 {
    assume { Resolve0.resolve self_1 };
    assert { [#"../CreuSAT/src/trail.rs" 82 30 82 98] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self_1))) f_2 (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1))) /\ true };
    _35 <- ();
    _16 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 85 8 85 53] Invariant1.invariant' (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1)) f_2 };
    _37 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 91 22 91 82] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self_1))) f_2 (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1))) };
    _39 <- ();
    _0 <- ([#"../CreuSAT/src/trail.rs" 93 15 93 16] (0 : usize));
    goto BB11
  }
  BB4 {
    assume { Resolve0.resolve self_1 };
    absurd
  }
  BB5 {
    step_18 <- Core_Option_Option_Type.some_0 last_14;
    last_14 <- (let Core_Option_Option_Type.C_Some a = last_14 in Core_Option_Option_Type.C_Some (any CreuSat_Trail_Step_Type.t_step));
    _21 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail ( ^ _21) b c d e) };
    _23 <- CreuSat_Trail_Step_Type.step_lit step_18;
    _22 <- ([#"../CreuSAT/src/trail.rs" 69 33 69 49] Index0.index _23);
    goto BB6
  }
  BB6 {
    _20 <- ([#"../CreuSAT/src/trail.rs" 69 16 69 50] IndexMut0.index_mut _21 _22);
    goto BB7
  }
  BB7 {
    _20 <- { _20 with current = ([#"../CreuSAT/src/trail.rs" 69 16 69 55]  * _20 + ([#"../CreuSAT/src/trail.rs" 69 54 69 55] (2 : uint8))) };
    assume { Resolve1.resolve _20 };
    assert { [#"../CreuSAT/src/trail.rs" 71 30 71 62] ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self_1)) = Pop1.pop (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * Snapshot.inner old_t_11))) };
    _24 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 72 30 72 53]  ^ Snapshot.inner old_t_11 =  ^ self_1 };
    _26 <- ();
    _29 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_lit_to_level ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail a ( ^ _29) c d e) };
    assume { Resolve0.resolve self_1 };
    _31 <- CreuSat_Trail_Step_Type.step_lit step_18;
    _30 <- ([#"../CreuSAT/src/trail.rs" 74 34 74 50] Index0.index _31);
    goto BB8
  }
  BB8 {
    _28 <- ([#"../CreuSAT/src/trail.rs" 74 16 74 51] IndexMut1.index_mut _29 _30);
    goto BB9
  }
  BB9 {
    _28 <- { _28 with current = ([#"../CreuSAT/src/trail.rs" 74 54 74 64] (18446744073709551615 : usize)) };
    assume { Resolve2.resolve _28 };
    assert { [#"../CreuSAT/src/trail.rs" 76 30 76 90] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self_1))) f_2 (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1))) };
    _32 <- ();
    _34 <- CreuSat_Trail_Step_Type.step_lit step_18;
    _0 <- ([#"../CreuSAT/src/trail.rs" 77 23 77 39] Index0.index _34);
    goto BB10
  }
  BB10 {
    goto BB11
  }
  BB11 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_BacktrackTo_Interface
  use prelude.Borrow
  use seq.Seq
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Stub as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel2
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant2
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  val backtrack_to [#"../CreuSAT/src/trail.rs" 118 4 118 80] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (level : usize) (f : CreuSat_Formula_Formula_Type.t_formula) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : ()
    requires {[#"../CreuSAT/src/trail.rs" 110 15 110 45] Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self))) > UIntSize.to_int level}
    requires {[#"../CreuSAT/src/trail.rs" 111 15 111 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 112 4 112 42] Invariant1.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 113 4 113 48] Invariant2.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 115 15 115 75] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) f (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 112 4 112 42] Invariant1.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 113 4 113 48] Invariant2.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 116 14 116 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) f (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    
end
module CreuSat_Trail_Impl0_BacktrackTo
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use prelude.IntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel11 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel10 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = CreuSat_Decision_Node_Type.t_node
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Decision_Node_Type.t_node),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = usize
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel8 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel7 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel11.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicUtil_Pop as Pop1 with
    type t = usize,
    axiom .
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone Alloc_Vec_Impl1_Pop_Interface as Pop0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted as LemmaPopMaintainsSorted0 with
    predicate Sorted0.sorted = Sorted0.sorted,
    function Pop0.pop = Pop1.pop,
    axiom .
  clone Alloc_Vec_Impl1_Len_Interface as Len1 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision as InvariantNoDecision0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Trail_Impl0_Backstep_Interface as Backstep0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone Core_Usize_Max as Max0
  clone Alloc_Vec_Impl13_Index_Interface as Index1 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    type Output0.output = CreuSat_Decision_Node_Type.t_node
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = usize
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX',
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  let rec cfg backtrack_to [#"../CreuSAT/src/trail.rs" 118 4 118 80] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (level : usize) (f : CreuSat_Formula_Formula_Type.t_formula) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : ()
    requires {[#"../CreuSAT/src/trail.rs" 110 15 110 45] Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self))) > UIntSize.to_int level}
    requires {[#"../CreuSAT/src/trail.rs" 111 15 111 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 112 4 112 42] Invariant1.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 113 4 113 48] Invariant2.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 115 15 115 75] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) f (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 112 4 112 42] Invariant1.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 113 4 113 48] Invariant2.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 116 14 116 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) f (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var level_2 : usize;
  var f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var d_4 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var old_t_13 : Snapshot.Snapshot_ty (borrowed (CreuSat_Trail_Trail_Type.t_trail));
  var _15 : ();
  var old_d_16 : Snapshot.Snapshot_ty (borrowed (CreuSat_Decision_Decisions_Type.t_decisions));
  var _18 : ();
  var how_many_19 : usize;
  var _20 : usize;
  var _21 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _22 : usize;
  var _23 : usize;
  var _24 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _25 : usize;
  var des_26 : usize;
  var _27 : usize;
  var _28 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _29 : usize;
  var i_30 : usize;
  var curr_31 : usize;
  var timestamp_32 : usize;
  var _33 : bool;
  var _34 : usize;
  var _35 : CreuSat_Decision_Node_Type.t_node;
  var _36 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
  var _37 : usize;
  var _38 : ();
  var _45 : ();
  var _46 : bool;
  var _47 : usize;
  var _48 : usize;
  var idx_49 : usize;
  var _50 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _51 : CreuSat_Formula_Formula_Type.t_formula;
  var _52 : ();
  var curr_timestamp_54 : usize;
  var _55 : CreuSat_Decision_Node_Type.t_node;
  var _56 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Decision_Node_Type.t_node) (Alloc_Alloc_Global_Type.t_global);
  var _57 : usize;
  var _58 : ();
  var _59 : bool;
  var _60 : usize;
  var _61 : usize;
  var _62 : usize;
  var _63 : usize;
  var _64 : ();
  var _65 : ();
  var _66 : ();
  var _67 : usize;
  var _68 : ();
  var _71 : bool;
  var _72 : usize;
  var _73 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _74 : usize;
  var old_t2_75 : Snapshot.Snapshot_ty (borrowed (CreuSat_Trail_Trail_Type.t_trail));
  var _77 : ();
  var _78 : ();
  var _80 : ();
  var _82 : ();
  var _84 : ();
  var _85 : Core_Option_Option_Type.t_option usize;
  var _86 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _87 : isize;
  var _88 : ();
  var _90 : ();
  var _92 : ();
  var _93 : ();
  var _94 : ();
  var _96 : ();
  var _97 : ();
  var _98 : ();
  var _99 : ();
  var _102 : bool;
  var _103 : bool;
  var _104 : usize;
  var _105 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _106 : bool;
  var _107 : usize;
  var _108 : usize;
  var _109 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _110 : usize;
  var _111 : usize;
  var _112 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _113 : usize;
  var _114 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var old_t3_115 : Snapshot.Snapshot_ty (borrowed (CreuSat_Trail_Trail_Type.t_trail));
  var _117 : ();
  var _118 : ();
  var _120 : ();
  var _122 : ();
  var _124 : ();
  var _125 : Core_Option_Option_Type.t_option usize;
  var _126 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _127 : isize;
  var _128 : ();
  var _130 : ();
  var _132 : ();
  var _133 : ();
  var _134 : ();
  var _136 : ();
  var _138 : ();
  var _139 : ();
  var _140 : ();
  var _141 : ();
  var _143 : ();
  var _145 : ();
  var _147 : usize;
  {
    self_1 <- self;
    level_2 <- level;
    f_3 <- f;
    d_4 <- d;
    goto BB0
  }
  BB0 {
    _15 <- ();
    old_t_13 <- ([#"../CreuSAT/src/trail.rs" 119 39 119 54] Snapshot.new self_1);
    goto BB1
  }
  BB1 {
    _18 <- ();
    old_d_16 <- ([#"../CreuSAT/src/trail.rs" 120 43 120 55] Snapshot.new d_4);
    goto BB2
  }
  BB2 {
    _21 <- CreuSat_Trail_Trail_Type.trail_trail ( * self_1);
    _20 <- ([#"../CreuSAT/src/trail.rs" 121 23 121 39] Len0.len _21);
    goto BB3
  }
  BB3 {
    _24 <- CreuSat_Trail_Trail_Type.trail_decisions ( * self_1);
    _25 <- level_2;
    _23 <- ([#"../CreuSAT/src/trail.rs" 121 42 121 63] Index0.index _24 _25);
    goto BB4
  }
  BB4 {
    _22 <- _23;
    how_many_19 <- ([#"../CreuSAT/src/trail.rs" 121 23 121 63] _20 - _22);
    _28 <- CreuSat_Trail_Trail_Type.trail_decisions ( * self_1);
    _29 <- level_2;
    _27 <- ([#"../CreuSAT/src/trail.rs" 122 18 122 39] Index0.index _28 _29);
    goto BB5
  }
  BB5 {
    des_26 <- _27;
    i_30 <- ([#"../CreuSAT/src/trail.rs" 123 27 123 28] (0 : usize));
    curr_31 <- CreuSat_Decision_Decisions_Type.decisions_search ( * d_4);
    _34 <- curr_31;
    _33 <- ([#"../CreuSAT/src/trail.rs" 125 31 125 49] _34 <> ([#"../CreuSAT/src/trail.rs" 125 39 125 49] (18446744073709551615 : usize)));
    switch (_33)
      | False -> goto BB8
      | True -> goto BB6
      end
  }
  BB6 {
    _36 <- CreuSat_Decision_Decisions_Type.decisions_linked_list ( * d_4);
    _37 <- curr_31;
    _35 <- ([#"../CreuSAT/src/trail.rs" 125 52 125 71] Index1.index _36 _37);
    goto BB7
  }
  BB7 {
    timestamp_32 <- CreuSat_Decision_Node_Type.node_ts _35;
    goto BB9
  }
  BB8 {
    timestamp_32 <- ([#"../CreuSAT/src/trail.rs" 125 84 125 85] (0 : usize));
    goto BB9
  }
  BB9 {
    goto BB10
  }
  BB10 {
    invariant { [#"../CreuSAT/src/trail.rs" 126 20 126 44] UIntSize.to_int i_30 <= Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * Snapshot.inner old_t_13))) };
    invariant { [#"../CreuSAT/src/trail.rs" 127 20 127 33] i_30 <= how_many_19 };
    invariant { [#"../CreuSAT/src/trail.rs" 128 20 128 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self_1))) f_3 (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1))) };
    invariant { [#"../CreuSAT/src/trail.rs" 129 20 129 50] InvariantNoDecision0.invariant_no_decision ( * self_1) f_3 };
    invariant { [#"../CreuSAT/src/trail.rs" 130 20 130 44] Invariant2.invariant' ( * d_4) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_3)) };
    invariant { [#"../CreuSAT/src/trail.rs" 132 20 132 72] UIntSize.to_int curr_31 < Seq.length (ShallowModel3.shallow_model (CreuSat_Decision_Decisions_Type.decisions_linked_list ( * d_4))) \/ UIntSize.to_int curr_31 = UIntSize.to_int Max0.mAX' };
    _47 <- i_30;
    _48 <- how_many_19;
    _46 <- ([#"../CreuSAT/src/trail.rs" 134 14 134 26] _47 < _48);
    switch (_46)
      | False -> goto BB17
      | True -> goto BB11
      end
  }
  BB11 {
    _50 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _50) };
    _51 <- f_3;
    idx_49 <- ([#"../CreuSAT/src/trail.rs" 135 22 135 38] Backstep0.backstep _50 _51);
    goto BB12
  }
  BB12 {
    assert { [#"../CreuSAT/src/trail.rs" 136 26 136 44] UIntSize.to_int idx_49 < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_3) };
    _52 <- ();
    _56 <- CreuSat_Decision_Decisions_Type.decisions_linked_list ( * d_4);
    _57 <- idx_49;
    _55 <- ([#"../CreuSAT/src/trail.rs" 137 33 137 51] Index1.index _56 _57);
    goto BB13
  }
  BB13 {
    curr_timestamp_54 <- CreuSat_Decision_Node_Type.node_ts _55;
    _60 <- curr_timestamp_54;
    _61 <- timestamp_32;
    _59 <- ([#"../CreuSAT/src/trail.rs" 138 15 138 41] _60 > _61);
    switch (_59)
      | False -> goto BB15
      | True -> goto BB14
      end
  }
  BB14 {
    _62 <- curr_timestamp_54;
    timestamp_32 <- _62;
    _62 <- any usize;
    _63 <- idx_49;
    curr_31 <- _63;
    _63 <- any usize;
    _58 <- ();
    goto BB16
  }
  BB15 {
    _58 <- ();
    goto BB16
  }
  BB16 {
    i_30 <- ([#"../CreuSAT/src/trail.rs" 142 12 142 18] i_30 + ([#"../CreuSAT/src/trail.rs" 142 17 142 18] (1 : usize)));
    _45 <- ();
    goto BB10
  }
  BB17 {
    _38 <- ();
    _67 <- curr_31;
    d_4 <- { d_4 with current = (let CreuSat_Decision_Decisions_Type.C_Decisions a b c d =  * d_4 in CreuSat_Decision_Decisions_Type.C_Decisions a b c _67) };
    _67 <- any usize;
    assume { Resolve0.resolve d_4 };
    goto BB18
  }
  BB18 {
    invariant { [#"../CreuSAT/src/trail.rs" 146 20 146 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self_1))) f_3 (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1))) };
    invariant { [#"../CreuSAT/src/trail.rs" 147 20 147 50] InvariantNoDecision0.invariant_no_decision ( * self_1) f_3 };
    _73 <- CreuSat_Trail_Trail_Type.trail_decisions ( * self_1);
    _72 <- ([#"../CreuSAT/src/trail.rs" 148 14 148 34] Len1.len _73);
    goto BB19
  }
  BB19 {
    _74 <- level_2;
    _71 <- ([#"../CreuSAT/src/trail.rs" 148 14 148 42] _72 > _74);
    switch (_71)
      | False -> goto BB26
      | True -> goto BB20
      end
  }
  BB20 {
    _77 <- ();
    old_t2_75 <- ([#"../CreuSAT/src/trail.rs" 149 44 149 59] Snapshot.new self_1);
    goto BB21
  }
  BB21 {
    assert { [#"../CreuSAT/src/trail.rs" 150 26 150 49] Sorted0.sorted (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) };
    _78 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 151 26 151 51] Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) > 0 };
    _80 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 152 26 152 69] let _ = LemmaPopMaintainsSorted0.lemma_pop_maintains_sorted (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) in true };
    _82 <- ();
    _86 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail a b c d ( ^ _86)) };
    _85 <- ([#"../CreuSAT/src/trail.rs" 153 18 153 38] Pop0.pop _86);
    goto BB22
  }
  BB22 {
    switch (_85)
      | Core_Option_Option_Type.C_None -> goto BB23
      | Core_Option_Option_Type.C_Some _ -> goto BB25
      end
  }
  BB23 {
    assume { Resolve1.resolve self_1 };
    absurd
  }
  BB24 {
    assume { Resolve1.resolve self_1 };
    absurd
  }
  BB25 {
    assert { [#"../CreuSAT/src/trail.rs" 155 34 155 75] ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1)) = Pop1.pop (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * Snapshot.inner old_t2_75))) };
    _88 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 156 34 156 60]  ^ Snapshot.inner old_t2_75 =  ^ self_1 };
    _90 <- ();
    _84 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 162 26 162 49] Sorted0.sorted (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) };
    _94 <- ();
    _45 <- ();
    goto BB18
  }
  BB26 {
    _68 <- ();
    goto BB27
  }
  BB27 {
    invariant { [#"../CreuSAT/src/trail.rs" 165 20 165 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self_1))) f_3 (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1))) };
    invariant { [#"../CreuSAT/src/trail.rs" 166 20 166 50] InvariantNoDecision0.invariant_no_decision ( * self_1) f_3 };
    _105 <- CreuSat_Trail_Trail_Type.trail_decisions ( * self_1);
    _104 <- ([#"../CreuSAT/src/trail.rs" 167 14 167 34] Len1.len _105);
    goto BB31
  }
  BB28 {
    _102 <- ([#"../CreuSAT/src/trail.rs" 167 14 167 101] false);
    goto BB30
  }
  BB29 {
    _109 <- CreuSat_Trail_Trail_Type.trail_decisions ( * self_1);
    _112 <- CreuSat_Trail_Trail_Type.trail_decisions ( * self_1);
    _111 <- ([#"../CreuSAT/src/trail.rs" 167 57 167 77] Len1.len _112);
    goto BB32
  }
  BB30 {
    switch (_102)
      | False -> goto BB41
      | True -> goto BB35
      end
  }
  BB31 {
    _103 <- ([#"../CreuSAT/src/trail.rs" 167 14 167 38] _104 > ([#"../CreuSAT/src/trail.rs" 167 37 167 38] (0 : usize)));
    switch (_103)
      | False -> goto BB28
      | True -> goto BB29
      end
  }
  BB32 {
    _110 <- ([#"../CreuSAT/src/trail.rs" 167 57 167 81] _111 - ([#"../CreuSAT/src/trail.rs" 167 80 167 81] (1 : usize)));
    _108 <- ([#"../CreuSAT/src/trail.rs" 167 42 167 82] Index0.index _109 _110);
    goto BB33
  }
  BB33 {
    _107 <- _108;
    _114 <- CreuSat_Trail_Trail_Type.trail_trail ( * self_1);
    _113 <- ([#"../CreuSAT/src/trail.rs" 167 85 167 101] Len0.len _114);
    goto BB34
  }
  BB34 {
    _106 <- ([#"../CreuSAT/src/trail.rs" 167 42 167 101] _107 > _113);
    _102 <- _106;
    _106 <- any bool;
    goto BB30
  }
  BB35 {
    _117 <- ();
    old_t3_115 <- ([#"../CreuSAT/src/trail.rs" 168 44 168 59] Snapshot.new self_1);
    goto BB36
  }
  BB36 {
    assert { [#"../CreuSAT/src/trail.rs" 169 26 169 49] Sorted0.sorted (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) };
    _118 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 170 26 170 51] Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) > 0 };
    _120 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 171 26 171 69] let _ = LemmaPopMaintainsSorted0.lemma_pop_maintains_sorted (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) in true };
    _122 <- ();
    _126 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail a b c d ( ^ _126)) };
    _125 <- ([#"../CreuSAT/src/trail.rs" 173 18 173 38] Pop0.pop _126);
    goto BB37
  }
  BB37 {
    switch (_125)
      | Core_Option_Option_Type.C_None -> goto BB38
      | Core_Option_Option_Type.C_Some _ -> goto BB40
      end
  }
  BB38 {
    assume { Resolve1.resolve self_1 };
    absurd
  }
  BB39 {
    assume { Resolve1.resolve self_1 };
    absurd
  }
  BB40 {
    assert { [#"../CreuSAT/src/trail.rs" 175 34 175 75] ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1)) = Pop1.pop (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * Snapshot.inner old_t3_115))) };
    _128 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 176 34 176 60]  ^ Snapshot.inner old_t3_115 =  ^ self_1 };
    _130 <- ();
    _124 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 182 26 182 71] let _ = LemmaPopMaintainsSorted0.lemma_pop_maintains_sorted (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * Snapshot.inner old_t3_115))) in true };
    _134 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 183 26 183 49] Sorted0.sorted (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) };
    _136 <- ();
    _45 <- ();
    goto BB27
  }
  BB41 {
    _99 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 186 12 187 74] Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) = 0 \/ UIntSize.to_int (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) (Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1))) - 1)) <= Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self_1))) };
    _141 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 190 8 190 53] Invariant3.invariant' (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1)) f_3 };
    _143 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 195 22 195 82] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self_1))) f_3 (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1))) };
    _145 <- ();
    _147 <- level_2;
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail a b c _147 e) };
    _147 <- any usize;
    assume { Resolve1.resolve self_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Trail_Impl0_BacktrackSafe_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Stub as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val backtrack_safe [#"../CreuSAT/src/trail.rs" 103 4 103 82] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (level : usize) (f : CreuSat_Formula_Formula_Type.t_formula) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : ()
    requires {[#"../CreuSAT/src/trail.rs" 98 15 98 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 99 4 99 42] Invariant1.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 100 4 100 48] Invariant2.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 101 15 101 75] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) f (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 99 4 99 42] Invariant1.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 100 4 100 48] Invariant2.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 102 14 102 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) f (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    
end
module CreuSat_Trail_Impl0_BacktrackSafe
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel7 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone Core_Usize_Max as Max1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX'
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel1.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Trail_Impl0_BacktrackTo_Interface as BacktrackTo0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel1.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    val Max0.mAX' = Max0.mAX',
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  let rec cfg backtrack_safe [#"../CreuSAT/src/trail.rs" 103 4 103 82] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (level : usize) (f : CreuSat_Formula_Formula_Type.t_formula) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : ()
    requires {[#"../CreuSAT/src/trail.rs" 98 15 98 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 99 4 99 42] Invariant1.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 100 4 100 48] Invariant2.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 101 15 101 75] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) f (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 99 4 99 42] Invariant1.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 100 4 100 48] Invariant2.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 102 14 102 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) f (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var level_2 : usize;
  var f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var d_4 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _12 : bool;
  var _13 : usize;
  var _14 : usize;
  var _15 : CreuSat_Trail_Trail_Type.t_trail;
  var _16 : ();
  var _17 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _18 : usize;
  var _19 : CreuSat_Formula_Formula_Type.t_formula;
  var _20 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  {
    self_1 <- self;
    level_2 <- level;
    f_3 <- f;
    d_4 <- d;
    goto BB0
  }
  BB0 {
    _13 <- level_2;
    _15 <-  * self_1;
    _14 <- ([#"../CreuSAT/src/trail.rs" 104 19 104 40] DecisionLevel0.decision_level _15);
    goto BB1
  }
  BB1 {
    _12 <- ([#"../CreuSAT/src/trail.rs" 104 11 104 40] _13 < _14);
    switch (_12)
      | False -> goto BB4
      | True -> goto BB2
      end
  }
  BB2 {
    _17 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _17) };
    assume { Resolve0.resolve self_1 };
    _18 <- level_2;
    _19 <- f_3;
    _20 <- borrow_mut ( * d_4);
    d_4 <- { d_4 with current = ( ^ _20) };
    assume { Resolve1.resolve d_4 };
    _16 <- ([#"../CreuSAT/src/trail.rs" 105 12 105 42] BacktrackTo0.backtrack_to _17 _18 _19 _20);
    goto BB3
  }
  BB3 {
    _0 <- ();
    goto BB5
  }
  BB4 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve d_4 };
    _0 <- ();
    goto BB5
  }
  BB5 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_EnqAssignment_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit_Stub as ClausePostWithRegardsToLit0
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Stub as Sat0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Stub as LongArePostUnitInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel3 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_Logic_Unset_Stub as Unset1
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel2
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail_Stub as IdxInTrail0
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Stub as Unsat0
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Stub as Unset0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant_Stub as Invariant3
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant1 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant0
  val enq_assignment [#"../CreuSAT/src/trail.rs" 234 4 234 62] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (step : CreuSat_Trail_Step_Type.t_step) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/trail.rs" 203 4 203 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/trail.rs" 204 15 204 29] Invariant1.invariant' _f}
    requires {[#"../CreuSAT/src/trail.rs" 205 4 205 49] Invariant2.invariant' (CreuSat_Trail_Step_Type.step_lit step) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/trail.rs" 206 4 206 43] Invariant3.invariant' (CreuSat_Trail_Step_Type.step_reason step) _f}
    requires {[#"../CreuSAT/src/trail.rs" 207 15 220 5] match (CreuSat_Trail_Step_Type.step_reason step) with
      | CreuSat_Trail_Reason_Type.C_Long cref -> UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) /\ Unset0.unset (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) 0) (CreuSat_Trail_Trail_Type.trail_assignments ( * self)) /\ (forall i : int . 1 <= i /\ i < Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) -> Unsat0.unsat (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) i) (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) /\ Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) 0 = CreuSat_Trail_Step_Type.step_lit step
      | CreuSat_Trail_Reason_Type.C_Unit cref -> UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) /\ CreuSat_Trail_Step_Type.step_lit step = Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) 0
      | _ -> true
      end}
    requires {[#"../CreuSAT/src/trail.rs" 221 4 221 51] not IdxInTrail0.idx_in_trail (CreuSat_Trail_Step_Type.step_lit step) (CreuSat_Trail_Trail_Type.trail_trail ( * self))}
    requires {[#"../CreuSAT/src/trail.rs" 222 15 222 63] Unset1.unset (Seq.get (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit step)))}
    requires {[#"../CreuSAT/src/trail.rs" 223 15 223 76] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) _f (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 203 4 203 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/trail.rs" 224 4 225 90] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) /\ j <> IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit step) -> Seq.get (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) j = Seq.get (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) j }
    ensures { [#"../CreuSAT/src/trail.rs" 226 4 226 49] Sat0.sat (CreuSat_Trail_Step_Type.step_lit step) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self)) }
    ensures { [#"../CreuSAT/src/trail.rs" 227 14 227 81] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) _f (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 228 14 231 5] match (CreuSat_Trail_Step_Type.step_reason step) with
      | CreuSat_Trail_Reason_Type.C_Long k -> ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int k)) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self)) (CreuSat_Trail_Step_Type.step_lit step)
      | _ -> true
      end }
    ensures { [#"../CreuSAT/src/trail.rs" 232 14 232 59] Seq.length (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) = 1 + Seq.length (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 233 14 233 49] CreuSat_Trail_Trail_Type.trail_decisions ( ^ self) = CreuSat_Trail_Trail_Type.trail_decisions ( * self) }
    
end
module CreuSat_Trail_Impl0_EnqAssignment
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant2.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel11 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel10 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = usize
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel8 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    predicate Invariant1.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreuSat_Logic_Logic_Unset as Unset1
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess as LemmaPushMaintainsLitNotInLess0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Invariant1.invariant' = Invariant0.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Unset0.unset = Unset1.unset,
    predicate Invariant2.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Assignments_Impl2_SetAssignment_Interface as SetAssignment0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant2.invariant',
    predicate Invariant2.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel10.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Unset0.unset = Unset1.unset,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = usize
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = usize,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Lit_Impl2_Index_Interface as Index0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit as ClausePostWithRegardsToLit0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail as IdxInTrail0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  let rec cfg enq_assignment [#"../CreuSAT/src/trail.rs" 234 4 234 62] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (step : CreuSat_Trail_Step_Type.t_step) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/trail.rs" 203 4 203 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/trail.rs" 204 15 204 29] Invariant1.invariant' _f}
    requires {[#"../CreuSAT/src/trail.rs" 205 4 205 49] Invariant2.invariant' (CreuSat_Trail_Step_Type.step_lit step) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f))}
    requires {[#"../CreuSAT/src/trail.rs" 206 4 206 43] Invariant3.invariant' (CreuSat_Trail_Step_Type.step_reason step) _f}
    requires {[#"../CreuSAT/src/trail.rs" 207 15 220 5] match (CreuSat_Trail_Step_Type.step_reason step) with
      | CreuSat_Trail_Reason_Type.C_Long cref -> UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) /\ Unset0.unset (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) 0) (CreuSat_Trail_Trail_Type.trail_assignments ( * self)) /\ (forall i : int . 1 <= i /\ i < Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) -> Unsat0.unsat (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) i) (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) /\ Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) 0 = CreuSat_Trail_Step_Type.step_lit step
      | CreuSat_Trail_Reason_Type.C_Unit cref -> UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) /\ CreuSat_Trail_Step_Type.step_lit step = Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int cref))) 0
      | _ -> true
      end}
    requires {[#"../CreuSAT/src/trail.rs" 221 4 221 51] not IdxInTrail0.idx_in_trail (CreuSat_Trail_Step_Type.step_lit step) (CreuSat_Trail_Trail_Type.trail_trail ( * self))}
    requires {[#"../CreuSAT/src/trail.rs" 222 15 222 63] Unset1.unset (Seq.get (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit step)))}
    requires {[#"../CreuSAT/src/trail.rs" 223 15 223 76] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) _f (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 203 4 203 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/trail.rs" 224 4 225 90] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) /\ j <> IndexLogic0.index_logic (CreuSat_Trail_Step_Type.step_lit step) -> Seq.get (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) j = Seq.get (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) j }
    ensures { [#"../CreuSAT/src/trail.rs" 226 4 226 49] Sat0.sat (CreuSat_Trail_Step_Type.step_lit step) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self)) }
    ensures { [#"../CreuSAT/src/trail.rs" 227 14 227 81] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) _f (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 228 14 231 5] match (CreuSat_Trail_Step_Type.step_reason step) with
      | CreuSat_Trail_Reason_Type.C_Long k -> ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses _f)) (UIntSize.to_int k)) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self)) (CreuSat_Trail_Step_Type.step_lit step)
      | _ -> true
      end }
    ensures { [#"../CreuSAT/src/trail.rs" 232 14 232 59] Seq.length (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) = 1 + Seq.length (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 233 14 233 49] CreuSat_Trail_Trail_Type.trail_decisions ( ^ self) = CreuSat_Trail_Trail_Type.trail_decisions ( * self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var step_2 : CreuSat_Trail_Step_Type.t_step;
  var _f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var _19 : usize;
  var _20 : CreuSat_Trail_Trail_Type.t_trail;
  var _21 : borrowed usize;
  var _22 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _23 : usize;
  var _24 : CreuSat_Lit_Lit_Type.t_lit;
  var trail_25 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _26 : ();
  var _27 : borrowed (CreuSat_Assignments_Assignments_Type.t_assignments);
  var _28 : CreuSat_Lit_Lit_Type.t_lit;
  var _29 : CreuSat_Formula_Formula_Type.t_formula;
  var _30 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _31 : ();
  var _33 : ();
  var _34 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global));
  var _35 : CreuSat_Trail_Step_Type.t_step;
  var _36 : ();
  {
    self_1 <- self;
    step_2 <- step;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    _20 <-  * self_1;
    _19 <- ([#"../CreuSAT/src/trail.rs" 235 46 235 67] DecisionLevel0.decision_level _20);
    goto BB1
  }
  BB1 {
    _22 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_lit_to_level ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail a ( ^ _22) c d e) };
    _24 <- CreuSat_Trail_Step_Type.step_lit step_2;
    _23 <- ([#"../CreuSAT/src/trail.rs" 235 26 235 42] Index0.index _24);
    goto BB2
  }
  BB2 {
    _21 <- ([#"../CreuSAT/src/trail.rs" 235 8 235 43] IndexMut0.index_mut _22 _23);
    goto BB3
  }
  BB3 {
    _21 <- { _21 with current = _19 };
    _19 <- any usize;
    assume { Resolve0.resolve _21 };
    trail_25 <- CreuSat_Trail_Trail_Type.trail_trail ( * self_1);
    _27 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail ( ^ _27) b c d e) };
    _28 <- CreuSat_Trail_Step_Type.step_lit step_2;
    _29 <- _f_3;
    _30 <- trail_25;
    _26 <- ([#"../CreuSAT/src/trail.rs" 238 8 238 60] SetAssignment0.set_assignment _27 _28 _29 _30);
    goto BB4
  }
  BB4 {
    assert { [#"../CreuSAT/src/trail.rs" 241 22 241 76] let _ = LemmaPushMaintainsLitNotInLess0.lemma_push_maintains_lit_not_in_less ( * self_1) _f_3 step_2 in true };
    _31 <- ();
    _34 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_trail ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail a b ( ^ _34) d e) };
    assume { Resolve1.resolve self_1 };
    _35 <- step_2;
    step_2 <- any CreuSat_Trail_Step_Type.t_step;
    _33 <- ([#"../CreuSAT/src/trail.rs" 242 8 242 29] Push0.push _34 _35);
    goto BB5
  }
  BB5 {
    assert { [#"../CreuSAT/src/trail.rs" 247 22 247 83] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self_1))) _f_3 (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1))) };
    _36 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Solver_Impl0_HandleLongClause_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Stub as EquisatExtensionInner0
  clone CreusotContracts_Model_Impl3_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int)
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant4
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant3
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val handle_long_clause [#"../CreuSAT/src/solver.rs" 115 4 117 5] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (t : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (w : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (clause : CreuSat_Clause_Clause_Type.t_clause) (s_idx : usize) : ()
    requires {[#"../CreuSAT/src/solver.rs" 104 4 104 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 105 4 105 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 106 4 106 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 107 4 107 48] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 108 15 108 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/solver.rs" 109 15 109 44] Invariant4.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 110 15 110 50] EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel0.shallow_model f)}
    requires {[#"../CreuSAT/src/solver.rs" 111 15 111 34] Seq.length (ShallowModel1.shallow_model clause) > 1}
    requires {[#"../CreuSAT/src/solver.rs" 112 15 112 39] UIntSize.to_int s_idx < Seq.length (ShallowModel1.shallow_model clause)}
    ensures { [#"../CreuSAT/src/solver.rs" 104 4 104 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 105 4 105 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 106 4 106 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 107 4 107 48] Invariant3.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 113 14 113 43] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 114 14 114 27] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_Solver_Impl0_HandleLongClause
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant6.invariant'
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner as UnitInner0 with
    predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset1
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset1.unset
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel14 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel13 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit as ClausePostWithRegardsToLit0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail as IdxInTrail0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unit as Unit0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate UnitInner0.unit_inner = UnitInner0.unit_inner
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve7 with
    type t = usize
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel11 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel10 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel9 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant6.invariant',
    predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreuSat_Solver_Impl0_IncreaseNumConflicts_Interface as IncreaseNumConflicts0
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve6 with
    type t = CreuSat_Solver_Solver_Type.t_solver
  clone CreuSat_Solver_Impl0_IncreaseNumLemmas_Interface as IncreaseNumLemmas0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel5.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Trail_Impl0_EnqAssignment_Interface as EnqAssignment0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Invariant1.invariant' = Invariant0.invariant',
    predicate Invariant2.invariant' = Invariant6.invariant',
    predicate Invariant3.invariant' = Invariant7.invariant',
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Unset0.unset = Unset0.unset,
    predicate Unsat0.unsat = Unsat0.unsat,
    predicate IdxInTrail0.idx_in_trail = IdxInTrail0.idx_in_trail,
    function ShallowModel2.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Unset1.unset = Unset1.unset,
    function ShallowModel3.shallow_model = ShallowModel3.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate Sat0.sat = Sat0.sat,
    predicate ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit = ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve5 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve4 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreuSat_Clause_Impl2_UnitAndUnset_Interface as UnitAndUnset0 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal,
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Unit0.unit = Unit0.unit,
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX',
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Trail_Impl0_BacktrackSafe_Interface as BacktrackSafe0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve3 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreuSat_Util_UpdateSlow_Interface as UpdateSlow0
  clone CreuSat_Util_UpdateFast_Interface as UpdateFast0
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = usize
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel0 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Formula_Impl2_AddClause_Interface as AddClause0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX',
    predicate Invariant3.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
    predicate Equisat0.equisat = Equisat0.equisat,
    function ShallowModel2.shallow_model = ShallowModel12.shallow_model,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreuSat_Clause_Impl2_CalcLbd_Interface as CalcLbd0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl0_Resolve as Resolve0 with
    type t1 = usize,
    type t2 = usize,
    predicate Resolve0.resolve = Resolve7.resolve,
    predicate Resolve1.resolve = Resolve7.resolve
  clone CreuSat_Solver_GetAssertingLevel_Interface as GetAssertingLevel0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
    predicate Invariant2.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel11.shallow_model,
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Clause_Impl2_SwapLitsInClause_Interface as SwapLitsInClause0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model
  let rec cfg handle_long_clause [#"../CreuSAT/src/solver.rs" 115 4 117 5] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (t : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (w : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (clause : CreuSat_Clause_Clause_Type.t_clause) (s_idx : usize) : ()
    requires {[#"../CreuSAT/src/solver.rs" 104 4 104 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 105 4 105 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 106 4 106 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 107 4 107 48] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 108 15 108 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/solver.rs" 109 15 109 44] Invariant4.invariant' clause (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 110 15 110 50] EquisatExtensionInner0.equisat_extension_inner clause (ShallowModel0.shallow_model f)}
    requires {[#"../CreuSAT/src/solver.rs" 111 15 111 34] Seq.length (ShallowModel1.shallow_model clause) > 1}
    requires {[#"../CreuSAT/src/solver.rs" 112 15 112 39] UIntSize.to_int s_idx < Seq.length (ShallowModel1.shallow_model clause)}
    ensures { [#"../CreuSAT/src/solver.rs" 104 4 104 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 105 4 105 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 106 4 106 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 107 4 107 48] Invariant3.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 113 14 113 43] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 114 14 114 27] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var f_2 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var t_3 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var w_4 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var d_5 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var clause_6 : CreuSat_Clause_Clause_Type.t_clause;
  var s_idx_7 : usize;
  var _23 : ();
  var _24 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _25 : CreuSat_Formula_Formula_Type.t_formula;
  var _26 : usize;
  var idx_27 : usize;
  var level_28 : usize;
  var _29 : (usize, usize);
  var _30 : CreuSat_Clause_Clause_Type.t_clause;
  var _31 : CreuSat_Clause_Clause_Type.t_clause;
  var _32 : CreuSat_Trail_Trail_Type.t_trail;
  var _33 : CreuSat_Formula_Formula_Type.t_formula;
  var _34 : ();
  var _35 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _36 : CreuSat_Formula_Formula_Type.t_formula;
  var _37 : usize;
  var lbd_38 : usize;
  var _39 : CreuSat_Clause_Clause_Type.t_clause;
  var _40 : CreuSat_Formula_Formula_Type.t_formula;
  var _41 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _42 : CreuSat_Trail_Trail_Type.t_trail;
  var cref_43 : usize;
  var _44 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _45 : CreuSat_Clause_Clause_Type.t_clause;
  var _46 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _47 : CreuSat_Trail_Trail_Type.t_trail;
  var _48 : ();
  var _49 : borrowed usize;
  var _50 : borrowed usize;
  var _51 : usize;
  var _52 : ();
  var _53 : borrowed usize;
  var _54 : borrowed usize;
  var _55 : usize;
  var _56 : ();
  var _57 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _58 : usize;
  var _59 : CreuSat_Formula_Formula_Type.t_formula;
  var _60 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var lit_61 : CreuSat_Lit_Lit_Type.t_lit;
  var _62 : CreuSat_Lit_Lit_Type.t_lit;
  var _63 : CreuSat_Clause_Clause_Type.t_clause;
  var _64 : CreuSat_Clause_Clause_Type.t_clause;
  var _65 : CreuSat_Formula_Formula_Type.t_formula;
  var _66 : usize;
  var step_67 : CreuSat_Trail_Step_Type.t_step;
  var _68 : CreuSat_Lit_Lit_Type.t_lit;
  var _69 : usize;
  var _70 : CreuSat_Trail_Reason_Type.t_reason;
  var _71 : usize;
  var _72 : ();
  var _73 : bool;
  var _74 : CreuSat_Clause_Clause_Type.t_clause;
  var _75 : CreuSat_Clause_Clause_Type.t_clause;
  var _76 : CreuSat_Formula_Formula_Type.t_formula;
  var _77 : usize;
  var _78 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _79 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _80 : CreuSat_Formula_Formula_Type.t_formula;
  var _81 : ();
  var _82 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _83 : CreuSat_Trail_Step_Type.t_step;
  var _84 : CreuSat_Formula_Formula_Type.t_formula;
  var _85 : ();
  var _86 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _87 : ();
  var _88 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  {
    self_1 <- self;
    f_2 <- f;
    t_3 <- t;
    w_4 <- w;
    d_5 <- d;
    clause_6 <- clause;
    s_idx_7 <- s_idx;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    _24 <- borrow_mut clause_6;
    clause_6 <-  ^ _24;
    _25 <-  * f_2;
    _26 <- s_idx_7;
    _23 <- ([#"../CreuSAT/src/solver.rs" 118 8 118 47] SwapLitsInClause0.swap_lits_in_clause _24 _25 _26 ([#"../CreuSAT/src/solver.rs" 118 45 118 46] (0 : usize)));
    goto BB5
  }
  BB5 {
    _31 <- clause_6;
    _30 <- _31;
    _32 <-  * t_3;
    _33 <-  * f_2;
    _29 <- ([#"../CreuSAT/src/solver.rs" 119 27 119 61] GetAssertingLevel0.get_asserting_level _30 _32 _33);
    goto BB6
  }
  BB6 {
    idx_27 <- (let (a, _) = _29 in a);
    level_28 <- (let (_, a) = _29 in a);
    assume { Resolve0.resolve _29 };
    _35 <- borrow_mut clause_6;
    clause_6 <-  ^ _35;
    _36 <-  * f_2;
    _37 <- idx_27;
    _34 <- ([#"../CreuSAT/src/solver.rs" 120 8 120 45] SwapLitsInClause0.swap_lits_in_clause _35 _36 _37 ([#"../CreuSAT/src/solver.rs" 120 43 120 44] (1 : usize)));
    goto BB7
  }
  BB7 {
    _39 <- clause_6;
    _40 <-  * f_2;
    _41 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _41) };
    _42 <-  * t_3;
    lbd_38 <- ([#"../CreuSAT/src/solver.rs" 123 18 123 45] CalcLbd0.calc_lbd _39 _40 _41 _42);
    goto BB8
  }
  BB8 {
    _44 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _44) };
    _45 <- clause_6;
    clause_6 <- any CreuSat_Clause_Clause_Type.t_clause;
    _46 <- borrow_mut ( * w_4);
    w_4 <- { w_4 with current = ( ^ _46) };
    assume { Resolve1.resolve w_4 };
    _47 <-  * t_3;
    cref_43 <- ([#"../CreuSAT/src/solver.rs" 124 19 124 45] AddClause0.add_clause _44 _45 _46 _47);
    goto BB9
  }
  BB9 {
    _50 <- borrow_mut (CreuSat_Solver_Solver_Type.solver_fast ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Solver_Solver_Type.C_Solver a b c d e f g h =  * self_1 in CreuSat_Solver_Solver_Type.C_Solver a b c d e ( ^ _50) g h) };
    _49 <- borrow_mut ( * _50);
    _50 <- { _50 with current = ( ^ _49) };
    assume { Resolve2.resolve _50 };
    _51 <- lbd_38;
    _48 <- ([#"../CreuSAT/src/solver.rs" 125 8 125 40] UpdateFast0.update_fast _49 _51);
    goto BB10
  }
  BB10 {
    _54 <- borrow_mut (CreuSat_Solver_Solver_Type.solver_slow ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Solver_Solver_Type.C_Solver a b c d e f g h =  * self_1 in CreuSat_Solver_Solver_Type.C_Solver a b c d e f ( ^ _54) h) };
    _53 <- borrow_mut ( * _54);
    _54 <- { _54 with current = ( ^ _53) };
    assume { Resolve2.resolve _54 };
    _55 <- lbd_38;
    _52 <- ([#"../CreuSAT/src/solver.rs" 126 8 126 40] UpdateSlow0.update_slow _53 _55);
    goto BB11
  }
  BB11 {
    _57 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _57) };
    _58 <- level_28;
    _59 <-  * f_2;
    _60 <- borrow_mut ( * d_5);
    d_5 <- { d_5 with current = ( ^ _60) };
    assume { Resolve3.resolve d_5 };
    _56 <- ([#"../CreuSAT/src/solver.rs" 129 8 129 37] BacktrackSafe0.backtrack_safe _57 _58 _59 _60);
    goto BB12
  }
  BB12 {
    _65 <-  * f_2;
    _66 <- cref_43;
    _64 <- ([#"../CreuSAT/src/solver.rs" 131 18 131 25] Index0.index _65 _66);
    goto BB13
  }
  BB13 {
    _63 <- _64;
    _62 <- ([#"../CreuSAT/src/solver.rs" 131 18 131 28] Index1.index _63 ([#"../CreuSAT/src/solver.rs" 131 26 131 27] (0 : usize)));
    goto BB14
  }
  BB14 {
    lit_61 <- _62;
    _68 <- lit_61;
    _69 <- level_28;
    _71 <- cref_43;
    _70 <- CreuSat_Trail_Reason_Type.C_Long _71;
    step_67 <- CreuSat_Trail_Step_Type.C_Step _68 _69 _70;
    _76 <-  * f_2;
    _77 <- cref_43;
    _75 <- ([#"../CreuSAT/src/solver.rs" 138 11 138 18] Index0.index _76 _77);
    goto BB15
  }
  BB15 {
    _74 <- _75;
    _79 <- CreuSat_Trail_Trail_Type.trail_assignments ( * t_3);
    _78 <- _79;
    _80 <-  * f_2;
    _73 <- ([#"../CreuSAT/src/solver.rs" 138 11 138 52] UnitAndUnset0.unit_and_unset _74 _78 _80);
    goto BB16
  }
  BB16 {
    switch (_73)
      | False -> goto BB19
      | True -> goto BB17
      end
  }
  BB17 {
    _82 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _82) };
    assume { Resolve4.resolve t_3 };
    _83 <- step_67;
    step_67 <- any CreuSat_Trail_Step_Type.t_step;
    _84 <-  * f_2;
    assume { Resolve5.resolve f_2 };
    _81 <- ([#"../CreuSAT/src/solver.rs" 139 12 139 37] EnqAssignment0.enq_assignment _82 _83 _84);
    goto BB18
  }
  BB18 {
    _72 <- ();
    goto BB20
  }
  BB19 {
    assume { Resolve5.resolve f_2 };
    assume { Resolve4.resolve t_3 };
    _72 <- ();
    goto BB20
  }
  BB20 {
    _86 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _86) };
    _85 <- ([#"../CreuSAT/src/solver.rs" 142 8 142 34] IncreaseNumLemmas0.increase_num_lemmas _86);
    goto BB21
  }
  BB21 {
    _88 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _88) };
    assume { Resolve6.resolve self_1 };
    _87 <- ([#"../CreuSAT/src/solver.rs" 143 8 143 37] IncreaseNumConflicts0.increase_num_conflicts _88);
    goto BB22
  }
  BB22 {
    _0 <- ();
    goto BB23
  }
  BB23 {
    return _0
  }
  
end
module Core_Result_Result_Type
  type t_result 't 'e =
    | C_Ok 't
    | C_Err 'e
    
  let function err_0 (self : t_result 't 'e) : 'e = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Ok _ -> any 'e
      | C_Err a -> a
      end
  let function ok_0 (self : t_result 't 'e) : 't = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Ok a -> a
      | C_Err _ -> any 't
      end
end
module CreuSat_Trail_Impl0_LearnUnit_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Stub as Sat0
  use Core_Result_Result_Type as Core_Result_Result_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Stub as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel3
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Stub as Invariant3
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant2 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant0
  val learn_unit [#"../CreuSAT/src/trail.rs" 289 4 289 95] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (cref : usize) (f : CreuSat_Formula_Formula_Type.t_formula) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : Core_Result_Result_Type.t_result () ()
    requires {[#"../CreuSAT/src/trail.rs" 276 4 276 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 277 4 277 48] Invariant1.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 278 15 278 28] Invariant2.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 279 15 279 39] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    requires {[#"../CreuSAT/src/trail.rs" 280 15 280 44] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))) = 1}
    requires {[#"../CreuSAT/src/trail.rs" 281 4 281 57] Invariant3.invariant' (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref)) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 287 15 287 75] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) f (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 276 4 276 42] Invariant0.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 277 4 277 48] Invariant1.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 284 14 286 64] match (result) with
      | Core_Result_Result_Type.C_Err _ -> true
      | Core_Result_Result_Type.C_Ok _ -> Sat0.sat (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))) 0) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))
      end }
    ensures { [#"../CreuSAT/src/trail.rs" 288 14 288 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) f (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    
end
module CreuSat_Trail_Impl0_LearnUnit
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit as ClausePostWithRegardsToLit0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_Logic_Unset as Unset1
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail as IdxInTrail0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel11 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel10 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone Core_Usize_Max as Max1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Trail_Impl0_EnqAssignment_Interface as EnqAssignment0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant2.invariant',
    predicate Invariant2.invariant' = Invariant5.invariant',
    predicate Invariant3.invariant' = Invariant6.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Unset0.unset = Unset0.unset,
    predicate Unsat0.unsat = Unsat0.unsat,
    predicate IdxInTrail0.idx_in_trail = IdxInTrail0.idx_in_trail,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Unset1.unset = Unset1.unset,
    function ShallowModel3.shallow_model = ShallowModel2.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate Sat0.sat = Sat0.sat,
    predicate ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit = ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreuSat_Lit_Impl2_LitSet_Interface as LitSet0 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX'
  clone CreuSat_Trail_Impl0_BacktrackTo_Interface as BacktrackTo0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    predicate Invariant1.invariant' = Invariant0.invariant',
    predicate Invariant2.invariant' = Invariant1.invariant',
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    val Max0.mAX' = Max0.mAX',
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use Core_Result_Result_Type as Core_Result_Result_Type
  let rec cfg learn_unit [#"../CreuSAT/src/trail.rs" 289 4 289 95] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (cref : usize) (f : CreuSat_Formula_Formula_Type.t_formula) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : Core_Result_Result_Type.t_result () ()
    requires {[#"../CreuSAT/src/trail.rs" 276 4 276 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 277 4 277 48] Invariant1.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 278 15 278 28] Invariant2.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 279 15 279 39] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    requires {[#"../CreuSAT/src/trail.rs" 280 15 280 44] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))) = 1}
    requires {[#"../CreuSAT/src/trail.rs" 281 4 281 57] Invariant3.invariant' (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref)) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 287 15 287 75] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) f (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 276 4 276 42] Invariant0.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 277 4 277 48] Invariant1.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 284 14 286 64] match (result) with
      | Core_Result_Result_Type.C_Err _ -> true
      | Core_Result_Result_Type.C_Ok _ -> Sat0.sat (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))) 0) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))
      end }
    ensures { [#"../CreuSAT/src/trail.rs" 288 14 288 80] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) f (ShallowModel3.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Result_Result_Type.t_result () ();
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var cref_2 : usize;
  var f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var d_4 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _16 : ();
  var _17 : bool;
  var _18 : usize;
  var _19 : CreuSat_Trail_Trail_Type.t_trail;
  var _20 : ();
  var _21 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _22 : CreuSat_Formula_Formula_Type.t_formula;
  var _23 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _24 : ();
  var _25 : bool;
  var _26 : CreuSat_Lit_Lit_Type.t_lit;
  var _27 : CreuSat_Lit_Lit_Type.t_lit;
  var _28 : CreuSat_Clause_Clause_Type.t_clause;
  var _29 : CreuSat_Clause_Clause_Type.t_clause;
  var _30 : CreuSat_Formula_Formula_Type.t_formula;
  var _31 : usize;
  var _32 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _33 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _34 : ();
  var _35 : ();
  var _36 : ();
  var _37 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _38 : CreuSat_Trail_Step_Type.t_step;
  var _39 : CreuSat_Lit_Lit_Type.t_lit;
  var _40 : CreuSat_Lit_Lit_Type.t_lit;
  var _41 : CreuSat_Clause_Clause_Type.t_clause;
  var _42 : CreuSat_Clause_Clause_Type.t_clause;
  var _43 : CreuSat_Formula_Formula_Type.t_formula;
  var _44 : usize;
  var _45 : CreuSat_Trail_Reason_Type.t_reason;
  var _46 : usize;
  var _47 : CreuSat_Formula_Formula_Type.t_formula;
  var _48 : ();
  {
    self_1 <- self;
    cref_2 <- cref;
    f_3 <- f;
    d_4 <- d;
    goto BB0
  }
  BB0 {
    _19 <-  * self_1;
    _18 <- ([#"../CreuSAT/src/trail.rs" 290 11 290 32] DecisionLevel0.decision_level _19);
    goto BB1
  }
  BB1 {
    _17 <- ([#"../CreuSAT/src/trail.rs" 290 11 290 36] _18 > ([#"../CreuSAT/src/trail.rs" 290 35 290 36] (0 : usize)));
    switch (_17)
      | False -> goto BB4
      | True -> goto BB2
      end
  }
  BB2 {
    _21 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _21) };
    _22 <- f_3;
    _23 <- borrow_mut ( * d_4);
    d_4 <- { d_4 with current = ( ^ _23) };
    assume { Resolve0.resolve d_4 };
    _20 <- ([#"../CreuSAT/src/trail.rs" 291 12 291 38] BacktrackTo0.backtrack_to _21 ([#"../CreuSAT/src/trail.rs" 291 30 291 31] (0 : usize)) _22 _23);
    goto BB3
  }
  BB3 {
    _16 <- ();
    goto BB5
  }
  BB4 {
    assume { Resolve0.resolve d_4 };
    _16 <- ();
    goto BB5
  }
  BB5 {
    _30 <- f_3;
    _31 <- cref_2;
    _29 <- ([#"../CreuSAT/src/trail.rs" 295 11 295 18] Index0.index _30 _31);
    goto BB6
  }
  BB6 {
    _28 <- _29;
    _27 <- ([#"../CreuSAT/src/trail.rs" 295 11 295 21] Index1.index _28 ([#"../CreuSAT/src/trail.rs" 295 19 295 20] (0 : usize)));
    goto BB7
  }
  BB7 {
    _26 <- _27;
    _33 <- CreuSat_Trail_Trail_Type.trail_assignments ( * self_1);
    _32 <- _33;
    _25 <- ([#"../CreuSAT/src/trail.rs" 295 11 295 48] LitSet0.lit_set _26 _32);
    goto BB8
  }
  BB8 {
    switch (_25)
      | False -> goto BB10
      | True -> goto BB9
      end
  }
  BB9 {
    assume { Resolve1.resolve self_1 };
    _35 <- ();
    _0 <- Core_Result_Result_Type.C_Err _35;
    goto BB14
  }
  BB10 {
    _24 <- ();
    _37 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _37) };
    assume { Resolve1.resolve self_1 };
    _43 <- f_3;
    _44 <- cref_2;
    _42 <- ([#"../CreuSAT/src/trail.rs" 298 40 298 47] Index0.index _43 _44);
    goto BB11
  }
  BB11 {
    _41 <- _42;
    _40 <- ([#"../CreuSAT/src/trail.rs" 298 40 298 50] Index1.index _41 ([#"../CreuSAT/src/trail.rs" 298 48 298 49] (0 : usize)));
    goto BB12
  }
  BB12 {
    _39 <- _40;
    _46 <- cref_2;
    _45 <- CreuSat_Trail_Reason_Type.C_Unit _46;
    _38 <- CreuSat_Trail_Step_Type.C_Step _39 ([#"../CreuSAT/src/trail.rs" 298 68 298 69] (0 : usize)) _45;
    _47 <- f_3;
    _36 <- ([#"../CreuSAT/src/trail.rs" 298 8 298 103] EnqAssignment0.enq_assignment _37 _38 _47);
    goto BB13
  }
  BB13 {
    _48 <- ();
    _0 <- Core_Result_Result_Type.C_Ok _48;
    goto BB14
  }
  BB14 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_HandleConflict_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub as NotSatisfiable0
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Stub as Unsat0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant3
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val handle_conflict [#"../CreuSAT/src/solver.rs" 161 4 163 21] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (t : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (cref : usize) (w : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : Core_Option_Option_Type.t_option bool
    requires {[#"../CreuSAT/src/solver.rs" 147 4 147 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 148 4 148 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 149 4 149 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 150 4 150 48] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 151 15 151 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/solver.rs" 152 15 152 39] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 153 4 153 55] Unsat0.unsat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref)) (CreuSat_Trail_Trail_Type.trail_assignments ( * t))}
    ensures { [#"../CreuSAT/src/solver.rs" 147 4 147 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 148 4 148 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 149 4 149 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 150 4 150 48] Invariant3.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 154 14 154 43] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 155 14 155 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 156 14 160 5] match (result) with
      | Core_Option_Option_Type.C_Some (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Core_Option_Option_Type.C_Some (True) -> true
      | Core_Option_Option_Type.C_None -> true
      end }
    
end
module CreuSat_Solver_Impl0_HandleConflict
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.IntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel7 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel11 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel9 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel8 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant6.invariant',
    predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel4.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Formula_Impl2_SimplifyFormula_Interface as SimplifyFormula0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant2.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate Invariant2.invariant' = Invariant1.invariant',
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreuSat_Formula_Impl2_ReduceDb_Interface as ReduceDb0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant2.invariant',
    predicate Invariant2.invariant' = Invariant1.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use Core_Result_Result_Type as Core_Result_Result_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX',
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Trail_Impl0_LearnUnit_Interface as LearnUnit0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Invariant1.invariant' = Invariant3.invariant',
    predicate Invariant2.invariant' = Invariant0.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate Invariant3.invariant' = Invariant5.invariant',
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel4.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate Sat0.sat = Sat0.sat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Formula_Impl2_AddUnit_Interface as AddUnit0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate Invariant2.invariant' = Invariant5.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner,
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
    function ShallowModel2.shallow_model = ShallowModel0.shallow_model,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Solver_Impl0_HandleLongClause_Interface as HandleLongClause0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    predicate Invariant3.invariant' = Invariant3.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate Invariant4.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_BacktrackSafe_Interface as BacktrackSafe0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Formula_Impl2_AddClause_Interface as AddClause0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX',
    predicate Invariant3.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
    predicate Equisat0.equisat = Equisat0.equisat,
    function ShallowModel2.shallow_model = ShallowModel0.shallow_model,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve4 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve3 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Solver_Solver_Type.t_solver
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use CreuSat_ConflictAnalysis_Conflict_Type as CreuSat_ConflictAnalysis_Conflict_Type
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_ConflictAnalysis_AnalyzeConflict_Interface as AnalyzeConflict0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate Invariant1.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Unsat0.unsat = Unsat0.unsat,
    predicate Invariant2.invariant' = Invariant3.invariant',
    predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
    predicate Invariant3.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner,
    function ShallowModel2.shallow_model = ShallowModel8.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  use Core_Option_Option_Type as Core_Option_Option_Type
  let rec cfg handle_conflict [#"../CreuSAT/src/solver.rs" 161 4 163 21] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (t : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (cref : usize) (w : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : Core_Option_Option_Type.t_option bool
    requires {[#"../CreuSAT/src/solver.rs" 147 4 147 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 148 4 148 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 149 4 149 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 150 4 150 48] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 151 15 151 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/solver.rs" 152 15 152 39] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 153 4 153 55] Unsat0.unsat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref)) (CreuSat_Trail_Trail_Type.trail_assignments ( * t))}
    ensures { [#"../CreuSAT/src/solver.rs" 147 4 147 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 148 4 148 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 149 4 149 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 150 4 150 48] Invariant3.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 154 14 154 43] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 155 14 155 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 156 14 160 5] match (result) with
      | Core_Option_Option_Type.C_Some (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Core_Option_Option_Type.C_Some (True) -> true
      | Core_Option_Option_Type.C_None -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.t_option bool;
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var f_2 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var t_3 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var cref_4 : usize;
  var w_5 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var d_6 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var res_21 : CreuSat_ConflictAnalysis_Conflict_Type.t_conflict;
  var _22 : CreuSat_Formula_Formula_Type.t_formula;
  var _23 : CreuSat_Trail_Trail_Type.t_trail;
  var _24 : usize;
  var _25 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _26 : ();
  var _27 : isize;
  var _28 : ();
  var clause_29 : CreuSat_Clause_Clause_Type.t_clause;
  var cref_30 : usize;
  var _31 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _32 : CreuSat_Clause_Clause_Type.t_clause;
  var _33 : CreuSat_Trail_Trail_Type.t_trail;
  var _34 : ();
  var _35 : Core_Result_Result_Type.t_result () ();
  var _36 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _37 : usize;
  var _38 : CreuSat_Formula_Formula_Type.t_formula;
  var _39 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _40 : isize;
  var _41 : ();
  var _42 : ();
  var _43 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _44 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _45 : CreuSat_Trail_Trail_Type.t_trail;
  var _46 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _47 : ();
  var _48 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _49 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _50 : CreuSat_Trail_Trail_Type.t_trail;
  var s_idx_51 : usize;
  var clause_52 : CreuSat_Clause_Clause_Type.t_clause;
  var _53 : ();
  var _54 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _55 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _56 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _57 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _58 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _59 : CreuSat_Clause_Clause_Type.t_clause;
  var _60 : usize;
  var clause_61 : CreuSat_Clause_Clause_Type.t_clause;
  var _62 : usize;
  var _63 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _64 : CreuSat_Clause_Clause_Type.t_clause;
  var _65 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _66 : CreuSat_Trail_Trail_Type.t_trail;
  var _67 : ();
  var _68 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _69 : CreuSat_Formula_Formula_Type.t_formula;
  var _70 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  {
    self_1 <- self;
    f_2 <- f;
    t_3 <- t;
    cref_4 <- cref;
    w_5 <- w;
    d_6 <- d;
    goto BB0
  }
  BB0 {
    _22 <-  * f_2;
    _23 <-  * t_3;
    _24 <- cref_4;
    _25 <- borrow_mut ( * d_6);
    d_6 <- { d_6 with current = ( ^ _25) };
    res_21 <- ([#"../CreuSAT/src/solver.rs" 164 18 164 49] AnalyzeConflict0.analyze_conflict _22 _23 _24 _25);
    goto BB1
  }
  BB1 {
    switch (res_21)
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Ground -> goto BB4
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Unit _ -> goto BB5
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Learned _ _ -> goto BB14
      | CreuSat_ConflictAnalysis_Conflict_Type.C_Restart _ -> goto BB2
      end
  }
  BB2 {
    assume { Resolve0.resolve self_1 };
    clause_61 <- CreuSat_ConflictAnalysis_Conflict_Type.restart_0 res_21;
    res_21 <- (let CreuSat_ConflictAnalysis_Conflict_Type.C_Restart a = res_21 in CreuSat_ConflictAnalysis_Conflict_Type.C_Restart (any CreuSat_Clause_Clause_Type.t_clause));
    _63 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _63) };
    _64 <- clause_61;
    clause_61 <- any CreuSat_Clause_Clause_Type.t_clause;
    _65 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _65) };
    assume { Resolve3.resolve w_5 };
    _66 <-  * t_3;
    _62 <- ([#"../CreuSAT/src/solver.rs" 186 16 186 42] AddClause0.add_clause _63 _64 _65 _66);
    goto BB17
  }
  BB3 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    assume { Resolve4.resolve d_6 };
    absurd
  }
  BB4 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    assume { Resolve4.resolve d_6 };
    _0 <- Core_Option_Option_Type.C_Some ([#"../CreuSAT/src/solver.rs" 167 28 167 33] false);
    goto BB23
  }
  BB5 {
    clause_29 <- CreuSat_ConflictAnalysis_Conflict_Type.unit_0 res_21;
    res_21 <- (let CreuSat_ConflictAnalysis_Conflict_Type.C_Unit a = res_21 in CreuSat_ConflictAnalysis_Conflict_Type.C_Unit (any CreuSat_Clause_Clause_Type.t_clause));
    _31 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _31) };
    _32 <- clause_29;
    clause_29 <- any CreuSat_Clause_Clause_Type.t_clause;
    _33 <-  * t_3;
    cref_30 <- ([#"../CreuSAT/src/solver.rs" 173 27 173 48] AddUnit0.add_unit _31 _32 _33);
    goto BB6
  }
  BB6 {
    _36 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _36) };
    _37 <- cref_30;
    _38 <-  * f_2;
    _39 <- borrow_mut ( * d_6);
    d_6 <- { d_6 with current = ( ^ _39) };
    assume { Resolve4.resolve d_6 };
    _35 <- ([#"../CreuSAT/src/solver.rs" 174 22 174 46] LearnUnit0.learn_unit _36 _37 _38 _39);
    goto BB7
  }
  BB7 {
    switch (_35)
      | Core_Result_Result_Type.C_Ok _ -> goto BB8
      | Core_Result_Result_Type.C_Err _ -> goto BB10
      end
  }
  BB8 {
    _34 <- ();
    _43 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _43) };
    _44 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _44) };
    _45 <-  * t_3;
    _46 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _46) };
    assume { Resolve0.resolve self_1 };
    _42 <- ([#"../CreuSAT/src/solver.rs" 179 16 179 38] ReduceDb0.reduceDB _43 _44 _45 _46);
    goto BB11
  }
  BB9 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    absurd
  }
  BB10 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    _0 <- Core_Option_Option_Type.C_Some ([#"../CreuSAT/src/solver.rs" 175 42 175 46] true);
    goto BB22
  }
  BB11 {
    _48 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _48) };
    assume { Resolve1.resolve f_2 };
    _49 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _49) };
    assume { Resolve3.resolve w_5 };
    _50 <-  * t_3;
    assume { Resolve2.resolve t_3 };
    _47 <- ([#"../CreuSAT/src/solver.rs" 180 16 180 40] SimplifyFormula0.simplify_formula _48 _49 _50);
    goto BB12
  }
  BB12 {
    _26 <- ();
    goto BB13
  }
  BB13 {
    goto BB20
  }
  BB14 {
    s_idx_51 <- CreuSat_ConflictAnalysis_Conflict_Type.learned_0 res_21;
    clause_52 <- CreuSat_ConflictAnalysis_Conflict_Type.learned_1 res_21;
    res_21 <- (let CreuSat_ConflictAnalysis_Conflict_Type.C_Learned a b = res_21 in CreuSat_ConflictAnalysis_Conflict_Type.C_Learned a (any CreuSat_Clause_Clause_Type.t_clause));
    _54 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _54) };
    assume { Resolve0.resolve self_1 };
    _55 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _55) };
    assume { Resolve1.resolve f_2 };
    _56 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _56) };
    assume { Resolve2.resolve t_3 };
    _57 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _57) };
    assume { Resolve3.resolve w_5 };
    _58 <- borrow_mut ( * d_6);
    d_6 <- { d_6 with current = ( ^ _58) };
    assume { Resolve4.resolve d_6 };
    _59 <- clause_52;
    clause_52 <- any CreuSat_Clause_Clause_Type.t_clause;
    _60 <- s_idx_51;
    _53 <- ([#"../CreuSAT/src/solver.rs" 183 16 183 66] HandleLongClause0.handle_long_clause _54 _55 _56 _57 _58 _59 _60);
    goto BB15
  }
  BB15 {
    _26 <- ();
    goto BB16
  }
  BB16 {
    goto BB20
  }
  BB17 {
    _68 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _68) };
    assume { Resolve2.resolve t_3 };
    _69 <-  * f_2;
    assume { Resolve1.resolve f_2 };
    _70 <- borrow_mut ( * d_6);
    d_6 <- { d_6 with current = ( ^ _70) };
    assume { Resolve4.resolve d_6 };
    _67 <- ([#"../CreuSAT/src/solver.rs" 187 16 187 41] BacktrackSafe0.backtrack_safe _68 ([#"../CreuSAT/src/solver.rs" 187 33 187 34] (0 : usize)) _69 _70);
    goto BB18
  }
  BB18 {
    _26 <- ();
    goto BB19
  }
  BB19 {
    goto BB20
  }
  BB20 {
    _0 <- Core_Option_Option_Type.C_None;
    goto BB21
  }
  BB21 {
    goto BB25
  }
  BB22 {
    goto BB23
  }
  BB23 {
    goto BB24
  }
  BB24 {
    goto BB25
  }
  BB25 {
    return _0
  }
  
end
module CreuSat_Solver_ConflictResult_Type
  type t_conflictresult  =
    | C_Ok
    | C_Err
    | C_Ground
    | C_Continue
    
end
module CreuSat_Util_MinLog_Stub
  use prelude.Int
  function min_log [#"../CreuSAT/src/util.rs" 84 0 84 33] (a : int) (b : int) : int
end
module CreuSat_Util_MinLog_Interface
  use prelude.Int
  function min_log [#"../CreuSAT/src/util.rs" 84 0 84 33] (a : int) (b : int) : int
end
module CreuSat_Util_MinLog
  use prelude.Int
  function min_log [#"../CreuSAT/src/util.rs" 84 0 84 33] (a : int) (b : int) : int =
    [#"../CreuSAT/src/util.rs" 83 0 83 8] if a <= b then a else b
  val min_log [#"../CreuSAT/src/util.rs" 84 0 84 33] (a : int) (b : int) : int
    ensures { result = min_log a b }
    
end
module CreuSat_Util_Min_Interface
  use prelude.UIntSize
  use prelude.Int
  clone CreuSat_Util_MinLog_Stub as MinLog0
  val min [#"../CreuSAT/src/util.rs" 97 0 97 39] (a : usize) (b : usize) : usize
    ensures { [#"../CreuSAT/src/util.rs" 93 10 93 36] UIntSize.to_int result = MinLog0.min_log (UIntSize.to_int a) (UIntSize.to_int b) }
    ensures { [#"../CreuSAT/src/util.rs" 94 0 94 38] UIntSize.to_int a <= UIntSize.to_int b -> UIntSize.to_int result = UIntSize.to_int a }
    ensures { [#"../CreuSAT/src/util.rs" 95 0 95 37] UIntSize.to_int b < UIntSize.to_int a -> UIntSize.to_int result = UIntSize.to_int b }
    ensures { [#"../CreuSAT/src/util.rs" 96 10 96 40] UIntSize.to_int result <= UIntSize.to_int b /\ UIntSize.to_int result <= UIntSize.to_int a }
    
end
module CreuSat_Util_Min
  use prelude.Int
  use prelude.UIntSize
  clone CreuSat_Util_MinLog as MinLog0
  let rec cfg min [#"../CreuSAT/src/util.rs" 97 0 97 39] [@cfg:stackify] [@cfg:subregion_analysis] (a : usize) (b : usize) : usize
    ensures { [#"../CreuSAT/src/util.rs" 93 10 93 36] UIntSize.to_int result = MinLog0.min_log (UIntSize.to_int a) (UIntSize.to_int b) }
    ensures { [#"../CreuSAT/src/util.rs" 94 0 94 38] UIntSize.to_int a <= UIntSize.to_int b -> UIntSize.to_int result = UIntSize.to_int a }
    ensures { [#"../CreuSAT/src/util.rs" 95 0 95 37] UIntSize.to_int b < UIntSize.to_int a -> UIntSize.to_int result = UIntSize.to_int b }
    ensures { [#"../CreuSAT/src/util.rs" 96 10 96 40] UIntSize.to_int result <= UIntSize.to_int b /\ UIntSize.to_int result <= UIntSize.to_int a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var a_1 : usize;
  var b_2 : usize;
  var _7 : bool;
  var _8 : usize;
  var _9 : usize;
  {
    a_1 <- a;
    b_2 <- b;
    goto BB0
  }
  BB0 {
    _8 <- a_1;
    _9 <- b_2;
    _7 <- ([#"../CreuSAT/src/util.rs" 98 7 98 13] _8 <= _9);
    switch (_7)
      | False -> goto BB2
      | True -> goto BB1
      end
  }
  BB1 {
    _0 <- a_1;
    goto BB3
  }
  BB2 {
    _0 <- b_2;
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module CreuSat_Util_MaxLog_Stub
  use prelude.Int
  function max_log [#"../CreuSAT/src/util.rs" 106 0 106 33] (a : int) (b : int) : int
end
module CreuSat_Util_MaxLog_Interface
  use prelude.Int
  function max_log [#"../CreuSAT/src/util.rs" 106 0 106 33] (a : int) (b : int) : int
end
module CreuSat_Util_MaxLog
  use prelude.Int
  function max_log [#"../CreuSAT/src/util.rs" 106 0 106 33] (a : int) (b : int) : int =
    [#"../CreuSAT/src/util.rs" 105 0 105 8] if a >= b then a else b
  val max_log [#"../CreuSAT/src/util.rs" 106 0 106 33] (a : int) (b : int) : int
    ensures { result = max_log a b }
    
end
module CreuSat_Util_Max_Interface
  use prelude.UIntSize
  use prelude.Int
  clone CreuSat_Util_MaxLog_Stub as MaxLog0
  val max [#"../CreuSAT/src/util.rs" 116 0 116 39] (a : usize) (b : usize) : usize
    ensures { [#"../CreuSAT/src/util.rs" 115 10 115 36] UIntSize.to_int result = MaxLog0.max_log (UIntSize.to_int a) (UIntSize.to_int b) }
    
end
module CreuSat_Util_Max
  use prelude.Int
  use prelude.UIntSize
  clone CreuSat_Util_MaxLog as MaxLog0
  let rec cfg max [#"../CreuSAT/src/util.rs" 116 0 116 39] [@cfg:stackify] [@cfg:subregion_analysis] (a : usize) (b : usize) : usize
    ensures { [#"../CreuSAT/src/util.rs" 115 10 115 36] UIntSize.to_int result = MaxLog0.max_log (UIntSize.to_int a) (UIntSize.to_int b) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var a_1 : usize;
  var b_2 : usize;
  var _4 : bool;
  var _5 : usize;
  var _6 : usize;
  {
    a_1 <- a;
    b_2 <- b;
    goto BB0
  }
  BB0 {
    _5 <- a_1;
    _6 <- b_2;
    _4 <- ([#"../CreuSAT/src/util.rs" 117 7 117 13] _5 >= _6);
    switch (_4)
      | False -> goto BB2
      | True -> goto BB1
      end
  }
  BB1 {
    _0 <- a_1;
    goto BB3
  }
  BB2 {
    _0 <- b_2;
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module CreuSat_UnitProp_Swap_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use seq.Permut
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Stub as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel2
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val swap [#"../CreuSAT/src/unit_prop.rs" 68 0 68 91] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : CreuSat_Trail_Trail_Type.t_trail) (watches : CreuSat_Watches_Watches_Type.t_watches) (cref : usize) (j : usize) (k : usize) : ()
    requires {[#"../CreuSAT/src/unit_prop.rs" 55 0 55 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 56 0 56 39] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 57 0 57 41] Invariant2.invariant' watches ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 58 11 58 40] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 59 11 59 35] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 60 11 60 40] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) > UIntSize.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 61 11 61 40] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) > UIntSize.to_int k}
    requires {[#"../CreuSAT/src/unit_prop.rs" 62 0 62 65] not SatInner0.sat_inner (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) 0) (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 55 0 55 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 56 0 56 39] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 57 0 57 41] Invariant2.invariant' watches ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 63 0 63 70] Permut.exchange (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int cref))) (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) (UIntSize.to_int j) (UIntSize.to_int k) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 64 10 64 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 65 10 65 49] Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) = Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 67 10 67 23] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_UnitProp_Swap
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use prelude.Slice
  use seq.Seq
  use seq.Permut
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner1.sat_inner,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel16 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel4 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel15 with
    type t = borrowed (CreuSat_Formula_Formula_Type.t_formula),
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_Logic_Unset as Unset0
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl0_ShallowModel as ShallowModel14 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel13 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel12 with
    type t = slice (CreuSat_Lit_Lit_Type.t_lit),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel11 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel16.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreusotContracts_Snapshot_Impl1_ShallowModel as ShallowModel3 with
    type t = borrowed (CreuSat_Formula_Formula_Type.t_formula),
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel15.shallow_model
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel14.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = slice (CreuSat_Lit_Lit_Type.t_lit)
  clone Alloc_Vec_Impl10_DerefMut_Interface as DerefMut0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel13.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel14.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg swap [#"../CreuSAT/src/unit_prop.rs" 68 0 68 91] [@cfg:stackify] [@cfg:subregion_analysis] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : CreuSat_Trail_Trail_Type.t_trail) (watches : CreuSat_Watches_Watches_Type.t_watches) (cref : usize) (j : usize) (k : usize) : ()
    requires {[#"../CreuSAT/src/unit_prop.rs" 55 0 55 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 56 0 56 39] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 57 0 57 41] Invariant2.invariant' watches ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 58 11 58 40] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 59 11 59 35] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 60 11 60 40] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) > UIntSize.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 61 11 61 40] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) > UIntSize.to_int k}
    requires {[#"../CreuSAT/src/unit_prop.rs" 62 0 62 65] not SatInner0.sat_inner (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) 0) (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 55 0 55 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 56 0 56 39] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 57 0 57 41] Invariant2.invariant' watches ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 63 0 63 70] Permut.exchange (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int cref))) (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) (UIntSize.to_int j) (UIntSize.to_int k) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 64 10 64 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 65 10 65 49] Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) = Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 67 10 67 23] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var trail_2 : CreuSat_Trail_Trail_Type.t_trail;
  var watches_3 : CreuSat_Watches_Watches_Type.t_watches;
  var cref_4 : usize;
  var j_5 : usize;
  var k_6 : usize;
  var old_f_22 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _24 : ();
  var _25 : ();
  var _26 : borrowed (slice (CreuSat_Lit_Lit_Type.t_lit));
  var _27 : borrowed (slice (CreuSat_Lit_Lit_Type.t_lit));
  var _28 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Lit_Lit_Type.t_lit) (Alloc_Alloc_Global_Type.t_global));
  var _29 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _30 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global));
  var _31 : usize;
  var _32 : usize;
  var _33 : usize;
  var _34 : ();
  var _36 : ();
  var _38 : ();
  var _40 : ();
  var _42 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    j_5 <- j;
    k_6 <- k;
    goto BB0
  }
  BB0 {
    _24 <- ();
    old_f_22 <- ([#"../CreuSAT/src/unit_prop.rs" 69 37 69 49] Snapshot.new f_1);
    goto BB1
  }
  BB1 {
    _30 <- borrow_mut (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1));
    f_1 <- { f_1 with current = (let CreuSat_Formula_Formula_Type.C_Formula a b =  * f_1 in CreuSat_Formula_Formula_Type.C_Formula ( ^ _30) b) };
    assume { Resolve0.resolve f_1 };
    _31 <- cref_4;
    _29 <- ([#"../CreuSAT/src/unit_prop.rs" 71 4 71 19] IndexMut0.index_mut _30 _31);
    goto BB2
  }
  BB2 {
    _28 <- borrow_mut (CreuSat_Clause_Clause_Type.clause_lits ( * _29));
    _29 <- { _29 with current = (let CreuSat_Clause_Clause_Type.C_Clause a b c d =  * _29 in CreuSat_Clause_Clause_Type.C_Clause a b c ( ^ _28)) };
    assume { Resolve1.resolve _29 };
    _27 <- ([#"../CreuSAT/src/unit_prop.rs" 71 4 71 35] DerefMut0.deref_mut _28);
    goto BB3
  }
  BB3 {
    _26 <- borrow_mut ( * _27);
    _27 <- { _27 with current = ( ^ _26) };
    assume { Resolve2.resolve _27 };
    _32 <- j_5;
    _33 <- k_6;
    _25 <- ([#"../CreuSAT/src/unit_prop.rs" 71 4 71 35] Swap0.swap _26 _32 _33);
    goto BB4
  }
  BB4 {
    assert { [#"../CreuSAT/src/unit_prop.rs" 73 18 73 70] VarsInRangeInner0.vars_in_range_inner (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f_1))) };
    _34 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 74 18 74 64] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) };
    _36 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 76 4 76 170] forall a2 : Seq.seq uint8 . Seq.length a2 = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f_1)) /\ CompleteInner0.complete_inner a2 /\ SatInner1.sat_inner (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * Snapshot.inner old_f_22))) (UIntSize.to_int cref_4)) a2 -> SatInner1.sat_inner (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4)) a2 };
    _38 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 77 4 77 82] EventuallySatComplete0.eventually_sat_complete (ShallowModel3.shallow_model old_f_22) -> EventuallySatComplete0.eventually_sat_complete (ShallowModel4.shallow_model f_1) };
    _40 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 78 18 78 38]  ^ f_1 =  ^ Snapshot.inner old_f_22 };
    _42 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Watches_UpdateWatch_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel3 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Stub as ToWatchidxLogic0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant1 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant0
  val update_watch [#"../CreuSAT/src/watches.rs" 36 0 36 113] (f : CreuSat_Formula_Formula_Type.t_formula) (trail : CreuSat_Trail_Trail_Type.t_trail) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (cref : usize) (j : usize) (k : usize) (lit : CreuSat_Lit_Lit_Type.t_lit) : ()
    requires {[#"../CreuSAT/src/watches.rs" 27 0 27 41] Invariant0.invariant' ( * watches) f}
    requires {[#"../CreuSAT/src/watches.rs" 28 11 28 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/watches.rs" 29 11 29 42] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)}
    requires {[#"../CreuSAT/src/watches.rs" 30 11 30 24] Invariant1.invariant' f}
    requires {[#"../CreuSAT/src/watches.rs" 31 11 31 30] Invariant2.invariant' trail f}
    requires {[#"../CreuSAT/src/watches.rs" 32 11 32 35] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    requires {[#"../CreuSAT/src/watches.rs" 33 11 33 51] 0 <= UIntSize.to_int k /\ UIntSize.to_int k < Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref)))}
    requires {[#"../CreuSAT/src/watches.rs" 34 11 34 40] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/watches.rs" 35 11 35 64] Seq.length (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UIntSize.to_int j}
    ensures { [#"../CreuSAT/src/watches.rs" 27 0 27 41] Invariant0.invariant' ( ^ watches) f }
    
end
module CreuSat_Watches_UpdateWatch
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Slice
  use prelude.Snapshot
  use prelude.IntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel17 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel7 with
    function ShallowModel0.shallow_model = ShallowModel17.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel16 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel15 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Slice_Impl0_ShallowModel as ShallowModel14 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel13 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel12 with
    type t = slice (CreuSat_Watches_Watcher_Type.t_watcher),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel11 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel10 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_WatchValid as WatchValid0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel13.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone Core_Usize_Max as Max0
  clone CreuSat_Lit_Impl2_ToNegWatchidx_Interface as ToNegWatchidx0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX',
    function ToNegWatchidxLogic0.to_neg_watchidx_logic = ToNegWatchidxLogic0.to_neg_watchidx_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange as WatcherCrefsInRange0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant as LemmaPushMaintainsWatcherInvariant0 with
    predicate WatcherCrefsInRange0.watcher_crefs_in_range = WatcherCrefsInRange0.watcher_crefs_in_range,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicUtil_Pop as Pop1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    axiom .
  clone CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant as LemmaPopWatchMaintainsWatcherInvariant0 with
    predicate WatcherCrefsInRange0.watcher_crefs_in_range = WatcherCrefsInRange0.watcher_crefs_in_range,
    function Pop0.pop = Pop1.pop,
    axiom .
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone Alloc_Vec_Impl1_Pop_Interface as Pop0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel13.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Clause_Impl0_Index_Interface as Index2 with
    function ShallowModel0.shallow_model = ShallowModel16.shallow_model
  clone CreuSat_Formula_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel15.shallow_model
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel14.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = slice (CreuSat_Watches_Watcher_Type.t_watcher)
  clone Alloc_Vec_Impl10_DerefMut_Interface as DerefMut0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel13.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel14.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    val Max0.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Lit_Impl2_ToWatchidx_Interface as ToWatchidx0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX',
    function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel7.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  let rec cfg update_watch [#"../CreuSAT/src/watches.rs" 36 0 36 113] [@cfg:stackify] [@cfg:subregion_analysis] (f : CreuSat_Formula_Formula_Type.t_formula) (trail : CreuSat_Trail_Trail_Type.t_trail) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (cref : usize) (j : usize) (k : usize) (lit : CreuSat_Lit_Lit_Type.t_lit) : ()
    requires {[#"../CreuSAT/src/watches.rs" 27 0 27 41] Invariant0.invariant' ( * watches) f}
    requires {[#"../CreuSAT/src/watches.rs" 28 11 28 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/watches.rs" 29 11 29 42] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)}
    requires {[#"../CreuSAT/src/watches.rs" 30 11 30 24] Invariant1.invariant' f}
    requires {[#"../CreuSAT/src/watches.rs" 31 11 31 30] Invariant2.invariant' trail f}
    requires {[#"../CreuSAT/src/watches.rs" 32 11 32 35] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f))}
    requires {[#"../CreuSAT/src/watches.rs" 33 11 33 51] 0 <= UIntSize.to_int k /\ UIntSize.to_int k < Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref)))}
    requires {[#"../CreuSAT/src/watches.rs" 34 11 34 40] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f)) (UIntSize.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/watches.rs" 35 11 35 64] Seq.length (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UIntSize.to_int j}
    ensures { [#"../CreuSAT/src/watches.rs" 27 0 27 41] Invariant0.invariant' ( ^ watches) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var f_1 : CreuSat_Formula_Formula_Type.t_formula;
  var trail_2 : CreuSat_Trail_Trail_Type.t_trail;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var cref_4 : usize;
  var j_5 : usize;
  var k_6 : usize;
  var lit_7 : CreuSat_Lit_Lit_Type.t_lit;
  var watchidx_18 : usize;
  var _19 : CreuSat_Lit_Lit_Type.t_lit;
  var end'_20 : usize;
  var _21 : usize;
  var _22 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _23 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _24 : Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global);
  var _25 : usize;
  var _26 : ();
  var _27 : borrowed (slice (CreuSat_Watches_Watcher_Type.t_watcher));
  var _28 : borrowed (slice (CreuSat_Watches_Watcher_Type.t_watcher));
  var _29 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _30 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _31 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _32 : usize;
  var _33 : usize;
  var _34 : usize;
  var curr_lit_35 : CreuSat_Lit_Lit_Type.t_lit;
  var _36 : CreuSat_Lit_Lit_Type.t_lit;
  var _37 : CreuSat_Clause_Clause_Type.t_clause;
  var _38 : CreuSat_Clause_Clause_Type.t_clause;
  var _39 : CreuSat_Formula_Formula_Type.t_formula;
  var _40 : usize;
  var _41 : usize;
  var _42 : ();
  var old_w_44 : Snapshot.Snapshot_ty (borrowed (CreuSat_Watches_Watches_Type.t_watches));
  var _46 : ();
  var _47 : ();
  var _49 : Core_Option_Option_Type.t_option (CreuSat_Watches_Watcher_Type.t_watcher);
  var _50 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _51 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _52 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _53 : usize;
  var _54 : isize;
  var w_55 : CreuSat_Watches_Watcher_Type.t_watcher;
  var _56 : ();
  var _58 : ();
  var _60 : ();
  var _62 : ();
  var _64 : ();
  var _66 : ();
  var _68 : ();
  var _70 : ();
  var watch_lit_72 : usize;
  var _73 : CreuSat_Lit_Lit_Type.t_lit;
  var _74 : ();
  var _75 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _76 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _77 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _78 : usize;
  var _79 : CreuSat_Watches_Watcher_Type.t_watcher;
  var _80 : ();
  var _82 : ();
  var _84 : ();
  var _86 : ();
  var _87 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    j_5 <- j;
    k_6 <- k;
    lit_7 <- lit;
    goto BB0
  }
  BB0 {
    _19 <- lit_7;
    watchidx_18 <- ([#"../CreuSAT/src/watches.rs" 37 19 37 36] ToWatchidx0.to_watchidx _19);
    goto BB1
  }
  BB1 {
    _24 <- CreuSat_Watches_Watches_Type.watches_watches ( * watches_3);
    _25 <- watchidx_18;
    _23 <- ([#"../CreuSAT/src/watches.rs" 38 14 38 39] Index0.index _24 _25);
    goto BB2
  }
  BB2 {
    _22 <- _23;
    _21 <- ([#"../CreuSAT/src/watches.rs" 38 14 38 45] Len0.len _22);
    goto BB3
  }
  BB3 {
    end'_20 <- ([#"../CreuSAT/src/watches.rs" 38 14 38 49] _21 - ([#"../CreuSAT/src/watches.rs" 38 48 38 49] (1 : usize)));
    _31 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * watches_3 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _31)) };
    _32 <- watchidx_18;
    _30 <- ([#"../CreuSAT/src/watches.rs" 39 4 39 29] IndexMut0.index_mut _31 _32);
    goto BB4
  }
  BB4 {
    _29 <- borrow_mut ( * _30);
    _30 <- { _30 with current = ( ^ _29) };
    assume { Resolve0.resolve _30 };
    _28 <- ([#"../CreuSAT/src/watches.rs" 39 4 39 42] DerefMut0.deref_mut _29);
    goto BB5
  }
  BB5 {
    _27 <- borrow_mut ( * _28);
    _28 <- { _28 with current = ( ^ _27) };
    assume { Resolve1.resolve _28 };
    _33 <- j_5;
    _34 <- end'_20;
    _26 <- ([#"../CreuSAT/src/watches.rs" 39 4 39 42] Swap0.swap _27 _33 _34);
    goto BB6
  }
  BB6 {
    _39 <- f_1;
    _40 <- cref_4;
    _38 <- ([#"../CreuSAT/src/watches.rs" 40 19 40 26] Index1.index _39 _40);
    goto BB7
  }
  BB7 {
    _37 <- _38;
    _41 <- k_6;
    _36 <- ([#"../CreuSAT/src/watches.rs" 40 19 40 29] Index2.index _37 _41);
    goto BB8
  }
  BB8 {
    curr_lit_35 <- _36;
    assert { [#"../CreuSAT/src/watches.rs" 41 18 41 52] UIntSize.to_int watchidx_18 < Seq.length (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) };
    _42 <- ();
    _46 <- ();
    old_w_44 <- ([#"../CreuSAT/src/watches.rs" 42 37 42 52] Snapshot.new watches_3);
    goto BB9
  }
  BB9 {
    assert { [#"../CreuSAT/src/watches.rs" 43 18 43 74] WatcherCrefsInRange0.watcher_crefs_in_range (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) (UIntSize.to_int watchidx_18))) f_1 };
    _47 <- ();
    _52 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * watches_3 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _52)) };
    _53 <- watchidx_18;
    _51 <- ([#"../CreuSAT/src/watches.rs" 44 10 44 35] IndexMut0.index_mut _52 _53);
    goto BB10
  }
  BB10 {
    _50 <- borrow_mut ( * _51);
    _51 <- { _51 with current = ( ^ _50) };
    assume { Resolve0.resolve _51 };
    _49 <- ([#"../CreuSAT/src/watches.rs" 44 10 44 41] Pop0.pop _50);
    goto BB11
  }
  BB11 {
    switch (_49)
      | Core_Option_Option_Type.C_None -> goto BB12
      | Core_Option_Option_Type.C_Some _ -> goto BB14
      end
  }
  BB12 {
    assume { Resolve2.resolve watches_3 };
    absurd
  }
  BB13 {
    assume { Resolve2.resolve watches_3 };
    absurd
  }
  BB14 {
    w_55 <- Core_Option_Option_Type.some_0 _49;
    _49 <- (let Core_Option_Option_Type.C_Some a = _49 in Core_Option_Option_Type.C_Some (any CreuSat_Watches_Watcher_Type.t_watcher));
    assert { [#"../CreuSAT/src/watches.rs" 46 26 46 101] let _ = LemmaPopWatchMaintainsWatcherInvariant0.lemma_pop_watch_maintains_watcher_invariant (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * Snapshot.inner old_w_44))) (UIntSize.to_int watchidx_18))) f_1 in true };
    _56 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 47 26 47 89] ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) (UIntSize.to_int watchidx_18)) = Pop1.pop (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * Snapshot.inner old_w_44))) (UIntSize.to_int watchidx_18))) };
    _58 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 48 26 48 82] WatcherCrefsInRange0.watcher_crefs_in_range (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) (UIntSize.to_int watchidx_18))) f_1 };
    _60 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 49 26 49 47] Invariant0.invariant' ( * watches_3) f_1 };
    _62 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 50 26 50 83] ToNegWatchidxLogic0.to_neg_watchidx_logic curr_lit_35 < Seq.length (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) };
    _64 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 51 26 51 105] WatcherCrefsInRange0.watcher_crefs_in_range (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) (ToNegWatchidxLogic0.to_neg_watchidx_logic curr_lit_35))) f_1 };
    _66 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 52 26 52 52] UIntSize.to_int (CreuSat_Watches_Watcher_Type.watcher_cref w_55) < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses f_1)) };
    _68 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 53 26 53 124] let _ = LemmaPushMaintainsWatcherInvariant0.lemma_push_maintains_watcher_invariant (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) (ToNegWatchidxLogic0.to_neg_watchidx_logic curr_lit_35))) f_1 w_55 in true };
    _70 <- ();
    _73 <- curr_lit_35;
    watch_lit_72 <- ([#"../CreuSAT/src/watches.rs" 55 28 55 54] ToNegWatchidx0.to_neg_watchidx _73);
    goto BB15
  }
  BB15 {
    _77 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * watches_3 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _77)) };
    assume { Resolve2.resolve watches_3 };
    _78 <- watch_lit_72;
    _76 <- ([#"../CreuSAT/src/watches.rs" 56 12 56 38] IndexMut0.index_mut _77 _78);
    goto BB16
  }
  BB16 {
    _75 <- borrow_mut ( * _76);
    _76 <- { _76 with current = ( ^ _75) };
    assume { Resolve0.resolve _76 };
    _79 <- w_55;
    w_55 <- any CreuSat_Watches_Watcher_Type.t_watcher;
    _74 <- ([#"../CreuSAT/src/watches.rs" 56 12 56 46] Push0.push _75 _79);
    goto BB17
  }
  BB17 {
    assert { [#"../CreuSAT/src/watches.rs" 58 26 58 72] WatchValid0.watch_valid (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) (UIntSize.to_int watch_lit_72))) f_1 };
    _80 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 59 26 59 105] WatcherCrefsInRange0.watcher_crefs_in_range (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) (ToNegWatchidxLogic0.to_neg_watchidx_logic curr_lit_35))) f_1 };
    _82 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 60 26 60 47] Invariant0.invariant' ( * watches_3) f_1 };
    _84 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_UnitProp_CheckAndMoveWatch_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Stub as Unsat0
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel4 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Stub as ToWatchidxLogic0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Stub as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel2
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val check_and_move_watch [#"../CreuSAT/src/unit_prop.rs" 30 0 32 9] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : CreuSat_Trail_Trail_Type.t_trail) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (cref : usize) (j : usize) (k : usize) (lit : CreuSat_Lit_Lit_Type.t_lit) : bool
    requires {[#"../CreuSAT/src/unit_prop.rs" 16 0 16 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 17 0 17 36] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 18 0 18 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 19 11 19 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 20 11 20 42] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 21 0 21 65] not SatInner0.sat_inner (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) 0) (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 22 11 22 35] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 23 11 23 51] 2 <= UIntSize.to_int k /\ UIntSize.to_int k < Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 24 11 24 64] Seq.length (ShallowModel4.shallow_model (Seq.get (ShallowModel3.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UIntSize.to_int j}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 16 0 16 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 17 0 17 36] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 18 0 18 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 25 10 25 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 26 10 26 23] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 27 10 27 49] Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) = Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 28 0 28 110] not result -> Unsat0.unsat (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int cref))) (UIntSize.to_int k)) (CreuSat_Trail_Trail_Type.trail_assignments trail) /\  ^ f =  * f /\  * watches =  ^ watches }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 29 10 29 65] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int cref))) = Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) }
    
end
module CreuSat_UnitProp_CheckAndMoveWatch
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel12 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel11 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel10 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Watches_UpdateWatch_Interface as UpdateWatch0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    val Max0.mAX' = Max0.mAX',
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Invariant1.invariant' = Invariant0.invariant',
    predicate Invariant2.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
    function ShallowModel3.shallow_model = ShallowModel4.shallow_model,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_UnitProp_Swap_Interface as Swap0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Lit_Impl2_Index_Interface as Index2 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Lit_Impl2_LitUnsat_Interface as LitUnsat0 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Unsat0.unsat = Unsat0.unsat
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  let rec cfg check_and_move_watch [#"../CreuSAT/src/unit_prop.rs" 30 0 32 9] [@cfg:stackify] [@cfg:subregion_analysis] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : CreuSat_Trail_Trail_Type.t_trail) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (cref : usize) (j : usize) (k : usize) (lit : CreuSat_Lit_Lit_Type.t_lit) : bool
    requires {[#"../CreuSAT/src/unit_prop.rs" 16 0 16 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 17 0 17 36] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 18 0 18 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 19 11 19 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 20 11 20 42] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 21 0 21 65] not SatInner0.sat_inner (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) 0) (ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 22 11 22 35] UIntSize.to_int cref < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 23 11 23 51] 2 <= UIntSize.to_int k /\ UIntSize.to_int k < Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 24 11 24 64] Seq.length (ShallowModel4.shallow_model (Seq.get (ShallowModel3.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UIntSize.to_int j}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 16 0 16 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 17 0 17 36] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 18 0 18 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 25 10 25 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 26 10 26 23] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 27 10 27 49] Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) = Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 28 0 28 110] not result -> Unsat0.unsat (Seq.get (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int cref))) (UIntSize.to_int k)) (CreuSat_Trail_Trail_Type.trail_assignments trail) /\  ^ f =  * f /\  * watches =  ^ watches }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 29 10 29 65] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int cref))) = Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var trail_2 : CreuSat_Trail_Trail_Type.t_trail;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var cref_4 : usize;
  var j_5 : usize;
  var k_6 : usize;
  var lit_7 : CreuSat_Lit_Lit_Type.t_lit;
  var _8 : ();
  var curr_lit_26 : CreuSat_Lit_Lit_Type.t_lit;
  var _27 : CreuSat_Lit_Lit_Type.t_lit;
  var _28 : CreuSat_Clause_Clause_Type.t_clause;
  var _29 : CreuSat_Clause_Clause_Type.t_clause;
  var _30 : CreuSat_Formula_Formula_Type.t_formula;
  var _31 : usize;
  var _32 : usize;
  var _33 : ();
  var _34 : bool;
  var _35 : bool;
  var _36 : CreuSat_Lit_Lit_Type.t_lit;
  var _37 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _38 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _39 : ();
  var _40 : ();
  var _41 : bool;
  var _42 : usize;
  var _43 : CreuSat_Lit_Lit_Type.t_lit;
  var _44 : CreuSat_Lit_Lit_Type.t_lit;
  var _45 : CreuSat_Clause_Clause_Type.t_clause;
  var _46 : CreuSat_Clause_Clause_Type.t_clause;
  var _47 : CreuSat_Formula_Formula_Type.t_formula;
  var _48 : usize;
  var _49 : usize;
  var _50 : CreuSat_Lit_Lit_Type.t_lit;
  var _51 : ();
  var _52 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _53 : CreuSat_Trail_Trail_Type.t_trail;
  var _54 : CreuSat_Watches_Watches_Type.t_watches;
  var _55 : usize;
  var _56 : usize;
  var _57 : ();
  var _58 : CreuSat_Formula_Formula_Type.t_formula;
  var _59 : CreuSat_Trail_Trail_Type.t_trail;
  var _60 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _61 : usize;
  var _62 : usize;
  var _63 : CreuSat_Lit_Lit_Type.t_lit;
  var _64 : ();
  var _65 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _66 : CreuSat_Trail_Trail_Type.t_trail;
  var _67 : CreuSat_Watches_Watches_Type.t_watches;
  var _68 : usize;
  var _69 : usize;
  var _70 : ();
  var _71 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _72 : CreuSat_Trail_Trail_Type.t_trail;
  var _73 : CreuSat_Watches_Watches_Type.t_watches;
  var _74 : usize;
  var _75 : ();
  var _76 : CreuSat_Formula_Formula_Type.t_formula;
  var _77 : CreuSat_Trail_Trail_Type.t_trail;
  var _78 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _79 : usize;
  var _80 : usize;
  var _81 : CreuSat_Lit_Lit_Type.t_lit;
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    j_5 <- j;
    k_6 <- k;
    lit_7 <- lit;
    goto BB0
  }
  BB0 {
    _30 <-  * f_1;
    _31 <- cref_4;
    _29 <- ([#"../CreuSAT/src/unit_prop.rs" 33 19 33 26] Index0.index _30 _31);
    goto BB1
  }
  BB1 {
    _28 <- _29;
    _32 <- k_6;
    _27 <- ([#"../CreuSAT/src/unit_prop.rs" 33 19 33 29] Index1.index _28 _32);
    goto BB2
  }
  BB2 {
    curr_lit_26 <- _27;
    _36 <- curr_lit_26;
    _38 <- CreuSat_Trail_Trail_Type.trail_assignments trail_2;
    _37 <- _38;
    _35 <- ([#"../CreuSAT/src/unit_prop.rs" 34 8 34 46] LitUnsat0.lit_unsat _36 _37);
    goto BB3
  }
  BB3 {
    _34 <- not _35;
    switch (_34)
      | False -> goto BB17
      | True -> goto BB4
      end
  }
  BB4 {
    _47 <-  * f_1;
    _48 <- cref_4;
    _46 <- ([#"../CreuSAT/src/unit_prop.rs" 36 11 36 18] Index0.index _47 _48);
    goto BB5
  }
  BB5 {
    _45 <- _46;
    _44 <- ([#"../CreuSAT/src/unit_prop.rs" 36 11 36 21] Index1.index _45 ([#"../CreuSAT/src/unit_prop.rs" 36 19 36 20] (0 : usize)));
    goto BB6
  }
  BB6 {
    _43 <- _44;
    _42 <- ([#"../CreuSAT/src/unit_prop.rs" 36 11 36 29] Index2.index _43);
    goto BB7
  }
  BB7 {
    _50 <- lit_7;
    _49 <- ([#"../CreuSAT/src/unit_prop.rs" 36 33 36 44] Index2.index _50);
    goto BB8
  }
  BB8 {
    _41 <- ([#"../CreuSAT/src/unit_prop.rs" 36 11 36 44] _42 = _49);
    switch (_41)
      | False -> goto BB12
      | True -> goto BB9
      end
  }
  BB9 {
    _52 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _52) };
    _53 <- trail_2;
    _54 <-  * watches_3;
    _55 <- cref_4;
    _56 <- k_6;
    _51 <- ([#"../CreuSAT/src/unit_prop.rs" 38 12 38 47] Swap0.swap _52 _53 _54 _55 _56 ([#"../CreuSAT/src/unit_prop.rs" 38 45 38 46] (0 : usize)));
    goto BB10
  }
  BB10 {
    _58 <-  * f_1;
    assume { Resolve0.resolve f_1 };
    _59 <- trail_2;
    _60 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _60) };
    assume { Resolve1.resolve watches_3 };
    _61 <- cref_4;
    _62 <- j_5;
    _63 <- lit_7;
    _57 <- ([#"../CreuSAT/src/unit_prop.rs" 39 12 39 60] UpdateWatch0.update_watch _58 _59 _60 _61 _62 ([#"../CreuSAT/src/unit_prop.rs" 39 53 39 54] (0 : usize)) _63);
    goto BB11
  }
  BB11 {
    _40 <- ();
    goto BB16
  }
  BB12 {
    _65 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _65) };
    _66 <- trail_2;
    _67 <-  * watches_3;
    _68 <- cref_4;
    _69 <- k_6;
    _64 <- ([#"../CreuSAT/src/unit_prop.rs" 41 12 41 47] Swap0.swap _65 _66 _67 _68 _69 ([#"../CreuSAT/src/unit_prop.rs" 41 45 41 46] (1 : usize)));
    goto BB13
  }
  BB13 {
    _71 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _71) };
    _72 <- trail_2;
    _73 <-  * watches_3;
    _74 <- cref_4;
    _70 <- ([#"../CreuSAT/src/unit_prop.rs" 42 12 42 47] Swap0.swap _71 _72 _73 _74 ([#"../CreuSAT/src/unit_prop.rs" 42 42 42 43] (1 : usize)) ([#"../CreuSAT/src/unit_prop.rs" 42 45 42 46] (0 : usize)));
    goto BB14
  }
  BB14 {
    _76 <-  * f_1;
    assume { Resolve0.resolve f_1 };
    _77 <- trail_2;
    _78 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _78) };
    assume { Resolve1.resolve watches_3 };
    _79 <- cref_4;
    _80 <- j_5;
    _81 <- lit_7;
    _75 <- ([#"../CreuSAT/src/unit_prop.rs" 44 12 44 60] UpdateWatch0.update_watch _76 _77 _78 _79 _80 ([#"../CreuSAT/src/unit_prop.rs" 44 53 44 54] (0 : usize)) _81);
    goto BB15
  }
  BB15 {
    _40 <- ();
    goto BB16
  }
  BB16 {
    _0 <- ([#"../CreuSAT/src/unit_prop.rs" 46 15 46 19] true);
    goto BB18
  }
  BB17 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve watches_3 };
    _33 <- ();
    _0 <- ([#"../CreuSAT/src/unit_prop.rs" 48 11 48 16] false);
    goto BB18
  }
  BB18 {
    return _0
  }
  
end
module CreuSat_UnitProp_ExistsNewWatchableLit_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Stub as Unsat0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Stub as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel4
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel3
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Stub as ToWatchidxLogic0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val exists_new_watchable_lit [#"../CreuSAT/src/unit_prop.rs" 98 0 100 9] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : CreuSat_Trail_Trail_Type.t_trail) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (cref : usize) (j : usize) (lit : CreuSat_Lit_Lit_Type.t_lit) : bool
    requires {[#"../CreuSAT/src/unit_prop.rs" 83 0 83 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 84 0 84 38] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 85 0 85 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 86 11 86 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 87 11 87 59] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 88 11 88 64] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UIntSize.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 89 11 89 42] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 90 11 90 35] UIntSize.to_int cref < Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 91 11 91 40] Seq.length (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 92 0 92 65] not SatInner0.sat_inner (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) 0) (ShallowModel4.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 83 0 83 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 84 0 84 38] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 85 0 85 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 93 0 93 128] not result -> (forall m : int . 2 <= m /\ m < Seq.length (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) -> Unsat0.unsat (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) m) (CreuSat_Trail_Trail_Type.trail_assignments trail)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 94 0 94 67] not result -> ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref)) = ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int cref)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 95 10 95 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 96 10 96 49] Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 97 10 97 23] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_UnitProp_ExistsNewWatchableLit
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max2
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max2.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max2.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max2.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max2.mAX'
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max2.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max2.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max2.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel13 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Util_MaxLog as MaxLog0
  clone CreuSat_Util_MinLog as MinLog0
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max2.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel12 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel11 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel10 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max2.mAX',
    axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max2.mAX'
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max2.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max2.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max2.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max2.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max2.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max2.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause,
    val Max0.mAX' = Max2.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max2.mAX',
    axiom .
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max2.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel4.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max2.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_UnitProp_CheckAndMoveWatch_Interface as CheckAndMoveWatch0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    val Max0.mAX' = Max0.mAX',
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel4.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    function ShallowModel3.shallow_model = ShallowModel0.shallow_model,
    function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
    function ShallowModel4.shallow_model = ShallowModel1.shallow_model,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate Unsat0.unsat = Unsat0.unsat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max2.mAX'
  clone CreuSat_Util_Max_Interface as Max1 with
    function MaxLog0.max_log = MaxLog0.max_log
  clone CreuSat_Util_Min_Interface as Min0 with
    function MinLog0.min_log = MinLog0.min_log
  clone CreuSat_Formula_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len0 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause
  let rec cfg exists_new_watchable_lit [#"../CreuSAT/src/unit_prop.rs" 98 0 100 9] [@cfg:stackify] [@cfg:subregion_analysis] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : CreuSat_Trail_Trail_Type.t_trail) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (cref : usize) (j : usize) (lit : CreuSat_Lit_Lit_Type.t_lit) : bool
    requires {[#"../CreuSAT/src/unit_prop.rs" 83 0 83 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 84 0 84 38] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 85 0 85 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 86 11 86 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 87 11 87 59] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 88 11 88 64] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UIntSize.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 89 11 89 42] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 90 11 90 35] UIntSize.to_int cref < Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 91 11 91 40] Seq.length (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 92 0 92 65] not SatInner0.sat_inner (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) 0) (ShallowModel4.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 83 0 83 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 84 0 84 38] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 85 0 85 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 93 0 93 128] not result -> (forall m : int . 2 <= m /\ m < Seq.length (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) -> Unsat0.unsat (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) m) (CreuSat_Trail_Trail_Type.trail_assignments trail)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 94 0 94 67] not result -> ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref)) = ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int cref)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 95 10 95 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 96 10 96 49] Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) = Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 97 10 97 23] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var trail_2 : CreuSat_Trail_Trail_Type.t_trail;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var cref_4 : usize;
  var j_5 : usize;
  var lit_6 : CreuSat_Lit_Lit_Type.t_lit;
  var old_w_25 : Snapshot.Snapshot_ty (borrowed (CreuSat_Watches_Watches_Type.t_watches));
  var _27 : ();
  var old_f_28 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _30 : ();
  var clause_len_31 : usize;
  var _32 : CreuSat_Clause_Clause_Type.t_clause;
  var _33 : CreuSat_Clause_Clause_Type.t_clause;
  var _34 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var _35 : usize;
  var init_search_36 : usize;
  var _37 : usize;
  var _38 : usize;
  var _39 : CreuSat_Clause_Clause_Type.t_clause;
  var _40 : CreuSat_Formula_Formula_Type.t_formula;
  var _41 : usize;
  var _42 : usize;
  var search_43 : usize;
  var _44 : ();
  var _50 : ();
  var _51 : bool;
  var _52 : usize;
  var _53 : usize;
  var _54 : ();
  var _55 : bool;
  var _56 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _57 : CreuSat_Trail_Trail_Type.t_trail;
  var _58 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _59 : usize;
  var _60 : usize;
  var _61 : usize;
  var _62 : CreuSat_Lit_Lit_Type.t_lit;
  var _63 : ();
  var old_f2_64 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _66 : ();
  var _67 : usize;
  var _68 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _69 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global));
  var _70 : usize;
  var _71 : ();
  var _73 : ();
  var _75 : ();
  var _76 : ();
  var _77 : ();
  var _78 : ();
  var _85 : bool;
  var _86 : usize;
  var _87 : usize;
  var _88 : ();
  var _89 : bool;
  var _90 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _91 : CreuSat_Trail_Trail_Type.t_trail;
  var _92 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _93 : usize;
  var _94 : usize;
  var _95 : usize;
  var _96 : CreuSat_Lit_Lit_Type.t_lit;
  var _97 : ();
  var old_f2_98 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _100 : ();
  var _101 : usize;
  var _102 : borrowed (CreuSat_Clause_Clause_Type.t_clause);
  var _103 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global));
  var _104 : usize;
  var _105 : ();
  var _107 : ();
  var _109 : ();
  var _110 : ();
  var _111 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    j_5 <- j;
    lit_6 <- lit;
    goto BB0
  }
  BB0 {
    _27 <- ();
    old_w_25 <- ([#"../CreuSAT/src/unit_prop.rs" 101 37 101 55] Snapshot.new watches_3);
    goto BB1
  }
  BB1 {
    _30 <- ();
    old_f_28 <- ([#"../CreuSAT/src/unit_prop.rs" 102 37 102 49] Snapshot.new f_1);
    goto BB2
  }
  BB2 {
    _34 <- CreuSat_Formula_Formula_Type.formula_clauses ( * f_1);
    _35 <- cref_4;
    _33 <- ([#"../CreuSAT/src/unit_prop.rs" 103 28 103 43] Index0.index _34 _35);
    goto BB3
  }
  BB3 {
    _32 <- _33;
    clause_len_31 <- ([#"../CreuSAT/src/unit_prop.rs" 103 28 103 49] Len0.len _32);
    goto BB4
  }
  BB4 {
    _40 <-  * f_1;
    _41 <- cref_4;
    _39 <- ([#"../CreuSAT/src/unit_prop.rs" 104 42 104 49] Index1.index _40 _41);
    goto BB5
  }
  BB5 {
    _38 <- CreuSat_Clause_Clause_Type.clause_search _39;
    _42 <- clause_len_31;
    _37 <- ([#"../CreuSAT/src/unit_prop.rs" 104 32 104 69] Min0.min _38 _42);
    goto BB6
  }
  BB6 {
    init_search_36 <- ([#"../CreuSAT/src/unit_prop.rs" 104 22 104 73] Max1.max _37 ([#"../CreuSAT/src/unit_prop.rs" 104 71 104 72] (2 : usize)));
    goto BB7
  }
  BB7 {
    search_43 <- init_search_36;
    goto BB8
  }
  BB8 {
    invariant { [#"../CreuSAT/src/unit_prop.rs" 106 16 106 28] UIntSize.to_int search_43 >= 2 };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 107 16 107 27] f_1 = Snapshot.inner old_f_28 };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 108 16 108 33] watches_3 = Snapshot.inner old_w_25 };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 106 4 106 30] forall m : int . UIntSize.to_int init_search_36 <= m /\ m < UIntSize.to_int search_43 -> Unsat0.unsat (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) m) (CreuSat_Trail_Trail_Type.trail_assignments trail_2) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 106 4 106 30] not SatInner0.sat_inner (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) 0) (ShallowModel4.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail_2)) };
    _52 <- search_43;
    _53 <- clause_len_31;
    _51 <- ([#"../CreuSAT/src/unit_prop.rs" 112 10 112 29] _52 < _53);
    switch (_51)
      | False -> goto BB15
      | True -> goto BB9
      end
  }
  BB9 {
    _56 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _56) };
    _57 <- trail_2;
    _58 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _58) };
    _59 <- cref_4;
    _60 <- j_5;
    _61 <- search_43;
    _62 <- lit_6;
    _55 <- ([#"../CreuSAT/src/unit_prop.rs" 113 11 113 72] CheckAndMoveWatch0.check_and_move_watch _56 _57 _58 _59 _60 _61 _62);
    goto BB10
  }
  BB10 {
    switch (_55)
      | False -> goto BB14
      | True -> goto BB11
      end
  }
  BB11 {
    assume { Resolve0.resolve watches_3 };
    _66 <- ();
    old_f2_64 <- ([#"../CreuSAT/src/unit_prop.rs" 114 46 114 58] Snapshot.new f_1);
    goto BB12
  }
  BB12 {
    _67 <- search_43;
    _69 <- borrow_mut (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1));
    f_1 <- { f_1 with current = (let CreuSat_Formula_Formula_Type.C_Formula a b =  * f_1 in CreuSat_Formula_Formula_Type.C_Formula ( ^ _69) b) };
    assume { Resolve1.resolve f_1 };
    _70 <- cref_4;
    _68 <- ([#"../CreuSAT/src/unit_prop.rs" 115 12 115 27] IndexMut0.index_mut _69 _70);
    goto BB13
  }
  BB13 {
    _68 <- { _68 with current = (let CreuSat_Clause_Clause_Type.C_Clause a b c d =  * _68 in CreuSat_Clause_Clause_Type.C_Clause a b _67 d) };
    _67 <- any usize;
    assume { Resolve2.resolve _68 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 116 12 116 122] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) -> ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) j) = ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * Snapshot.inner old_f2_64))) j) };
    _71 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 117 26 117 52] Equisat0.equisat ( * Snapshot.inner old_f2_64) ( * f_1) };
    _73 <- ();
    _0 <- ([#"../CreuSAT/src/unit_prop.rs" 119 19 119 23] true);
    goto BB24
  }
  BB14 {
    _54 <- ();
    search_43 <- ([#"../CreuSAT/src/unit_prop.rs" 121 8 121 19] search_43 + ([#"../CreuSAT/src/unit_prop.rs" 121 18 121 19] (1 : usize)));
    _50 <- ();
    goto BB8
  }
  BB15 {
    _44 <- ();
    search_43 <- ([#"../CreuSAT/src/unit_prop.rs" 123 13 123 14] (2 : usize));
    goto BB16
  }
  BB16 {
    invariant { [#"../CreuSAT/src/unit_prop.rs" 124 16 124 54] 2 <= UIntSize.to_int search_43 /\ UIntSize.to_int search_43 <= UIntSize.to_int clause_len_31 };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 125 16 125 27] f_1 = Snapshot.inner old_f_28 };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 126 16 126 33] watches_3 = Snapshot.inner old_w_25 };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 124 4 124 56] forall m : int . UIntSize.to_int init_search_36 <= m /\ m < UIntSize.to_int clause_len_31 -> Unsat0.unsat (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) m) (CreuSat_Trail_Trail_Type.trail_assignments trail_2) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 124 4 124 56] forall m : int . 2 <= m /\ m < UIntSize.to_int search_43 -> Unsat0.unsat (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) m) (CreuSat_Trail_Trail_Type.trail_assignments trail_2) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 124 4 124 56] not SatInner0.sat_inner (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) 0) (ShallowModel4.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments trail_2)) };
    _86 <- search_43;
    _87 <- init_search_36;
    _85 <- ([#"../CreuSAT/src/unit_prop.rs" 131 10 131 30] _86 < _87);
    switch (_85)
      | False -> goto BB23
      | True -> goto BB17
      end
  }
  BB17 {
    _90 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _90) };
    _91 <- trail_2;
    _92 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _92) };
    _93 <- cref_4;
    _94 <- j_5;
    _95 <- search_43;
    _96 <- lit_6;
    _89 <- ([#"../CreuSAT/src/unit_prop.rs" 132 11 132 72] CheckAndMoveWatch0.check_and_move_watch _90 _91 _92 _93 _94 _95 _96);
    goto BB18
  }
  BB18 {
    switch (_89)
      | False -> goto BB22
      | True -> goto BB19
      end
  }
  BB19 {
    assume { Resolve0.resolve watches_3 };
    _100 <- ();
    old_f2_98 <- ([#"../CreuSAT/src/unit_prop.rs" 133 46 133 58] Snapshot.new f_1);
    goto BB20
  }
  BB20 {
    _101 <- search_43;
    _103 <- borrow_mut (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1));
    f_1 <- { f_1 with current = (let CreuSat_Formula_Formula_Type.C_Formula a b =  * f_1 in CreuSat_Formula_Formula_Type.C_Formula ( ^ _103) b) };
    assume { Resolve1.resolve f_1 };
    _104 <- cref_4;
    _102 <- ([#"../CreuSAT/src/unit_prop.rs" 134 12 134 27] IndexMut0.index_mut _103 _104);
    goto BB21
  }
  BB21 {
    _102 <- { _102 with current = (let CreuSat_Clause_Clause_Type.C_Clause a b c d =  * _102 in CreuSat_Clause_Clause_Type.C_Clause a b _101 d) };
    _101 <- any usize;
    assume { Resolve2.resolve _102 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 135 12 135 122] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) -> ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) j) = ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * Snapshot.inner old_f2_98))) j) };
    _105 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 136 26 136 52] Equisat0.equisat ( * Snapshot.inner old_f2_98) ( * f_1) };
    _107 <- ();
    _0 <- ([#"../CreuSAT/src/unit_prop.rs" 138 19 138 23] true);
    goto BB24
  }
  BB22 {
    _88 <- ();
    search_43 <- ([#"../CreuSAT/src/unit_prop.rs" 140 8 140 19] search_43 + ([#"../CreuSAT/src/unit_prop.rs" 140 18 140 19] (1 : usize)));
    _50 <- ();
    goto BB16
  }
  BB23 {
    assume { Resolve1.resolve f_1 };
    assume { Resolve0.resolve watches_3 };
    _78 <- ();
    _0 <- ([#"../CreuSAT/src/unit_prop.rs" 142 4 142 9] false);
    goto BB25
  }
  BB24 {
    goto BB25
  }
  BB25 {
    return _0
  }
  
end
module CreuSat_UnitProp_PropagateLitWithRegardToClause_Interface
  use prelude.Borrow
  use seq.Seq
  use prelude.Int
  use prelude.UIntSize
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Stub as Unsat1
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Stub as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel4 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use Core_Result_Result_Type as Core_Result_Result_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel_Stub as ShallowModel3
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone Core_Usize_Max_Stub as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Stub as ToWatchidxLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val propagate_lit_with_regard_to_clause [#"../CreuSAT/src/unit_prop.rs" 163 0 165 24] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (cref : usize) (lit : CreuSat_Lit_Lit_Type.t_lit) (j : usize) : Core_Result_Result_Type.t_result bool usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 146 0 146 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 147 0 147 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 148 0 148 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 149 11 149 59] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 150 11 150 64] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UIntSize.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 151 11 151 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 152 11 152 42] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 153 11 153 35] UIntSize.to_int cref < Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 154 11 154 40] Seq.length (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) >= 2}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 146 0 146 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 147 0 147 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 148 0 148 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 155 10 155 47] CreuSat_Trail_Trail_Type.trail_decisions ( ^ trail) = CreuSat_Trail_Trail_Type.trail_decisions ( * trail) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 156 10 160 1] match (result) with
      | Core_Result_Result_Type.C_Ok (True) -> true
      | Core_Result_Result_Type.C_Ok (False) -> Seq.length (ShallowModel4.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ trail))) = Seq.length (ShallowModel4.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * trail)))
      | Core_Result_Result_Type.C_Err n -> UIntSize.to_int n < Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int n)) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 161 10 161 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 162 10 162 23] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_UnitProp_PropagateLitWithRegardToClause
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Snapshot
  use seq.Seq
  use seq.Permut
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_Logic_Unset as Unset1
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset1.unset
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner2 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel16 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue2 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds2 with
    type t = CreuSat_Clause_Clause_Type.t_clause
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel15 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner as PostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail as IdxInTrail0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner as UnitInner0 with
    predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel8 with
    function ShallowModel0.shallow_model = ShallowModel16.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat2 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel14 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel13 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel12 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel11 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel10 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant6.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate Invariant0.invariant' = Invariant6.invariant',
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Snapshot_Impl1_ShallowModel as ShallowModel5 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel8.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_UnitProp_Swap_Interface as Swap0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel8.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel15.shallow_model,
    predicate InBounds0.in_bounds = InBounds2.in_bounds,
    predicate HasValue0.has_value = HasValue2.has_value,
    type Output0.output = CreuSat_Clause_Clause_Type.t_clause
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit as ClausePostWithRegardsToLit0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl1_PostUnit as PostUnit0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate PostUnitInner0.post_unit_inner = PostUnitInner0.post_unit_inner
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Trail_Impl0_EnqAssignment_Interface as EnqAssignment0 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    predicate Invariant1.invariant' = Invariant0.invariant',
    predicate Invariant2.invariant' = Invariant4.invariant',
    predicate Invariant3.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate Unset0.unset = Unset0.unset,
    predicate Unsat0.unsat = Unsat2.unsat,
    predicate IdxInTrail0.idx_in_trail = IdxInTrail0.idx_in_trail,
    function ShallowModel2.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Unset1.unset = Unset1.unset,
    function ShallowModel3.shallow_model = ShallowModel4.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate Sat0.sat = Sat0.sat,
    predicate ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit = ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Unit as Unit0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate UnitInner0.unit_inner = UnitInner0.unit_inner
  clone CreuSat_Lit_Impl2_LitUnset_Interface as LitUnset0 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone Core_Usize_Max as Max0
  clone CreuSat_UnitProp_ExistsNewWatchableLit_Interface as ExistsNewWatchableLit0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    val Max0.mAX' = Max0.mAX',
    function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel4.shallow_model = ShallowModel8.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate Unsat0.unsat = Unsat2.unsat,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve4 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel14.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere1.resolve_elswhere,
    type Output0.output = CreuSat_Watches_Watcher_Type.t_watcher,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve3 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Lit_Impl2_ToWatchidx_Interface as ToWatchidx0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX',
    function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone CreuSat_Lit_Impl2_LitSat_Interface as LitSat0 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Sat0.sat = Sat0.sat
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use Core_Result_Result_Type as Core_Result_Result_Type
  let rec cfg propagate_lit_with_regard_to_clause [#"../CreuSAT/src/unit_prop.rs" 163 0 165 24] [@cfg:stackify] [@cfg:subregion_analysis] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (cref : usize) (lit : CreuSat_Lit_Lit_Type.t_lit) (j : usize) : Core_Result_Result_Type.t_result bool usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 146 0 146 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 147 0 147 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 148 0 148 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 149 11 149 59] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 150 11 150 64] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UIntSize.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 151 11 151 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 152 11 152 42] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 153 11 153 35] UIntSize.to_int cref < Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 154 11 154 40] Seq.length (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f))) (UIntSize.to_int cref))) >= 2}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 146 0 146 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 147 0 147 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 148 0 148 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 155 10 155 47] CreuSat_Trail_Trail_Type.trail_decisions ( ^ trail) = CreuSat_Trail_Trail_Type.trail_decisions ( * trail) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 156 10 160 1] match (result) with
      | Core_Result_Result_Type.C_Ok (True) -> true
      | Core_Result_Result_Type.C_Ok (False) -> Seq.length (ShallowModel4.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ trail))) = Seq.length (ShallowModel4.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * trail)))
      | Core_Result_Result_Type.C_Err n -> UIntSize.to_int n < Seq.length (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int n)) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 161 10 161 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 162 10 162 23] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Result_Result_Type.t_result bool usize;
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var trail_2 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var cref_4 : usize;
  var lit_5 : CreuSat_Lit_Lit_Type.t_lit;
  var j_6 : usize;
  var old_w_23 : Snapshot.Snapshot_ty (borrowed (CreuSat_Watches_Watches_Type.t_watches));
  var _25 : ();
  var clause_26 : CreuSat_Clause_Clause_Type.t_clause;
  var _27 : CreuSat_Clause_Clause_Type.t_clause;
  var _28 : CreuSat_Formula_Formula_Type.t_formula;
  var _29 : usize;
  var first_lit_30 : CreuSat_Lit_Lit_Type.t_lit;
  var _31 : CreuSat_Lit_Lit_Type.t_lit;
  var _32 : CreuSat_Clause_Clause_Type.t_clause;
  var _33 : ();
  var _34 : bool;
  var _35 : CreuSat_Lit_Lit_Type.t_lit;
  var _36 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _37 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _38 : ();
  var _39 : ();
  var _41 : ();
  var _43 : CreuSat_Lit_Lit_Type.t_lit;
  var _44 : borrowed (CreuSat_Watches_Watcher_Type.t_watcher);
  var _45 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _46 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _47 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _48 : usize;
  var _49 : CreuSat_Lit_Lit_Type.t_lit;
  var _50 : usize;
  var second_lit_51 : CreuSat_Lit_Lit_Type.t_lit;
  var _52 : CreuSat_Lit_Lit_Type.t_lit;
  var _53 : CreuSat_Clause_Clause_Type.t_clause;
  var _54 : ();
  var _55 : bool;
  var _56 : CreuSat_Lit_Lit_Type.t_lit;
  var _57 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _58 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _59 : ();
  var _60 : ();
  var _62 : ();
  var _64 : CreuSat_Lit_Lit_Type.t_lit;
  var _65 : borrowed (CreuSat_Watches_Watcher_Type.t_watcher);
  var _66 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _67 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _68 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _69 : usize;
  var _70 : CreuSat_Lit_Lit_Type.t_lit;
  var _71 : usize;
  var _72 : ();
  var _73 : bool;
  var _74 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _75 : CreuSat_Trail_Trail_Type.t_trail;
  var _76 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _77 : usize;
  var _78 : usize;
  var _79 : CreuSat_Lit_Lit_Type.t_lit;
  var _80 : ();
  var _81 : ();
  var _83 : bool;
  var _84 : CreuSat_Lit_Lit_Type.t_lit;
  var _85 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _86 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _87 : ();
  var _88 : ();
  var _89 : bool;
  var _90 : CreuSat_Lit_Lit_Type.t_lit;
  var _91 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _92 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _93 : ();
  var _94 : ();
  var _96 : ();
  var _98 : ();
  var step_100 : CreuSat_Trail_Step_Type.t_step;
  var _101 : CreuSat_Lit_Lit_Type.t_lit;
  var _102 : usize;
  var _103 : CreuSat_Trail_Trail_Type.t_trail;
  var _104 : CreuSat_Trail_Reason_Type.t_reason;
  var _105 : usize;
  var _106 : ();
  var _107 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _108 : CreuSat_Trail_Step_Type.t_step;
  var _109 : CreuSat_Formula_Formula_Type.t_formula;
  var _110 : ();
  var _112 : ();
  var _114 : bool;
  var _115 : CreuSat_Lit_Lit_Type.t_lit;
  var _116 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _117 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _118 : ();
  var step_119 : CreuSat_Trail_Step_Type.t_step;
  var _120 : CreuSat_Lit_Lit_Type.t_lit;
  var _121 : usize;
  var _122 : CreuSat_Trail_Trail_Type.t_trail;
  var _123 : CreuSat_Trail_Reason_Type.t_reason;
  var _124 : usize;
  var old_c_125 : Snapshot.Snapshot_ty (CreuSat_Clause_Clause_Type.t_clause);
  var _128 : ();
  var _129 : ();
  var _131 : ();
  var _132 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _133 : CreuSat_Trail_Trail_Type.t_trail;
  var _134 : CreuSat_Watches_Watches_Type.t_watches;
  var _135 : usize;
  var _136 : ();
  var _138 : ();
  var _140 : ();
  var _141 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _142 : CreuSat_Trail_Step_Type.t_step;
  var _143 : CreuSat_Formula_Formula_Type.t_formula;
  var _144 : ();
  var _146 : ();
  var _148 : ();
  var _149 : usize;
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    lit_5 <- lit;
    j_6 <- j;
    goto BB0
  }
  BB0 {
    _25 <- ();
    old_w_23 <- ([#"../CreuSAT/src/unit_prop.rs" 166 37 166 55] Snapshot.new watches_3);
    goto BB1
  }
  BB1 {
    _28 <-  * f_1;
    _29 <- cref_4;
    _27 <- ([#"../CreuSAT/src/unit_prop.rs" 167 18 167 25] Index0.index _28 _29);
    goto BB2
  }
  BB2 {
    clause_26 <- _27;
    _32 <- clause_26;
    _31 <- ([#"../CreuSAT/src/unit_prop.rs" 168 20 168 29] Index1.index _32 ([#"../CreuSAT/src/unit_prop.rs" 168 27 168 28] (0 : usize)));
    goto BB3
  }
  BB3 {
    first_lit_30 <- _31;
    _35 <- first_lit_30;
    _37 <- CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2);
    _36 <- _37;
    _34 <- ([#"../CreuSAT/src/unit_prop.rs" 169 7 169 44] LitSat0.lit_sat _35 _36);
    goto BB4
  }
  BB4 {
    switch (_34)
      | False -> goto BB9
      | True -> goto BB5
      end
  }
  BB5 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 171 22 171 48]  ^ watches_3 =  ^ Snapshot.inner old_w_23 };
    _39 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 172 22 172 59] IndexLogic0.index_logic first_lit_30 < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f_1)) };
    _41 <- ();
    _43 <- first_lit_30;
    _47 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * watches_3 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _47)) };
    assume { Resolve2.resolve watches_3 };
    _49 <- lit_5;
    _48 <- ([#"../CreuSAT/src/unit_prop.rs" 173 24 173 41] ToWatchidx0.to_watchidx _49);
    goto BB6
  }
  BB6 {
    _46 <- ([#"../CreuSAT/src/unit_prop.rs" 173 8 173 42] IndexMut0.index_mut _47 _48);
    goto BB7
  }
  BB7 {
    _45 <- borrow_mut ( * _46);
    _46 <- { _46 with current = ( ^ _45) };
    assume { Resolve3.resolve _46 };
    _50 <- j_6;
    _44 <- ([#"../CreuSAT/src/unit_prop.rs" 173 8 173 45] IndexMut1.index_mut _45 _50);
    goto BB8
  }
  BB8 {
    _44 <- { _44 with current = (let CreuSat_Watches_Watcher_Type.C_Watcher a b =  * _44 in CreuSat_Watches_Watcher_Type.C_Watcher a _43) };
    _43 <- any CreuSat_Lit_Lit_Type.t_lit;
    assume { Resolve4.resolve _44 };
    _0 <- Core_Result_Result_Type.C_Ok ([#"../CreuSAT/src/unit_prop.rs" 174 18 174 22] true);
    goto BB38
  }
  BB9 {
    _33 <- ();
    _53 <- clause_26;
    _52 <- ([#"../CreuSAT/src/unit_prop.rs" 176 21 176 30] Index1.index _53 ([#"../CreuSAT/src/unit_prop.rs" 176 28 176 29] (1 : usize)));
    goto BB10
  }
  BB10 {
    second_lit_51 <- _52;
    _56 <- second_lit_51;
    _58 <- CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2);
    _57 <- _58;
    _55 <- ([#"../CreuSAT/src/unit_prop.rs" 177 7 177 45] LitSat0.lit_sat _56 _57);
    goto BB11
  }
  BB11 {
    switch (_55)
      | False -> goto BB16
      | True -> goto BB12
      end
  }
  BB12 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 179 22 179 48]  ^ watches_3 =  ^ Snapshot.inner old_w_23 };
    _60 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 180 22 180 60] IndexLogic0.index_logic second_lit_51 < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f_1)) };
    _62 <- ();
    _64 <- second_lit_51;
    _68 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * watches_3 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _68)) };
    assume { Resolve2.resolve watches_3 };
    _70 <- lit_5;
    _69 <- ([#"../CreuSAT/src/unit_prop.rs" 181 24 181 41] ToWatchidx0.to_watchidx _70);
    goto BB13
  }
  BB13 {
    _67 <- ([#"../CreuSAT/src/unit_prop.rs" 181 8 181 42] IndexMut0.index_mut _68 _69);
    goto BB14
  }
  BB14 {
    _66 <- borrow_mut ( * _67);
    _67 <- { _67 with current = ( ^ _66) };
    assume { Resolve3.resolve _67 };
    _71 <- j_6;
    _65 <- ([#"../CreuSAT/src/unit_prop.rs" 181 8 181 45] IndexMut1.index_mut _66 _71);
    goto BB15
  }
  BB15 {
    _65 <- { _65 with current = (let CreuSat_Watches_Watcher_Type.C_Watcher a b =  * _65 in CreuSat_Watches_Watcher_Type.C_Watcher a _64) };
    _64 <- any CreuSat_Lit_Lit_Type.t_lit;
    assume { Resolve4.resolve _65 };
    _0 <- Core_Result_Result_Type.C_Ok ([#"../CreuSAT/src/unit_prop.rs" 182 18 182 22] true);
    goto BB37
  }
  BB16 {
    _54 <- ();
    _74 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _74) };
    _75 <-  * trail_2;
    _76 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _76) };
    _77 <- cref_4;
    _78 <- j_6;
    _79 <- lit_5;
    _73 <- ([#"../CreuSAT/src/unit_prop.rs" 185 7 185 64] ExistsNewWatchableLit0.exists_new_watchable_lit _74 _75 _76 _77 _78 _79);
    goto BB17
  }
  BB17 {
    switch (_73)
      | False -> goto BB19
      | True -> goto BB18
      end
  }
  BB18 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    _0 <- Core_Result_Result_Type.C_Ok ([#"../CreuSAT/src/unit_prop.rs" 186 18 186 23] false);
    goto BB37
  }
  BB19 {
    _72 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 189 4 189 161] Unsat1.unsat (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4)) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) \/ Unset0.unset (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) 0) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) \/ Unset0.unset (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) 1) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) };
    _81 <- ();
    _84 <- first_lit_30;
    _86 <- CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2);
    _85 <- _86;
    _83 <- ([#"../CreuSAT/src/unit_prop.rs" 190 7 190 46] LitUnset0.lit_unset _84 _85);
    goto BB20
  }
  BB20 {
    switch (_83)
      | False -> goto BB27
      | True -> goto BB21
      end
  }
  BB21 {
    assume { Resolve2.resolve watches_3 };
    _90 <- second_lit_51;
    _92 <- CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2);
    _91 <- _92;
    _89 <- ([#"../CreuSAT/src/unit_prop.rs" 193 11 193 51] LitUnset0.lit_unset _90 _91);
    goto BB22
  }
  BB22 {
    switch (_89)
      | False -> goto BB24
      | True -> goto BB23
      end
  }
  BB23 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    _0 <- Core_Result_Result_Type.C_Ok ([#"../CreuSAT/src/unit_prop.rs" 194 22 194 26] true);
    goto BB36
  }
  BB24 {
    _88 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 196 22 196 41] Invariant1.invariant' ( * trail_2) ( * f_1) };
    _94 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 197 8 197 66] not Unsat1.unsat (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4)) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) };
    _96 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 198 8 198 64] Unit0.unit (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4)) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) };
    _98 <- ();
    _101 <- first_lit_30;
    _103 <-  * trail_2;
    _102 <- ([#"../CreuSAT/src/unit_prop.rs" 202 28 202 50] DecisionLevel0.decision_level _103);
    goto BB25
  }
  BB25 {
    _105 <- cref_4;
    _104 <- CreuSat_Trail_Reason_Type.C_Long _105;
    step_100 <- CreuSat_Trail_Step_Type.C_Step _101 _102 _104;
    _107 <- borrow_mut ( * trail_2);
    trail_2 <- { trail_2 with current = ( ^ _107) };
    assume { Resolve1.resolve trail_2 };
    _108 <- step_100;
    step_100 <- any CreuSat_Trail_Step_Type.t_step;
    _109 <-  * f_1;
    assume { Resolve0.resolve f_1 };
    _106 <- ([#"../CreuSAT/src/unit_prop.rs" 206 8 206 37] EnqAssignment0.enq_assignment _107 _108 _109);
    goto BB26
  }
  BB26 {
    assert { [#"../CreuSAT/src/unit_prop.rs" 207 8 207 77] PostUnit0.post_unit (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4)) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) /\ true };
    _110 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 208 22 208 102] ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4)) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) first_lit_30 };
    _112 <- ();
    _0 <- Core_Result_Result_Type.C_Ok ([#"../CreuSAT/src/unit_prop.rs" 209 18 209 22] true);
    goto BB36
  }
  BB27 {
    _115 <- second_lit_51;
    _117 <- CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2);
    _116 <- _117;
    _114 <- ([#"../CreuSAT/src/unit_prop.rs" 210 14 210 54] LitUnset0.lit_unset _115 _116);
    goto BB28
  }
  BB28 {
    switch (_114)
      | False -> goto BB34
      | True -> goto BB29
      end
  }
  BB29 {
    _120 <- second_lit_51;
    _122 <-  * trail_2;
    _121 <- ([#"../CreuSAT/src/unit_prop.rs" 211 59 211 81] DecisionLevel0.decision_level _122);
    goto BB30
  }
  BB30 {
    _124 <- cref_4;
    _123 <- CreuSat_Trail_Reason_Type.C_Long _124;
    step_119 <- CreuSat_Trail_Step_Type.C_Step _120 _121 _123;
    _128 <- ();
    old_c_125 <- ([#"../CreuSAT/src/unit_prop.rs" 212 35 212 61] Snapshot.new (Index2.index (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1)) cref_4));
    goto BB31
  }
  BB31 {
    assert { [#"../CreuSAT/src/unit_prop.rs" 213 8 213 69] Unset0.unset (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) 1) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) };
    _129 <- ();
    _132 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _132) };
    _133 <-  * trail_2;
    _134 <-  * watches_3;
    assume { Resolve2.resolve watches_3 };
    _135 <- cref_4;
    _131 <- ([#"../CreuSAT/src/unit_prop.rs" 214 8 214 43] Swap0.swap _132 _133 _134 _135 ([#"../CreuSAT/src/unit_prop.rs" 214 38 214 39] (0 : usize)) ([#"../CreuSAT/src/unit_prop.rs" 214 41 214 42] (1 : usize)));
    goto BB32
  }
  BB32 {
    assert { [#"../CreuSAT/src/unit_prop.rs" 215 8 215 64] Permut.exchange (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) (ShallowModel5.shallow_model old_c_125) 0 1 };
    _136 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 216 8 216 69] Unset0.unset (Seq.get (ShallowModel3.shallow_model (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4))) 0) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) };
    _138 <- ();
    _141 <- borrow_mut ( * trail_2);
    trail_2 <- { trail_2 with current = ( ^ _141) };
    assume { Resolve1.resolve trail_2 };
    _142 <- step_119;
    step_119 <- any CreuSat_Trail_Step_Type.t_step;
    _143 <-  * f_1;
    assume { Resolve0.resolve f_1 };
    _140 <- ([#"../CreuSAT/src/unit_prop.rs" 217 8 217 37] EnqAssignment0.enq_assignment _141 _142 _143);
    goto BB33
  }
  BB33 {
    assert { [#"../CreuSAT/src/unit_prop.rs" 218 8 218 69] PostUnit0.post_unit (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4)) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) };
    _144 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 219 22 219 105] ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (ShallowModel2.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( * f_1))) (UIntSize.to_int cref_4)) (CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2)) second_lit_51 };
    _146 <- ();
    _0 <- Core_Result_Result_Type.C_Ok ([#"../CreuSAT/src/unit_prop.rs" 220 18 220 22] true);
    goto BB35
  }
  BB34 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    _149 <- cref_4;
    _0 <- Core_Result_Result_Type.C_Err _149;
    goto BB35
  }
  BB35 {
    goto BB36
  }
  BB36 {
    goto BB37
  }
  BB37 {
    goto BB38
  }
  BB38 {
    return _0
  }
  
end
module CreuSat_UnitProp_PropagateLiteral_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Stub as Unsat1
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Stub as Unsat0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use Core_Result_Result_Type as Core_Result_Result_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val propagate_literal [#"../CreuSAT/src/unit_prop.rs" 238 0 238 110] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (lit : CreuSat_Lit_Lit_Type.t_lit) : Core_Result_Result_Type.t_result () usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 227 0 227 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 228 0 228 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 229 0 229 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 230 11 230 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 231 11 231 42] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 227 0 227 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 228 0 228 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 229 0 229 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 232 10 235 1] match (result) with
      | Core_Result_Result_Type.C_Ok () -> true
      | Core_Result_Result_Type.C_Err n -> UIntSize.to_int n < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int n)) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 236 10 236 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 237 10 237 23] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_UnitProp_PropagateLiteral
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Snapshot
  use prelude.IntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel10 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner2 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel11 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel8 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel7 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel10.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel10.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use Core_Result_Result_Type as Core_Result_Result_Type
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel5.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_UnitProp_PropagateLitWithRegardToClause_Interface as PropagateLitWithRegardToClause0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max0.mAX',
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function ShallowModel2.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel10.shallow_model,
    function ShallowModel4.shallow_model = ShallowModel4.shallow_model,
    predicate Unsat0.unsat = Unsat0.unsat,
    predicate Unsat1.unsat = Unsat1.unsat,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Lit_Impl2_LitSat_Interface as LitSat0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Sat0.sat = Sat0.sat
  clone Alloc_Vec_Impl13_Index_Interface as Index1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate InBounds0.in_bounds = InBounds1.in_bounds,
    predicate HasValue0.has_value = HasValue1.has_value,
    type Output0.output = CreuSat_Watches_Watcher_Type.t_watcher
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreuSat_Lit_Impl2_ToWatchidx_Interface as ToWatchidx0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX',
    function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  let rec cfg propagate_literal [#"../CreuSAT/src/unit_prop.rs" 238 0 238 110] [@cfg:stackify] [@cfg:subregion_analysis] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (lit : CreuSat_Lit_Lit_Type.t_lit) : Core_Result_Result_Type.t_result () usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 227 0 227 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 228 0 228 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 229 0 229 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 230 11 230 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 231 11 231 42] IndexLogic0.index_logic lit < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 227 0 227 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 228 0 228 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 229 0 229 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 232 10 235 1] match (result) with
      | Core_Result_Result_Type.C_Ok () -> true
      | Core_Result_Result_Type.C_Err n -> UIntSize.to_int n < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int n)) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 236 10 236 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 237 10 237 23] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Result_Result_Type.t_result () usize;
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var trail_2 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var lit_4 : CreuSat_Lit_Lit_Type.t_lit;
  var j_16 : usize;
  var watchidx_17 : usize;
  var _18 : CreuSat_Lit_Lit_Type.t_lit;
  var _19 : ();
  var _21 : ();
  var old_trail_23 : Snapshot.Snapshot_ty (borrowed (CreuSat_Trail_Trail_Type.t_trail));
  var _25 : ();
  var old_f_26 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _28 : ();
  var old_w_29 : Snapshot.Snapshot_ty (borrowed (CreuSat_Watches_Watches_Type.t_watches));
  var _31 : ();
  var _32 : ();
  var _40 : ();
  var _41 : bool;
  var _42 : usize;
  var _43 : usize;
  var _44 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _45 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _46 : Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global);
  var _47 : usize;
  var curr_watch_48 : CreuSat_Watches_Watcher_Type.t_watcher;
  var _49 : CreuSat_Watches_Watcher_Type.t_watcher;
  var _50 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _51 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _52 : Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global);
  var _53 : usize;
  var _54 : usize;
  var _55 : bool;
  var _56 : CreuSat_Lit_Lit_Type.t_lit;
  var _57 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _58 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var cref_59 : usize;
  var _60 : Core_Result_Result_Type.t_result bool usize;
  var _61 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _62 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _63 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _64 : usize;
  var _65 : CreuSat_Lit_Lit_Type.t_lit;
  var _66 : usize;
  var _67 : isize;
  var cref_68 : usize;
  var _69 : ();
  var _70 : usize;
  var _71 : ();
  var _72 : ();
  var _73 : ();
  var _74 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    lit_4 <- lit;
    goto BB0
  }
  BB0 {
    j_16 <- ([#"../CreuSAT/src/unit_prop.rs" 239 16 239 17] (0 : usize));
    _18 <- lit_4;
    watchidx_17 <- ([#"../CreuSAT/src/unit_prop.rs" 240 19 240 36] ToWatchidx0.to_watchidx _18);
    goto BB1
  }
  BB1 {
    assert { [#"../CreuSAT/src/unit_prop.rs" 241 18 241 59] Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) = 2 * UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f_1)) };
    _19 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 242 18 242 52] Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) > UIntSize.to_int watchidx_17 };
    _21 <- ();
    _25 <- ();
    old_trail_23 <- ([#"../CreuSAT/src/unit_prop.rs" 243 39 243 55] Snapshot.new trail_2);
    goto BB2
  }
  BB2 {
    _28 <- ();
    old_f_26 <- ([#"../CreuSAT/src/unit_prop.rs" 244 37 244 49] Snapshot.new f_1);
    goto BB3
  }
  BB3 {
    _31 <- ();
    old_w_29 <- ([#"../CreuSAT/src/unit_prop.rs" 245 37 245 55] Snapshot.new watches_3);
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    invariant { [#"../CreuSAT/src/unit_prop.rs" 246 16 246 35] Invariant1.invariant' ( * trail_2) ( * f_1) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 247 16 247 62] Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) = Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * Snapshot.inner old_w_29))) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 248 16 248 37] Invariant2.invariant' ( * watches_3) ( * f_1) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 249 16 249 33] Equisat0.equisat ( * Snapshot.inner old_f_26) ( * f_1) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 250 16 250 29] Invariant0.invariant' ( * f_1) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 251 16 251 56] ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * trail_2)) = ShallowModel2.shallow_model (CreuSat_Trail_Trail_Type.trail_decisions ( * Snapshot.inner old_trail_23)) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 252 16 252 46] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f_1)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * Snapshot.inner old_f_26)) };
    _42 <- j_16;
    _46 <- CreuSat_Watches_Watches_Type.watches_watches ( * watches_3);
    _47 <- watchidx_17;
    _45 <- ([#"../CreuSAT/src/unit_prop.rs" 253 14 253 39] Index0.index _46 _47);
    goto BB6
  }
  BB6 {
    _44 <- _45;
    _43 <- ([#"../CreuSAT/src/unit_prop.rs" 253 14 253 45] Len0.len _44);
    goto BB7
  }
  BB7 {
    _41 <- ([#"../CreuSAT/src/unit_prop.rs" 253 10 253 45] _42 < _43);
    switch (_41)
      | False -> goto BB22
      | True -> goto BB8
      end
  }
  BB8 {
    _52 <- CreuSat_Watches_Watches_Type.watches_watches ( * watches_3);
    _53 <- watchidx_17;
    _51 <- ([#"../CreuSAT/src/unit_prop.rs" 254 26 254 51] Index0.index _52 _53);
    goto BB9
  }
  BB9 {
    _50 <- _51;
    _54 <- j_16;
    _49 <- ([#"../CreuSAT/src/unit_prop.rs" 254 26 254 54] Index1.index _50 _54);
    goto BB10
  }
  BB10 {
    curr_watch_48 <- _49;
    _56 <- CreuSat_Watches_Watcher_Type.watcher_blocker curr_watch_48;
    _58 <- CreuSat_Trail_Trail_Type.trail_assignments ( * trail_2);
    _57 <- _58;
    _55 <- ([#"../CreuSAT/src/unit_prop.rs" 255 11 255 57] LitSat0.lit_sat _56 _57);
    goto BB11
  }
  BB11 {
    switch (_55)
      | False -> goto BB13
      | True -> goto BB12
      end
  }
  BB12 {
    j_16 <- ([#"../CreuSAT/src/unit_prop.rs" 256 12 256 18] j_16 + ([#"../CreuSAT/src/unit_prop.rs" 256 17 256 18] (1 : usize)));
    _40 <- ();
    goto BB21
  }
  BB13 {
    cref_59 <- CreuSat_Watches_Watcher_Type.watcher_cref curr_watch_48;
    _61 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _61) };
    _62 <- borrow_mut ( * trail_2);
    trail_2 <- { trail_2 with current = ( ^ _62) };
    _63 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _63) };
    _64 <- cref_59;
    _65 <- lit_4;
    _66 <- j_16;
    _60 <- ([#"../CreuSAT/src/unit_prop.rs" 259 18 259 86] PropagateLitWithRegardToClause0.propagate_lit_with_regard_to_clause _61 _62 _63 _64 _65 _66);
    goto BB14
  }
  BB14 {
    switch (_60)
      | Core_Result_Result_Type.C_Ok _ -> goto BB15
      | Core_Result_Result_Type.C_Err _ -> goto BB16
      end
  }
  BB15 {
    switch (Core_Result_Result_Type.ok_0 _60)
      | False -> goto BB19
      | True -> goto BB18
      end
  }
  BB16 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    cref_68 <- Core_Result_Result_Type.err_0 _60;
    _70 <- cref_68;
    _0 <- Core_Result_Result_Type.C_Err _70;
    goto BB23
  }
  BB17 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    absurd
  }
  BB18 {
    j_16 <- ([#"../CreuSAT/src/unit_prop.rs" 261 20 261 26] j_16 + ([#"../CreuSAT/src/unit_prop.rs" 261 25 261 26] (1 : usize)));
    _40 <- ();
    goto BB20
  }
  BB19 {
    _40 <- ();
    goto BB20
  }
  BB20 {
    goto BB21
  }
  BB21 {
    goto BB5
  }
  BB22 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    _32 <- ();
    _74 <- ();
    _0 <- Core_Result_Result_Type.C_Ok _74;
    goto BB23
  }
  BB23 {
    return _0
  }
  
end
module CreuSat_UnitProp_UnitPropagate_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Stub as Unsat1
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Stub as Unsat0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use Core_Result_Result_Type as Core_Result_Result_Type
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val unit_propagate [#"../CreuSAT/src/unit_prop.rs" 284 0 284 101] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) : Core_Result_Result_Type.t_result () usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 274 0 274 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 275 0 275 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 276 0 276 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 277 11 277 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 274 0 274 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 275 0 275 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 276 0 276 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 278 10 281 1] match (result) with
      | Core_Result_Result_Type.C_Ok () -> true
      | Core_Result_Result_Type.C_Err n -> UIntSize.to_int n < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int n)) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 282 10 282 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 283 10 283 23] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_UnitProp_UnitPropagate
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.Snapshot
  use prelude.IntSize
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel7 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner2 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = CreuSat_Trail_Step_Type.t_step
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = CreuSat_Trail_Step_Type.t_step
  use seq.Seq
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use Core_Result_Result_Type as Core_Result_Result_Type
  clone Core_Usize_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel5.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_UnitProp_PropagateLiteral_Interface as PropagateLiteral0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    val Max0.mAX' = Max0.mAX',
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Unsat0.unsat = Unsat0.unsat,
    predicate Unsat1.unsat = Unsat1.unsat,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = CreuSat_Trail_Step_Type.t_step
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  let rec cfg unit_propagate [#"../CreuSAT/src/unit_prop.rs" 284 0 284 101] [@cfg:stackify] [@cfg:subregion_analysis] (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (trail : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (watches : borrowed (CreuSat_Watches_Watches_Type.t_watches)) : Core_Result_Result_Type.t_result () usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 274 0 274 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 275 0 275 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 276 0 276 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 277 11 277 38] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 274 0 274 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 275 0 275 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 276 0 276 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 278 10 281 1] match (result) with
      | Core_Result_Result_Type.C_Ok () -> true
      | Core_Result_Result_Type.C_Err n -> UIntSize.to_int n < Seq.length (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (ShallowModel0.shallow_model (CreuSat_Formula_Formula_Type.formula_clauses ( ^ f))) (UIntSize.to_int n)) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 282 10 282 39] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 283 10 283 23] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Result_Result_Type.t_result () usize;
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var trail_2 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var i_14 : usize;
  var old_trail_15 : Snapshot.Snapshot_ty (borrowed (CreuSat_Trail_Trail_Type.t_trail));
  var _17 : ();
  var old_f_18 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _20 : ();
  var old_w_21 : Snapshot.Snapshot_ty (borrowed (CreuSat_Watches_Watches_Type.t_watches));
  var _23 : ();
  var _24 : ();
  var _31 : ();
  var _32 : bool;
  var _33 : usize;
  var _34 : usize;
  var _35 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var lit_36 : CreuSat_Lit_Lit_Type.t_lit;
  var _37 : CreuSat_Trail_Step_Type.t_step;
  var _38 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _39 : usize;
  var _40 : ();
  var _41 : Core_Result_Result_Type.t_result () usize;
  var _42 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _43 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _44 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _45 : CreuSat_Lit_Lit_Type.t_lit;
  var _46 : isize;
  var cref_47 : usize;
  var _48 : ();
  var _49 : usize;
  var _50 : ();
  var _51 : ();
  var _52 : ();
  var _53 : usize;
  var _54 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    goto BB0
  }
  BB0 {
    i_14 <- CreuSat_Trail_Trail_Type.trail_curr_i ( * trail_2);
    _17 <- ();
    old_trail_15 <- ([#"../CreuSAT/src/unit_prop.rs" 286 39 286 55] Snapshot.new trail_2);
    goto BB1
  }
  BB1 {
    _20 <- ();
    old_f_18 <- ([#"../CreuSAT/src/unit_prop.rs" 287 37 287 49] Snapshot.new f_1);
    goto BB2
  }
  BB2 {
    _23 <- ();
    old_w_21 <- ([#"../CreuSAT/src/unit_prop.rs" 288 37 288 55] Snapshot.new watches_3);
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    invariant { [#"../CreuSAT/src/unit_prop.rs" 289 16 289 29] Invariant0.invariant' ( * f_1) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 290 16 290 35] Invariant1.invariant' ( * trail_2) ( * f_1) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 291 16 291 62] Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * watches_3))) = Seq.length (ShallowModel1.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * Snapshot.inner old_w_21))) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 292 16 292 37] Invariant2.invariant' ( * watches_3) ( * f_1) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 293 16 293 33] Equisat0.equisat ( * Snapshot.inner old_f_18) ( * f_1) };
    invariant { [#"../CreuSAT/src/unit_prop.rs" 294 16 294 46] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f_1)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * Snapshot.inner old_f_18)) };
    _33 <- i_14;
    _35 <- CreuSat_Trail_Trail_Type.trail_trail ( * trail_2);
    _34 <- ([#"../CreuSAT/src/unit_prop.rs" 295 14 295 31] Len0.len _35);
    goto BB5
  }
  BB5 {
    _32 <- ([#"../CreuSAT/src/unit_prop.rs" 295 10 295 31] _33 < _34);
    switch (_32)
      | False -> goto BB12
      | True -> goto BB6
      end
  }
  BB6 {
    _38 <- CreuSat_Trail_Trail_Type.trail_trail ( * trail_2);
    _39 <- i_14;
    _37 <- ([#"../CreuSAT/src/unit_prop.rs" 296 18 296 32] Index0.index _38 _39);
    goto BB7
  }
  BB7 {
    lit_36 <- CreuSat_Trail_Step_Type.step_lit _37;
    _42 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _42) };
    _43 <- borrow_mut ( * trail_2);
    trail_2 <- { trail_2 with current = ( ^ _43) };
    _44 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _44) };
    _45 <- lit_36;
    _41 <- ([#"../CreuSAT/src/unit_prop.rs" 297 14 297 55] PropagateLiteral0.propagate_literal _42 _43 _44 _45);
    goto BB8
  }
  BB8 {
    switch (_41)
      | Core_Result_Result_Type.C_Ok _ -> goto BB11
      | Core_Result_Result_Type.C_Err _ -> goto BB9
      end
  }
  BB9 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    cref_47 <- Core_Result_Result_Type.err_0 _41;
    _49 <- cref_47;
    _0 <- Core_Result_Result_Type.C_Err _49;
    goto BB13
  }
  BB10 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    absurd
  }
  BB11 {
    _40 <- ();
    i_14 <- ([#"../CreuSAT/src/unit_prop.rs" 303 8 303 14] i_14 + ([#"../CreuSAT/src/unit_prop.rs" 303 13 303 14] (1 : usize)));
    _31 <- ();
    goto BB4
  }
  BB12 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve2.resolve watches_3 };
    _24 <- ();
    _53 <- i_14;
    trail_2 <- { trail_2 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * trail_2 in CreuSat_Trail_Trail_Type.C_Trail a b c _53 e) };
    _53 <- any usize;
    assume { Resolve1.resolve trail_2 };
    _54 <- ();
    _0 <- Core_Result_Result_Type.C_Ok _54;
    goto BB13
  }
  BB13 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_UnitPropStep_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub as NotSatisfiable0
  use CreuSat_Solver_ConflictResult_Type as CreuSat_Solver_ConflictResult_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant3
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val unit_prop_step [#"../CreuSAT/src/solver.rs" 205 4 205 118] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (t : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (w : borrowed (CreuSat_Watches_Watches_Type.t_watches)) : CreuSat_Solver_ConflictResult_Type.t_conflictresult
    requires {[#"../CreuSAT/src/solver.rs" 194 4 194 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 195 4 195 42] Invariant1.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 196 4 196 42] Invariant2.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 197 4 197 48] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 198 15 198 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/solver.rs" 194 4 194 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 195 4 195 42] Invariant1.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 196 4 196 42] Invariant2.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 197 4 197 48] Invariant3.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 199 14 199 43] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 200 14 200 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 201 14 204 5] match (result) with
      | CreuSat_Solver_ConflictResult_Type.C_Ground -> NotSatisfiable0.not_satisfiable ( ^ f)
      | _ -> true
      end }
    
end
module CreuSat_Solver_Impl0_UnitPropStep
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.IntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner2 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant6.invariant',
    predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX',
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel4.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Solver_Impl0_HandleConflict_Interface as HandleConflict0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant2.invariant',
    predicate Invariant2.invariant' = Invariant1.invariant',
    predicate Invariant3.invariant' = Invariant3.invariant',
    val Max0.mAX' = Max0.mAX',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate Unsat0.unsat = Unsat1.unsat,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve4 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve3 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Solver_Solver_Type.t_solver
  use Core_Result_Result_Type as Core_Result_Result_Type
  clone CreuSat_UnitProp_UnitPropagate_Interface as UnitPropagate0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant2.invariant',
    predicate Invariant2.invariant' = Invariant1.invariant',
    val Max0.mAX' = Max0.mAX',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate Unsat0.unsat = Unsat0.unsat,
    predicate Unsat1.unsat = Unsat1.unsat,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max1.mAX'
  use CreuSat_Solver_ConflictResult_Type as CreuSat_Solver_ConflictResult_Type
  let rec cfg unit_prop_step [#"../CreuSAT/src/solver.rs" 205 4 205 118] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (t : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (w : borrowed (CreuSat_Watches_Watches_Type.t_watches)) : CreuSat_Solver_ConflictResult_Type.t_conflictresult
    requires {[#"../CreuSAT/src/solver.rs" 194 4 194 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 195 4 195 42] Invariant1.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 196 4 196 42] Invariant2.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 197 4 197 48] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 198 15 198 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/solver.rs" 194 4 194 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 195 4 195 42] Invariant1.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 196 4 196 42] Invariant2.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 197 4 197 48] Invariant3.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 199 14 199 43] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 200 14 200 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 201 14 204 5] match (result) with
      | CreuSat_Solver_ConflictResult_Type.C_Ground -> NotSatisfiable0.not_satisfiable ( ^ f)
      | _ -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_ConflictResult_Type.t_conflictresult;
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var f_2 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var d_3 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var t_4 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var w_5 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _18 : Core_Result_Result_Type.t_result () usize;
  var _19 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _20 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _21 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _22 : isize;
  var cref_23 : usize;
  var _24 : Core_Option_Option_Type.t_option bool;
  var _25 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _26 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _27 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _28 : usize;
  var _29 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _30 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _31 : isize;
  {
    self_1 <- self;
    f_2 <- f;
    d_3 <- d;
    t_4 <- t;
    w_5 <- w;
    goto BB0
  }
  BB0 {
    _19 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _19) };
    _20 <- borrow_mut ( * t_4);
    t_4 <- { t_4 with current = ( ^ _20) };
    _21 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _21) };
    _18 <- ([#"../CreuSAT/src/solver.rs" 206 14 206 37] UnitPropagate0.unit_propagate _19 _20 _21);
    goto BB1
  }
  BB1 {
    switch (_18)
      | Core_Result_Result_Type.C_Ok _ -> goto BB4
      | Core_Result_Result_Type.C_Err _ -> goto BB2
      end
  }
  BB2 {
    cref_23 <- Core_Result_Result_Type.err_0 _18;
    _25 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _25) };
    assume { Resolve0.resolve self_1 };
    _26 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _26) };
    assume { Resolve1.resolve f_2 };
    _27 <- borrow_mut ( * t_4);
    t_4 <- { t_4 with current = ( ^ _27) };
    assume { Resolve3.resolve t_4 };
    _28 <- cref_23;
    _29 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _29) };
    assume { Resolve4.resolve w_5 };
    _30 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _30) };
    assume { Resolve2.resolve d_3 };
    _24 <- ([#"../CreuSAT/src/solver.rs" 208 31 208 69] HandleConflict0.handle_conflict _25 _26 _27 _28 _29 _30);
    goto BB5
  }
  BB3 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    absurd
  }
  BB4 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    _0 <- CreuSat_Solver_ConflictResult_Type.C_Ok;
    goto BB12
  }
  BB5 {
    switch (_24)
      | Core_Option_Option_Type.C_None -> goto BB6
      | Core_Option_Option_Type.C_Some _ -> goto BB7
      end
  }
  BB6 {
    _0 <- CreuSat_Solver_ConflictResult_Type.C_Continue;
    goto BB11
  }
  BB7 {
    switch (Core_Option_Option_Type.some_0 _24)
      | False -> goto BB9
      | True -> goto BB10
      end
  }
  BB8 {
    absurd
  }
  BB9 {
    _0 <- CreuSat_Solver_ConflictResult_Type.C_Ground;
    goto BB11
  }
  BB10 {
    _0 <- CreuSat_Solver_ConflictResult_Type.C_Err;
    goto BB11
  }
  BB11 {
    goto BB12
  }
  BB12 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_UnitPropLoop_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub as NotSatisfiable0
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant3
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val unit_prop_loop [#"../CreuSAT/src/solver.rs" 229 4 229 116] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (t : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (w : borrowed (CreuSat_Watches_Watches_Type.t_watches)) : Core_Option_Option_Type.t_option bool
    requires {[#"../CreuSAT/src/solver.rs" 217 4 217 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 218 4 218 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 219 4 219 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 220 4 220 48] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 221 15 221 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/solver.rs" 217 4 217 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 218 4 218 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 219 4 219 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 220 4 220 48] Invariant3.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 222 14 226 5] match (result) with
      | Core_Option_Option_Type.C_Some (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Core_Option_Option_Type.C_Some (True) -> true
      | Core_Option_Option_Type.C_None -> true
      end }
    ensures { [#"../CreuSAT/src/solver.rs" 227 14 227 43] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 228 14 228 27] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_Solver_Impl0_UnitPropLoop
  use prelude.Borrow
  use prelude.Snapshot
  use prelude.Int
  use prelude.IntSize
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant6.invariant',
    predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve4 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve3 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Solver_Solver_Type.t_solver
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use CreuSat_Solver_ConflictResult_Type as CreuSat_Solver_ConflictResult_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX',
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Solver_Impl0_UnitPropStep_Interface as UnitPropStep0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant2.invariant',
    predicate Invariant2.invariant' = Invariant1.invariant',
    predicate Invariant3.invariant' = Invariant3.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  use Core_Option_Option_Type as Core_Option_Option_Type
  let rec cfg unit_prop_loop [#"../CreuSAT/src/solver.rs" 229 4 229 116] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (t : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (w : borrowed (CreuSat_Watches_Watches_Type.t_watches)) : Core_Option_Option_Type.t_option bool
    requires {[#"../CreuSAT/src/solver.rs" 217 4 217 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 218 4 218 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 219 4 219 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 220 4 220 48] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 221 15 221 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/solver.rs" 217 4 217 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 218 4 218 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 219 4 219 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 220 4 220 48] Invariant3.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 222 14 226 5] match (result) with
      | Core_Option_Option_Type.C_Some (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Core_Option_Option_Type.C_Some (True) -> true
      | Core_Option_Option_Type.C_None -> true
      end }
    ensures { [#"../CreuSAT/src/solver.rs" 227 14 227 43] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 228 14 228 27] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.t_option bool;
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var f_2 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var d_3 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var t_4 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var w_5 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var old_f_18 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _20 : ();
  var old_t_21 : Snapshot.Snapshot_ty (borrowed (CreuSat_Trail_Trail_Type.t_trail));
  var _23 : ();
  var old_w_24 : Snapshot.Snapshot_ty (borrowed (CreuSat_Watches_Watches_Type.t_watches));
  var _26 : ();
  var old_d_27 : Snapshot.Snapshot_ty (borrowed (CreuSat_Decision_Decisions_Type.t_decisions));
  var _29 : ();
  var _36 : ();
  var _37 : ();
  var _38 : CreuSat_Solver_ConflictResult_Type.t_conflictresult;
  var _39 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _40 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _41 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _42 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _43 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _44 : isize;
  var _45 : ();
  var _46 : ();
  var _47 : ();
  {
    self_1 <- self;
    f_2 <- f;
    d_3 <- d;
    t_4 <- t;
    w_5 <- w;
    goto BB0
  }
  BB0 {
    _20 <- ();
    old_f_18 <- ([#"../CreuSAT/src/solver.rs" 230 41 230 53] Snapshot.new f_2);
    goto BB1
  }
  BB1 {
    _23 <- ();
    old_t_21 <- ([#"../CreuSAT/src/solver.rs" 231 39 231 51] Snapshot.new t_4);
    goto BB2
  }
  BB2 {
    _26 <- ();
    old_w_24 <- ([#"../CreuSAT/src/solver.rs" 232 41 232 53] Snapshot.new w_5);
    goto BB3
  }
  BB3 {
    _29 <- ();
    old_d_27 <- ([#"../CreuSAT/src/solver.rs" 233 43 233 55] Snapshot.new d_3);
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    invariant { [#"../CreuSAT/src/solver.rs" 234 20 234 33] Invariant0.invariant' ( * f_2) };
    invariant { [#"../CreuSAT/src/solver.rs" 235 20 235 35] Invariant1.invariant' ( * t_4) ( * f_2) };
    invariant { [#"../CreuSAT/src/solver.rs" 236 20 236 35] Invariant2.invariant' ( * w_5) ( * f_2) };
    invariant { [#"../CreuSAT/src/solver.rs" 237 20 237 44] Invariant3.invariant' ( * d_3) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f_2))) };
    invariant { [#"../CreuSAT/src/solver.rs" 238 20 238 45] Equisat0.equisat ( * Snapshot.inner old_f_18) ( * f_2) };
    invariant { [#"../CreuSAT/src/solver.rs" 239 20 239 50] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f_2)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * Snapshot.inner old_f_18)) };
    _39 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _39) };
    _40 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _40) };
    _41 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _41) };
    _42 <- borrow_mut ( * t_4);
    t_4 <- { t_4 with current = ( ^ _42) };
    _43 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _43) };
    _38 <- ([#"../CreuSAT/src/solver.rs" 241 18 241 49] UnitPropStep0.unit_prop_step _39 _40 _41 _42 _43);
    goto BB6
  }
  BB6 {
    switch (_38)
      | CreuSat_Solver_ConflictResult_Type.C_Ok -> goto BB9
      | CreuSat_Solver_ConflictResult_Type.C_Err -> goto BB11
      | CreuSat_Solver_ConflictResult_Type.C_Ground -> goto BB10
      | CreuSat_Solver_ConflictResult_Type.C_Continue -> goto BB7
      end
  }
  BB7 {
    _37 <- ();
    goto BB5
  }
  BB8 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    absurd
  }
  BB9 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    _0 <- Core_Option_Option_Type.C_Some ([#"../CreuSAT/src/solver.rs" 243 32 243 36] true);
    goto BB12
  }
  BB10 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    _0 <- Core_Option_Option_Type.C_Some ([#"../CreuSAT/src/solver.rs" 246 32 246 37] false);
    goto BB12
  }
  BB11 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    _0 <- Core_Option_Option_Type.C_None;
    goto BB12
  }
  BB12 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_EnqDecision_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use prelude.UInt8
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Stub as LongArePostUnitInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_Logic_Unset_Stub as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel_Stub as ShallowModel0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val enq_decision [#"../CreuSAT/src/trail.rs" 261 4 261 60] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/trail.rs" 251 15 251 29] Invariant0.invariant' _f}
    requires {[#"../CreuSAT/src/trail.rs" 252 4 252 43] Invariant1.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/trail.rs" 253 15 253 34] UIntSize.to_int idx < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    requires {[#"../CreuSAT/src/trail.rs" 254 15 254 45] Unset0.unset (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) (UIntSize.to_int idx))}
    requires {[#"../CreuSAT/src/trail.rs" 258 15 258 76] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) _f (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 252 4 252 43] Invariant1.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/trail.rs" 255 4 256 72] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) /\ j <> UIntSize.to_int idx -> Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) j = Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) j }
    ensures { [#"../CreuSAT/src/trail.rs" 257 14 257 82] UInt8.to_int (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) (UIntSize.to_int idx)) = 1 \/ UInt8.to_int (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) (UIntSize.to_int idx)) = 0 }
    ensures { [#"../CreuSAT/src/trail.rs" 259 14 259 81] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) _f (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 260 14 260 59] Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) = 1 + Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) }
    
end
module CreuSat_Trail_Impl0_EnqDecision
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel13 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel12 with
    function ShallowModel0.shallow_model = ShallowModel13.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel11 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel10 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel9 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = usize
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = usize
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel8 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel7 with
    type t = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq usize,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Trail_Step_Type.t_step),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel12.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel1.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Push_Interface as Push1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreuSat_Lit_Impl2_PhaseSaved_Interface as PhaseSaved0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = uint8
  clone CreuSat_Assignments_Impl1_IndexMut_Interface as IndexMut1 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = usize
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = usize,
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = usize,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len1 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel0.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg enq_decision [#"../CreuSAT/src/trail.rs" 261 4 261 60] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/trail.rs" 251 15 251 29] Invariant0.invariant' _f}
    requires {[#"../CreuSAT/src/trail.rs" 252 4 252 43] Invariant1.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/trail.rs" 253 15 253 34] UIntSize.to_int idx < UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars _f)}
    requires {[#"../CreuSAT/src/trail.rs" 254 15 254 45] Unset0.unset (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) (UIntSize.to_int idx))}
    requires {[#"../CreuSAT/src/trail.rs" 258 15 258 76] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) _f (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 252 4 252 43] Invariant1.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/trail.rs" 255 4 256 72] forall j : int . 0 <= j /\ j < Seq.length (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) /\ j <> UIntSize.to_int idx -> Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( * self))) j = Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) j }
    ensures { [#"../CreuSAT/src/trail.rs" 257 14 257 82] UInt8.to_int (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) (UIntSize.to_int idx)) = 1 \/ UInt8.to_int (Seq.get (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) (UIntSize.to_int idx)) = 0 }
    ensures { [#"../CreuSAT/src/trail.rs" 259 14 259 81] LongArePostUnitInner0.long_are_post_unit_inner (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) _f (ShallowModel0.shallow_model (CreuSat_Trail_Trail_Type.trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 260 14 260 59] Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( ^ self))) = 1 + Seq.length (ShallowModel1.shallow_model (CreuSat_Trail_Trail_Type.trail_trail ( * self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var idx_2 : usize;
  var _f_3 : CreuSat_Formula_Formula_Type.t_formula;
  var trail_len_14 : usize;
  var _15 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _16 : ();
  var _17 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _18 : usize;
  var dlevel_19 : usize;
  var _20 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _21 : usize;
  var _22 : borrowed usize;
  var _23 : borrowed (Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global));
  var _24 : usize;
  var _25 : borrowed uint8;
  var _26 : borrowed (CreuSat_Assignments_Assignments_Type.t_assignments);
  var _27 : usize;
  var lit_28 : CreuSat_Lit_Lit_Type.t_lit;
  var _29 : usize;
  var _30 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _31 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var step_32 : CreuSat_Trail_Step_Type.t_step;
  var _33 : CreuSat_Lit_Lit_Type.t_lit;
  var _34 : usize;
  var _35 : CreuSat_Trail_Reason_Type.t_reason;
  var _36 : ();
  var _37 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global));
  var _38 : CreuSat_Trail_Step_Type.t_step;
  {
    self_1 <- self;
    idx_2 <- idx;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    _15 <- CreuSat_Trail_Trail_Type.trail_trail ( * self_1);
    trail_len_14 <- ([#"../CreuSAT/src/trail.rs" 262 24 262 40] Len0.len _15);
    goto BB1
  }
  BB1 {
    _17 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_decisions ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail a b c d ( ^ _17)) };
    _18 <- trail_len_14;
    _16 <- ([#"../CreuSAT/src/trail.rs" 263 8 263 38] Push0.push _17 _18);
    goto BB2
  }
  BB2 {
    _20 <- CreuSat_Trail_Trail_Type.trail_decisions ( * self_1);
    dlevel_19 <- ([#"../CreuSAT/src/trail.rs" 264 21 264 41] Len1.len _20);
    goto BB3
  }
  BB3 {
    _21 <- dlevel_19;
    _23 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_lit_to_level ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail a ( ^ _23) c d e) };
    _24 <- idx_2;
    _22 <- ([#"../CreuSAT/src/trail.rs" 265 8 265 30] IndexMut0.index_mut _23 _24);
    goto BB4
  }
  BB4 {
    _22 <- { _22 with current = _21 };
    _21 <- any usize;
    assume { Resolve0.resolve _22 };
    _26 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_assignments ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail ( ^ _26) b c d e) };
    _27 <- idx_2;
    _25 <- ([#"../CreuSAT/src/trail.rs" 266 8 266 29] IndexMut1.index_mut _26 _27);
    goto BB5
  }
  BB5 {
    _25 <- { _25 with current = ([#"../CreuSAT/src/trail.rs" 266 8 266 34]  * _25 - ([#"../CreuSAT/src/trail.rs" 266 33 266 34] (2 : uint8))) };
    assume { Resolve1.resolve _25 };
    _29 <- idx_2;
    _31 <- CreuSat_Trail_Trail_Type.trail_assignments ( * self_1);
    _30 <- _31;
    lit_28 <- ([#"../CreuSAT/src/trail.rs" 267 18 267 58] PhaseSaved0.phase_saved _29 _30);
    goto BB6
  }
  BB6 {
    _33 <- lit_28;
    _34 <- dlevel_19;
    _35 <- CreuSat_Trail_Reason_Type.C_Decision;
    step_32 <- CreuSat_Trail_Step_Type.C_Step _33 _34 _35;
    _37 <- borrow_mut (CreuSat_Trail_Trail_Type.trail_trail ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.C_Trail a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.C_Trail a b ( ^ _37) d e) };
    assume { Resolve2.resolve self_1 };
    _38 <- step_32;
    step_32 <- any CreuSat_Trail_Step_Type.t_step;
    _36 <- ([#"../CreuSAT/src/trail.rs" 271 8 271 29] Push1.push _37 _38);
    goto BB7
  }
  BB7 {
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Solver_Impl0_OuterLoop_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub as NotSatisfiable0
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete_Stub as Complete0
  clone CreuSat_Logic_LogicFormula_Impl1_Sat_Stub as Sat0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Solver_SatResult_Type as CreuSat_Solver_SatResult_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant3
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val outer_loop [#"../CreuSAT/src/solver.rs" 272 4 272 113] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (trail : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (w : borrowed (CreuSat_Watches_Watches_Type.t_watches)) : CreuSat_Solver_SatResult_Type.t_satresult
    requires {[#"../CreuSAT/src/solver.rs" 257 4 257 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 258 4 258 46] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 259 4 259 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 260 4 260 48] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 261 15 261 39] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 262 15 262 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/solver.rs" 257 4 257 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 258 4 258 46] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 259 4 259 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 260 4 260 48] Invariant3.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 263 14 263 43] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 264 14 264 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 265 14 271 5] match (result) with
      | CreuSat_Solver_SatResult_Type.C_Sat _ -> Sat0.sat ( ^ f) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail)) /\ Complete0.complete (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail))
      | CreuSat_Solver_SatResult_Type.C_Unsat -> NotSatisfiable0.not_satisfiable ( ^ f)
      | CreuSat_Solver_SatResult_Type.C_Unknown -> true
      | CreuSat_Solver_SatResult_Type.C_Err -> true
      end }
    
end
module CreuSat_Solver_Impl0_OuterLoop
  use prelude.Borrow
  use prelude.Int
  use prelude.IntSize
  use prelude.UIntSize
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel11 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use seq.Seq
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel7 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    predicate Sat0.sat = Sat1.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant6.invariant',
    predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone Alloc_Vec_Impl0_New_Interface as New0 with
    type t = uint8,
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Formula_Impl2_IsSat_Interface as IsSat0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant4.invariant',
    predicate Sat0.sat = Sat0.sat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Trail_Impl0_EnqDecision_Interface as EnqDecision0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate Unset0.unset = Unset0.unset,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve4 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve3 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete as Complete0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate Unset0.unset = Unset0.unset
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX',
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Decision_Impl2_GetNext_Interface as GetNext0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    predicate Invariant1.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate Unset0.unset = Unset0.unset,
    predicate Complete0.complete = Complete0.complete
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreuSat_Trail_Impl0_BacktrackTo_Interface as BacktrackTo0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant3.invariant',
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    val Max0.mAX' = Max1.mAX',
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Formula_Impl2_ReduceDb_Interface as ReduceDb0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant2.invariant',
    predicate Invariant2.invariant' = Invariant1.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Solver_Solver_Type.t_solver
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Solver_Impl0_UnitPropLoop_Interface as UnitPropLoop0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    predicate Invariant3.invariant' = Invariant3.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  use CreuSat_Solver_SatResult_Type as CreuSat_Solver_SatResult_Type
  let rec cfg outer_loop [#"../CreuSAT/src/solver.rs" 272 4 272 113] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (f : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) (trail : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (w : borrowed (CreuSat_Watches_Watches_Type.t_watches)) : CreuSat_Solver_SatResult_Type.t_satresult
    requires {[#"../CreuSAT/src/solver.rs" 257 4 257 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 258 4 258 46] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 259 4 259 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 260 4 260 48] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 261 15 261 39] Invariant3.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 262 15 262 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) < div (UIntSize.to_int Max0.mAX') 2}
    ensures { [#"../CreuSAT/src/solver.rs" 257 4 257 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 258 4 258 46] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 259 4 259 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 260 4 260 48] Invariant3.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 263 14 263 43] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * f)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 264 14 264 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 265 14 271 5] match (result) with
      | CreuSat_Solver_SatResult_Type.C_Sat _ -> Sat0.sat ( ^ f) (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail)) /\ Complete0.complete (CreuSat_Trail_Trail_Type.trail_assignments ( ^ trail))
      | CreuSat_Solver_SatResult_Type.C_Unsat -> NotSatisfiable0.not_satisfiable ( ^ f)
      | CreuSat_Solver_SatResult_Type.C_Unknown -> true
      | CreuSat_Solver_SatResult_Type.C_Err -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_SatResult_Type.t_satresult;
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var f_2 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var d_3 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var trail_4 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var w_5 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _19 : ();
  var _20 : Core_Option_Option_Type.t_option bool;
  var _21 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _22 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _23 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _24 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _25 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _26 : isize;
  var _27 : ();
  var _28 : ();
  var slow_29 : usize;
  var _30 : bool;
  var _31 : usize;
  var _32 : usize;
  var _33 : bool;
  var _34 : usize;
  var _35 : usize;
  var _36 : bool;
  var _37 : ();
  var _38 : bool;
  var _39 : bool;
  var _40 : usize;
  var _41 : CreuSat_Trail_Trail_Type.t_trail;
  var _42 : bool;
  var _43 : usize;
  var _44 : usize;
  var _45 : usize;
  var _46 : ();
  var _47 : bool;
  var _48 : usize;
  var _49 : usize;
  var _50 : ();
  var _51 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _52 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _53 : CreuSat_Trail_Trail_Type.t_trail;
  var _54 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _55 : ();
  var _56 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _57 : CreuSat_Formula_Formula_Type.t_formula;
  var _58 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _59 : ();
  var _60 : Core_Option_Option_Type.t_option usize;
  var _61 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _62 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _63 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _64 : CreuSat_Formula_Formula_Type.t_formula;
  var _65 : isize;
  var next_66 : usize;
  var _67 : ();
  var _68 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _69 : usize;
  var _70 : CreuSat_Formula_Formula_Type.t_formula;
  var _71 : bool;
  var _72 : CreuSat_Formula_Formula_Type.t_formula;
  var _73 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _74 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _75 : ();
  var _76 : Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global);
  var _77 : ();
  {
    self_1 <- self;
    f_2 <- f;
    d_3 <- d;
    trail_4 <- trail;
    w_5 <- w;
    goto BB0
  }
  BB0 {
    _21 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _21) };
    _22 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _22) };
    _23 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _23) };
    _24 <- borrow_mut ( * trail_4);
    trail_4 <- { trail_4 with current = ( ^ _24) };
    _25 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _25) };
    _20 <- ([#"../CreuSAT/src/solver.rs" 273 14 273 49] UnitPropLoop0.unit_prop_loop _21 _22 _23 _24 _25);
    goto BB1
  }
  BB1 {
    switch (_20)
      | Core_Option_Option_Type.C_None -> goto BB5
      | Core_Option_Option_Type.C_Some _ -> goto BB2
      end
  }
  BB2 {
    switch (Core_Option_Option_Type.some_0 _20)
      | False -> goto BB4
      | True -> goto BB3
      end
  }
  BB3 {
    _19 <- ();
    _31 <- CreuSat_Solver_Solver_Type.solver_slow ( * self_1);
    _33 <- ([#"../CreuSAT/src/solver.rs" 278 34 278 48] ([#"../CreuSAT/src/solver.rs" 278 47 278 48] (2 : usize)) = ([#"../CreuSAT/src/solver.rs" 278 34 278 48] (0 : usize)));
    assert { [#"../CreuSAT/src/solver.rs" 278 34 278 48] not _33 };
    goto BB6
  }
  BB4 {
    assume { Resolve1.resolve self_1 };
    assume { Resolve3.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve4.resolve trail_4 };
    assume { Resolve0.resolve w_5 };
    _0 <- CreuSat_Solver_SatResult_Type.C_Unsat;
    goto BB34
  }
  BB5 {
    assume { Resolve1.resolve self_1 };
    assume { Resolve3.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve4.resolve trail_4 };
    assume { Resolve0.resolve w_5 };
    _0 <- CreuSat_Solver_SatResult_Type.C_Err;
    goto BB34
  }
  BB6 {
    _32 <- ([#"../CreuSAT/src/solver.rs" 278 34 278 48] ([#"../CreuSAT/src/solver.rs" 278 34 278 44] (18446744073709551615 : usize)) / ([#"../CreuSAT/src/solver.rs" 278 47 278 48] (2 : usize)));
    _30 <- ([#"../CreuSAT/src/solver.rs" 278 22 278 48] _31 < _32);
    switch (_30)
      | False -> goto BB9
      | True -> goto BB7
      end
  }
  BB7 {
    _35 <- CreuSat_Solver_Solver_Type.solver_slow ( * self_1);
    _36 <- ([#"../CreuSAT/src/solver.rs" 278 51 278 68] ([#"../CreuSAT/src/solver.rs" 278 64 278 67] (100 : usize)) = ([#"../CreuSAT/src/solver.rs" 278 51 278 68] (0 : usize)));
    assert { [#"../CreuSAT/src/solver.rs" 278 51 278 68] not _36 };
    goto BB8
  }
  BB8 {
    _34 <- ([#"../CreuSAT/src/solver.rs" 278 51 278 68] _35 / ([#"../CreuSAT/src/solver.rs" 278 64 278 67] (100 : usize)));
    slow_29 <- ([#"../CreuSAT/src/solver.rs" 278 51 278 74] _34 * ([#"../CreuSAT/src/solver.rs" 278 71 278 74] (125 : usize)));
    goto BB10
  }
  BB9 {
    slow_29 <- CreuSat_Solver_Solver_Type.solver_slow ( * self_1);
    goto BB10
  }
  BB10 {
    _41 <-  * trail_4;
    _40 <- ([#"../CreuSAT/src/solver.rs" 279 11 279 33] DecisionLevel0.decision_level _41);
    goto BB14
  }
  BB11 {
    _38 <- ([#"../CreuSAT/src/solver.rs" 279 11 279 57] false);
    goto BB13
  }
  BB12 {
    _43 <- CreuSat_Solver_Solver_Type.solver_fast ( * self_1);
    _44 <- slow_29;
    _42 <- ([#"../CreuSAT/src/solver.rs" 279 41 279 57] _43 > _44);
    _38 <- _42;
    _42 <- any bool;
    goto BB13
  }
  BB13 {
    switch (_38)
      | False -> goto BB21
      | True -> goto BB15
      end
  }
  BB14 {
    _39 <- ([#"../CreuSAT/src/solver.rs" 279 11 279 37] _40 > ([#"../CreuSAT/src/solver.rs" 279 36 279 37] (0 : usize)));
    switch (_39)
      | False -> goto BB11
      | True -> goto BB12
      end
  }
  BB15 {
    _45 <- slow_29;
    self_1 <- { self_1 with current = (let CreuSat_Solver_Solver_Type.C_Solver a b c d e f g h =  * self_1 in CreuSat_Solver_Solver_Type.C_Solver a b c d e _45 g h) };
    _45 <- any usize;
    _48 <- CreuSat_Solver_Solver_Type.solver_num_lemmas ( * self_1);
    _49 <- CreuSat_Solver_Solver_Type.solver_max_lemmas ( * self_1);
    _47 <- ([#"../CreuSAT/src/solver.rs" 281 15 281 48] _48 > _49);
    switch (_47)
      | False -> goto BB18
      | True -> goto BB16
      end
  }
  BB16 {
    _51 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _51) };
    _52 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _52) };
    assume { Resolve0.resolve w_5 };
    _53 <-  * trail_4;
    _54 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _54) };
    assume { Resolve1.resolve self_1 };
    _50 <- ([#"../CreuSAT/src/solver.rs" 282 16 282 42] ReduceDb0.reduceDB _51 _52 _53 _54);
    goto BB17
  }
  BB17 {
    _46 <- ();
    goto BB19
  }
  BB18 {
    assume { Resolve1.resolve self_1 };
    assume { Resolve0.resolve w_5 };
    _46 <- ();
    goto BB19
  }
  BB19 {
    _56 <- borrow_mut ( * trail_4);
    trail_4 <- { trail_4 with current = ( ^ _56) };
    _57 <-  * f_2;
    _58 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _58) };
    _55 <- ([#"../CreuSAT/src/solver.rs" 284 12 284 39] BacktrackTo0.backtrack_to _56 ([#"../CreuSAT/src/solver.rs" 284 31 284 32] (0 : usize)) _57 _58);
    goto BB20
  }
  BB20 {
    _37 <- ();
    goto BB22
  }
  BB21 {
    assume { Resolve1.resolve self_1 };
    assume { Resolve0.resolve w_5 };
    _37 <- ();
    goto BB22
  }
  BB22 {
    _61 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _61) };
    assume { Resolve2.resolve d_3 };
    _63 <- CreuSat_Trail_Trail_Type.trail_assignments ( * trail_4);
    _62 <- _63;
    _64 <-  * f_2;
    _60 <- ([#"../CreuSAT/src/solver.rs" 287 14 287 47] GetNext0.get_next _61 _62 _64);
    goto BB23
  }
  BB23 {
    switch (_60)
      | Core_Option_Option_Type.C_None -> goto BB24
      | Core_Option_Option_Type.C_Some _ -> goto BB26
      end
  }
  BB24 {
    _72 <-  * f_2;
    assume { Resolve3.resolve f_2 };
    _74 <- CreuSat_Trail_Trail_Type.trail_assignments ( * trail_4);
    assume { Resolve4.resolve trail_4 };
    _73 <- _74;
    _71 <- ([#"../CreuSAT/src/solver.rs" 296 19 296 47] IsSat0.is_sat _72 _73);
    goto BB28
  }
  BB25 {
    assume { Resolve3.resolve f_2 };
    assume { Resolve4.resolve trail_4 };
    absurd
  }
  BB26 {
    next_66 <- Core_Option_Option_Type.some_0 _60;
    _68 <- borrow_mut ( * trail_4);
    trail_4 <- { trail_4 with current = ( ^ _68) };
    assume { Resolve4.resolve trail_4 };
    _69 <- next_66;
    _70 <-  * f_2;
    assume { Resolve3.resolve f_2 };
    _67 <- ([#"../CreuSAT/src/solver.rs" 289 16 289 43] EnqDecision0.enq_decision _68 _69 _70);
    goto BB27
  }
  BB27 {
    _59 <- ();
    _0 <- CreuSat_Solver_SatResult_Type.C_Unknown;
    goto BB35
  }
  BB28 {
    switch (_71)
      | False -> goto BB32
      | True -> goto BB29
      end
  }
  BB29 {
    _76 <- ([#"../CreuSAT/src/solver.rs" 297 42 297 52] New0.new ());
    goto BB30
  }
  BB30 {
    _0 <- CreuSat_Solver_SatResult_Type.C_Sat _76;
    goto BB31
  }
  BB31 {
    goto BB33
  }
  BB32 {
    _0 <- CreuSat_Solver_SatResult_Type.C_Err;
    goto BB33
  }
  BB33 {
    goto BB35
  }
  BB34 {
    goto BB35
  }
  BB35 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_Inner_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete_Stub as EventuallySatComplete0
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Stub as SatInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Solver_SatResult_Type as CreuSat_Solver_SatResult_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant3
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone Core_Usize_Max_Stub as Max0
  val inner [#"../CreuSAT/src/solver.rs" 320 4 322 18] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (formula : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (decisions : CreuSat_Decision_Decisions_Type.t_decisions) (trail : CreuSat_Trail_Trail_Type.t_trail) (watches : CreuSat_Watches_Watches_Type.t_watches) : CreuSat_Solver_SatResult_Type.t_satresult
    requires {[#"../CreuSAT/src/solver.rs" 308 15 308 48] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * formula)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/solver.rs" 309 15 309 34] Invariant0.invariant' ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 310 15 310 53] Invariant1.invariant' decisions (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * formula)))}
    requires {[#"../CreuSAT/src/solver.rs" 311 15 311 40] Invariant2.invariant' trail ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 312 15 312 42] Invariant3.invariant' watches ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 313 15 313 53] Invariant1.invariant' decisions (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * formula)))}
    ensures { [#"../CreuSAT/src/solver.rs" 314 14 318 5] match (result) with
      | CreuSat_Solver_SatResult_Type.C_Sat v -> SatInner0.sat_inner ( ^ formula) (ShallowModel0.shallow_model v) /\ Equisat0.equisat ( * formula) ( ^ formula) /\ EventuallySatComplete0.eventually_sat_complete ( * formula)
      | CreuSat_Solver_SatResult_Type.C_Unsat -> NotSatisfiable0.not_satisfiable ( ^ formula) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    ensures { [#"../CreuSAT/src/solver.rs" 319 14 319 39] Equisat0.equisat ( * formula) ( ^ formula) }
    
end
module CreuSat_Solver_Impl0_Inner
  use prelude.Borrow
  use prelude.Snapshot
  use prelude.Int
  use prelude.IntSize
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic1
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel8 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use seq.Seq
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve6 with
    type t = uint8
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic0 with
    type t = uint8,
    type s = Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete as Complete0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel8.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    predicate Sat0.sat = Sat1.sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant6.invariant',
    predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve5 with
    type t = uint8,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate Resolve0.resolve = Resolve6.resolve,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve4 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve3 with
    type t = CreuSat_Solver_Solver_Type.t_solver
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Solver_SatResult_Type as CreuSat_Solver_SatResult_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate SatInner0.sat_inner = SatInner1.sat_inner,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX',
    val Max1.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel5.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Solver_Impl0_OuterLoop_Interface as OuterLoop0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant2.invariant',
    predicate Invariant2.invariant' = Invariant3.invariant',
    predicate Invariant3.invariant' = Invariant1.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate Sat0.sat = Sat0.sat,
    predicate Complete0.complete = Complete0.complete,
    predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  let rec cfg inner [#"../CreuSAT/src/solver.rs" 320 4 322 18] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Solver_Solver_Type.t_solver)) (formula : borrowed (CreuSat_Formula_Formula_Type.t_formula)) (decisions : CreuSat_Decision_Decisions_Type.t_decisions) (trail : CreuSat_Trail_Trail_Type.t_trail) (watches : CreuSat_Watches_Watches_Type.t_watches) : CreuSat_Solver_SatResult_Type.t_satresult
    requires {[#"../CreuSAT/src/solver.rs" 308 15 308 48] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * formula)) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/solver.rs" 309 15 309 34] Invariant0.invariant' ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 310 15 310 53] Invariant1.invariant' decisions (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * formula)))}
    requires {[#"../CreuSAT/src/solver.rs" 311 15 311 40] Invariant2.invariant' trail ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 312 15 312 42] Invariant3.invariant' watches ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 313 15 313 53] Invariant1.invariant' decisions (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * formula)))}
    ensures { [#"../CreuSAT/src/solver.rs" 314 14 318 5] match (result) with
      | CreuSat_Solver_SatResult_Type.C_Sat v -> SatInner0.sat_inner ( ^ formula) (ShallowModel0.shallow_model v) /\ Equisat0.equisat ( * formula) ( ^ formula) /\ EventuallySatComplete0.eventually_sat_complete ( * formula)
      | CreuSat_Solver_SatResult_Type.C_Unsat -> NotSatisfiable0.not_satisfiable ( ^ formula) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    ensures { [#"../CreuSAT/src/solver.rs" 319 14 319 39] Equisat0.equisat ( * formula) ( ^ formula) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_SatResult_Type.t_satresult;
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var formula_2 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var decisions_3 : CreuSat_Decision_Decisions_Type.t_decisions;
  var trail_4 : CreuSat_Trail_Trail_Type.t_trail;
  var watches_5 : CreuSat_Watches_Watches_Type.t_watches;
  var old_f_14 : Snapshot.Snapshot_ty (borrowed (CreuSat_Formula_Formula_Type.t_formula));
  var _16 : ();
  var _23 : ();
  var _24 : ();
  var _25 : CreuSat_Solver_SatResult_Type.t_satresult;
  var _26 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _27 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _28 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _29 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _30 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _31 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _32 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _33 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _34 : isize;
  var _35 : ();
  var _36 : Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global);
  var o_37 : CreuSat_Solver_SatResult_Type.t_satresult;
  var _38 : ();
  {
    self_1 <- self;
    formula_2 <- formula;
    decisions_3 <- decisions;
    trail_4 <- trail;
    watches_5 <- watches;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    _16 <- ();
    old_f_14 <- ([#"../CreuSAT/src/solver.rs" 323 41 323 59] Snapshot.new formula_2);
    goto BB5
  }
  BB5 {
    goto BB6
  }
  BB6 {
    goto BB7
  }
  BB7 {
    goto BB8
  }
  BB8 {
    goto BB9
  }
  BB9 {
    invariant { [#"../CreuSAT/src/solver.rs" 324 20 324 51] Equisat0.equisat ( * Snapshot.inner old_f_14) ( * formula_2) };
    invariant { [#"../CreuSAT/src/solver.rs" 325 20 325 56] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * formula_2)) = UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * Snapshot.inner old_f_14)) };
    invariant { [#"../CreuSAT/src/solver.rs" 326 20 326 39] Invariant0.invariant' ( * formula_2) };
    invariant { [#"../CreuSAT/src/solver.rs" 327 20 327 45] Invariant2.invariant' trail_4 ( * formula_2) };
    invariant { [#"../CreuSAT/src/solver.rs" 328 20 328 47] Invariant3.invariant' watches_5 ( * formula_2) };
    invariant { [#"../CreuSAT/src/solver.rs" 329 20 329 58] Invariant1.invariant' decisions_3 (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars ( * formula_2))) };
    _26 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _26) };
    _27 <- borrow_mut ( * formula_2);
    formula_2 <- { formula_2 with current = ( ^ _27) };
    _29 <- borrow_mut decisions_3;
    decisions_3 <-  ^ _29;
    _28 <- borrow_mut ( * _29);
    _29 <- { _29 with current = ( ^ _28) };
    assume { Resolve0.resolve _29 };
    _31 <- borrow_mut trail_4;
    trail_4 <-  ^ _31;
    _30 <- borrow_mut ( * _31);
    _31 <- { _31 with current = ( ^ _30) };
    assume { Resolve1.resolve _31 };
    _33 <- borrow_mut watches_5;
    watches_5 <-  ^ _33;
    _32 <- borrow_mut ( * _33);
    _33 <- { _33 with current = ( ^ _32) };
    assume { Resolve2.resolve _33 };
    _25 <- ([#"../CreuSAT/src/solver.rs" 331 18 331 84] OuterLoop0.outer_loop _26 _27 _28 _30 _32);
    goto BB10
  }
  BB10 {
    switch (_25)
      | CreuSat_Solver_SatResult_Type.C_Sat _ -> goto BB13
      | CreuSat_Solver_SatResult_Type.C_Unknown -> goto BB12
      | _ -> goto BB11
      end
  }
  BB11 {
    assume { Resolve3.resolve self_1 };
    assume { Resolve4.resolve formula_2 };
    o_37 <- _25;
    _25 <- any CreuSat_Solver_SatResult_Type.t_satresult;
    _0 <- o_37;
    o_37 <- any CreuSat_Solver_SatResult_Type.t_satresult;
    goto BB16
  }
  BB12 {
    _24 <- ();
    goto BB15
  }
  BB13 {
    assume { Resolve3.resolve self_1 };
    assume { Resolve4.resolve formula_2 };
    assume { Resolve5.resolve _36 };
    _36 <- CreuSat_Assignments_Assignments_Type.assignments_0 (CreuSat_Trail_Trail_Type.trail_assignments trail_4);
    trail_4 <- (let CreuSat_Trail_Trail_Type.C_Trail a b c d e = trail_4 in CreuSat_Trail_Trail_Type.C_Trail (let CreuSat_Assignments_Assignments_Type.C_Assignments a = CreuSat_Trail_Trail_Type.trail_assignments trail_4 in CreuSat_Assignments_Assignments_Type.C_Assignments (any Alloc_Vec_Vec_Type.t_vec uint8 (Alloc_Alloc_Global_Type.t_global))) b c d e);
    _0 <- CreuSat_Solver_SatResult_Type.C_Sat _36;
    goto BB14
  }
  BB14 {
    goto BB17
  }
  BB15 {
    goto BB9
  }
  BB16 {
    goto BB17
  }
  BB17 {
    goto BB18
  }
  BB18 {
    goto BB19
  }
  BB19 {
    goto BB20
  }
  BB20 {
    goto BB21
  }
  BB21 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_New_Interface
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant2
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  val new [#"../CreuSAT/src/trail.rs" 43 4 43 52] (f : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : CreuSat_Trail_Trail_Type.t_trail
    requires {[#"../CreuSAT/src/trail.rs" 40 15 40 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 41 15 41 30] Invariant1.invariant' a f}
    ensures { [#"../CreuSAT/src/trail.rs" 42 14 42 34] Invariant2.invariant' result f }
    
end
module CreuSat_Trail_Impl0_New
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic1
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel4 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic0 with
    type t = usize,
    type s = Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic1.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl0_New_Interface as New1 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl0_New_Interface as New0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_FromElem_Interface as FromElem0 with
    type t = usize,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel1.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  let rec cfg new [#"../CreuSAT/src/trail.rs" 43 4 43 52] [@cfg:stackify] [@cfg:subregion_analysis] (f : CreuSat_Formula_Formula_Type.t_formula) (a : CreuSat_Assignments_Assignments_Type.t_assignments) : CreuSat_Trail_Trail_Type.t_trail
    requires {[#"../CreuSAT/src/trail.rs" 40 15 40 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 41 15 41 30] Invariant1.invariant' a f}
    ensures { [#"../CreuSAT/src/trail.rs" 42 14 42 34] Invariant2.invariant' result f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Trail_Trail_Type.t_trail;
  var f_1 : CreuSat_Formula_Formula_Type.t_formula;
  var a_2 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _6 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _7 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  var _8 : usize;
  var _9 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Trail_Step_Type.t_step) (Alloc_Alloc_Global_Type.t_global);
  var _10 : Alloc_Vec_Vec_Type.t_vec usize (Alloc_Alloc_Global_Type.t_global);
  {
    f_1 <- f;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    _6 <- a_2;
    a_2 <- any CreuSat_Assignments_Assignments_Type.t_assignments;
    _8 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _7 <- ([#"../CreuSAT/src/trail.rs" 46 26 46 64] FromElem0.from_elem ([#"../CreuSAT/src/trail.rs" 46 41 46 51] (18446744073709551615 : usize)) _8);
    goto BB2
  }
  BB2 {
    _9 <- ([#"../CreuSAT/src/trail.rs" 47 19 47 29] New0.new ());
    goto BB3
  }
  BB3 {
    _10 <- ([#"../CreuSAT/src/trail.rs" 49 23 49 33] New1.new ());
    goto BB4
  }
  BB4 {
    _0 <- CreuSat_Trail_Trail_Type.C_Trail _6 _7 _9 ([#"../CreuSAT/src/trail.rs" 48 20 48 21] (0 : usize)) _10;
    goto BB5
  }
  BB5 {
    goto BB6
  }
  BB6 {
    goto BB7
  }
  BB7 {
    goto BB8
  }
  BB8 {
    goto BB9
  }
  BB9 {
    return _0
  }
  
end
module CreuSat_Watches_Impl0_New_Interface
  use prelude.Borrow
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant0
  val new [#"../CreuSAT/src/watches.rs" 72 4 72 38] (f : CreuSat_Formula_Formula_Type.t_formula) : CreuSat_Watches_Watches_Type.t_watches
    ensures { [#"../CreuSAT/src/watches.rs" 71 14 71 34] Invariant0.invariant' result f }
    
end
module CreuSat_Watches_Impl0_New
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use seq.Seq
  clone CreusotContracts_Resolve_Impl2_Resolve as Resolve2 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic2 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type s = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function IndexLogic0.index_logic = IndexLogic2.index_logic,
    predicate Resolve0.resolve = Resolve2.resolve,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Logic_Ops_Impl0_IndexLogic as IndexLogic1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type s = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl10_Resolve as Resolve0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function IndexLogic0.index_logic = IndexLogic1.index_logic,
    predicate Resolve0.resolve = Resolve1.resolve,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel4.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl0_New_Interface as New1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone Alloc_Vec_Impl0_New_Interface as New0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max0.mAX'
  let rec cfg new [#"../CreuSAT/src/watches.rs" 72 4 72 38] [@cfg:stackify] [@cfg:subregion_analysis] (f : CreuSat_Formula_Formula_Type.t_formula) : CreuSat_Watches_Watches_Type.t_watches
    ensures { [#"../CreuSAT/src/watches.rs" 71 14 71 34] Invariant0.invariant' result f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Watches_Watches_Type.t_watches;
  var f_1 : CreuSat_Formula_Formula_Type.t_formula;
  var i_3 : usize;
  var watches_4 : Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global);
  var _5 : ();
  var _8 : ();
  var _9 : bool;
  var _10 : usize;
  var _11 : usize;
  var _12 : ();
  var _13 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _14 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _15 : ();
  var _16 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _17 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _18 : ();
  var _19 : ();
  var _20 : ();
  var _21 : Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global);
  {
    f_1 <- f;
    goto BB0
  }
  BB0 {
    i_3 <- ([#"../CreuSAT/src/watches.rs" 73 27 73 28] (0 : usize));
    watches_4 <- ([#"../CreuSAT/src/watches.rs" 74 26 74 36] New0.new ());
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    invariant { [#"../CreuSAT/src/watches.rs" 75 20 75 37] UIntSize.to_int i_3 <= UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_1) };
    invariant { [#"../CreuSAT/src/watches.rs" 76 20 76 64] WatchesInvariantInternal0.watches_invariant_internal (ShallowModel0.shallow_model watches_4) (UIntSize.to_int i_3) f_1 };
    _10 <- i_3;
    _11 <- CreuSat_Formula_Formula_Type.formula_num_vars f_1;
    _9 <- ([#"../CreuSAT/src/watches.rs" 77 14 77 28] _10 < _11);
    switch (_9)
      | False -> goto BB9
      | True -> goto BB4
      end
  }
  BB4 {
    _13 <- borrow_mut watches_4;
    watches_4 <-  ^ _13;
    _14 <- ([#"../CreuSAT/src/watches.rs" 78 25 78 35] New1.new ());
    goto BB5
  }
  BB5 {
    _12 <- ([#"../CreuSAT/src/watches.rs" 78 12 78 36] Push0.push _13 _14);
    goto BB6
  }
  BB6 {
    _16 <- borrow_mut watches_4;
    watches_4 <-  ^ _16;
    _17 <- ([#"../CreuSAT/src/watches.rs" 79 25 79 35] New1.new ());
    goto BB7
  }
  BB7 {
    _15 <- ([#"../CreuSAT/src/watches.rs" 79 12 79 36] Push0.push _16 _17);
    goto BB8
  }
  BB8 {
    i_3 <- ([#"../CreuSAT/src/watches.rs" 80 12 80 18] i_3 + ([#"../CreuSAT/src/watches.rs" 80 17 80 18] (1 : usize)));
    _8 <- ();
    goto BB3
  }
  BB9 {
    _5 <- ();
    assume { Resolve0.resolve _21 };
    _21 <- watches_4;
    watches_4 <- any Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global);
    _0 <- CreuSat_Watches_Watches_Type.C_Watches _21;
    goto BB10
  }
  BB10 {
    goto BB11
  }
  BB11 {
    return _0
  }
  
end
module CreuSat_Watches_Impl0_InitWatches_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant1 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant0
  val init_watches [#"../CreuSAT/src/watches.rs" 132 4 132 47] (self : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/watches.rs" 129 4 129 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/watches.rs" 130 15 130 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/watches.rs" 131 15 131 28] Invariant1.invariant' f}
    ensures { [#"../CreuSAT/src/watches.rs" 129 4 129 42] Invariant0.invariant' ( ^ self) f }
    
end
module CreuSat_Watches_Impl0_InitWatches
  use prelude.Borrow
  use prelude.Snapshot
  use prelude.Int
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel9 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use seq.Seq
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel6 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel7 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel5 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel4 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel1 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model,
    predicate Invariant0.invariant' = Invariant2.invariant',
    function ShallowModel1.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel9.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    val Max0.mAX' = Max1.mAX'
  clone Core_Usize_Max as Max0
  clone CreuSat_Lit_Impl2_ToNegWatchidx_Interface as ToNegWatchidx0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX',
    function ToNegWatchidxLogic0.to_neg_watchidx_logic = ToNegWatchidxLogic0.to_neg_watchidx_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len1 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  let rec cfg init_watches [#"../CreuSAT/src/watches.rs" 132 4 132 47] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/watches.rs" 129 4 129 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/watches.rs" 130 15 130 42] UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f) < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/watches.rs" 131 15 131 28] Invariant1.invariant' f}
    ensures { [#"../CreuSAT/src/watches.rs" 129 4 129 42] Invariant0.invariant' ( ^ self) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var f_2 : CreuSat_Formula_Formula_Type.t_formula;
  var old_w_7 : Snapshot.Snapshot_ty (borrowed (CreuSat_Watches_Watches_Type.t_watches));
  var _9 : ();
  var i_10 : usize;
  var _13 : ();
  var _14 : bool;
  var _15 : usize;
  var _16 : usize;
  var _17 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var clause_18 : CreuSat_Clause_Clause_Type.t_clause;
  var _19 : CreuSat_Clause_Clause_Type.t_clause;
  var _20 : CreuSat_Formula_Formula_Type.t_formula;
  var _21 : usize;
  var _22 : ();
  var _23 : bool;
  var _24 : usize;
  var _25 : CreuSat_Clause_Clause_Type.t_clause;
  var _26 : ();
  var _27 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _28 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _29 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _30 : usize;
  var _31 : CreuSat_Lit_Lit_Type.t_lit;
  var _32 : CreuSat_Lit_Lit_Type.t_lit;
  var _33 : CreuSat_Clause_Clause_Type.t_clause;
  var _34 : CreuSat_Watches_Watcher_Type.t_watcher;
  var _35 : usize;
  var _36 : CreuSat_Lit_Lit_Type.t_lit;
  var _37 : CreuSat_Lit_Lit_Type.t_lit;
  var _38 : CreuSat_Clause_Clause_Type.t_clause;
  var _39 : ();
  var _40 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _41 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _42 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _43 : usize;
  var _44 : CreuSat_Lit_Lit_Type.t_lit;
  var _45 : CreuSat_Lit_Lit_Type.t_lit;
  var _46 : CreuSat_Clause_Clause_Type.t_clause;
  var _47 : CreuSat_Watches_Watcher_Type.t_watcher;
  var _48 : usize;
  var _49 : CreuSat_Lit_Lit_Type.t_lit;
  var _50 : CreuSat_Lit_Lit_Type.t_lit;
  var _51 : CreuSat_Clause_Clause_Type.t_clause;
  var _52 : ();
  var _53 : ();
  var _54 : ();
  {
    self_1 <- self;
    f_2 <- f;
    goto BB0
  }
  BB0 {
    _9 <- ();
    old_w_7 <- ([#"../CreuSAT/src/watches.rs" 133 41 133 56] Snapshot.new self_1);
    goto BB1
  }
  BB1 {
    i_10 <- ([#"../CreuSAT/src/watches.rs" 134 20 134 21] (0 : usize));
    goto BB2
  }
  BB2 {
    invariant { [#"../CreuSAT/src/watches.rs" 135 20 135 38] Invariant0.invariant' ( * self_1) f_2 };
    invariant { [#"../CreuSAT/src/watches.rs" 136 20 136 58] Seq.length (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self_1))) = 2 * UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_2) };
    _15 <- i_10;
    _17 <- CreuSat_Formula_Formula_Type.formula_clauses f_2;
    _16 <- ([#"../CreuSAT/src/watches.rs" 137 18 137 33] Len0.len _17);
    goto BB3
  }
  BB3 {
    _14 <- ([#"../CreuSAT/src/watches.rs" 137 14 137 33] _15 < _16);
    switch (_14)
      | False -> goto BB20
      | True -> goto BB4
      end
  }
  BB4 {
    _20 <- f_2;
    _21 <- i_10;
    _19 <- ([#"../CreuSAT/src/watches.rs" 138 26 138 30] Index0.index _20 _21);
    goto BB5
  }
  BB5 {
    clause_18 <- _19;
    _25 <- clause_18;
    _24 <- ([#"../CreuSAT/src/watches.rs" 139 15 139 27] Len1.len _25);
    goto BB6
  }
  BB6 {
    _23 <- ([#"../CreuSAT/src/watches.rs" 139 15 139 31] _24 > ([#"../CreuSAT/src/watches.rs" 139 30 139 31] (1 : usize)));
    switch (_23)
      | False -> goto BB18
      | True -> goto BB7
      end
  }
  BB7 {
    _29 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * self_1 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _29)) };
    _33 <- clause_18;
    _32 <- ([#"../CreuSAT/src/watches.rs" 142 29 142 38] Index1.index _33 ([#"../CreuSAT/src/watches.rs" 142 36 142 37] (0 : usize)));
    goto BB8
  }
  BB8 {
    _31 <- _32;
    _30 <- ([#"../CreuSAT/src/watches.rs" 142 29 142 56] ToNegWatchidx0.to_neg_watchidx _31);
    goto BB9
  }
  BB9 {
    _28 <- ([#"../CreuSAT/src/watches.rs" 142 16 142 57] IndexMut0.index_mut _29 _30);
    goto BB10
  }
  BB10 {
    _27 <- borrow_mut ( * _28);
    _28 <- { _28 with current = ( ^ _27) };
    assume { Resolve0.resolve _28 };
    _35 <- i_10;
    _38 <- clause_18;
    _37 <- ([#"../CreuSAT/src/watches.rs" 142 91 142 100] Index1.index _38 ([#"../CreuSAT/src/watches.rs" 142 98 142 99] (1 : usize)));
    goto BB11
  }
  BB11 {
    _36 <- _37;
    _34 <- CreuSat_Watches_Watcher_Type.C_Watcher _35 _36;
    _26 <- ([#"../CreuSAT/src/watches.rs" 142 16 142 103] Push0.push _27 _34);
    goto BB12
  }
  BB12 {
    _42 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * self_1 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _42)) };
    _46 <- clause_18;
    _45 <- ([#"../CreuSAT/src/watches.rs" 143 29 143 38] Index1.index _46 ([#"../CreuSAT/src/watches.rs" 143 36 143 37] (1 : usize)));
    goto BB13
  }
  BB13 {
    _44 <- _45;
    _43 <- ([#"../CreuSAT/src/watches.rs" 143 29 143 56] ToNegWatchidx0.to_neg_watchidx _44);
    goto BB14
  }
  BB14 {
    _41 <- ([#"../CreuSAT/src/watches.rs" 143 16 143 57] IndexMut0.index_mut _42 _43);
    goto BB15
  }
  BB15 {
    _40 <- borrow_mut ( * _41);
    _41 <- { _41 with current = ( ^ _40) };
    assume { Resolve0.resolve _41 };
    _48 <- i_10;
    _51 <- clause_18;
    _50 <- ([#"../CreuSAT/src/watches.rs" 143 91 143 100] Index1.index _51 ([#"../CreuSAT/src/watches.rs" 143 98 143 99] (0 : usize)));
    goto BB16
  }
  BB16 {
    _49 <- _50;
    _47 <- CreuSat_Watches_Watcher_Type.C_Watcher _48 _49;
    _39 <- ([#"../CreuSAT/src/watches.rs" 143 16 143 103] Push0.push _40 _47);
    goto BB17
  }
  BB17 {
    _22 <- ();
    goto BB19
  }
  BB18 {
    _22 <- ();
    goto BB19
  }
  BB19 {
    i_10 <- ([#"../CreuSAT/src/watches.rs" 145 12 145 18] i_10 + ([#"../CreuSAT/src/watches.rs" 145 17 145 18] (1 : usize)));
    _13 <- ();
    goto BB2
  }
  BB20 {
    assume { Resolve1.resolve self_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Trail_Impl0_LearnUnits_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Stub as InvariantMirror0
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub as NotSatisfiable0
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Stub as Invariant2 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Stub as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Stub as Invariant0
  val learn_units [#"../CreuSAT/src/trail.rs" 310 4 310 81] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (f : CreuSat_Formula_Formula_Type.t_formula) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : Core_Option_Option_Type.t_option bool
    requires {[#"../CreuSAT/src/trail.rs" 303 4 303 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 304 4 304 48] Invariant1.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 305 15 305 28] Invariant2.invariant' f}
    ensures { [#"../CreuSAT/src/trail.rs" 303 4 303 42] Invariant0.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 304 4 304 48] Invariant1.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 306 14 309 5] match (result) with
      | Core_Option_Option_Type.C_Some (True) -> NotSatisfiable0.not_satisfiable f
      | _ -> true
      end }
    
end
module CreuSat_Trail_Impl0_LearnUnits
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Snapshot
  use prelude.UInt8
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel12 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel5 with
    function ShallowModel0.shallow_model = ShallowModel12.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset1
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset1.unset
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel11 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel2 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel9 with
    type t = CreuSat_Assignments_Assignments_Type.t_assignments,
    type ShallowModelTy0.shallowModelTy = Seq.seq uint8,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel8 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Lit_Lit_Type.t_lit),
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel4 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel7 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Clause_Clause_Type.t_clause),
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone Core_Usize_Max as Max1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel3 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  use Core_Result_Result_Type as Core_Result_Result_Type
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant0 with
    predicate Invariant0.invariant' = Invariant3.invariant',
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Trail_Impl0_LearnUnit_Interface as LearnUnit0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel5.shallow_model,
    predicate Invariant3.invariant' = Invariant5.invariant',
    function ShallowModel2.shallow_model = ShallowModel0.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel2.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate Sat0.sat = Sat0.sat,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_ConflictAnalysis_ResolveEmptyClause_Interface as ResolveEmptyClause0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    predicate Invariant1.invariant' = Invariant0.invariant',
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate Unsat0.unsat = Unsat1.unsat,
    predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Trail_Trail_Type.t_trail
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreuSat_Lit_Impl2_LitUnsat_Interface as LitUnsat0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Unsat0.unsat = Unsat0.unsat
  clone CreuSat_Lit_Impl2_LitSet_Interface as LitSet0 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    predicate Invariant0.invariant' = Invariant4.invariant',
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Clause_Impl2_Len_Interface as Len1 with
    function ShallowModel0.shallow_model = ShallowModel8.shallow_model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  use Core_Option_Option_Type as Core_Option_Option_Type
  let rec cfg learn_units [#"../CreuSAT/src/trail.rs" 310 4 310 81] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Trail_Trail_Type.t_trail)) (f : CreuSat_Formula_Formula_Type.t_formula) (d : borrowed (CreuSat_Decision_Decisions_Type.t_decisions)) : Core_Option_Option_Type.t_option bool
    requires {[#"../CreuSAT/src/trail.rs" 303 4 303 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 304 4 304 48] Invariant1.invariant' ( * d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 305 15 305 28] Invariant2.invariant' f}
    ensures { [#"../CreuSAT/src/trail.rs" 303 4 303 42] Invariant0.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 304 4 304 48] Invariant1.invariant' ( ^ d) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 306 14 309 5] match (result) with
      | Core_Option_Option_Type.C_Some (True) -> NotSatisfiable0.not_satisfiable f
      | _ -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.t_option bool;
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var f_2 : CreuSat_Formula_Formula_Type.t_formula;
  var d_3 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _4 : ();
  var i_11 : usize;
  var old_d_12 : Snapshot.Snapshot_ty (borrowed (CreuSat_Decision_Decisions_Type.t_decisions));
  var _14 : ();
  var old_self_15 : Snapshot.Snapshot_ty (borrowed (CreuSat_Trail_Trail_Type.t_trail));
  var _17 : ();
  var _18 : ();
  var _21 : ();
  var _22 : bool;
  var _23 : usize;
  var _24 : usize;
  var _25 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Clause_Clause_Type.t_clause) (Alloc_Alloc_Global_Type.t_global);
  var clause_26 : CreuSat_Clause_Clause_Type.t_clause;
  var _27 : CreuSat_Clause_Clause_Type.t_clause;
  var _28 : CreuSat_Formula_Formula_Type.t_formula;
  var _29 : usize;
  var _30 : ();
  var _31 : bool;
  var _32 : usize;
  var _33 : CreuSat_Clause_Clause_Type.t_clause;
  var lit_34 : CreuSat_Lit_Lit_Type.t_lit;
  var _35 : CreuSat_Lit_Lit_Type.t_lit;
  var _36 : CreuSat_Clause_Clause_Type.t_clause;
  var _37 : bool;
  var _38 : CreuSat_Lit_Lit_Type.t_lit;
  var _39 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _40 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _41 : bool;
  var _42 : CreuSat_Lit_Lit_Type.t_lit;
  var _43 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _44 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _45 : ();
  var _46 : bool;
  var _47 : CreuSat_Formula_Formula_Type.t_formula;
  var _48 : CreuSat_Trail_Trail_Type.t_trail;
  var _49 : usize;
  var _50 : Core_Result_Result_Type.t_result () ();
  var _51 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _52 : usize;
  var _53 : CreuSat_Formula_Formula_Type.t_formula;
  var _54 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _55 : ();
  var _56 : ();
  var _57 : ();
  {
    self_1 <- self;
    f_2 <- f;
    d_3 <- d;
    goto BB0
  }
  BB0 {
    i_11 <- ([#"../CreuSAT/src/trail.rs" 311 20 311 21] (0 : usize));
    _14 <- ();
    old_d_12 <- ([#"../CreuSAT/src/trail.rs" 312 43 312 55] Snapshot.new d_3);
    goto BB1
  }
  BB1 {
    _17 <- ();
    old_self_15 <- ([#"../CreuSAT/src/trail.rs" 313 42 313 57] Snapshot.new self_1);
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    invariant { [#"../CreuSAT/src/trail.rs" 314 20 314 38] Invariant0.invariant' ( * self_1) f_2 };
    invariant { [#"../CreuSAT/src/trail.rs" 315 20 315 44] Invariant1.invariant' ( * d_3) (UIntSize.to_int (CreuSat_Formula_Formula_Type.formula_num_vars f_2)) };
    _23 <- i_11;
    _25 <- CreuSat_Formula_Formula_Type.formula_clauses f_2;
    _24 <- ([#"../CreuSAT/src/trail.rs" 316 18 316 33] Len0.len _25);
    goto BB4
  }
  BB4 {
    _22 <- ([#"../CreuSAT/src/trail.rs" 316 14 316 33] _23 < _24);
    switch (_22)
      | False -> goto BB21
      | True -> goto BB5
      end
  }
  BB5 {
    _28 <- f_2;
    _29 <- i_11;
    _27 <- ([#"../CreuSAT/src/trail.rs" 317 26 317 30] Index0.index _28 _29);
    goto BB6
  }
  BB6 {
    clause_26 <- _27;
    _33 <- clause_26;
    _32 <- ([#"../CreuSAT/src/trail.rs" 318 15 318 27] Len1.len _33);
    goto BB7
  }
  BB7 {
    _31 <- ([#"../CreuSAT/src/trail.rs" 318 15 318 32] _32 = ([#"../CreuSAT/src/trail.rs" 318 31 318 32] (1 : usize)));
    switch (_31)
      | False -> goto BB19
      | True -> goto BB8
      end
  }
  BB8 {
    _36 <- clause_26;
    _35 <- ([#"../CreuSAT/src/trail.rs" 319 26 319 35] Index1.index _36 ([#"../CreuSAT/src/trail.rs" 319 33 319 34] (0 : usize)));
    goto BB9
  }
  BB9 {
    lit_34 <- _35;
    _38 <- lit_34;
    _40 <- CreuSat_Trail_Trail_Type.trail_assignments ( * self_1);
    _39 <- _40;
    _37 <- ([#"../CreuSAT/src/trail.rs" 320 19 320 49] LitSet0.lit_set _38 _39);
    goto BB10
  }
  BB10 {
    switch (_37)
      | False -> goto BB16
      | True -> goto BB11
      end
  }
  BB11 {
    _42 <- lit_34;
    _44 <- CreuSat_Trail_Trail_Type.trail_assignments ( * self_1);
    _43 <- _44;
    _41 <- ([#"../CreuSAT/src/trail.rs" 321 23 321 55] LitUnsat0.lit_unsat _42 _43);
    goto BB12
  }
  BB12 {
    switch (_41)
      | False -> goto BB15
      | True -> goto BB13
      end
  }
  BB13 {
    assume { Resolve0.resolve d_3 };
    _47 <- f_2;
    _48 <-  * self_1;
    assume { Resolve1.resolve self_1 };
    _49 <- i_11;
    _46 <- ([#"../CreuSAT/src/trail.rs" 325 36 325 68] ResolveEmptyClause0.resolve_empty_clause _47 _48 _49);
    goto BB14
  }
  BB14 {
    _0 <- Core_Option_Option_Type.C_Some _46;
    goto BB22
  }
  BB15 {
    _30 <- ();
    goto BB18
  }
  BB16 {
    _51 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _51) };
    _52 <- i_11;
    _53 <- f_2;
    _54 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _54) };
    _50 <- ([#"../CreuSAT/src/trail.rs" 328 20 328 44] LearnUnit0.learn_unit _51 _52 _53 _54);
    goto BB17
  }
  BB17 {
    _30 <- ();
    goto BB18
  }
  BB18 {
    goto BB20
  }
  BB19 {
    _30 <- ();
    goto BB20
  }
  BB20 {
    i_11 <- ([#"../CreuSAT/src/trail.rs" 331 12 331 18] i_11 + ([#"../CreuSAT/src/trail.rs" 331 17 331 18] (1 : usize)));
    _21 <- ();
    goto BB3
  }
  BB21 {
    assume { Resolve1.resolve self_1 };
    assume { Resolve0.resolve d_3 };
    _18 <- ();
    _0 <- Core_Option_Option_Type.C_None;
    goto BB22
  }
  BB22 {
    return _0
  }
  
end
module CreuSat_Solver_Solver_Interface
  use prelude.Borrow
  use prelude.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max0
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Stub as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Stub as Equisat0
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Stub as FormulaSatInner0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel_Stub as ShallowModel0
  use CreuSat_Solver_SatResult_Type as CreuSat_Solver_SatResult_Type
  val solver [#"../CreuSAT/src/solver.rs" 350 0 350 49] (formula : borrowed (CreuSat_Formula_Formula_Type.t_formula)) : CreuSat_Solver_SatResult_Type.t_satresult
    ensures { [#"../CreuSAT/src/solver.rs" 345 10 349 1] match (result) with
      | CreuSat_Solver_SatResult_Type.C_Sat assn -> FormulaSatInner0.formula_sat_inner (ShallowModel0.shallow_model ( ^ formula)) (ShallowModel1.shallow_model assn) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | CreuSat_Solver_SatResult_Type.C_Unsat -> NotSatisfiable0.not_satisfiable ( ^ formula) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    
end
module CreuSat_Solver_Solver
  use prelude.Borrow
  use prelude.Int
  use prelude.IntSize
  use prelude.UInt8
  use prelude.UIntSize
  use seq.Seq
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with
    predicate Invariant0.invariant' = Invariant6.invariant'
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max0
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel11 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = uint8,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Assignments_Assignments_Type as CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ShallowModel as ShallowModel6 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel5 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel3 with
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate SatInner0.sat_inner = SatInner2.sat_inner,
    predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type as CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with
    predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
    predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with
    predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with
    predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel11.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel3.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel9 with
    type t = CreuSat_Decision_Node_Type.t_node,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  use CreuSat_Trail_Step_Type as CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    predicate Sat0.sat = Sat0.sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with
    predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with
    predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in,
    val Max0.mAX' = Max0.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with
    predicate Invariant0.invariant' = Invariant6.invariant',
    predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Trail_Step_Type.t_step,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max0.mAX',
    axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate SatInner0.sat_inner = SatInner0.sat_inner,
    val Max0.mAX' = Max0.mAX'
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant4 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max0.mAX'
  clone Core_Usize_Max as Max1
  use CreuSat_Decision_Decisions_Type as CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with
    function ShallowModel0.shallow_model = ShallowModel9.shallow_model,
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with
    function ShallowModel0.shallow_model = ShallowModel6.shallow_model
  use CreuSat_Trail_Trail_Type as CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with
    predicate Invariant0.invariant' = Invariant1.invariant',
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model,
    predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
    predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
    function ShallowModel2.shallow_model = ShallowModel6.shallow_model,
    predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
    predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
    predicate Sorted0.sorted = Sorted0.sorted,
    predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate Invariant0.invariant' = Invariant5.invariant',
    function ShallowModel1.shallow_model = ShallowModel3.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl0_ShallowModel as ShallowModel0 with
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    val Max0.mAX' = Max0.mAX'
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
    axiom .
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel4 with
    type t = CreuSat_Formula_Formula_Type.t_formula,
    type ShallowModelTy0.shallowModelTy = (Seq.seq (CreuSat_Clause_Clause_Type.t_clause), int),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with
    predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
    predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Solver_Solver_Type as CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model,
    predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  use CreuSat_Solver_SatResult_Type as CreuSat_Solver_SatResult_Type
  clone CreuSat_Solver_Impl0_Inner_Interface as Inner0 with
    val Max0.mAX' = Max1.mAX',
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant3.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    predicate Invariant3.invariant' = Invariant4.invariant',
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    predicate SatInner0.sat_inner = SatInner1.sat_inner,
    predicate Equisat0.equisat = Equisat0.equisat,
    predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete,
    predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
    val Max1.mAX' = Max0.mAX'
  clone CreuSat_Solver_Impl0_New_Interface as New4
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreuSat_Trail_Impl0_LearnUnits_Interface as LearnUnits0 with
    predicate Invariant0.invariant' = Invariant2.invariant',
    predicate Invariant1.invariant' = Invariant3.invariant',
    predicate Invariant2.invariant' = Invariant0.invariant',
    predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CreuSat_Decision_Decisions_Type.t_decisions
  clone CreuSat_Watches_Impl0_InitWatches_Interface as InitWatches0 with
    predicate Invariant0.invariant' = Invariant4.invariant',
    val Max0.mAX' = Max1.mAX',
    predicate Invariant1.invariant' = Invariant0.invariant',
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Watches_Impl0_New_Interface as New3 with
    predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Decision_Impl2_New_Interface as New2 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    val Max0.mAX' = Max0.mAX',
    predicate Invariant1.invariant' = Invariant3.invariant',
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_New_Interface as New1 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate Invariant2.invariant' = Invariant2.invariant',
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Assignments_Impl2_New_Interface as New0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    predicate Invariant1.invariant' = Invariant1.invariant',
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Formula_Formula_Type.t_formula
  clone CreuSat_Formula_Impl2_CheckFormulaInvariant_Interface as CheckFormulaInvariant0 with
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel1.shallow_model,
    predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner,
    predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
    predicate Invariant0.invariant' = Invariant0.invariant',
    val Max0.mAX' = Max1.mAX',
    val Max1.mAX' = Max0.mAX',
    predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  let rec cfg solver [#"../CreuSAT/src/solver.rs" 350 0 350 49] [@cfg:stackify] [@cfg:subregion_analysis] (formula : borrowed (CreuSat_Formula_Formula_Type.t_formula)) : CreuSat_Solver_SatResult_Type.t_satresult
    ensures { [#"../CreuSAT/src/solver.rs" 345 10 349 1] match (result) with
      | CreuSat_Solver_SatResult_Type.C_Sat assn -> FormulaSatInner0.formula_sat_inner (ShallowModel0.shallow_model ( ^ formula)) (ShallowModel1.shallow_model assn) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | CreuSat_Solver_SatResult_Type.C_Unsat -> NotSatisfiable0.not_satisfiable ( ^ formula) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_SatResult_Type.t_satresult;
  var formula_1 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _3 : ();
  var _4 : CreuSat_Solver_SatResult_Type.t_satresult;
  var _5 : CreuSat_Formula_Formula_Type.t_formula;
  var _6 : isize;
  var o_7 : CreuSat_Solver_SatResult_Type.t_satresult;
  var _8 : ();
  var trail_9 : CreuSat_Trail_Trail_Type.t_trail;
  var _10 : CreuSat_Formula_Formula_Type.t_formula;
  var _11 : CreuSat_Assignments_Assignments_Type.t_assignments;
  var _12 : CreuSat_Formula_Formula_Type.t_formula;
  var decisions_13 : CreuSat_Decision_Decisions_Type.t_decisions;
  var _14 : CreuSat_Formula_Formula_Type.t_formula;
  var watches_15 : CreuSat_Watches_Watches_Type.t_watches;
  var _16 : CreuSat_Formula_Formula_Type.t_formula;
  var _17 : ();
  var _18 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var _19 : CreuSat_Formula_Formula_Type.t_formula;
  var _20 : ();
  var _21 : Core_Option_Option_Type.t_option bool;
  var _22 : borrowed (CreuSat_Trail_Trail_Type.t_trail);
  var _23 : CreuSat_Formula_Formula_Type.t_formula;
  var _24 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _25 : borrowed (CreuSat_Decision_Decisions_Type.t_decisions);
  var _26 : isize;
  var _27 : ();
  var _28 : ();
  var solver_29 : CreuSat_Solver_Solver_Type.t_solver;
  var _30 : CreuSat_Formula_Formula_Type.t_formula;
  var _31 : borrowed (CreuSat_Solver_Solver_Type.t_solver);
  var _32 : borrowed (CreuSat_Formula_Formula_Type.t_formula);
  var _33 : CreuSat_Decision_Decisions_Type.t_decisions;
  var _34 : CreuSat_Trail_Trail_Type.t_trail;
  var _35 : CreuSat_Watches_Watches_Type.t_watches;
  {
    formula_1 <- formula;
    goto BB0
  }
  BB0 {
    _5 <-  * formula_1;
    _4 <- ([#"../CreuSAT/src/solver.rs" 351 10 351 43] CheckFormulaInvariant0.check_formula_invariant _5);
    goto BB1
  }
  BB1 {
    switch (_4)
      | CreuSat_Solver_SatResult_Type.C_Unknown -> goto BB3
      | _ -> goto BB2
      end
  }
  BB2 {
    assume { Resolve0.resolve formula_1 };
    o_7 <- _4;
    _4 <- any CreuSat_Solver_SatResult_Type.t_satresult;
    _0 <- o_7;
    o_7 <- any CreuSat_Solver_SatResult_Type.t_satresult;
    goto BB26
  }
  BB3 {
    _3 <- ();
    goto BB4
  }
  BB4 {
    _10 <-  * formula_1;
    _12 <-  * formula_1;
    _11 <- ([#"../CreuSAT/src/solver.rs" 355 40 355 65] New0.new _12);
    goto BB5
  }
  BB5 {
    trail_9 <- ([#"../CreuSAT/src/solver.rs" 355 20 355 66] New1.new _10 _11);
    goto BB6
  }
  BB6 {
    _14 <-  * formula_1;
    decisions_13 <- ([#"../CreuSAT/src/solver.rs" 356 24 356 47] New2.new _14);
    goto BB7
  }
  BB7 {
    _16 <-  * formula_1;
    watches_15 <- ([#"../CreuSAT/src/solver.rs" 357 22 357 43] New3.new _16);
    goto BB8
  }
  BB8 {
    _18 <- borrow_mut watches_15;
    watches_15 <-  ^ _18;
    _19 <-  * formula_1;
    _17 <- ([#"../CreuSAT/src/solver.rs" 358 4 358 33] InitWatches0.init_watches _18 _19);
    goto BB9
  }
  BB9 {
    _22 <- borrow_mut trail_9;
    trail_9 <-  ^ _22;
    _23 <-  * formula_1;
    _25 <- borrow_mut decisions_13;
    decisions_13 <-  ^ _25;
    _24 <- borrow_mut ( * _25);
    _25 <- { _25 with current = ( ^ _24) };
    assume { Resolve1.resolve _25 };
    _21 <- ([#"../CreuSAT/src/solver.rs" 359 10 359 52] LearnUnits0.learn_units _22 _23 _24);
    goto BB10
  }
  BB10 {
    switch (_21)
      | Core_Option_Option_Type.C_None -> goto BB14
      | Core_Option_Option_Type.C_Some _ -> goto BB11
      end
  }
  BB11 {
    assume { Resolve0.resolve formula_1 };
    switch (Core_Option_Option_Type.some_0 _21)
      | False -> goto BB12
      | True -> goto BB15
      end
  }
  BB12 {
    _0 <- CreuSat_Solver_SatResult_Type.C_Err;
    goto BB22
  }
  BB13 {
    assume { Resolve0.resolve formula_1 };
    absurd
  }
  BB14 {
    _20 <- ();
    _30 <-  * formula_1;
    solver_29 <- ([#"../CreuSAT/src/solver.rs" 364 21 364 41] New4.new _30);
    goto BB16
  }
  BB15 {
    _0 <- CreuSat_Solver_SatResult_Type.C_Unsat;
    goto BB22
  }
  BB16 {
    _31 <- borrow_mut solver_29;
    solver_29 <-  ^ _31;
    _32 <- borrow_mut ( * formula_1);
    formula_1 <- { formula_1 with current = ( ^ _32) };
    assume { Resolve0.resolve formula_1 };
    _33 <- decisions_13;
    decisions_13 <- any CreuSat_Decision_Decisions_Type.t_decisions;
    _34 <- trail_9;
    trail_9 <- any CreuSat_Trail_Trail_Type.t_trail;
    _35 <- watches_15;
    watches_15 <- any CreuSat_Watches_Watches_Type.t_watches;
    _0 <- ([#"../CreuSAT/src/solver.rs" 365 4 365 52] Inner0.inner _31 _32 _33 _34 _35);
    goto BB17
  }
  BB17 {
    goto BB18
  }
  BB18 {
    goto BB19
  }
  BB19 {
    goto BB20
  }
  BB20 {
    goto BB21
  }
  BB21 {
    goto BB28
  }
  BB22 {
    goto BB23
  }
  BB23 {
    goto BB24
  }
  BB24 {
    goto BB25
  }
  BB25 {
    goto BB28
  }
  BB26 {
    goto BB27
  }
  BB27 {
    goto BB28
  }
  BB28 {
    return _0
  }
  
end
module CreuSat_Watches_Impl0_MoveToEnd_Interface
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.Int
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max_Stub as Max1
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Stub as ToNegWatchidxLogic0
  clone Core_Usize_Max_Stub as Max0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Stub as IndexLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Stub as Invariant0
  val move_to_end [#"../CreuSAT/src/watches.rs" 121 4 121 93] (self : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (old_idx : usize) (old_pos : usize) (new_lit : CreuSat_Lit_Lit_Type.t_lit) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/watches.rs" 115 4 115 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/watches.rs" 116 15 116 52] IndexLogic0.index_logic new_lit < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/watches.rs" 117 15 117 68] ToNegWatchidxLogic0.to_neg_watchidx_logic new_lit < Seq.length (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 118 15 118 45] UIntSize.to_int old_idx < Seq.length (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 119 15 119 56] UIntSize.to_int old_pos < Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self))) (UIntSize.to_int old_idx)))}
    ensures { [#"../CreuSAT/src/watches.rs" 115 4 115 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/watches.rs" 120 14 120 81] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( ^ self))) (UIntSize.to_int old_idx))) = Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self))) (UIntSize.to_int old_idx))) }
    
end
module CreuSat_Watches_Impl0_MoveToEnd
  use prelude.Borrow
  use prelude.Int
  use prelude.UIntSize
  use prelude.Slice
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type as Alloc_Vec_Vec_Type
  clone Core_Num_Impl11_Max as Max1
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel10 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ShallowModel as ShallowModel9 with
    function ShallowModel0.shallow_model = ShallowModel10.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel8 with
    type t = CreuSat_Clause_Clause_Type.t_clause,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use CreuSat_Watches_Watcher_Type as CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Slice_Impl0_ShallowModel as ShallowModel7 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel1 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  use seq.Seq
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel6 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel5 with
    type t = slice (CreuSat_Watches_Watcher_Type.t_watcher),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel7.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_ResolveElswhere as ResolveElswhere0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type a = Alloc_Alloc_Global_Type.t_global,
    val Max0.mAX' = Max1.mAX',
    axiom .
  clone CreusotContracts_Model_Impl3_ShallowModel as ShallowModel4 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel3 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (CreuSat_Watches_Watcher_Type.t_watcher),
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CreusotContracts_Std1_Slice_Impl5_HasValue as HasValue0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Std1_Slice_Impl5_InBounds as InBounds0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreusotContracts_Model_Impl1_ShallowModel as ShallowModel2 with
    type t = Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global),
    type ShallowModelTy0.shallowModelTy = Seq.seq (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)),
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  use CreuSat_Formula_Formula_Type as CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel8.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel9.shallow_model,
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    val Max0.mAX' = Max1.mAX'
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel7.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = slice (CreuSat_Watches_Watcher_Type.t_watcher)
  clone Alloc_Vec_Impl10_DerefMut_Interface as DerefMut0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel5.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel6.shallow_model,
    function ShallowModel2.shallow_model = ShallowModel7.shallow_model,
    function ShallowModel3.shallow_model = ShallowModel1.shallow_model,
    val Max0.mAX' = Max1.mAX'
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone Alloc_Vec_Impl14_IndexMut_Interface as IndexMut0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
    type Output0.output = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    val Max0.mAX' = Max1.mAX'
  use CreuSat_Watches_Watches_Type as CreuSat_Watches_Watches_Type
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve0 with
    type t = CreuSat_Watches_Watches_Type.t_watches
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with
    type t = CreuSat_Watches_Watcher_Type.t_watcher,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone Alloc_Vec_Impl13_Index_Interface as Index0 with
    type t = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global),
    type i = usize,
    type a = Alloc_Alloc_Global_Type.t_global,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    predicate InBounds0.in_bounds = InBounds0.in_bounds,
    predicate HasValue0.has_value = HasValue0.has_value,
    type Output0.output = Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with
    function IndexLogic0.index_logic = IndexLogic0.index_logic,
    function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone Core_Usize_Max as Max0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal,
    val Max0.mAX' = Max1.mAX'
  let rec cfg move_to_end [#"../CreuSAT/src/watches.rs" 121 4 121 93] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CreuSat_Watches_Watches_Type.t_watches)) (old_idx : usize) (old_pos : usize) (new_lit : CreuSat_Lit_Lit_Type.t_lit) (_f : CreuSat_Formula_Formula_Type.t_formula) : ()
    requires {[#"../CreuSAT/src/watches.rs" 115 4 115 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/watches.rs" 116 15 116 52] IndexLogic0.index_logic new_lit < div (UIntSize.to_int Max0.mAX') 2}
    requires {[#"../CreuSAT/src/watches.rs" 117 15 117 68] ToNegWatchidxLogic0.to_neg_watchidx_logic new_lit < Seq.length (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 118 15 118 45] UIntSize.to_int old_idx < Seq.length (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 119 15 119 56] UIntSize.to_int old_pos < Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self))) (UIntSize.to_int old_idx)))}
    ensures { [#"../CreuSAT/src/watches.rs" 115 4 115 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/watches.rs" 120 14 120 81] Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( ^ self))) (UIntSize.to_int old_idx))) = Seq.length (ShallowModel1.shallow_model (Seq.get (ShallowModel0.shallow_model (CreuSat_Watches_Watches_Type.watches_watches ( * self))) (UIntSize.to_int old_idx))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Watches_Watches_Type.t_watches);
  var old_idx_2 : usize;
  var old_pos_3 : usize;
  var new_lit_4 : CreuSat_Lit_Lit_Type.t_lit;
  var _f_5 : CreuSat_Formula_Formula_Type.t_formula;
  var end'_13 : usize;
  var _14 : usize;
  var _15 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _16 : Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global);
  var _17 : Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global);
  var _18 : usize;
  var _19 : ();
  var _20 : borrowed (slice (CreuSat_Watches_Watcher_Type.t_watcher));
  var _21 : borrowed (slice (CreuSat_Watches_Watcher_Type.t_watcher));
  var _22 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _23 : borrowed (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global));
  var _24 : borrowed (Alloc_Vec_Vec_Type.t_vec (Alloc_Vec_Vec_Type.t_vec (CreuSat_Watches_Watcher_Type.t_watcher) (Alloc_Alloc_Global_Type.t_global)) (Alloc_Alloc_Global_Type.t_global));
  var _25 : usize;
  var _26 : usize;
  var _27 : usize;
  {
    self_1 <- self;
    old_idx_2 <- old_idx;
    old_pos_3 <- old_pos;
    new_lit_4 <- new_lit;
    _f_5 <- _f;
    goto BB0
  }
  BB0 {
    _17 <- CreuSat_Watches_Watches_Type.watches_watches ( * self_1);
    _18 <- old_idx_2;
    _16 <- ([#"../CreuSAT/src/watches.rs" 122 18 122 39] Index0.index _17 _18);
    goto BB1
  }
  BB1 {
    _15 <- _16;
    _14 <- ([#"../CreuSAT/src/watches.rs" 122 18 122 45] Len0.len _15);
    goto BB2
  }
  BB2 {
    end'_13 <- ([#"../CreuSAT/src/watches.rs" 122 18 122 49] _14 - ([#"../CreuSAT/src/watches.rs" 122 48 122 49] (1 : usize)));
    _24 <- borrow_mut (CreuSat_Watches_Watches_Type.watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.C_Watches a =  * self_1 in CreuSat_Watches_Watches_Type.C_Watches ( ^ _24)) };
    assume { Resolve0.resolve self_1 };
    _25 <- old_idx_2;
    _23 <- ([#"../CreuSAT/src/watches.rs" 123 8 123 29] IndexMut0.index_mut _24 _25);
    goto BB3
  }
  BB3 {
    _22 <- borrow_mut ( * _23);
    _23 <- { _23 with current = ( ^ _22) };
    assume { Resolve1.resolve _23 };
    _21 <- ([#"../CreuSAT/src/watches.rs" 123 8 123 48] DerefMut0.deref_mut _22);
    goto BB4
  }
  BB4 {
    _20 <- borrow_mut ( * _21);
    _21 <- { _21 with current = ( ^ _20) };
    assume { Resolve2.resolve _21 };
    _26 <- old_pos_3;
    _27 <- end'_13;
    _19 <- ([#"../CreuSAT/src/watches.rs" 123 8 123 48] Swap0.swap _20 _26 _27);
    goto BB5
  }
  BB5 {
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Assignments_Impl0
  
end
module CreuSat_Clause_Impl0
  
end
module CreuSat_Formula_Impl0
  
end
module CreuSat_Assignments_Impl1
  
end
module CreuSat_Clause_Impl1
  
end
module CreuSat_Formula_Impl1
  
end
module CreuSat_Clause_Impl3
  use prelude.Borrow
  use CreuSat_Clause_Clause_Type as CreuSat_Clause_Clause_Type
  goal clone'_refn : [#"../CreuSAT/src/clause.rs" 10 9 10 14] forall self : CreuSat_Clause_Clause_Type.t_clause . forall result : CreuSat_Clause_Clause_Type.t_clause . result = self -> result = self
end
module CreuSat_Decision_Impl3
  use prelude.Borrow
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  goal clone'_refn : [#"../CreuSAT/src/decision.rs" 9 9 9 14] forall self : CreuSat_Decision_Node_Type.t_node . forall result : CreuSat_Decision_Node_Type.t_node . result = self -> result = self
end
module CreuSat_Lit_Impl5
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  goal clone'_refn : [#"../CreuSAT/src/lit.rs" 12 9 12 14] forall self : CreuSat_Lit_Lit_Type.t_lit . forall result : CreuSat_Lit_Lit_Type.t_lit . result = self -> result = self
end
module CreuSat_Decision_Impl4
  
end
module CreuSat_Lit_Impl6
  
end
module CreuSat_Decision_Impl0
  use prelude.UIntSize
  clone Core_Num_Impl11_Max as Max0
  use CreuSat_Decision_Node_Type as CreuSat_Decision_Node_Type
  clone CreuSat_Decision_Impl1_IsDefault as IsDefault0 with
    val Max0.mAX' = Max0.mAX'
  goal default_refn : [#"../CreuSAT/src/decision.rs" 22 4 22 24] forall _1' : () . forall result : CreuSat_Decision_Node_Type.t_node . UIntSize.to_int (CreuSat_Decision_Node_Type.node_ts result) = 0 /\ UIntSize.to_int (CreuSat_Decision_Node_Type.node_prev result) = UIntSize.to_int Max0.mAX' /\ UIntSize.to_int (CreuSat_Decision_Node_Type.node_next result) = UIntSize.to_int Max0.mAX' -> IsDefault0.is_default result
end
module CreuSat_Decision_Impl1
  
end
module CreuSat_Lit_Impl0
  
end
module CreuSat_Logic_LogicAssignments_Impl0
  
end
module CreuSat_Logic_LogicClause_Impl0
  
end
module CreuSat_Logic_LogicFormula_Impl0
  
end
module CreuSat_Lit_Impl1
  
end
module CreusotContracts_Model_DeepModel_DeepModelTy_Type
  type self
  type deepModelTy
end
module CreusotContracts_Model_DeepModel_DeepModel_Stub
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
end
module CreusotContracts_Model_DeepModel_DeepModel_Interface
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
end
module CreusotContracts_Model_DeepModel_DeepModel
  type self
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = self
  function deep_model (self : self) : DeepModelTy0.deepModelTy
  val deep_model (self : self) : DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreusotContracts_Model_Impl0_DeepModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  function deep_model (self : t) : DeepModelTy0.deepModelTy
end
module CreusotContracts_Model_Impl0_DeepModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  function deep_model (self : t) : DeepModelTy0.deepModelTy
end
module CreusotContracts_Model_Impl0_DeepModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_DeepModel_DeepModelTy_Type as DeepModelTy0 with
    type self = t
  clone CreusotContracts_Model_DeepModel_DeepModel_Stub as DeepModel0 with
    type self = t,
    type DeepModelTy0.deepModelTy = DeepModelTy0.deepModelTy
  function deep_model (self : t) : DeepModelTy0.deepModelTy =
    [#"../CreuSAT/src/unit_prop.rs" 280 71 280 91] DeepModel0.deep_model self
  val deep_model (self : t) : DeepModelTy0.deepModelTy
    ensures { result = deep_model self }
    
end
module CreuSat_Lit_Impl3
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type as CreuSat_Lit_Lit_Type
  clone CreuSat_Lit_Impl1_DeepModel as DeepModel1
  clone CreusotContracts_Model_Impl0_DeepModel as DeepModel0 with
    type t = CreuSat_Lit_Lit_Type.t_lit,
    type DeepModelTy0.deepModelTy = CreuSat_Lit_Lit_Type.t_lit,
    function DeepModel0.deep_model = DeepModel1.deep_model
  goal eq_refn : [#"../CreuSAT/src/lit.rs" 133 4 133 37] forall self : CreuSat_Lit_Lit_Type.t_lit . forall other : CreuSat_Lit_Lit_Type.t_lit . forall result : bool . result = (self = other) -> result = (DeepModel0.deep_model self = DeepModel0.deep_model other)
end
module CreuSat_Lit_Impl4
  
end
