
module CreuSat_Lit_Lit_Type
  use mach.int.Int
  use prelude.UIntSize
  type creusat_lit_lit_type  =
    | CreuSat_Lit_Lit_Type usize bool
    
  let function creusat_lit_lit_type_Lit_idx (self : creusat_lit_lit_type) : usize = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Lit_Lit_Type a _ -> a
      end
  let function creusat_lit_lit_type_Lit_polarity (self : creusat_lit_lit_type) : bool = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Lit_Lit_Type _ a -> a
      end
end
module CreuSat_Lit_Impl1_New_Interface
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  val new [@cfg:stackify] (idx : usize) (polarity : bool) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
end
module CreuSat_Lit_Impl1_New
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  let rec cfg new [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 115 4 115 49] (idx : usize) (polarity : bool) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var idx_1 : usize;
  var polarity_2 : bool;
  var _3 : usize;
  var _4 : bool;
  {
    idx_1 <- idx;
    polarity_2 <- polarity;
    goto BB0
  }
  BB0 {
    _3 <- idx_1;
    _4 <- polarity_2;
    _0 <- CreuSat_Lit_Lit_Type.CreuSat_Lit_Lit_Type _3 _4;
    return _0
  }
  
end
module Core_Ptr_NonNull_NonNull_Type
  use prelude.Opaque
  type core_ptr_nonnull_nonnull_type 't =
    | Core_Ptr_NonNull_NonNull_Type opaque_ptr
    
end
module Core_Marker_PhantomData_Type
  type core_marker_phantomdata_type 't =
    | Core_Marker_PhantomData_Type
    
end
module Core_Ptr_Unique_Unique_Type
  use Core_Marker_PhantomData_Type
  use Core_Ptr_NonNull_NonNull_Type
  type core_ptr_unique_unique_type 't =
    | Core_Ptr_Unique_Unique_Type (Core_Ptr_NonNull_NonNull_Type.core_ptr_nonnull_nonnull_type 't) (Core_Marker_PhantomData_Type.core_marker_phantomdata_type 't)
    
end
module Alloc_RawVec_RawVec_Type
  use mach.int.Int
  use prelude.UIntSize
  use Core_Ptr_Unique_Unique_Type
  type alloc_rawvec_rawvec_type 't 'a =
    | Alloc_RawVec_RawVec_Type (Core_Ptr_Unique_Unique_Type.core_ptr_unique_unique_type 't) usize 'a
    
end
module Alloc_Vec_Vec_Type
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_RawVec_RawVec_Type
  type alloc_vec_vec_type 't 'a =
    | Alloc_Vec_Vec_Type (Alloc_RawVec_RawVec_Type.alloc_rawvec_rawvec_type 't 'a) usize
    
end
module Alloc_Alloc_Global_Type
  type alloc_alloc_global_type  =
    | Alloc_Alloc_Global_Type
    
end
module CreuSat_Clause_Clause_Type
  use mach.int.Int
  use mach.int.UInt32
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  type creusat_clause_clause_type  =
    | CreuSat_Clause_Clause_Type bool uint32 usize (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
    
  let function creusat_clause_clause_type_Clause_lits (self : creusat_clause_clause_type) : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Clause_Clause_Type _ _ _ a -> a
      end
  let function creusat_clause_clause_type_Clause_deleted (self : creusat_clause_clause_type) : bool
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Clause_Clause_Type a _ _ _ -> a
      end
  let function creusat_clause_clause_type_Clause_search (self : creusat_clause_clause_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Clause_Clause_Type _ _ a _ -> a
      end
end
module CreuSat_Formula_Formula_Type
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  type creusat_formula_formula_type  =
    | CreuSat_Formula_Formula_Type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) usize
    
  let function creusat_formula_formula_type_Formula_clauses (self : creusat_formula_formula_type) : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Formula_Formula_Type a _ -> a
      end
  let function creusat_formula_formula_type_Formula_num_vars (self : creusat_formula_formula_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Formula_Formula_Type _ a -> a
      end
end
module CreuSat_Solver_Solver_Type
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  type creusat_solver_solver_type  =
    | CreuSat_Solver_Solver_Type usize usize usize usize usize usize usize (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
    
  let function creusat_solver_solver_type_Solver_num_conflicts (self : creusat_solver_solver_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Solver_Solver_Type _ _ a _ _ _ _ _ -> a
      end
  let function creusat_solver_solver_type_Solver_num_lemmas (self : creusat_solver_solver_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Solver_Solver_Type a _ _ _ _ _ _ _ -> a
      end
  let function creusat_solver_solver_type_Solver_perm_diff (self : creusat_solver_solver_type) : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Solver_Solver_Type _ _ _ _ _ _ _ a -> a
      end
  let function creusat_solver_solver_type_Solver_max_lemmas (self : creusat_solver_solver_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Solver_Solver_Type _ a _ _ _ _ _ _ -> a
      end
  let function creusat_solver_solver_type_Solver_initial_len (self : creusat_solver_solver_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Solver_Solver_Type _ _ _ a _ _ _ _ -> a
      end
  let function creusat_solver_solver_type_Solver_fast (self : creusat_solver_solver_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Solver_Solver_Type _ _ _ _ _ a _ _ -> a
      end
  let function creusat_solver_solver_type_Solver_slow (self : creusat_solver_solver_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Solver_Solver_Type _ _ _ _ _ _ a _ -> a
      end
end
module CreusotContracts_Std1_Vec_Impl0_Model_Interface
  type t
  type a
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Vec_Vec_Type
  function model (self : Alloc_Vec_Vec_Type.alloc_vec_vec_type t a) : Seq.seq t
end
module CreusotContracts_Std1_Vec_Impl0_Model
  type t
  type a
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Vec_Vec_Type
  function model (self : Alloc_Vec_Vec_Type.alloc_vec_vec_type t a) : Seq.seq t
  axiom model_spec : forall self : Alloc_Vec_Vec_Type.alloc_vec_vec_type t a . Seq.length (model self) <= 18446744073709551615
end
module Alloc_Vec_Impl1_Len_Interface
  type t
  type a
  use mach.int.UInt64
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val len [@cfg:stackify] (self : Alloc_Vec_Vec_Type.alloc_vec_vec_type t a) : usize
    ensures { UInt64.to_int result = Seq.length (Model0.model self) }
    
end
module Alloc_Vec_Impl1_Len
  type t
  type a
  use mach.int.UInt64
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val len [@cfg:stackify] (self : Alloc_Vec_Vec_Type.alloc_vec_vec_type t a) : usize
    ensures { UInt64.to_int result = Seq.length (Model0.model self) }
    
end
module Alloc_Vec_FromElem_Interface
  type t
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val from_elem [@cfg:stackify] (elem : t) (n : usize) : Alloc_Vec_Vec_Type.alloc_vec_vec_type t (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    ensures { Seq.length (Model0.model result) = UInt64.to_int n }
    ensures { forall i : (int) . 0 <= i /\ i < UInt64.to_int n -> Seq.get (Model0.model result) i = elem }
    
end
module Alloc_Vec_FromElem
  type t
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val from_elem [@cfg:stackify] (elem : t) (n : usize) : Alloc_Vec_Vec_Type.alloc_vec_vec_type t (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    ensures { Seq.length (Model0.model result) = UInt64.to_int n }
    ensures { forall i : (int) . 0 <= i /\ i < UInt64.to_int n -> Seq.get (Model0.model result) i = elem }
    
end
module CreusotContracts_Std1_Vec_Impl0
  type t
  type a
end
module CreuSat_Solver_Impl0_New_Interface
  use prelude.Borrow
  use CreuSat_Solver_Solver_Type
  use CreuSat_Formula_Formula_Type
  val new [@cfg:stackify] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : CreuSat_Solver_Solver_Type.creusat_solver_solver_type
    
end
module CreuSat_Solver_Impl0_New
  use prelude.Borrow
  use CreuSat_Solver_Solver_Type
  use CreuSat_Formula_Formula_Type
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone Alloc_Vec_FromElem_Interface as FromElem0 with type t = usize, function Model0.model = Model1.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  let rec cfg new [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 76 4 76 37] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : CreuSat_Solver_Solver_Type.creusat_solver_solver_type
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_Solver_Type.creusat_solver_solver_type;
  var f_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _2 : usize;
  var _3 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _4 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _5 : usize;
  {
    f_1 <- f;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f_1;
    _2 <- ([#"../CreuSAT/src/solver.rs" 81 25 81 40] Len0.len _3);
    goto BB1
  }
  BB1 {
    _5 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _4 <- ([#"../CreuSAT/src/solver.rs" 85 23 85 52] FromElem0.from_elem (0 : usize) _5);
    goto BB2
  }
  BB2 {
    _0 <- CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type (0 : usize) (2000 : usize) (0 : usize) _2 (300 : usize) (16777216 : usize) (16777216 : usize) _4;
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module CreusotContracts_Logic_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Logic_Resolve_Impl1_Resolve
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t) =
     ^ self =  * self
end
module CreusotContracts_Logic_Resolve_Impl1
  type t
end
module CreuSat_Solver_Impl0_IncreaseNumConflicts_Interface
  use prelude.Borrow
  use CreuSat_Solver_Solver_Type
  val increase_num_conflicts [@cfg:stackify] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) : ()
    
end
module CreuSat_Solver_Impl0_IncreaseNumConflicts
  use prelude.Borrow
  use CreuSat_Solver_Solver_Type
  use mach.int.Int
  use prelude.UIntSize
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Solver_Solver_Type.creusat_solver_solver_type
  let rec cfg increase_num_conflicts [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 91 4 91 40] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _2 : bool;
  var _3 : usize;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_num_conflicts ( * self_1);
    _2 <- ([#"../CreuSAT/src/solver.rs" 92 11 92 42] _3 < (18446744073709551615 : usize));
    switch (_2)
      | False -> goto BB2
      | _ -> goto BB1
      end
  }
  BB1 {
    self_1 <- { self_1 with current = (let CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e f g h =  * self_1 in CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b ([#"../CreuSAT/src/solver.rs" 93 12 93 35] CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_num_conflicts ( * self_1) + (1 : usize)) d e f g h) };
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB3
  }
  BB2 {
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_IncreaseNumLemmas_Interface
  use prelude.Borrow
  use CreuSat_Solver_Solver_Type
  val increase_num_lemmas [@cfg:stackify] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) : ()
end
module CreuSat_Solver_Impl0_IncreaseNumLemmas
  use prelude.Borrow
  use CreuSat_Solver_Solver_Type
  use mach.int.Int
  use prelude.UIntSize
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Solver_Solver_Type.creusat_solver_solver_type
  let rec cfg increase_num_lemmas [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 99 4 99 37] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _2 : bool;
  var _3 : usize;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_num_lemmas ( * self_1);
    _2 <- ([#"../CreuSAT/src/solver.rs" 100 11 100 39] _3 < (18446744073709551615 : usize));
    switch (_2)
      | False -> goto BB2
      | _ -> goto BB1
      end
  }
  BB1 {
    self_1 <- { self_1 with current = (let CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e f g h =  * self_1 in CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type ([#"../CreuSAT/src/solver.rs" 101 12 101 32] CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_num_lemmas ( * self_1) + (1 : usize)) b c d e f g h) };
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB3
  }
  BB2 {
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module CreuSat_Util_UpdateFast_Interface
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  val update_fast [@cfg:stackify] (fast : borrowed usize) (lbd : usize) : ()
end
module CreuSat_Util_UpdateFast
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = usize
  let rec cfg update_fast [@cfg:stackify] [#"../CreuSAT/src/util.rs" 40 0 40 48] (fast : borrowed usize) (lbd : usize) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var fast_1 : borrowed usize;
  var lbd_2 : usize;
  var _3 : usize;
  var _4 : usize;
  var _5 : bool;
  var lbd_shl_fifteen_6 : usize;
  var _7 : bool;
  var _8 : usize;
  var _9 : usize;
  var _10 : bool;
  var _11 : usize;
  var _12 : bool;
  var _13 : usize;
  var _14 : usize;
  var _15 : usize;
  var _16 : usize;
  {
    fast_1 <- fast;
    lbd_2 <- lbd;
    goto BB0
  }
  BB0 {
    _4 <-  * fast_1;
    _5 <- ([#"../CreuSAT/src/util.rs" 41 13 41 23] (32 : usize) = (0 : usize));
    assert { not _5 };
    goto BB1
  }
  BB1 {
    _3 <- ([#"../CreuSAT/src/util.rs" 41 13 41 23] _4 / (32 : usize));
    fast_1 <- { fast_1 with current = ([#"../CreuSAT/src/util.rs" 41 4 41 23]  * fast_1 - _3) };
    _8 <- lbd_2;
    _10 <- ([#"../CreuSAT/src/util.rs" 42 35 42 53] (32768 : usize) = (0 : usize));
    assert { not _10 };
    goto BB2
  }
  BB2 {
    _9 <- ([#"../CreuSAT/src/util.rs" 42 35 42 53] (18446744073709551615 : usize) / (32768 : usize));
    _7 <- ([#"../CreuSAT/src/util.rs" 42 29 42 53] _8 < _9);
    switch (_7)
      | False -> goto BB4
      | _ -> goto BB3
      end
  }
  BB3 {
    _11 <- lbd_2;
    lbd_shl_fifteen_6 <- ([#"../CreuSAT/src/util.rs" 42 56 42 67] _11 * (32768 : usize));
    goto BB5
  }
  BB4 {
    lbd_shl_fifteen_6 <- lbd_2;
    goto BB5
  }
  BB5 {
    _14 <-  * fast_1;
    _13 <- ([#"../CreuSAT/src/util.rs" 43 7 43 25] (18446744073709551615 : usize) - _14);
    _15 <- lbd_shl_fifteen_6;
    _12 <- ([#"../CreuSAT/src/util.rs" 43 7 43 43] _13 > _15);
    switch (_12)
      | False -> goto BB7
      | _ -> goto BB6
      end
  }
  BB6 {
    _16 <- lbd_shl_fifteen_6;
    fast_1 <- { fast_1 with current = ([#"../CreuSAT/src/util.rs" 44 8 44 32]  * fast_1 + _16) };
    assume { Resolve0.resolve fast_1 };
    _0 <- ();
    goto BB8
  }
  BB7 {
    assume { Resolve0.resolve fast_1 };
    _0 <- ();
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Util_UpdateSlow_Interface
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  val update_slow [@cfg:stackify] (slow : borrowed usize) (lbd : usize) : ()
end
module CreuSat_Util_UpdateSlow
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = usize
  let rec cfg update_slow [@cfg:stackify] [#"../CreuSAT/src/util.rs" 50 0 50 48] (slow : borrowed usize) (lbd : usize) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var slow_1 : borrowed usize;
  var lbd_2 : usize;
  var _3 : usize;
  var _4 : usize;
  var _5 : bool;
  var lbd_shl_five_6 : usize;
  var _7 : bool;
  var _8 : usize;
  var _9 : usize;
  var _10 : bool;
  var _11 : usize;
  var _12 : bool;
  var _13 : usize;
  var _14 : usize;
  var _15 : usize;
  var _16 : usize;
  {
    slow_1 <- slow;
    lbd_2 <- lbd;
    goto BB0
  }
  BB0 {
    _4 <-  * slow_1;
    _5 <- ([#"../CreuSAT/src/util.rs" 51 13 51 26] (32768 : usize) = (0 : usize));
    assert { not _5 };
    goto BB1
  }
  BB1 {
    _3 <- ([#"../CreuSAT/src/util.rs" 51 13 51 26] _4 / (32768 : usize));
    slow_1 <- { slow_1 with current = ([#"../CreuSAT/src/util.rs" 51 4 51 26]  * slow_1 - _3) };
    _8 <- lbd_2;
    _10 <- ([#"../CreuSAT/src/util.rs" 52 32 52 47] (32 : usize) = (0 : usize));
    assert { not _10 };
    goto BB2
  }
  BB2 {
    _9 <- ([#"../CreuSAT/src/util.rs" 52 32 52 47] (18446744073709551615 : usize) / (32 : usize));
    _7 <- ([#"../CreuSAT/src/util.rs" 52 26 52 47] _8 < _9);
    switch (_7)
      | False -> goto BB4
      | _ -> goto BB3
      end
  }
  BB3 {
    _11 <- lbd_2;
    lbd_shl_five_6 <- ([#"../CreuSAT/src/util.rs" 52 50 52 58] _11 * (32 : usize));
    goto BB5
  }
  BB4 {
    lbd_shl_five_6 <- lbd_2;
    goto BB5
  }
  BB5 {
    _14 <-  * slow_1;
    _13 <- ([#"../CreuSAT/src/util.rs" 53 7 53 25] (18446744073709551615 : usize) - _14);
    _15 <- lbd_shl_five_6;
    _12 <- ([#"../CreuSAT/src/util.rs" 53 7 53 40] _13 > _15);
    switch (_12)
      | False -> goto BB7
      | _ -> goto BB6
      end
  }
  BB6 {
    _16 <- lbd_shl_five_6;
    slow_1 <- { slow_1 with current = ([#"../CreuSAT/src/util.rs" 54 8 54 29]  * slow_1 + _16) };
    assume { Resolve0.resolve slow_1 };
    _0 <- ();
    goto BB8
  }
  BB7 {
    assume { Resolve0.resolve slow_1 };
    _0 <- ();
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreusotContracts_Logic_Model_Model_ModelTy_Type
  type self
  type modelTy
end
module CreusotContracts_Logic_Model_Model_Model_Interface
  type self
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = self
  function model (self : self) : ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Model_Model
  type self
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = self
  function model (self : self) : ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Impl0_Model_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = t
  function model (self : t) : ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Impl0_Model
  type t
  use prelude.Borrow
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = t
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model0 with type self = t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  function model (self : t) : ModelTy0.modelTy =
    Model0.model self
end
module CreuSat_Assignments_Assignments_Type
  use mach.int.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  type creusat_assignments_assignments_type  =
    | CreuSat_Assignments_Assignments_Type (Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
    
  let function creusat_assignments_assignments_type_Assignments_0 (self : creusat_assignments_assignments_type) : Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Assignments_Assignments_Type a -> a
      end
end
module CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  type modelTy  =
    Seq.seq uint8
end
module CreusotContracts_Logic_Model_Impl0
  type t
end
module CreuSat_Logic_LogicAssignments_Impl0_Model_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Assignments_Assignments_Type
  function model (self : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : Seq.seq uint8
end
module CreuSat_Logic_LogicAssignments_Impl0_Model
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  function model [#"../CreuSAT/src/logic/logic_assignments.rs" 19 4 19 35] (self : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : Seq.seq uint8
    
   =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 18 4 18 12] Model0.model (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type_Assignments_0 self)
end
module CreuSat_Logic_LogicAssignments_Impl0
  use mach.int.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model0 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy1 with type self = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type modelTy = ModelTy0.modelTy
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface
  type self
  type t
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = t
  predicate in_bounds (self : self) (seq : ModelTy0.modelTy)
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds
  type self
  type t
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = t
  predicate in_bounds (self : self) (seq : ModelTy0.modelTy)
end
module Core_Slice_Index_SliceIndex_Output_Type
  type self
  type t
  type output
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface
  type self
  type t
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with type self = self, type t = t
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = t
  predicate has_value (self : self) (seq : ModelTy0.modelTy) (out : Output0.output)
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue
  type self
  type t
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with type self = self, type t = t
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = t
  predicate has_value (self : self) (seq : ModelTy0.modelTy) (out : Output0.output)
end
module CreusotContracts_Std1_Slice_Impl0_ModelTy_Type
  type t
  use seq.Seq
  type modelTy  =
    Seq.seq t
end
module Alloc_Vec_Impl16_Index_Interface
  type t
  type i
  type a
  use prelude.Borrow
  use prelude.Slice
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = t
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with type self = i, type t = seq t
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface as HasValue0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy, type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface as InBounds0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val index [@cfg:stackify] (self : Alloc_Vec_Vec_Type.alloc_vec_vec_type t a) (index : i) : Output0.output
    requires {InBounds0.in_bounds index (Model0.model self)}
    ensures { HasValue0.has_value index (Model0.model self) result }
    
end
module Alloc_Vec_Impl16_Index
  type t
  type i
  type a
  use prelude.Borrow
  use prelude.Slice
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = t
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with type self = i, type t = seq t
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface as HasValue0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy, type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface as InBounds0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val index [@cfg:stackify] (self : Alloc_Vec_Vec_Type.alloc_vec_vec_type t a) (index : i) : Output0.output
    requires {InBounds0.in_bounds index (Model0.model self)}
    ensures { HasValue0.has_value index (Model0.model self) result }
    
end
module Alloc_Vec_Impl16
  type t
  type i
  type a
end
module CreusotContracts_Std1_Slice_Impl3_InBounds_Interface
  type t
  use mach.int.Int
  use prelude.UIntSize
  use seq.Seq
  predicate in_bounds [@inline:trivial] (self : usize) (seq : Seq.seq t)
end
module CreusotContracts_Std1_Slice_Impl3_InBounds
  type t
  use mach.int.Int
  use prelude.UIntSize
  use seq.Seq
  use mach.int.UInt64
  predicate in_bounds [@inline:trivial] (self : usize) (seq : Seq.seq t) =
    UInt64.to_int self < Seq.length seq
end
module CreusotContracts_Std1_Slice_Impl3
  type t
end
module CreusotContracts_Std1_Slice_Impl3_HasValue_Interface
  type t
  use mach.int.Int
  use prelude.UIntSize
  use seq.Seq
  predicate has_value [@inline:trivial] (self : usize) (seq : Seq.seq t) (out : t)
end
module CreusotContracts_Std1_Slice_Impl3_HasValue
  type t
  use mach.int.Int
  use prelude.UIntSize
  use seq.Seq
  use mach.int.UInt64
  predicate has_value [@inline:trivial] (self : usize) (seq : Seq.seq t) (out : t) =
    Seq.get seq (UInt64.to_int self) = out
end
module Core_Slice_Index_Impl2_Output_Type
  type t
  type output  =
    t
end
module Core_Slice_Index_Impl2
  type t
end
module CreusotContracts_Std1_Slice_Impl0
  type t
end
module CreuSat_Assignments_Impl0_Index_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.UInt8
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val index [@cfg:stackify] (self : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (ix : usize) : uint8
    requires {[#"../CreuSAT/src/assignments.rs" 21 15 21 34] UInt64.to_int ix < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 22 14 22 37] Seq.get (Model0.model self) (UInt64.to_int ix) = result }
    
end
module CreuSat_Assignments_Impl0_Index
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = uint8
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = uint8
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = uint8, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  let rec cfg index [@cfg:stackify] [#"../CreuSAT/src/assignments.rs" 23 4 23 48] (self : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (ix : usize) : uint8
    requires {[#"../CreuSAT/src/assignments.rs" 21 15 21 34] UInt64.to_int ix < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 22 14 22 37] Seq.get (Model0.model self) (UInt64.to_int ix) = result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : uint8;
  var self_1 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var ix_2 : usize;
  var _3 : uint8;
  var _4 : uint8;
  var _5 : Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _6 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _5 <- CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type_Assignments_0 self_1;
    _6 <- ix_2;
    _4 <- ([#"../CreuSAT/src/assignments.rs" 29 9 29 19] Index0.index _5 _6);
    goto BB1
  }
  BB1 {
    _3 <- _4;
    _0 <- _3;
    return _0
  }
  
end
module CreusotContracts_Logic_Model_Impl1_Model_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = t
  function model (self : borrowed t) : ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Impl1_Model
  type t
  use prelude.Borrow
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = t
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model0 with type self = t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  function model (self : borrowed t) : ModelTy0.modelTy =
    Model0.model ( * self)
end
module CreusotContracts_Logic_Model_Impl1
  type t
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_ResolveElswhere_Interface
  type self
  type t
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = t
  predicate resolve_elswhere (self : self) (old' : ModelTy0.modelTy) (fin : ModelTy0.modelTy)
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_ResolveElswhere
  type self
  type t
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = t
  predicate resolve_elswhere (self : self) (old' : ModelTy0.modelTy) (fin : ModelTy0.modelTy)
end
module Alloc_Vec_Impl17_IndexMut_Interface
  type t
  type i
  type a
  use prelude.Borrow
  use seq.Seq
  use prelude.Slice
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = t
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with type self = i, type t = seq t
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_ResolveElswhere_Interface as ResolveElswhere0 with type self = i,
  type t = seq t, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface as HasValue0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy, type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface as InBounds0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val index_mut [@cfg:stackify] (self : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type t a)) (index : i) : borrowed Output0.output
    requires {InBounds0.in_bounds index (Model0.model ( * self))}
    ensures { HasValue0.has_value index (Model0.model ( * self)) ( * result) }
    ensures { HasValue0.has_value index (Model0.model ( ^ self)) ( ^ result) }
    ensures { ResolveElswhere0.resolve_elswhere index (Model0.model ( * self)) (Model0.model ( ^ self)) }
    ensures { Seq.length (Model0.model ( ^ self)) = Seq.length (Model0.model ( * self)) }
    
end
module Alloc_Vec_Impl17_IndexMut
  type t
  type i
  type a
  use prelude.Borrow
  use seq.Seq
  use prelude.Slice
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = t
  clone Core_Slice_Index_SliceIndex_Output_Type as Output0 with type self = i, type t = seq t
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_ResolveElswhere_Interface as ResolveElswhere0 with type self = i,
  type t = seq t, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface as HasValue0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy, type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface as InBounds0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val index_mut [@cfg:stackify] (self : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type t a)) (index : i) : borrowed Output0.output
    requires {InBounds0.in_bounds index (Model0.model ( * self))}
    ensures { HasValue0.has_value index (Model0.model ( * self)) ( * result) }
    ensures { HasValue0.has_value index (Model0.model ( ^ self)) ( ^ result) }
    ensures { ResolveElswhere0.resolve_elswhere index (Model0.model ( * self)) (Model0.model ( ^ self)) }
    ensures { Seq.length (Model0.model ( ^ self)) = Seq.length (Model0.model ( * self)) }
    
end
module Alloc_Vec_Impl17
  type t
  type i
  type a
end
module CreusotContracts_Std1_Slice_Impl3_ResolveElswhere_Interface
  type t
  use mach.int.Int
  use prelude.UIntSize
  use seq.Seq
  predicate resolve_elswhere [@inline:trivial] (self : usize) (old' : Seq.seq t) (fin : Seq.seq t)
end
module CreusotContracts_Std1_Slice_Impl3_ResolveElswhere
  type t
  use mach.int.Int
  use prelude.UIntSize
  use seq.Seq
  use mach.int.Int32
  use mach.int.UInt64
  predicate resolve_elswhere [@inline:trivial] (self : usize) (old' : Seq.seq t) (fin : Seq.seq t) =
    forall i : (int) . 0 <= i /\ i <> UInt64.to_int self /\ i < Seq.length old' -> Seq.get old' i = Seq.get fin i
end
module CreuSat_Assignments_Impl1_IndexMut_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use mach.int.Int32
  use prelude.UIntSize
  use prelude.UInt8
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val index_mut [@cfg:stackify] (self : borrowed (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)) (ix : usize) : borrowed uint8
    requires {[#"../CreuSAT/src/assignments.rs" 35 15 35 34] UInt64.to_int ix < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 36 14 36 38] Seq.get (Model1.model ( * self)) (UInt64.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/assignments.rs" 37 14 37 38] Seq.get (Model1.model ( ^ self)) (UInt64.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/assignments.rs" 38 4 38 101] forall i : (int) . 0 <= i /\ i <> UInt64.to_int ix /\ i < Seq.length (Model0.model self) -> Seq.get (Model0.model self) i = Seq.get (Model1.model ( ^ self)) i }
    ensures { [#"../CreuSAT/src/assignments.rs" 39 14 39 46] Seq.length (Model1.model ( ^ self)) = Seq.length (Model1.model ( * self)) }
    
end
module CreuSat_Assignments_Impl1_IndexMut
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use mach.int.Int32
  use prelude.UIntSize
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = uint8
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = uint8
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = uint8
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = uint8, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type
  let rec cfg index_mut [@cfg:stackify] [#"../CreuSAT/src/assignments.rs" 40 4 40 60] (self : borrowed (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)) (ix : usize) : borrowed uint8
    requires {[#"../CreuSAT/src/assignments.rs" 35 15 35 34] UInt64.to_int ix < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 36 14 36 38] Seq.get (Model1.model ( * self)) (UInt64.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/assignments.rs" 37 14 37 38] Seq.get (Model1.model ( ^ self)) (UInt64.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/assignments.rs" 38 4 38 101] forall i : (int) . 0 <= i /\ i <> UInt64.to_int ix /\ i < Seq.length (Model0.model self) -> Seq.get (Model0.model self) i = Seq.get (Model1.model ( ^ self)) i }
    ensures { [#"../CreuSAT/src/assignments.rs" 39 14 39 46] Seq.length (Model1.model ( ^ self)) = Seq.length (Model1.model ( * self)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : borrowed uint8;
  var self_1 : borrowed (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type);
  var ix_2 : usize;
  var _3 : borrowed uint8;
  var _4 : borrowed uint8;
  var _5 : borrowed uint8;
  var _6 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _7 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _6 <- borrow_mut (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type_Assignments_0 ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Assignments_Assignments_Type.CreuSat_Assignments_Assignments_Type a =  * self_1 in CreuSat_Assignments_Assignments_Type.CreuSat_Assignments_Assignments_Type ( ^ _6)) };
    assume { Resolve0.resolve self_1 };
    _7 <- ix_2;
    _5 <- ([#"../CreuSAT/src/assignments.rs" 46 13 46 23] IndexMut0.index_mut _6 _7);
    goto BB1
  }
  BB1 {
    _4 <- borrow_mut ( * _5);
    _5 <- { _5 with current = ( ^ _4) };
    assume { Resolve1.resolve _5 };
    _3 <- borrow_mut ( * _4);
    _4 <- { _4 with current = ( ^ _3) };
    assume { Resolve1.resolve _4 };
    _0 <- borrow_mut ( * _3);
    _3 <- { _3 with current = ( ^ _0) };
    assume { Resolve1.resolve _3 };
    return _0
  }
  
end
module CreuSat_Assignments_Impl2_Len_Interface
  use mach.int.UInt64
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val len [@cfg:stackify] (self : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : usize
    ensures { [#"../CreuSAT/src/assignments.rs" 54 14 54 38] UInt64.to_int result = Seq.length (Model0.model self) }
    
end
module CreuSat_Assignments_Impl2_Len
  use mach.int.UInt64
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  let rec cfg len [@cfg:stackify] [#"../CreuSAT/src/assignments.rs" 55 4 55 30] (self : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : usize
    ensures { [#"../CreuSAT/src/assignments.rs" 54 14 54 38] UInt64.to_int result = Seq.length (Model0.model self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _2 : Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _2 <- CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type_Assignments_0 self_1;
    _0 <- ([#"../CreuSAT/src/assignments.rs" 56 8 56 20] Len0.len _2);
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface
  use CreuSat_Formula_Formula_Type
  use CreuSat_Assignments_Assignments_Type
  predicate invariant' (self : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicAssignments_Impl1_Invariant
  use CreuSat_Formula_Formula_Type
  use CreuSat_Assignments_Assignments_Type
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UInt8
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate invariant' [#"../CreuSAT/src/logic/logic_assignments.rs" 47 4 47 46] (self : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 48 8 51 9] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) = Seq.length (Model0.model self) /\ (forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model self) -> UInt8.to_int (Seq.get (Model0.model self) i) <= 3)
end
module CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  function index_logic [@inline:trivial] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : int
end
module CreuSat_Logic_LogicLit_Impl0_IndexLogic
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  use mach.int.UInt64
  function index_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 21 4 21 35] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : int
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 22 8 22 31] UInt64.to_int (CreuSat_Lit_Lit_Type.creusat_lit_lit_type_Lit_idx self)
end
module CreuSat_Logic_LogicLit_Impl1_Invariant_Interface
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  predicate invariant' (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (n : int)
end
module CreuSat_Logic_LogicLit_Impl1_Invariant
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate invariant' [#"../CreuSAT/src/logic/logic_lit.rs" 72 4 72 42] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 73 20 73 42] IndexLogic0.index_logic self < n
end
module CreuSat_Logic_LogicClause_Impl0_Model_Interface
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type
  function model (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
    
end
module CreuSat_Logic_LogicClause_Impl0_Model
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  function model [#"../CreuSAT/src/logic/logic_clause.rs" 15 4 15 35] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 14 4 14 12] Model0.model (CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_lits self)
end
module CreuSat_Logic_LogicClause_VarsInRangeInner_Interface
  use seq.Seq
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  predicate vars_in_range_inner (s : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)) (n : int)
end
module CreuSat_Logic_LogicClause_VarsInRangeInner
  use seq.Seq
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  predicate vars_in_range_inner [#"../CreuSAT/src/logic/logic_clause.rs" 21 0 21 55] (s : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 22 4 25 5] forall i : (int) . 0 <= i /\ i < Seq.length s -> Invariant0.invariant' (Seq.get s i) n
end
module CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  predicate no_duplicate_indexes_inner (s : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type))
end
module CreuSat_Logic_LogicClause_NoDuplicateIndexesInner
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate no_duplicate_indexes_inner [#"../CreuSAT/src/logic/logic_clause.rs" 41 0 41 54] (s : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type))
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 42 4 45 5] forall k : (int) . forall j : (int) . 0 <= j /\ j < Seq.length s /\ 0 <= k /\ k < j -> not IndexLogic0.index_logic (Seq.get s k) = IndexLogic0.index_logic (Seq.get s j)
end
module CreuSat_Logic_LogicClause_InvariantInternal_Interface
  use seq.Seq
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  predicate invariant_internal (s : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)) (n : int)
end
module CreuSat_Logic_LogicClause_InvariantInternal
  use seq.Seq
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  predicate invariant_internal [#"../CreuSAT/src/logic/logic_clause.rs" 29 0 29 54] (s : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 30 4 30 62] VarsInRangeInner0.vars_in_range_inner s n /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner s
end
module CreuSat_Logic_LogicClause_Impl2_Invariant_Interface
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  predicate invariant' (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (n : int)
end
module CreuSat_Logic_LogicClause_Impl2_Invariant
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_InvariantInternal_Interface as InvariantInternal0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate invariant' [#"../CreuSAT/src/logic/logic_clause.rs" 193 4 193 42] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 194 20 194 48] InvariantInternal0.invariant_internal (Model0.model self) n
end
module CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface
  use CreuSat_Formula_Formula_Type
  predicate invariant_mirror (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
end
module CreuSat_Logic_LogicFormula_Impl1_InvariantMirror
  use CreuSat_Formula_Formula_Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use mach.int.UInt64
  use CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate invariant_mirror [#"../CreuSAT/src/logic/logic_formula.rs" 73 4 73 37] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 75 12 79 49] (forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self)) -> Invariant0.invariant' (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self)) i) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self))) /\ (forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self)) -> Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self)) i)) >= 1)
end
module CreuSat_Logic_LogicFormula_Impl0_Model_Interface
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type
  function model (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)
    
end
module CreuSat_Logic_LogicFormula_Impl0_Model
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type
  use mach.int.UInt64
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  function model [#"../CreuSAT/src/logic/logic_formula.rs" 15 4 15 35] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 16 8 16 53] (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self), UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self))
end
module CreuSat_Logic_LogicFormula_FormulaInvariant_Interface
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  predicate formula_invariant (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int))
end
module CreuSat_Logic_LogicFormula_FormulaInvariant
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  predicate formula_invariant [#"../CreuSAT/src/logic/logic_formula.rs" 21 0 21 55] (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int))
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 22 4 25 5] forall i : (int) . 0 <= i /\ i < Seq.length (let (a, _) = f in a) -> Invariant0.invariant' (Seq.get (let (a, _) = f in a) i) (let (_, a) = f in a) /\ Seq.length (Model0.model (Seq.get (let (a, _) = f in a) i)) > 0
end
module CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  type modelTy  =
    (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)
end
module CreuSat_Logic_LogicFormula_Impl0
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy1 with type self = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type modelTy = ModelTy0.modelTy
end
module CreuSat_Logic_LogicClause_Impl0_ModelTy_Type
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  type modelTy  =
    Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
end
module CreuSat_Logic_LogicClause_Impl0
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model0 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy1 with type self = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type modelTy = ModelTy0.modelTy
end
module CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  predicate invariant' (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
end
module CreuSat_Logic_LogicFormula_Impl1_Invariant
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicFormula_Impl0_Model_Interface as Model0
  predicate invariant' [#"../CreuSAT/src/logic/logic_formula.rs" 68 4 68 34] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 69 20 69 44] FormulaInvariant0.formula_invariant (Model0.model self)
  axiom invariant'_spec : forall self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type . [#"../CreuSAT/src/logic/logic_formula.rs" 67 14 67 47] invariant' self = InvariantMirror0.invariant_mirror self
end
module CreuSat_Logic_LogicFormula_Impl1_Invariant_Impl
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model2 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model2.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant0.invariant',
  function Model0.model = Model2.model
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model1.model,
  predicate Invariant0.invariant' = Invariant0.invariant', function Model1.model = Model2.model
  let rec ghost function invariant' (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : bool
    ensures { [#"../CreuSAT/src/logic/logic_formula.rs" 67 14 67 47] result = InvariantMirror0.invariant_mirror self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_formula.rs" 69 20 69 44] let a' = Model0.model self in FormulaInvariant0.formula_invariant a'
end
module CreuSat_Trail_Reason_Type
  use mach.int.Int
  use prelude.UIntSize
  type creusat_trail_reason_type  =
    | CreuSat_Trail_Reason_Decision_Type
    | CreuSat_Trail_Reason_Unit_Type usize
    | CreuSat_Trail_Reason_Long_Type usize
    
  let function creusat_trail_reason_type_Long_0 (self : creusat_trail_reason_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Trail_Reason_Decision_Type -> any usize
      | CreuSat_Trail_Reason_Unit_Type _ -> any usize
      | CreuSat_Trail_Reason_Long_Type a -> a
      end
  let function creusat_trail_reason_type_Unit_0 (self : creusat_trail_reason_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Trail_Reason_Decision_Type -> any usize
      | CreuSat_Trail_Reason_Unit_Type a -> a
      | CreuSat_Trail_Reason_Long_Type _ -> any usize
      end
end
module CreuSat_Trail_Step_Type
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Trail_Reason_Type
  use CreuSat_Lit_Lit_Type
  type creusat_trail_step_type  =
    | CreuSat_Trail_Step_Type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) usize (CreuSat_Trail_Reason_Type.creusat_trail_reason_type)
    
  let function creusat_trail_step_type_Step_lit (self : creusat_trail_step_type) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Trail_Step_Type a _ _ -> a
      end
  let function creusat_trail_step_type_Step_reason (self : creusat_trail_step_type) : CreuSat_Trail_Reason_Type.creusat_trail_reason_type
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Trail_Step_Type _ _ a -> a
      end
end
module CreuSat_Logic_LogicTrail_Impl0_Invariant_Interface
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type
  predicate invariant' (self : CreuSat_Trail_Reason_Type.creusat_trail_reason_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicTrail_Impl0_Invariant
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate invariant' [#"../CreuSAT/src/logic/logic_trail.rs" 12 4 12 46] (self : CreuSat_Trail_Reason_Type.creusat_trail_reason_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 14 12 22 13] match (self) with
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type cref -> 0 <= UInt64.to_int cref /\ UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) /\ Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))) > 1
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Unit_Type cref -> 0 <= UInt64.to_int cref /\ UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) /\ Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))) = 1
      | _ -> true
      end
end
module CreuSat_Logic_LogicTrail_TrailInvariant_Interface
  use seq.Seq
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type
  predicate trail_invariant (trail : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicTrail_TrailInvariant
  use seq.Seq
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use CreuSat_Trail_Reason_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  predicate trail_invariant [#"../CreuSAT/src/logic/logic_trail.rs" 98 0 98 60] (trail : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 99 4 103 5] forall i : (int) . 0 <= i /\ i < Seq.length trail -> Invariant0.invariant' (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get trail i)) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ Invariant1.invariant' (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason (Seq.get trail i)) f
end
module CreuSat_Logic_Logic_Unset_Interface
  use mach.int.Int
  use prelude.UInt8
  predicate unset (v : uint8)
end
module CreuSat_Logic_Logic_Unset
  use mach.int.Int
  use prelude.UInt8
  use mach.int.Int32
  predicate unset [#"../CreuSAT/src/logic/logic.rs" 20 0 20 38] (v : uint8) =
    [#"../CreuSAT/src/logic/logic.rs" 21 4 27 5] if UInt8.to_int v >= 2 then true else false
end
module CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface
  use CreuSat_Lit_Lit_Type
  function is_positive_logic [@inline:trivial] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : bool
end
module CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic
  use CreuSat_Lit_Lit_Type
  function is_positive_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 27 4 27 42] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : bool
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 28 20 28 33] CreuSat_Lit_Lit_Type.creusat_lit_lit_type_Lit_polarity self
end
module CreuSat_Logic_LogicLit_Impl1_SatInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  predicate sat_inner (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicLit_Impl1_SatInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  predicate sat_inner [#"../CreuSAT/src/logic/logic_lit.rs" 77 4 77 57] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 79 12 82 13] if IsPositiveLogic0.is_positive_logic self then
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 1
    else
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 0
    
end
module CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  predicate unsat_inner (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicLit_Impl1_UnsatInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_lit.rs" 87 4 87 59] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 89 12 92 13] if IsPositiveLogic0.is_positive_logic self then
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 0
    else
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 1
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  predicate clause_post_with_regards_to_inner (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8) (j : int)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate clause_post_with_regards_to_inner [#"../CreuSAT/src/logic/logic_trail.rs" 122 0 122 90] (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8) (j : int)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 124 8 126 79] IndexLogic0.index_logic (Seq.get (Model0.model c) 0) = j /\ SatInner0.sat_inner (Seq.get (Model0.model c) 0) a /\ (forall i : (int) . 1 <= i /\ i < Seq.length (Model0.model c) -> UnsatInner0.unsat_inner (Seq.get (Model0.model c) i) a)
end
module CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type
  predicate long_are_post_unit_inner (trail : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicTrail_LongArePostUnitInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type
  use mach.int.Int32
  use mach.int.UInt64
  use CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Interface as ClausePostWithRegardsToInner0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Reason_Type
  predicate long_are_post_unit_inner [#"../CreuSAT/src/logic/logic_trail.rs" 156 0 156 92] (trail : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 157 4 163 5] forall j : (int) . 0 <= j /\ j < Seq.length trail -> match (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason (Seq.get trail j)) with
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type k -> ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int k)) a (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get trail j)))
      | _ -> true
      end
end
module CreuSat_Logic_LogicLit_Impl1_Sat_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  predicate sat (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicLit_Impl1_Sat
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate sat [#"../CreuSAT/src/logic/logic_lit.rs" 102 4 102 44] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 103 20 103 38] SatInner0.sat_inner self (Model0.model a)
end
module CreusotContracts_Std1_Vec_Impl0_ModelTy_Type
  type t
  type a
  use seq.Seq
  type modelTy  =
    Seq.seq t
end
module CreuSat_Lit_Impl1_IsPositive_Interface
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  val is_positive [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 39 14 39 48] result = IsPositiveLogic0.is_positive_logic self }
    
end
module CreuSat_Lit_Impl1_IsPositive
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  let rec cfg is_positive [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 40 4 40 36] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 39 14 39 48] result = IsPositiveLogic0.is_positive_logic self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _0 <- CreuSat_Lit_Lit_Type.creusat_lit_lit_type_Lit_polarity self_1;
    return _0
  }
  
end
module CreuSat_Lit_Impl1_Index_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  val index [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : usize
    ensures { [#"../CreuSAT/src/lit.rs" 32 14 32 43] UInt64.to_int result = IndexLogic0.index_logic self }
    
end
module CreuSat_Lit_Impl1_Index
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  let rec cfg index [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 33 4 33 31] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : usize
    ensures { [#"../CreuSAT/src/lit.rs" 32 14 32 43] UInt64.to_int result = IndexLogic0.index_logic self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _0 <- CreuSat_Lit_Lit_Type.creusat_lit_lit_type_Lit_idx self_1;
    return _0
  }
  
end
module CreuSat_Assignments_Impl2_SetAssignment_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy1
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use Alloc_Vec_Vec_Type
  use CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy1.modelTy
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant0
  val set_assignment [@cfg:stackify] (self : borrowed (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (_t : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) : ()
    requires {[#"../CreuSAT/src/assignments.rs" 61 4 61 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/assignments.rs" 62 15 62 42] Invariant1.invariant' lit (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/assignments.rs" 63 15 63 29] Invariant2.invariant' _f}
    requires {[#"../CreuSAT/src/assignments.rs" 64 15 64 40] TrailInvariant0.trail_invariant (Model0.model _t) _f}
    requires {[#"../CreuSAT/src/assignments.rs" 65 15 65 48] Unset0.unset (Seq.get (Model1.model self) (IndexLogic0.index_logic lit))}
    requires {[#"../CreuSAT/src/assignments.rs" 66 15 66 56] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model _t) _f (Model1.model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 61 4 61 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/assignments.rs" 67 14 67 56] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model _t) _f (Model2.model ( ^ self)) }
    ensures { [#"../CreuSAT/src/assignments.rs" 68 14 68 49] not Unset0.unset (Seq.get (Model2.model ( ^ self)) (IndexLogic0.index_logic lit)) }
    ensures { [#"../CreuSAT/src/assignments.rs" 69 14 69 45] Seq.length (Model2.model ( ^ self)) = Seq.length (Model1.model self) }
    ensures { [#"../CreuSAT/src/assignments.rs" 70 4 71 71] forall j : (int) . 0 <= j /\ j < Seq.length (Model1.model self) /\ j <> IndexLogic0.index_logic lit -> Seq.get (Model2.model ( * self)) j = Seq.get (Model2.model ( ^ self)) j }
    ensures { [#"../CreuSAT/src/assignments.rs" 72 14 72 28] Sat0.sat lit ( ^ self) }
    
end
module CreuSat_Assignments_Impl2_SetAssignment
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model7 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model7.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy1
  use CreuSat_Trail_Reason_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant3 with function Model0.model = Model5.model,
  function Model1.model = Model7.model
  use CreuSat_Trail_Step_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model7.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model7.model
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model1 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model2.model
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant'
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model4.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model3.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant0 with function Model0.model = Model2.model
  use prelude.UIntSize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy2 with type t = uint8
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = uint8
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = uint8
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = uint8, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model6.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type
  clone CreuSat_Lit_Impl1_IsPositive_Interface as IsPositive0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  let rec cfg set_assignment [@cfg:stackify] [#"../CreuSAT/src/assignments.rs" 73 4 73 76] (self : borrowed (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (_t : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) : ()
    requires {[#"../CreuSAT/src/assignments.rs" 61 4 61 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/assignments.rs" 62 15 62 42] Invariant1.invariant' lit (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/assignments.rs" 63 15 63 29] Invariant2.invariant' _f}
    requires {[#"../CreuSAT/src/assignments.rs" 64 15 64 40] TrailInvariant0.trail_invariant (Model0.model _t) _f}
    requires {[#"../CreuSAT/src/assignments.rs" 65 15 65 48] Unset0.unset (Seq.get (Model1.model self) (IndexLogic0.index_logic lit))}
    requires {[#"../CreuSAT/src/assignments.rs" 66 15 66 56] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model _t) _f (Model1.model self)}
    ensures { [#"../CreuSAT/src/assignments.rs" 61 4 61 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/assignments.rs" 67 14 67 56] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model _t) _f (Model2.model ( ^ self)) }
    ensures { [#"../CreuSAT/src/assignments.rs" 68 14 68 49] not Unset0.unset (Seq.get (Model2.model ( ^ self)) (IndexLogic0.index_logic lit)) }
    ensures { [#"../CreuSAT/src/assignments.rs" 69 14 69 45] Seq.length (Model2.model ( ^ self)) = Seq.length (Model1.model self) }
    ensures { [#"../CreuSAT/src/assignments.rs" 70 4 71 71] forall j : (int) . 0 <= j /\ j < Seq.length (Model1.model self) /\ j <> IndexLogic0.index_logic lit -> Seq.get (Model2.model ( * self)) j = Seq.get (Model2.model ( ^ self)) j }
    ensures { [#"../CreuSAT/src/assignments.rs" 72 14 72 28] Sat0.sat lit ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type);
  var lit_2 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _t_4 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  ghost var old_self_5 : borrowed (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type);
  var _6 : ();
  var _7 : bool;
  var _8 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _9 : borrowed uint8;
  var _10 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _11 : usize;
  var _12 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _13 : borrowed uint8;
  var _14 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _15 : usize;
  var _16 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    lit_2 <- lit;
    _f_3 <- _f;
    _t_4 <- _t;
    goto BB0
  }
  BB0 {
    _6 <- ();
    old_self_5 <- ghost ([#"../CreuSAT/src/assignments.rs" 74 48 74 63] self_1);
    goto BB1
  }
  BB1 {
    _8 <- lit_2;
    _7 <- ([#"../CreuSAT/src/assignments.rs" 76 11 76 28] IsPositive0.is_positive _8);
    goto BB2
  }
  BB2 {
    switch (_7)
      | False -> goto BB6
      | _ -> goto BB3
      end
  }
  BB3 {
    _10 <- borrow_mut (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type_Assignments_0 ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Assignments_Assignments_Type.CreuSat_Assignments_Assignments_Type a =  * self_1 in CreuSat_Assignments_Assignments_Type.CreuSat_Assignments_Assignments_Type ( ^ _10)) };
    assume { Resolve0.resolve self_1 };
    _12 <- lit_2;
    _11 <- ([#"../CreuSAT/src/assignments.rs" 77 19 77 30] Index0.index _12);
    goto BB4
  }
  BB4 {
    _9 <- ([#"../CreuSAT/src/assignments.rs" 77 12 77 31] IndexMut0.index_mut _10 _11);
    goto BB5
  }
  BB5 {
    _9 <- { _9 with current = (1 : uint8) };
    assume { Resolve1.resolve _9 };
    _0 <- ();
    goto BB9
  }
  BB6 {
    _14 <- borrow_mut (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type_Assignments_0 ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Assignments_Assignments_Type.CreuSat_Assignments_Assignments_Type a =  * self_1 in CreuSat_Assignments_Assignments_Type.CreuSat_Assignments_Assignments_Type ( ^ _14)) };
    assume { Resolve0.resolve self_1 };
    _16 <- lit_2;
    _15 <- ([#"../CreuSAT/src/assignments.rs" 79 19 79 30] Index0.index _16);
    goto BB7
  }
  BB7 {
    _13 <- ([#"../CreuSAT/src/assignments.rs" 79 12 79 31] IndexMut0.index_mut _14 _15);
    goto BB8
  }
  BB8 {
    _13 <- { _13 with current = (0 : uint8) };
    assume { Resolve1.resolve _13 };
    _0 <- ();
    goto BB9
  }
  BB9 {
    return _0
  }
  
end
module CreuSat_Assignments_Impl2_New_Interface
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val new [@cfg:stackify] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type
    requires {[#"../CreuSAT/src/assignments.rs" 85 15 85 28] Invariant0.invariant' f}
    ensures { [#"../CreuSAT/src/assignments.rs" 86 14 86 34] Invariant1.invariant' result f }
    
end
module CreuSat_Assignments_Impl2_New
  use prelude.Borrow
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model3.model
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model0.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.UIntSize
  clone Alloc_Vec_FromElem_Interface as FromElem0 with type t = uint8, function Model0.model = Model4.model
  let rec cfg new [@cfg:stackify] [#"../CreuSAT/src/assignments.rs" 87 4 87 35] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type
    requires {[#"../CreuSAT/src/assignments.rs" 85 15 85 28] Invariant0.invariant' f}
    ensures { [#"../CreuSAT/src/assignments.rs" 86 14 86 34] Invariant1.invariant' result f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var f_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _2 : Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _3 : usize;
  {
    f_1 <- f;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _2 <- ([#"../CreuSAT/src/assignments.rs" 88 20 88 49] FromElem0.from_elem (2 : uint8) _3);
    goto BB1
  }
  BB1 {
    _0 <- CreuSat_Assignments_Assignments_Type.CreuSat_Assignments_Assignments_Type _2;
    goto BB2
  }
  BB2 {
    return _0
  }
  
end
module CreuSat_Clause_Impl0_Index_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Clause_Clause_Type
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val index [@cfg:stackify] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (ix : usize) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    requires {[#"../CreuSAT/src/clause.rs" 22 15 22 34] UInt64.to_int ix < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 23 14 23 37] Seq.get (Model0.model self) (UInt64.to_int ix) = result }
    
end
module CreuSat_Clause_Impl0_Index
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  let rec cfg index [@cfg:stackify] [#"../CreuSAT/src/clause.rs" 24 4 24 38] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (ix : usize) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    requires {[#"../CreuSAT/src/clause.rs" 22 15 22 34] UInt64.to_int ix < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 23 14 23 37] Seq.get (Model0.model self) (UInt64.to_int ix) = result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var self_1 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var ix_2 : usize;
  var _3 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _4 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _5 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _6 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _5 <- CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_lits self_1;
    _6 <- ix_2;
    _4 <- ([#"../CreuSAT/src/clause.rs" 30 9 30 22] Index0.index _5 _6);
    goto BB1
  }
  BB1 {
    _3 <- _4;
    _0 <- _3;
    return _0
  }
  
end
module CreuSat_Clause_Impl1_IndexMut_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use mach.int.Int32
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val index_mut [@cfg:stackify] (self : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)) (ix : usize) : borrowed (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
    requires {[#"../CreuSAT/src/clause.rs" 36 15 36 34] UInt64.to_int ix < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 37 14 37 38] Seq.get (Model1.model ( * self)) (UInt64.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/clause.rs" 38 14 38 38] Seq.get (Model1.model ( ^ self)) (UInt64.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/clause.rs" 39 4 39 101] forall i : (int) . 0 <= i /\ i <> UInt64.to_int ix /\ i < Seq.length (Model0.model self) -> Seq.get (Model0.model self) i = Seq.get (Model1.model ( ^ self)) i }
    ensures { [#"../CreuSAT/src/clause.rs" 40 14 40 46] Seq.length (Model1.model ( ^ self)) = Seq.length (Model1.model ( * self)) }
    
end
module CreuSat_Clause_Impl1_IndexMut
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use mach.int.Int32
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  let rec cfg index_mut [@cfg:stackify] [#"../CreuSAT/src/clause.rs" 41 4 41 50] (self : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)) (ix : usize) : borrowed (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
    requires {[#"../CreuSAT/src/clause.rs" 36 15 36 34] UInt64.to_int ix < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 37 14 37 38] Seq.get (Model1.model ( * self)) (UInt64.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/clause.rs" 38 14 38 38] Seq.get (Model1.model ( ^ self)) (UInt64.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/clause.rs" 39 4 39 101] forall i : (int) . 0 <= i /\ i <> UInt64.to_int ix /\ i < Seq.length (Model0.model self) -> Seq.get (Model0.model self) i = Seq.get (Model1.model ( ^ self)) i }
    ensures { [#"../CreuSAT/src/clause.rs" 40 14 40 46] Seq.length (Model1.model ( ^ self)) = Seq.length (Model1.model ( * self)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : borrowed (CreuSat_Lit_Lit_Type.creusat_lit_lit_type);
  var self_1 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var ix_2 : usize;
  var _3 : borrowed (CreuSat_Lit_Lit_Type.creusat_lit_lit_type);
  var _4 : borrowed (CreuSat_Lit_Lit_Type.creusat_lit_lit_type);
  var _5 : borrowed (CreuSat_Lit_Lit_Type.creusat_lit_lit_type);
  var _6 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _7 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _6 <- borrow_mut (CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_lits ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c d =  * self_1 in CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c ( ^ _6)) };
    assume { Resolve0.resolve self_1 };
    _7 <- ix_2;
    _5 <- ([#"../CreuSAT/src/clause.rs" 47 13 47 26] IndexMut0.index_mut _6 _7);
    goto BB1
  }
  BB1 {
    _4 <- borrow_mut ( * _5);
    _5 <- { _5 with current = ( ^ _4) };
    assume { Resolve1.resolve _5 };
    _3 <- borrow_mut ( * _4);
    _4 <- { _4 with current = ( ^ _3) };
    assume { Resolve1.resolve _4 };
    _0 <- borrow_mut ( * _3);
    _3 <- { _3 with current = ( ^ _0) };
    assume { Resolve1.resolve _3 };
    return _0
  }
  
end
module CreuSat_Clause_Impl2_Clone_Interface
  use prelude.Borrow
  use CreuSat_Clause_Clause_Type
  val clone' [@cfg:stackify] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : CreuSat_Clause_Clause_Type.creusat_clause_clause_type
    ensures { [#"../CreuSAT/src/clause.rs" 53 14 53 29] result = self }
    
end
module CreuSat_Clause_Impl2_Clone
  use prelude.Borrow
  use CreuSat_Clause_Clause_Type
  val clone' [@cfg:stackify] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : CreuSat_Clause_Clause_Type.creusat_clause_clause_type
    ensures { [#"../CreuSAT/src/clause.rs" 53 14 53 29] result = self }
    
end
module CreuSat_Clause_Impl3_Len_Interface
  use mach.int.UInt64
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Clause_Clause_Type
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val len [@cfg:stackify] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : usize
    ensures { [#"../CreuSAT/src/clause.rs" 102 14 102 38] UInt64.to_int result = Seq.length (Model0.model self) }
    
end
module CreuSat_Clause_Impl3_Len
  use mach.int.UInt64
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  let rec cfg len [@cfg:stackify] [#"../CreuSAT/src/clause.rs" 103 4 103 30] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : usize
    ensures { [#"../CreuSAT/src/clause.rs" 102 14 102 38] UInt64.to_int result = Seq.length (Model0.model self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _2 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _2 <- CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_lits self_1;
    _0 <- ([#"../CreuSAT/src/clause.rs" 104 8 104 23] Len0.len _2);
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module CreuSat_Lit_Impl1_CheckLitInvariant_Interface
  use mach.int.UInt64
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  val check_lit_invariant [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (n : usize) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 46 14 46 42] result = Invariant0.invariant' self (UInt64.to_int n) }
    
end
module CreuSat_Lit_Impl1_CheckLitInvariant
  use mach.int.UInt64
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg check_lit_invariant [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 47 4 47 55] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (n : usize) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 46 14 46 42] result = Invariant0.invariant' self (UInt64.to_int n) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var n_2 : usize;
  var _3 : usize;
  var _4 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _5 : usize;
  {
    self_1 <- self;
    n_2 <- n;
    goto BB0
  }
  BB0 {
    _4 <- self_1;
    _3 <- ([#"../CreuSAT/src/lit.rs" 48 8 48 20] Index0.index _4);
    goto BB1
  }
  BB1 {
    _5 <- n_2;
    _0 <- ([#"../CreuSAT/src/lit.rs" 48 8 48 24] _3 < _5);
    return _0
  }
  
end
module CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes_Interface
  use CreuSat_Clause_Clause_Type
  predicate no_duplicate_indexes (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
end
module CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes
  use CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate no_duplicate_indexes [#"../CreuSAT/src/logic/logic_clause.rs" 183 4 183 45] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 184 20 184 53] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model0.model self)
end
module CreuSat_Clause_Impl0_Output_Type
  use CreuSat_Lit_Lit_Type
  type output  =
    CreuSat_Lit_Lit_Type.creusat_lit_lit_type
end
module Core_Ops_Index_Index_Output_Type
  type self
  type idx
  type output
end
module Core_Ops_Index_Index_Index_Interface
  type self
  type idx
  use prelude.Borrow
  clone Core_Ops_Index_Index_Output_Type as Output0 with type self = self, type idx = idx
  val index [@cfg:stackify] (self : self) (index : idx) : Output0.output
    requires {false}
    
end
module Core_Ops_Index_Index_Index
  type self
  type idx
  use prelude.Borrow
  clone Core_Ops_Index_Index_Output_Type as Output0 with type self = self, type idx = idx
  val index [@cfg:stackify] (self : self) (index : idx) : Output0.output
    requires {false}
    
end
module CreuSat_Clause_Impl0
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Clause_Impl0_Output_Type as Output0
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with function Model0.model = Model0.model
  clone Core_Ops_Index_Index_Index_Interface as Index1 with type self = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type idx = usize, val index = Index0.index, type Output0.output = Output0.output
  clone Core_Ops_Index_Index_Output_Type as Output1 with type self = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type idx = usize, type output = Output0.output
end
module CreuSat_Clause_Impl3_NoDuplicates_Interface
  use prelude.Borrow
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes_Interface as NoDuplicateIndexes0
  val no_duplicates [@cfg:stackify] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : bool
    ensures { [#"../CreuSAT/src/clause.rs" 78 14 78 51] result = NoDuplicateIndexes0.no_duplicate_indexes self }
    
end
module CreuSat_Clause_Impl3_NoDuplicates
  use prelude.Borrow
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use seq.Seq
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes as NoDuplicateIndexes0 with function Model0.model = Model1.model,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use prelude.UIntSize
  clone CreuSat_Lit_Impl1_Index_Interface as Index1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with function Model0.model = Model0.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len0 with function Model0.model = Model0.model
  let rec cfg no_duplicates [@cfg:stackify] [#"../CreuSAT/src/clause.rs" 79 4 79 39] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : bool
    ensures { [#"../CreuSAT/src/clause.rs" 78 14 78 51] result = NoDuplicateIndexes0.no_duplicate_indexes self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var i_2 : usize;
  var _3 : ();
  var _4 : ();
  var _5 : bool;
  var _6 : usize;
  var _7 : usize;
  var _8 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var lit1_9 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _10 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _11 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _12 : usize;
  var j_13 : usize;
  var _14 : ();
  var _15 : bool;
  var _16 : usize;
  var _17 : usize;
  var lit2_18 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _19 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _20 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _21 : usize;
  var _22 : ();
  var _23 : bool;
  var _24 : usize;
  var _25 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _26 : usize;
  var _27 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _28 : ();
  var _29 : ();
  var _30 : ();
  var _31 : ();
  var _32 : ();
  var _33 : ();
  var _34 : ();
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    i_2 <- (0 : usize);
    goto BB1
  }
  BB1 {
    invariant no_dups { [#"../CreuSAT/src/clause.rs" 81 8 83 87] forall k : (int) . forall j : (int) . 0 <= j /\ j < UInt64.to_int i_2 /\ 0 <= k /\ k < j -> IndexLogic0.index_logic (Seq.get (Model0.model self_1) j) <> IndexLogic0.index_logic (Seq.get (Model0.model self_1) k) };
    _6 <- i_2;
    _8 <- self_1;
    _7 <- ([#"../CreuSAT/src/clause.rs" 84 18 84 28] Len0.len _8);
    goto BB2
  }
  BB2 {
    _5 <- ([#"../CreuSAT/src/clause.rs" 84 14 84 28] _6 < _7);
    switch (_5)
      | False -> goto BB13
      | _ -> goto BB3
      end
  }
  BB3 {
    _11 <- self_1;
    _12 <- i_2;
    _10 <- ([#"../CreuSAT/src/clause.rs" 85 23 85 30] Index0.index _11 _12);
    goto BB4
  }
  BB4 {
    lit1_9 <- _10;
    j_13 <- (0 : usize);
    goto BB5
  }
  BB5 {
    invariant inv { [#"../CreuSAT/src/clause.rs" 87 12 87 113] forall k : (int) . 0 <= k /\ k < UInt64.to_int j_13 -> IndexLogic0.index_logic lit1_9 <> IndexLogic0.index_logic (Seq.get (Model0.model self_1) k) };
    _16 <- j_13;
    _17 <- i_2;
    _15 <- ([#"../CreuSAT/src/clause.rs" 88 18 88 23] _16 < _17);
    switch (_15)
      | False -> goto BB12
      | _ -> goto BB6
      end
  }
  BB6 {
    _20 <- self_1;
    _21 <- j_13;
    _19 <- ([#"../CreuSAT/src/clause.rs" 89 27 89 34] Index0.index _20 _21);
    goto BB7
  }
  BB7 {
    lit2_18 <- _19;
    _25 <- lit1_9;
    _24 <- ([#"../CreuSAT/src/clause.rs" 90 19 90 31] Index1.index _25);
    goto BB8
  }
  BB8 {
    _27 <- lit2_18;
    _26 <- ([#"../CreuSAT/src/clause.rs" 90 35 90 47] Index1.index _27);
    goto BB9
  }
  BB9 {
    _23 <- ([#"../CreuSAT/src/clause.rs" 90 19 90 47] _24 = _26);
    switch (_23)
      | False -> goto BB11
      | _ -> goto BB10
      end
  }
  BB10 {
    _0 <- false;
    goto BB14
  }
  BB11 {
    _22 <- ();
    j_13 <- ([#"../CreuSAT/src/clause.rs" 93 16 93 22] j_13 + (1 : usize));
    _4 <- ();
    goto BB5
  }
  BB12 {
    _14 <- ();
    i_2 <- ([#"../CreuSAT/src/clause.rs" 95 12 95 18] i_2 + (1 : usize));
    _4 <- ();
    goto BB1
  }
  BB13 {
    _3 <- ();
    _0 <- true;
    goto BB14
  }
  BB14 {
    return _0
  }
  
end
module CreuSat_Clause_Impl3_CheckClauseInvariant_Interface
  use mach.int.UInt64
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  val check_clause_invariant [@cfg:stackify] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (n : usize) : bool
    ensures { [#"../CreuSAT/src/clause.rs" 61 14 61 42] result = Invariant0.invariant' self (UInt64.to_int n) }
    
end
module CreuSat_Clause_Impl3_CheckClauseInvariant
  use mach.int.UInt64
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes as NoDuplicateIndexes0 with function Model0.model = Model1.model,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Clause_Impl3_NoDuplicates_Interface as NoDuplicates0 with predicate NoDuplicateIndexes0.no_duplicate_indexes = NoDuplicateIndexes0.no_duplicate_indexes
  clone CreuSat_Lit_Impl1_CheckLitInvariant_Interface as CheckLitInvariant0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with function Model0.model = Model0.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len0 with function Model0.model = Model0.model
  let rec cfg check_clause_invariant [@cfg:stackify] [#"../CreuSAT/src/clause.rs" 62 4 62 58] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (n : usize) : bool
    ensures { [#"../CreuSAT/src/clause.rs" 61 14 61 42] result = Invariant0.invariant' self (UInt64.to_int n) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var n_2 : usize;
  var i_3 : usize;
  var _4 : ();
  var _5 : ();
  var _6 : bool;
  var _7 : usize;
  var _8 : usize;
  var _9 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _10 : ();
  var _11 : bool;
  var _12 : bool;
  var _13 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _14 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _15 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _16 : usize;
  var _17 : usize;
  var _18 : ();
  var _19 : ();
  var _20 : ();
  var _21 : ();
  var _22 : ();
  var _23 : bool;
  var _24 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _25 : ();
  {
    self_1 <- self;
    n_2 <- n;
    goto BB0
  }
  BB0 {
    i_3 <- (0 : usize);
    goto BB1
  }
  BB1 {
    invariant inv { [#"../CreuSAT/src/clause.rs" 64 8 64 87] forall j : (int) . 0 <= j /\ j < UInt64.to_int i_3 -> Invariant1.invariant' (Seq.get (Model0.model self_1) j) (UInt64.to_int n_2) };
    _7 <- i_3;
    _9 <- self_1;
    _8 <- ([#"../CreuSAT/src/clause.rs" 65 18 65 28] Len0.len _9);
    goto BB2
  }
  BB2 {
    _6 <- ([#"../CreuSAT/src/clause.rs" 65 14 65 28] _7 < _8);
    switch (_6)
      | False -> goto BB8
      | _ -> goto BB3
      end
  }
  BB3 {
    _15 <- self_1;
    _16 <- i_3;
    _14 <- ([#"../CreuSAT/src/clause.rs" 66 16 66 23] Index0.index _15 _16);
    goto BB4
  }
  BB4 {
    _13 <- _14;
    _17 <- n_2;
    _12 <- ([#"../CreuSAT/src/clause.rs" 66 16 66 46] CheckLitInvariant0.check_lit_invariant _13 _17);
    goto BB5
  }
  BB5 {
    _11 <- not _12;
    switch (_11)
      | False -> goto BB7
      | _ -> goto BB6
      end
  }
  BB6 {
    _0 <- false;
    goto BB12
  }
  BB7 {
    _10 <- ();
    i_3 <- ([#"../CreuSAT/src/clause.rs" 69 12 69 18] i_3 + (1 : usize));
    _5 <- ();
    goto BB1
  }
  BB8 {
    _4 <- ();
    _24 <- self_1;
    _23 <- ([#"../CreuSAT/src/clause.rs" 71 11 71 31] NoDuplicates0.no_duplicates _24);
    goto BB9
  }
  BB9 {
    switch (_23)
      | False -> goto BB11
      | _ -> goto BB10
      end
  }
  BB10 {
    _0 <- true;
    goto BB12
  }
  BB11 {
    _22 <- ();
    _0 <- false;
    goto BB13
  }
  BB12 {
    goto BB13
  }
  BB13 {
    return _0
  }
  
end
module CreuSat_Clause_Impl3_ClauseFromVec_Interface
  use prelude.Borrow
  use prelude.Slice
  use seq.Seq
  use CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type
  val clause_from_vec [@cfg:stackify] (vec : seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)) : CreuSat_Clause_Clause_Type.creusat_clause_clause_type
    
end
module CreuSat_Clause_Impl3_ClauseFromVec
  use prelude.Borrow
  use prelude.Slice
  use seq.Seq
  use CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type
  val clause_from_vec [@cfg:stackify] (vec : seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)) : CreuSat_Clause_Clause_Type.creusat_clause_clause_type
    
end
module CreuSat_Logic_LogicLit_Impl1_LitIn_Interface
  use CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type
  predicate lit_in (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    
end
module CreuSat_Logic_LogicLit_Impl1_LitIn
  use CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate lit_in [#"../CreuSAT/src/logic/logic_lit.rs" 59 4 59 42] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 60 8 60 80] exists i : (int) . 0 <= i /\ i < Seq.length (Model0.model c) /\ Seq.get (Model0.model c) i = self
end
module CreusotContracts_Std1_Slice_Impl0_Model_Interface
  type t
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use prelude.Slice
  function model (self : seq t) : Seq.seq t
end
module CreusotContracts_Std1_Slice_Impl0_Model
  type t
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use prelude.Slice
  function model (self : seq t) : Seq.seq t
  axiom model_spec : forall self : seq t . model self = Slice.id self && Seq.length (model self) <= 18446744073709551615
end
module Alloc_Vec_Impl11_DerefMut_Interface
  type t
  type a
  use prelude.Borrow
  use prelude.Slice
  use seq.Seq
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = t, type a = a, axiom .
  clone CreusotContracts_Std1_Slice_Impl0_Model_Interface as Model0 with type t = t, axiom .
  val deref_mut [@cfg:stackify] (self : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type t a)) : borrowed (seq t)
    ensures { Model0.model ( * result) = Model1.model ( * self) }
    ensures { Model0.model ( ^ result) = Model1.model ( ^ self) }
    
end
module Alloc_Vec_Impl11_DerefMut
  type t
  type a
  use prelude.Borrow
  use prelude.Slice
  use seq.Seq
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = t, type a = a, axiom .
  clone CreusotContracts_Std1_Slice_Impl0_Model_Interface as Model0 with type t = t, axiom .
  val deref_mut [@cfg:stackify] (self : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type t a)) : borrowed (seq t)
    ensures { Model0.model ( * result) = Model1.model ( * self) }
    ensures { Model0.model ( ^ result) = Model1.model ( ^ self) }
    
end
module Core_Slice_Impl0_Swap_Interface
  type t
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use seq.Permut
  use prelude.Slice
  use prelude.UIntSize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = t
  clone CreusotContracts_Std1_Slice_Impl0_Model_Interface as Model1 with type t = t, axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val swap [@cfg:stackify] (self : borrowed (seq t)) (a : usize) (b : usize) : ()
    requires {UInt64.to_int a < Seq.length (Model0.model self)}
    requires {UInt64.to_int b < Seq.length (Model0.model self)}
    ensures { Permut.exchange (Model1.model ( ^ self)) (Model1.model ( * self)) (UInt64.to_int a) (UInt64.to_int b) }
    
end
module Core_Slice_Impl0_Swap
  type t
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use seq.Permut
  use prelude.Slice
  use prelude.UIntSize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = t
  clone CreusotContracts_Std1_Slice_Impl0_Model_Interface as Model1 with type t = t, axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val swap [@cfg:stackify] (self : borrowed (seq t)) (a : usize) (b : usize) : ()
    requires {UInt64.to_int a < Seq.length (Model0.model self)}
    requires {UInt64.to_int b < Seq.length (Model0.model self)}
    ensures { Permut.exchange (Model1.model ( ^ self)) (Model1.model ( * self)) (UInt64.to_int a) (UInt64.to_int b) }
    
end
module Alloc_Vec_Impl11
  type t
  type a
end
module CreuSat_Clause_Impl3_MoveToEnd_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Interface as LitIn0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  val move_to_end [@cfg:stackify] (self : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/clause.rs" 117 4 117 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 118 15 118 32] Seq.length (Model0.model self) > 0}
    requires {[#"../CreuSAT/src/clause.rs" 119 15 119 35] UInt64.to_int idx < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 117 4 117 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 120 4 121 85] forall i : (int) . 0 <= i /\ i < Seq.length (Model1.model ( ^ self)) -> (exists j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) /\ Seq.get (Model1.model ( ^ self)) i = Seq.get (Model0.model self) j) }
    ensures { [#"../CreuSAT/src/clause.rs" 122 14 122 61] Seq.get (Model1.model ( ^ self)) (Seq.length (Model1.model ( ^ self)) - 1) = Seq.get (Model0.model self) (UInt64.to_int idx) }
    ensures { [#"../CreuSAT/src/clause.rs" 123 14 123 47] Seq.length (Model1.model ( ^ self)) = Seq.length (Model0.model self) }
    ensures { [#"../CreuSAT/src/clause.rs" 124 4 125 38] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) -> LitIn0.lit_in (Seq.get (Model0.model self) j) ( ^ self) }
    
end
module CreuSat_Clause_Impl3_MoveToEnd
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with function Model0.model = Model1.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use prelude.Slice
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model4 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model5 with type t = seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model4.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model3 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  function Model0.model = Model5.model, function Model1.model = Model4.model
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model4.model,
  function Model1.model = Model2.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreuSat_Clause_Impl3_Len_Interface as Len0 with function Model0.model = Model3.model
  let rec cfg move_to_end [@cfg:stackify] [#"../CreuSAT/src/clause.rs" 126 4 126 55] (self : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/clause.rs" 117 4 117 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 118 15 118 32] Seq.length (Model0.model self) > 0}
    requires {[#"../CreuSAT/src/clause.rs" 119 15 119 35] UInt64.to_int idx < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 117 4 117 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 120 4 121 85] forall i : (int) . 0 <= i /\ i < Seq.length (Model1.model ( ^ self)) -> (exists j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) /\ Seq.get (Model1.model ( ^ self)) i = Seq.get (Model0.model self) j) }
    ensures { [#"../CreuSAT/src/clause.rs" 122 14 122 61] Seq.get (Model1.model ( ^ self)) (Seq.length (Model1.model ( ^ self)) - 1) = Seq.get (Model0.model self) (UInt64.to_int idx) }
    ensures { [#"../CreuSAT/src/clause.rs" 123 14 123 47] Seq.length (Model1.model ( ^ self)) = Seq.length (Model0.model self) }
    ensures { [#"../CreuSAT/src/clause.rs" 124 4 125 38] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) -> LitIn0.lit_in (Seq.get (Model0.model self) j) ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var idx_2 : usize;
  var _f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var end'_4 : usize;
  var _5 : usize;
  var _6 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _7 : ();
  var _8 : borrowed (seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type));
  var _9 : borrowed (seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type));
  var _10 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _11 : usize;
  var _12 : usize;
  {
    self_1 <- self;
    idx_2 <- idx;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    _6 <-  * self_1;
    _5 <- ([#"../CreuSAT/src/clause.rs" 127 18 127 28] Len0.len _6);
    goto BB1
  }
  BB1 {
    end'_4 <- ([#"../CreuSAT/src/clause.rs" 127 18 127 32] _5 - (1 : usize));
    _10 <- borrow_mut (CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_lits ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c d =  * self_1 in CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c ( ^ _10)) };
    assume { Resolve0.resolve self_1 };
    _9 <- ([#"../CreuSAT/src/clause.rs" 128 8 128 32] DerefMut0.deref_mut _10);
    goto BB2
  }
  BB2 {
    _8 <- borrow_mut ( * _9);
    _9 <- { _9 with current = ( ^ _8) };
    _11 <- idx_2;
    _12 <- end'_4;
    _7 <- ([#"../CreuSAT/src/clause.rs" 128 8 128 32] Swap0.swap _8 _11 _12);
    goto BB3
  }
  BB3 {
    assume { Resolve1.resolve _9 };
    _0 <- ();
    return _0
  }
  
end
module Core_Option_Option_Type
  type core_option_option_type 't =
    | Core_Option_Option_None_Type
    | Core_Option_Option_Some_Type 't
    
  let function core_option_option_type_Some_0 (self : core_option_option_type 't) : 't
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | Core_Option_Option_None_Type -> any 't
      | Core_Option_Option_Some_Type a -> a
      end
end
module Alloc_Vec_Impl1_Pop_Interface
  type t
  type a
  use prelude.Borrow
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq_ext.SeqExt
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  use Core_Option_Option_Type
  val pop [@cfg:stackify] (self : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type t a)) : Core_Option_Option_Type.core_option_option_type t
    ensures { match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type t -> Model0.model ( ^ self) = SeqExt.subsequence (Model0.model ( * self)) 0 (Seq.length (Model0.model ( * self)) - 1) /\ Model0.model ( * self) = Seq.snoc (Model0.model ( ^ self)) t
      | Core_Option_Option_Type.Core_Option_Option_None_Type ->  * self =  ^ self /\ Seq.length (Model0.model ( * self)) = 0
      end }
    
end
module Alloc_Vec_Impl1_Pop
  type t
  type a
  use prelude.Borrow
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq_ext.SeqExt
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  use Core_Option_Option_Type
  val pop [@cfg:stackify] (self : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type t a)) : Core_Option_Option_Type.core_option_option_type t
    ensures { match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type t -> Model0.model ( ^ self) = SeqExt.subsequence (Model0.model ( * self)) 0 (Seq.length (Model0.model ( * self)) - 1) /\ Model0.model ( * self) = Seq.snoc (Model0.model ( ^ self)) t
      | Core_Option_Option_Type.Core_Option_Option_None_Type ->  * self =  ^ self /\ Seq.length (Model0.model ( * self)) = 0
      end }
    
end
module CreuSat_Clause_Impl3_RemoveFromClause_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Interface as LitIn0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  val remove_from_clause [@cfg:stackify] (self : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/clause.rs" 134 4 134 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 135 15 135 32] Seq.length (Model0.model self) > 0}
    requires {[#"../CreuSAT/src/clause.rs" 136 15 136 35] UInt64.to_int idx < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 134 4 134 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 137 4 138 83] forall i : (int) . 0 <= i /\ i < Seq.length (Model1.model ( ^ self)) -> (exists j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) /\ Seq.get (Model1.model ( ^ self)) i = Seq.get (Model0.model self) j) }
    ensures { [#"../CreuSAT/src/clause.rs" 139 14 139 51] Seq.length (Model1.model ( ^ self)) + 1 = Seq.length (Model0.model self) }
    ensures { [#"../CreuSAT/src/clause.rs" 140 14 140 42] not LitIn0.lit_in (Seq.get (Model0.model self) (UInt64.to_int idx)) ( ^ self) }
    ensures { [#"../CreuSAT/src/clause.rs" 141 4 142 51] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) /\ j <> UInt64.to_int idx -> LitIn0.lit_in (Seq.get (Model0.model self) j) ( ^ self) }
    
end
module CreuSat_Clause_Impl3_RemoveFromClause
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with function Model0.model = Model1.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use Core_Option_Option_Type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Alloc_Vec_Impl1_Pop_Interface as Pop0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  clone CreuSat_Clause_Impl3_MoveToEnd_Interface as MoveToEnd0 with predicate Invariant0.invariant' = Invariant0.invariant',
  function Model0.model = Model0.model, function Model1.model = Model1.model, predicate LitIn0.lit_in = LitIn0.lit_in
  let rec cfg remove_from_clause [@cfg:stackify] [#"../CreuSAT/src/clause.rs" 143 4 143 66] (self : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/clause.rs" 134 4 134 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 135 15 135 32] Seq.length (Model0.model self) > 0}
    requires {[#"../CreuSAT/src/clause.rs" 136 15 136 35] UInt64.to_int idx < Seq.length (Model0.model self)}
    ensures { [#"../CreuSAT/src/clause.rs" 134 4 134 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 137 4 138 83] forall i : (int) . 0 <= i /\ i < Seq.length (Model1.model ( ^ self)) -> (exists j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) /\ Seq.get (Model1.model ( ^ self)) i = Seq.get (Model0.model self) j) }
    ensures { [#"../CreuSAT/src/clause.rs" 139 14 139 51] Seq.length (Model1.model ( ^ self)) + 1 = Seq.length (Model0.model self) }
    ensures { [#"../CreuSAT/src/clause.rs" 140 14 140 42] not LitIn0.lit_in (Seq.get (Model0.model self) (UInt64.to_int idx)) ( ^ self) }
    ensures { [#"../CreuSAT/src/clause.rs" 141 4 142 51] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) /\ j <> UInt64.to_int idx -> LitIn0.lit_in (Seq.get (Model0.model self) j) ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var idx_2 : usize;
  var _f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _4 : ();
  var _5 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _6 : usize;
  var _7 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _8 : Core_Option_Option_Type.core_option_option_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type);
  var _9 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  {
    self_1 <- self;
    idx_2 <- idx;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    _5 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _5) };
    _6 <- idx_2;
    _7 <- _f_3;
    _4 <- ([#"../CreuSAT/src/clause.rs" 144 8 144 33] MoveToEnd0.move_to_end _5 _6 _7);
    goto BB1
  }
  BB1 {
    _9 <- borrow_mut (CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_lits ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c d =  * self_1 in CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c ( ^ _9)) };
    _8 <- ([#"../CreuSAT/src/clause.rs" 145 8 145 23] Pop0.pop _9);
    goto BB2
  }
  BB2 {
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Logic_LogicClause_Impl2_VarsInRange_Interface
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  predicate vars_in_range (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (n : int)
end
module CreuSat_Logic_LogicClause_Impl2_VarsInRange
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate vars_in_range [#"../CreuSAT/src/logic/logic_clause.rs" 178 4 178 46] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 179 20 179 49] VarsInRangeInner0.vars_in_range_inner (Model0.model self) n
end
module CreuSat_Logic_LogicClause_Impl2_SatInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  predicate sat_inner (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl2_SatInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate sat_inner [#"../CreuSAT/src/logic/logic_clause.rs" 158 4 158 57] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 159 8 162 9] exists i : (int) . 0 <= i /\ i < Seq.length (Model0.model self) /\ SatInner0.sat_inner (Seq.get (Model0.model self) i) a
end
module CreuSat_Logic_LogicLit_Impl1_UnsetInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  predicate unset_inner (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicLit_Impl1_UnsetInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate unset_inner [#"../CreuSAT/src/logic/logic_lit.rs" 97 4 97 59] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 98 20 98 49] UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) >= 2
end
module CreuSat_Logic_LogicClause_Impl2_UnitInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  predicate unit_inner (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl2_UnitInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner_Interface as UnsetInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange_Interface as VarsInRange0
  predicate unit_inner [#"../CreuSAT/src/logic/logic_clause.rs" 129 4 129 54] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 130 8 137 9] VarsInRange0.vars_in_range self (Seq.length a) /\ not SatInner0.sat_inner self a /\ (exists i : (int) . 0 <= i /\ i < Seq.length (Model0.model self) /\ UnsetInner0.unset_inner (Seq.get (Model0.model self) i) a /\ (forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) /\ j <> i -> not UnsetInner0.unset_inner (Seq.get (Model0.model self) j) a))
end
module CreuSat_Logic_LogicClause_Impl2_Unit_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  predicate unit (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicClause_Impl2_Unit
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner_Interface as UnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate unit [#"../CreuSAT/src/logic/logic_clause.rs" 140 4 140 45] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 141 20 141 39] UnitInner0.unit_inner self (Model0.model a)
end
module CreuSat_Logic_LogicLit_Impl1_Unset_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  predicate unset (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicLit_Impl1_Unset
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner_Interface as UnsetInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate unset [#"../CreuSAT/src/logic/logic_lit.rs" 107 4 107 46] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 108 20 108 40] UnsetInner0.unset_inner self (Model0.model a)
end
module CreuSat_Logic_LogicLit_Impl1_Unsat_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  predicate unsat (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicLit_Impl1_Unsat
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate unsat [#"../CreuSAT/src/logic/logic_lit.rs" 112 4 112 46] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 113 20 113 40] UnsatInner0.unsat_inner self (Model0.model a)
end
module CreuSat_Assignments_Impl0_Output_Type
  use mach.int.Int
  use prelude.UInt8
  type output  =
    uint8
end
module CreuSat_Assignments_Impl0
  use mach.int.Int
  use prelude.UInt8
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Assignments_Impl0_Output_Type as Output0
  clone CreuSat_Assignments_Impl0_Index_Interface as Index0 with function Model0.model = Model0.model
  clone Core_Ops_Index_Index_Index_Interface as Index1 with type self = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type idx = usize, val index = Index0.index, type Output0.output = Output0.output
  clone Core_Ops_Index_Index_Output_Type as Output1 with type self = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type idx = usize, type output = Output0.output
end
module CreuSat_Lit_Impl1_LitUnsat_Interface
  use seq.Seq
  use prelude.Borrow
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val lit_unsat [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/lit.rs" 64 15 64 41] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 65 14 65 38] result = Unsat0.unsat self a }
    
end
module CreuSat_Lit_Impl1_LitUnsat
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model1.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  use prelude.UIntSize
  clone CreuSat_Assignments_Impl0_Index_Interface as Index1 with function Model0.model = Model0.model
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Lit_Impl1_IsPositive_Interface as IsPositive0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  let rec cfg lit_unsat [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 66 4 66 51] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/lit.rs" 64 15 64 41] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 65 14 65 38] result = Unsat0.unsat self a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var a_2 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _3 : bool;
  var _4 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _5 : uint8;
  var _6 : uint8;
  var _7 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _8 : usize;
  var _9 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _10 : uint8;
  var _11 : uint8;
  var _12 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _13 : usize;
  var _14 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    _4 <- self_1;
    _3 <- ([#"../CreuSAT/src/lit.rs" 67 14 67 32] IsPositive0.is_positive _4);
    goto BB1
  }
  BB1 {
    switch (_3)
      | False -> goto BB2
      | _ -> goto BB3
      end
  }
  BB2 {
    _12 <- a_2;
    _14 <- self_1;
    _13 <- ([#"../CreuSAT/src/lit.rs" 69 24 69 36] Index0.index _14);
    goto BB6
  }
  BB3 {
    _7 <- a_2;
    _9 <- self_1;
    _8 <- ([#"../CreuSAT/src/lit.rs" 68 23 68 35] Index0.index _9);
    goto BB4
  }
  BB4 {
    _6 <- ([#"../CreuSAT/src/lit.rs" 68 21 68 36] Index1.index _7 _8);
    goto BB5
  }
  BB5 {
    _5 <- _6;
    _0 <- ([#"../CreuSAT/src/lit.rs" 68 20 68 42] _5 = (0 : uint8));
    goto BB8
  }
  BB6 {
    _11 <- ([#"../CreuSAT/src/lit.rs" 69 22 69 37] Index1.index _12 _13);
    goto BB7
  }
  BB7 {
    _10 <- _11;
    _0 <- ([#"../CreuSAT/src/lit.rs" 69 21 69 43] _10 = (1 : uint8));
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Lit_Impl1_LitUnset_Interface
  use seq.Seq
  use prelude.Borrow
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val lit_unset [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/lit.rs" 75 15 75 41] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 76 14 76 38] result = Unset0.unset self a }
    
end
module CreuSat_Lit_Impl1_LitUnset
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with function Model0.model = Model1.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  use prelude.UIntSize
  clone CreuSat_Assignments_Impl0_Index_Interface as Index1 with function Model0.model = Model0.model
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg lit_unset [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 77 4 77 51] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/lit.rs" 75 15 75 41] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 76 14 76 38] result = Unset0.unset self a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var a_2 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _3 : uint8;
  var _4 : uint8;
  var _5 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _6 : usize;
  var _7 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    _5 <- a_2;
    _7 <- self_1;
    _6 <- ([#"../CreuSAT/src/lit.rs" 78 10 78 22] Index0.index _7);
    goto BB1
  }
  BB1 {
    _4 <- ([#"../CreuSAT/src/lit.rs" 78 8 78 23] Index1.index _5 _6);
    goto BB2
  }
  BB2 {
    _3 <- _4;
    _0 <- ([#"../CreuSAT/src/lit.rs" 78 8 78 28] _3 >= (2 : uint8));
    return _0
  }
  
end
module CreuSat_Clause_Impl3_UnitAndUnset_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicClause_Impl2_Unit_Interface as Unit0
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_InvariantInternal_Interface as InvariantInternal0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val unit_and_unset [@cfg:stackify] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : bool
    requires {[#"../CreuSAT/src/clause.rs" 150 15 150 54] InvariantInternal0.invariant_internal (Model0.model self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 151 15 151 31] Invariant0.invariant' a _f}
    requires {[#"../CreuSAT/src/clause.rs" 152 15 152 32] Seq.length (Model0.model self) > 1}
    ensures { [#"../CreuSAT/src/clause.rs" 153 4 153 40] result -> Unit0.unit self a }
    ensures { [#"../CreuSAT/src/clause.rs" 154 4 154 47] result -> Unset0.unset (Seq.get (Model0.model self) 0) a }
    
end
module CreuSat_Clause_Impl3_UnitAndUnset
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Borrow
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with function Model0.model = Model1.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner as UnitInner0 with predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, function Model0.model = Model1.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model2.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with function Model0.model = Model2.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unit as Unit0 with function Model0.model = Model2.model,
  predicate UnitInner0.unit_inner = UnitInner0.unit_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant0 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  use prelude.UIntSize
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model5 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model2.model
  clone CreuSat_Lit_Impl1_LitUnset_Interface as LitUnset0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant1.invariant', predicate Unset0.unset = Unset0.unset
  clone CreuSat_Lit_Impl1_LitUnsat_Interface as LitUnsat0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant1.invariant', predicate Unsat0.unsat = Unsat0.unsat
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with function Model0.model = Model0.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len0 with function Model0.model = Model0.model
  let rec cfg unit_and_unset [@cfg:stackify] [#"../CreuSAT/src/clause.rs" 155 4 155 71] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : bool
    requires {[#"../CreuSAT/src/clause.rs" 150 15 150 54] InvariantInternal0.invariant_internal (Model0.model self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 151 15 151 31] Invariant0.invariant' a _f}
    requires {[#"../CreuSAT/src/clause.rs" 152 15 152 32] Seq.length (Model0.model self) > 1}
    ensures { [#"../CreuSAT/src/clause.rs" 153 4 153 40] result -> Unit0.unit self a }
    ensures { [#"../CreuSAT/src/clause.rs" 154 4 154 47] result -> Unset0.unset (Seq.get (Model0.model self) 0) a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var a_2 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var i_4 : usize;
  var _5 : ();
  var _6 : ();
  var _7 : bool;
  var _8 : usize;
  var _9 : usize;
  var _10 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _11 : ();
  var _12 : bool;
  var _13 : bool;
  var _14 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _15 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _16 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _17 : usize;
  var _18 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _19 : ();
  var _20 : ();
  var _21 : ();
  var _22 : ();
  var _23 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _24 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _25 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _26 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  {
    self_1 <- self;
    a_2 <- a;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    i_4 <- (1 : usize);
    goto BB1
  }
  BB1 {
    invariant unsat { [#"../CreuSAT/src/clause.rs" 157 8 157 85] forall j : (int) . 1 <= j /\ j < UInt64.to_int i_4 -> Unsat0.unsat (Seq.get (Model0.model self_1) j) a_2 };
    _8 <- i_4;
    _10 <- self_1;
    _9 <- ([#"../CreuSAT/src/clause.rs" 158 18 158 28] Len0.len _10);
    goto BB2
  }
  BB2 {
    _7 <- ([#"../CreuSAT/src/clause.rs" 158 14 158 28] _8 < _9);
    switch (_7)
      | False -> goto BB8
      | _ -> goto BB3
      end
  }
  BB3 {
    _16 <- self_1;
    _17 <- i_4;
    _15 <- ([#"../CreuSAT/src/clause.rs" 159 16 159 23] Index0.index _16 _17);
    goto BB4
  }
  BB4 {
    _14 <- _15;
    _18 <- a_2;
    _13 <- ([#"../CreuSAT/src/clause.rs" 159 16 159 36] LitUnsat0.lit_unsat _14 _18);
    goto BB5
  }
  BB5 {
    _12 <- not _13;
    switch (_12)
      | False -> goto BB7
      | _ -> goto BB6
      end
  }
  BB6 {
    _0 <- false;
    goto BB11
  }
  BB7 {
    _11 <- ();
    i_4 <- ([#"../CreuSAT/src/clause.rs" 162 12 162 18] i_4 + (1 : usize));
    _6 <- ();
    goto BB1
  }
  BB8 {
    _5 <- ();
    _25 <- self_1;
    _24 <- ([#"../CreuSAT/src/clause.rs" 164 8 164 15] Index0.index _25 (0 : usize));
    goto BB9
  }
  BB9 {
    _23 <- _24;
    _26 <- a_2;
    _0 <- ([#"../CreuSAT/src/clause.rs" 164 8 164 28] LitUnset0.lit_unset _23 _26);
    goto BB10
  }
  BB10 {
    goto BB11
  }
  BB11 {
    return _0
  }
  
end
module CreuSat_Logic_LogicAssignments_CompleteInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  predicate complete_inner (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicAssignments_CompleteInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  predicate complete_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 33 0 33 52] (a : Seq.seq uint8) =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 34 4 36 5] forall i : (int) . 0 <= i /\ i < Seq.length a -> not Unset0.unset (Seq.get a i)
end
module CreuSat_Logic_LogicFormula_FormulaSatInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  predicate formula_sat_inner (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_FormulaSatInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Interface as SatInner0
  predicate formula_sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 29 0 29 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 30 4 33 5] forall i : (int) . 0 <= i /\ i < Seq.length (let (a, _) = f in a) -> SatInner0.sat_inner (Seq.get (let (a, _) = f in a) i) a
end
module CreuSat_Logic_LogicFormula_EventuallySatComplete_Interface
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  predicate eventually_sat_complete (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int))
end
module CreuSat_Logic_LogicFormula_EventuallySatComplete
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Interface as FormulaSatInner0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  predicate eventually_sat_complete [#"../CreuSAT/src/logic/logic_formula.rs" 37 0 37 61] (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int))
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 38 4 40 5] exists a2 : (Seq.seq uint8) . Seq.length a2 = (let (_, a) = f in a) /\ CompleteInner0.complete_inner a2 /\ FormulaSatInner0.formula_sat_inner f a2
end
module CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  predicate equisat_extension_inner (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int))
    
end
module CreuSat_Logic_LogicClause_EquisatExtensionInner
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete_Interface as EventuallySatComplete0
  predicate equisat_extension_inner [#"../CreuSAT/src/logic/logic_clause.rs" 34 0 34 72] (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int))
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 35 4 37 5] EventuallySatComplete0.eventually_sat_complete f -> EventuallySatComplete0.eventually_sat_complete (Seq.snoc (let (a, _) = f in a) c, let (_, a) = f in a)
end
module CreuSat_Logic_LogicClause_Impl2_EquisatExtension_Interface
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  predicate equisat_extension (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicClause_Impl2_EquisatExtension
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_Impl0_Model_Interface as Model0
  predicate equisat_extension [#"../CreuSAT/src/logic/logic_clause.rs" 87 4 87 54] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 88 20 88 53] EquisatExtensionInner0.equisat_extension_inner self (Model0.model f)
end
module CreuSat_Clause_Impl3_SwapLitsInClause_Interface
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension_Interface as EquisatExtension0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val swap_lits_in_clause [@cfg:stackify] (self : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (j : usize) (k : usize) : ()
    requires {[#"../CreuSAT/src/clause.rs" 169 15 169 33] Seq.length (Model0.model self) > UInt64.to_int j}
    requires {[#"../CreuSAT/src/clause.rs" 170 15 170 33] Seq.length (Model0.model self) > UInt64.to_int k}
    requires {[#"../CreuSAT/src/clause.rs" 171 4 171 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 172 4 172 51] EquisatExtension0.equisat_extension ( * self) _f}
    ensures { [#"../CreuSAT/src/clause.rs" 171 4 171 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 172 4 172 51] EquisatExtension0.equisat_extension ( ^ self) _f }
    ensures { [#"../CreuSAT/src/clause.rs" 173 14 173 47] Seq.length (Model0.model self) = Seq.length (Model1.model ( ^ self)) }
    
end
module CreuSat_Clause_Impl3_SwapLitsInClause
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy1
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model2 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model3.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model3.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  use prelude.Slice
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model6 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model7 with type t = seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type),
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model6.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  function Model0.model = Model7.model, function Model1.model = Model6.model
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model6.model,
  function Model1.model = Model4.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  let rec cfg swap_lits_in_clause [@cfg:stackify] [#"../CreuSAT/src/clause.rs" 174 4 174 75] (self : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (j : usize) (k : usize) : ()
    requires {[#"../CreuSAT/src/clause.rs" 169 15 169 33] Seq.length (Model0.model self) > UInt64.to_int j}
    requires {[#"../CreuSAT/src/clause.rs" 170 15 170 33] Seq.length (Model0.model self) > UInt64.to_int k}
    requires {[#"../CreuSAT/src/clause.rs" 171 4 171 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/clause.rs" 172 4 172 51] EquisatExtension0.equisat_extension ( * self) _f}
    ensures { [#"../CreuSAT/src/clause.rs" 171 4 171 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/clause.rs" 172 4 172 51] EquisatExtension0.equisat_extension ( ^ self) _f }
    ensures { [#"../CreuSAT/src/clause.rs" 173 14 173 47] Seq.length (Model0.model self) = Seq.length (Model1.model ( ^ self)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _f_2 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var j_3 : usize;
  var k_4 : usize;
  ghost var old_c_5 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _6 : ();
  var _7 : ();
  var _8 : borrowed (seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type));
  var _9 : borrowed (seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type));
  var _10 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _11 : usize;
  var _12 : usize;
  var _13 : ();
  {
    self_1 <- self;
    _f_2 <- _f;
    j_3 <- j;
    k_4 <- k;
    goto BB0
  }
  BB0 {
    _6 <- ();
    old_c_5 <- ghost ([#"../CreuSAT/src/clause.rs" 175 40 175 55] self_1);
    goto BB1
  }
  BB1 {
    _10 <- borrow_mut (CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_lits ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c d =  * self_1 in CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c ( ^ _10)) };
    assume { Resolve0.resolve self_1 };
    _9 <- ([#"../CreuSAT/src/clause.rs" 176 8 176 28] DerefMut0.deref_mut _10);
    goto BB2
  }
  BB2 {
    _8 <- borrow_mut ( * _9);
    _9 <- { _9 with current = ( ^ _8) };
    _11 <- j_3;
    _12 <- k_4;
    _7 <- ([#"../CreuSAT/src/clause.rs" 176 8 176 28] Swap0.swap _8 _11 _12);
    goto BB3
  }
  BB3 {
    assume { Resolve1.resolve _9 };
    assert { [#"../CreuSAT/src/clause.rs" 177 8 178 89] EventuallySatComplete0.eventually_sat_complete (Seq.snoc (let (a, _) = Model2.model _f_2 in a) ( * self_1), let (_, a) = Model2.model _f_2 in a) -> EventuallySatComplete0.eventually_sat_complete (Seq.snoc (let (a, _) = Model2.model _f_2 in a) ( * old_c_5), let (_, a) = Model2.model _f_2 in a) };
    _13 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Trail_Trail_Type
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Trail_Step_Type
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Assignments_Assignments_Type
  type creusat_trail_trail_type  =
    | CreuSat_Trail_Trail_Type (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) usize (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
    
  let function creusat_trail_trail_type_Trail_lit_to_level (self : creusat_trail_trail_type) : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Trail_Trail_Type _ a _ _ _ -> a
      end
  let function creusat_trail_trail_type_Trail_assignments (self : creusat_trail_trail_type) : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Trail_Trail_Type a _ _ _ _ -> a
      end
  let function creusat_trail_trail_type_Trail_trail (self : creusat_trail_trail_type) : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Trail_Trail_Type _ _ a _ _ -> a
      end
  let function creusat_trail_trail_type_Trail_decisions (self : creusat_trail_trail_type) : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Trail_Trail_Type _ _ _ _ a -> a
      end
  let function creusat_trail_trail_type_Trail_curr_i (self : creusat_trail_trail_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Trail_Trail_Type _ _ _ a _ -> a
      end
end
module CreuSat_Clause_Impl3_CalcLbd_Interface
  use seq.Seq
  use mach.int.UInt64
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Solver_Solver_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val calc_lbd [@cfg:stackify] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (s : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : usize
    requires {[#"../CreuSAT/src/clause.rs" 182 15 182 56] Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level t)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    requires {[#"../CreuSAT/src/clause.rs" 183 15 183 43] Invariant0.invariant' self (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    
end
module CreuSat_Clause_Impl3_CalcLbd
  use seq.Seq
  use mach.int.UInt64
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  use CreuSat_Trail_Trail_Type
  use CreuSat_Solver_Solver_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model3 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Solver_Solver_Type.creusat_solver_solver_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = usize
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len1 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  clone Alloc_Vec_Impl16_Index_Interface as Index2 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_Index_Interface as Index1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with function Model0.model = Model3.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len0 with function Model0.model = Model3.model
  let rec cfg calc_lbd [@cfg:stackify] [#"../CreuSAT/src/clause.rs" 184 4 184 76] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (s : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : usize
    requires {[#"../CreuSAT/src/clause.rs" 182 15 182 56] Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level t)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    requires {[#"../CreuSAT/src/clause.rs" 183 15 183 43] Invariant0.invariant' self (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _f_2 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var s_3 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var t_4 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var i_5 : usize;
  var lbd_6 : usize;
  var _7 : ();
  var _8 : ();
  var _9 : bool;
  var _10 : usize;
  var _11 : usize;
  var _12 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var level_13 : usize;
  var _14 : usize;
  var _15 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _16 : usize;
  var _17 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _18 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _19 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _20 : usize;
  var _21 : ();
  var _22 : bool;
  var _23 : bool;
  var _24 : usize;
  var _25 : usize;
  var _26 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _27 : bool;
  var _28 : usize;
  var _29 : usize;
  var _30 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _31 : usize;
  var _32 : usize;
  var _33 : usize;
  var _34 : borrowed usize;
  var _35 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _36 : usize;
  var _37 : ();
  var _38 : ();
  var _39 : ();
  {
    self_1 <- self;
    _f_2 <- _f;
    s_3 <- s;
    t_4 <- t;
    goto BB0
  }
  BB0 {
    i_5 <- (0 : usize);
    lbd_6 <- (0 : usize);
    goto BB1
  }
  BB1 {
    invariant lbd_bound { [#"../CreuSAT/src/clause.rs" 187 31 187 41] UInt64.to_int lbd_6 <= UInt64.to_int i_5 };
    _10 <- i_5;
    _12 <- self_1;
    _11 <- ([#"../CreuSAT/src/clause.rs" 188 18 188 28] Len0.len _12);
    goto BB2
  }
  BB2 {
    _9 <- ([#"../CreuSAT/src/clause.rs" 188 14 188 28] _10 < _11);
    switch (_9)
      | False -> goto BB16
      | _ -> goto BB3
      end
  }
  BB3 {
    _15 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level t_4;
    _19 <- self_1;
    _20 <- i_5;
    _18 <- ([#"../CreuSAT/src/clause.rs" 189 39 189 46] Index0.index _19 _20);
    goto BB4
  }
  BB4 {
    _17 <- _18;
    _16 <- ([#"../CreuSAT/src/clause.rs" 189 39 189 54] Index1.index _17);
    goto BB5
  }
  BB5 {
    _14 <- ([#"../CreuSAT/src/clause.rs" 189 24 189 55] Index2.index _15 _16);
    goto BB6
  }
  BB6 {
    level_13 <- _14;
    _24 <- level_13;
    _26 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_perm_diff ( * s_3);
    _25 <- ([#"../CreuSAT/src/clause.rs" 190 23 190 40] Len1.len _26);
    goto BB10
  }
  BB7 {
    _22 <- false;
    goto BB9
  }
  BB8 {
    _30 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_perm_diff ( * s_3);
    _31 <- level_13;
    _29 <- ([#"../CreuSAT/src/clause.rs" 191 16 191 34] Index2.index _30 _31);
    goto BB11
  }
  BB9 {
    switch (_22)
      | False -> goto BB14
      | _ -> goto BB12
      end
  }
  BB10 {
    _23 <- ([#"../CreuSAT/src/clause.rs" 190 15 190 40] _24 < _25);
    switch (_23)
      | False -> goto BB7
      | _ -> goto BB8
      end
  }
  BB11 {
    _28 <- _29;
    _32 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_num_conflicts ( * s_3);
    _27 <- ([#"../CreuSAT/src/clause.rs" 191 16 191 53] _28 <> _32);
    _22 <- _27;
    _27 <- any bool;
    goto BB9
  }
  BB12 {
    _33 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_num_conflicts ( * s_3);
    _35 <- borrow_mut (CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_perm_diff ( * s_3));
    s_3 <- { s_3 with current = (let CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e f g h =  * s_3 in CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e f g ( ^ _35)) };
    _36 <- level_13;
    _34 <- ([#"../CreuSAT/src/clause.rs" 193 16 193 34] IndexMut0.index_mut _35 _36);
    goto BB13
  }
  BB13 {
    _34 <- { _34 with current = _33 };
    _33 <- any usize;
    assume { Resolve0.resolve _34 };
    lbd_6 <- ([#"../CreuSAT/src/clause.rs" 194 16 194 24] lbd_6 + (1 : usize));
    _21 <- ();
    goto BB15
  }
  BB14 {
    _21 <- ();
    goto BB15
  }
  BB15 {
    i_5 <- ([#"../CreuSAT/src/clause.rs" 196 12 196 18] i_5 + (1 : usize));
    _8 <- ();
    goto BB1
  }
  BB16 {
    assume { Resolve1.resolve s_3 };
    _7 <- ();
    _0 <- lbd_6;
    return _0
  }
  
end
module CreuSat_Logic_LogicLit_IdxInLogic_Interface
  use mach.int.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  predicate idx_in_logic [@inline:trivial] (idx : int) (c : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type))
end
module CreuSat_Logic_LogicLit_IdxInLogic
  use mach.int.Int
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate idx_in_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 10 0 10 50] (idx : int) (c : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type))
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 11 4 14 5] exists i : (int) . 0 <= i /\ i < Seq.length c /\ IndexLogic0.index_logic (Seq.get c i) = idx
end
module CreuSat_ConflictAnalysis_IdxIn_Interface
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Borrow
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy1 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  use CreuSat_Lit_Lit_Type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_IdxInLogic_Interface as IdxInLogic0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy1.modelTy
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy0.modelTy
  val idx_in [@cfg:stackify] (c : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (idx : usize) (seen : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) : bool
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 23 11 23 49] VarsInRangeInner0.vars_in_range_inner (Model0.model c) (Seq.length (Model1.model seen))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 24 11 24 31] UInt64.to_int idx < Seq.length (Model1.model seen)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 25 11 25 50] Seq.get (Model1.model seen) (UInt64.to_int idx) = IdxInLogic0.idx_in_logic (UInt64.to_int idx) (Model0.model c)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 26 10 26 94] result = (exists i : (int) . 0 <= i /\ i < Seq.length (Model0.model c) /\ IndexLogic0.index_logic (Seq.get (Model0.model c) i) = UInt64.to_int idx) }
    
end
module CreuSat_ConflictAnalysis_IdxIn
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Borrow
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy1 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreuSat_Logic_LogicLit_IdxInLogic as IdxInLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant0.invariant'
  clone CreusotContracts_Logic_Model_Impl0_Model as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model3.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model2.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy2 with type t = bool
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = bool
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = bool, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  let rec cfg idx_in [@cfg:stackify] [#"../CreuSAT/src/conflict_analysis.rs" 27 0 27 61] (c : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (idx : usize) (seen : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) : bool
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 23 11 23 49] VarsInRangeInner0.vars_in_range_inner (Model0.model c) (Seq.length (Model1.model seen))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 24 11 24 31] UInt64.to_int idx < Seq.length (Model1.model seen)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 25 11 25 50] Seq.get (Model1.model seen) (UInt64.to_int idx) = IdxInLogic0.idx_in_logic (UInt64.to_int idx) (Model0.model c)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 26 10 26 94] result = (exists i : (int) . 0 <= i /\ i < Seq.length (Model0.model c) /\ IndexLogic0.index_logic (Seq.get (Model0.model c) i) = UInt64.to_int idx) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var c_1 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var idx_2 : usize;
  var seen_3 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _4 : bool;
  var _5 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _6 : usize;
  {
    c_1 <- c;
    idx_2 <- idx;
    seen_3 <- seen;
    goto BB0
  }
  BB0 {
    _5 <- seen_3;
    _6 <- idx_2;
    _4 <- ([#"../CreuSAT/src/conflict_analysis.rs" 28 4 28 13] Index0.index _5 _6);
    goto BB1
  }
  BB1 {
    _0 <- _4;
    return _0
  }
  
end
module CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Interface
  use CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type
  predicate lit_idx_in (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    
end
module CreuSat_Logic_LogicLit_Impl1_LitIdxIn
  use CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate lit_idx_in [#"../CreuSAT/src/logic/logic_lit.rs" 64 4 64 46] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 65 8 68 9] exists i : (int) . 0 <= i /\ i < Seq.length (Model0.model c) /\ IndexLogic0.index_logic (Seq.get (Model0.model c) i) = IndexLogic0.index_logic self
end
module CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface
  use seq.Seq
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type
  predicate lit_not_in_less_inner (t : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicTrail_LitNotInLessInner
  use seq.Seq
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Interface as LitIdxIn0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Reason_Type
  predicate lit_not_in_less_inner [#"../CreuSAT/src/logic/logic_trail.rs" 86 0 86 62] (t : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 87 4 94 5] forall i : (int) . 0 <= i /\ i < Seq.length t -> (forall j : (int) . 0 <= j /\ j < i -> match (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason (Seq.get t j)) with
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type cref -> not LitIdxIn0.lit_idx_in (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get t i)) (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))
      | _ -> true
      end)
end
module CreuSat_Logic_LogicTrail_LitIsUniqueInner_Interface
  use seq.Seq
  use CreuSat_Trail_Step_Type
  predicate lit_is_unique_inner (trail : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type))
end
module CreuSat_Logic_LogicTrail_LitIsUniqueInner
  use seq.Seq
  use CreuSat_Trail_Step_Type
  use mach.int.Int
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate lit_is_unique_inner [#"../CreuSAT/src/logic/logic_trail.rs" 136 0 136 48] (trail : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type))
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 137 4 141 5] forall i : (int) . 0 <= i /\ i < Seq.length trail -> (forall j : (int) . 0 <= j /\ j < i -> IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get trail j)) <> IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get trail i)))
end
module CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Trail_Step_Type
  predicate trail_entries_are_assigned_inner (t : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type)) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Trail_Step_Type
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  predicate trail_entries_are_assigned_inner [#"../CreuSAT/src/logic/logic_trail.rs" 109 0 109 80] (t : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type)) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 110 4 113 5] forall j : (int) . 0 <= j /\ j < Seq.length t -> SatInner0.sat_inner (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get t j)) a
end
module CreuSat_Logic_LogicUtil_SortedRange_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate sorted_range (s : Seq.seq usize) (l : int) (u : int)
end
module CreuSat_Logic_LogicUtil_SortedRange
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate sorted_range [#"../CreuSAT/src/logic/logic_util.rs" 18 0 18 58] (s : Seq.seq usize) (l : int) (u : int) =
    [#"../CreuSAT/src/logic/logic_util.rs" 19 4 19 82] forall j : (int) . forall i : (int) . l <= i /\ i < j /\ j < u -> Seq.get s i <= Seq.get s j
end
module CreuSat_Logic_LogicUtil_Sorted_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate sorted (s : Seq.seq usize)
end
module CreuSat_Logic_LogicUtil_Sorted
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  clone CreuSat_Logic_LogicUtil_SortedRange_Interface as SortedRange0
  predicate sorted [#"../CreuSAT/src/logic/logic_util.rs" 23 0 23 36] (s : Seq.seq usize) =
    [#"../CreuSAT/src/logic/logic_util.rs" 24 4 24 31] SortedRange0.sorted_range s 0 (Seq.length s)
end
module CreuSat_Logic_LogicTrail_UnitAreSat_Interface
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type
  predicate unit_are_sat (trail : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicTrail_UnitAreSat
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Step_Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Reason_Type
  predicate unit_are_sat [#"../CreuSAT/src/logic/logic_trail.rs" 167 0 167 69] (trail : Seq.seq (CreuSat_Trail_Step_Type.creusat_trail_step_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 168 4 176 5] forall j : (int) . 0 <= j /\ j < Seq.length trail -> match (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason (Seq.get trail j)) with
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Unit_Type k -> CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get trail j) = Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int k))) 0 /\ Sat0.sat (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int k))) 0) a
      | _ -> true
      end
end
module CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type
  predicate invariant' [@inline:trivial] (self : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicTrail_Impl1_Invariant
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Trail_Step_Type
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat_Interface as UnitAreSat0
  clone CreuSat_Logic_LogicUtil_Sorted_Interface as Sorted0
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner_Interface as TrailEntriesAreAssignedInner0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner_Interface as LitIsUniqueInner0
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant0
  predicate invariant' [@inline:trivial] [#"../CreuSAT/src/logic/logic_trail.rs" 53 4 53 46] (self : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 54 8 65 9] Invariant0.invariant' (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments self) f /\ TrailInvariant0.trail_invariant (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) f /\ Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level self)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) /\ LitNotInLessInner0.lit_not_in_less_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) f /\ LitIsUniqueInner0.lit_is_unique_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) /\ LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) f (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments self)) /\ TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments self)) /\ Sorted0.sorted (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions self)) /\ UnitAreSat0.unit_are_sat (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) f (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments self) /\ (forall i : (int) . 0 <= i /\ i < Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions self)) -> UInt64.to_int (Seq.get (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions self)) i) <= Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)))
end
module CreuSat_Logic_LogicClause_Impl2_InFormula_Interface
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  predicate in_formula (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicClause_Impl2_InFormula
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate in_formula [#"../CreuSAT/src/logic/logic_clause.rs" 114 4 114 47] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 115 8 118 9] exists i : (int) . 0 <= i /\ i < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) /\ Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) i = self
end
module CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface
  use CreuSat_Lit_Lit_Type
  predicate is_opp (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (o : CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
end
module CreuSat_Logic_LogicLit_Impl1_IsOpp
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate is_opp [#"../CreuSAT/src/logic/logic_lit.rs" 47 4 47 39] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (o : CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 49 12 49 102] IndexLogic0.index_logic self = IndexLogic0.index_logic o /\ IsPositiveLogic0.is_positive_logic self <> IsPositiveLogic0.is_positive_logic o
end
module CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept_Interface
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  predicate same_idx_same_polarity_except (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (other : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (exception' : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate same_idx_same_polarity_except [#"../CreuSAT/src/logic/logic_clause.rs" 92 4 92 85] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (other : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (exception' : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 93 8 98 9] forall j : (int) . forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model self) /\ 0 <= j /\ j < Seq.length (Model0.model other) -> IndexLogic0.index_logic (Seq.get (Model0.model self) i) <> exception' /\ IndexLogic0.index_logic (Seq.get (Model0.model self) i) = IndexLogic0.index_logic (Seq.get (Model0.model other) j) -> IsPositiveLogic0.is_positive_logic (Seq.get (Model0.model self) i) = IsPositiveLogic0.is_positive_logic (Seq.get (Model0.model other) j)
end
module CreuSat_Logic_LogicUtil_ElemsLessThan_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate elems_less_than (v : Seq.seq usize) (n : int)
end
module CreuSat_Logic_LogicUtil_ElemsLessThan
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use mach.int.UInt64
  predicate elems_less_than [#"../CreuSAT/src/logic/logic_util.rs" 50 0 50 53] (v : Seq.seq usize) (n : int) =
    [#"../CreuSAT/src/logic/logic_util.rs" 51 4 51 68] forall i : (int) . 0 <= i /\ i < Seq.length v -> UInt64.to_int (Seq.get v i) < n
end
module CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen_Interface
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type
  predicate clause_is_seen (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (seen : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
    
end
module CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_IdxInLogic_Interface as IdxInLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate clause_is_seen [#"../CreuSAT/src/logic/logic_clause.rs" 198 4 198 56] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (seen : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 199 8 202 9] forall idx : (int) . 0 <= idx /\ idx < Seq.length (Model0.model seen) -> Seq.get (Model0.model seen) idx = IdxInLogic0.idx_in_logic idx (Model1.model self)
end
module CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  predicate unsat_inner (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl2_UnsatInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_clause.rs" 145 4 145 59] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 146 8 149 9] forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model self) -> UnsatInner0.unsat_inner (Seq.get (Model0.model self) i) a
end
module CreuSat_Logic_LogicClause_Impl2_Unsat_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  predicate unsat (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicClause_Impl2_Unsat
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate unsat [#"../CreuSAT/src/logic/logic_clause.rs" 153 4 153 46] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 154 20 154 40] UnsatInner0.unsat_inner self (Model0.model a)
end
module CreusotContracts_Logic_Int_Impl20_ModelTy_Type
  use mach.int.Int
  type modelTy  =
    int
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  predicate resolvent_of (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (c2 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (k : int) (m : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOf
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Interface as LitIn0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate resolvent_of [#"../CreuSAT/src/logic/logic_clause.rs" 102 4 102 76] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (c2 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (k : int) (m : int)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 104 12 109 36] (forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model c) /\ i <> m -> LitIn0.lit_in (Seq.get (Model0.model c) i) self) /\ (forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model c2) /\ i <> k -> LitIn0.lit_in (Seq.get (Model0.model c2) i) self) /\ (forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model self) -> LitIn0.lit_in (Seq.get (Model0.model self) i) c \/ LitIn0.lit_in (Seq.get (Model0.model self) i) c2) /\ not LitIn0.lit_in (Seq.get (Model0.model c) m) self /\ not LitIn0.lit_in (Seq.get (Model0.model c2) k) self /\ IsOpp0.is_opp (Seq.get (Model0.model c2) k) (Seq.get (Model0.model c) m)
end
module CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  predicate in_formula_inner (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int))
    
end
module CreuSat_Logic_LogicClause_Impl2_InFormulaInner
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  predicate in_formula_inner [#"../CreuSAT/src/logic/logic_clause.rs" 122 4 122 64] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int))
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 123 8 125 9] exists i : (int) . 0 <= i /\ i < Seq.length (let (a, _) = f in a) /\ Seq.get (let (a, _) = f in a) i = self
end
module CreuSat_Logic_LogicClause_Impl2_Equals_Interface
  use CreuSat_Clause_Clause_Type
  predicate equals (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (o : CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    
end
module CreuSat_Logic_LogicClause_Impl2_Equals
  use CreuSat_Clause_Clause_Type
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate equals [#"../CreuSAT/src/logic/logic_clause.rs" 206 4 206 42] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (o : CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 207 8 211 9] Seq.length (Model0.model self) = Seq.length (Model0.model o) /\ (forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) -> Seq.get (Model0.model self) j = Seq.get (Model0.model o) j)
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Interface as Equals0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  function lemma_eq_formulas (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (f2 : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : ()
    
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Interface as Equals0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  function lemma_eq_formulas [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 17 0 17 78] (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (f2 : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : ()
    
   =
    [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 9 0 9 8] ()
  axiom lemma_eq_formulas_spec : forall f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int), f2 : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int), c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type . ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 10 11 10 30] (let (a, _) = f2 in a) = Seq.snoc (let (a, _) = f in a) c) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 11 11 11 31] FormulaInvariant0.formula_invariant f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 14 10 14 39] Model0.model (Seq.get (let (a, _) = f2 in a) (Seq.length (let (a, _) = f2 in a) - 1)) = Model0.model c) && ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 13 0 13 85] forall i : (int) . 0 <= i /\ i < Seq.length (let (a, _) = f in a) -> Equals0.equals (Seq.get (let (a, _) = f in a) i) (Seq.get (let (a, _) = f2 in a) i)) && ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 12 10 12 41] Seq.length (let (a, _) = f in a) + 1 = Seq.length (let (a, _) = f2 in a))
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas_Impl
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model0 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model0.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_Equals as Equals0 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant0.invariant',
  function Model0.model = Model0.model
  let rec ghost function lemma_eq_formulas (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (f2 : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) : ()
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 10 11 10 30] (let (a, _) = f2 in a) = Seq.snoc (let (a, _) = f in a) c}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 11 11 11 31] FormulaInvariant0.formula_invariant f}
    ensures { [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 12 10 12 41] Seq.length (let (a, _) = f in a) + 1 = Seq.length (let (a, _) = f2 in a) }
    ensures { [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 13 0 13 85] forall i : (int) . 0 <= i /\ i < Seq.length (let (a, _) = f in a) -> Equals0.equals (Seq.get (let (a, _) = f in a) i) (Seq.get (let (a, _) = f2 in a) i) }
    ensures { [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 14 10 14 39] Model0.model (Seq.get (let (a, _) = f2 in a) (Seq.length (let (a, _) = f2 in a) - 1)) = Model0.model c }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 9 0 9 8] ()
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaResolventOfEquisatExtensionIsEquisat_Interface
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface as ResolventOf0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface as InFormulaInner0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  function lemma_resolvent_of_equisat_extension_is_equisat (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (c2 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (c3 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (k : int) (m : int) : ()
    
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaResolventOfEquisatExtensionIsEquisat
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface as ResolventOf0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface as InFormulaInner0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Interface as Equals0
  clone CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas_Interface as LemmaEqFormulas0 with predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
  predicate Equals0.equals = Equals0.equals, function Model0.model = Model0.model, axiom .
  function lemma_resolvent_of_equisat_extension_is_equisat [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 26 0 28 1] (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (c2 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (c3 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (k : int) (m : int) : ()
    
   =
    [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 29 4 29 49] let _ = LemmaEqFormulas0.lemma_eq_formulas f (Seq.snoc (let (a, _) = f in a) c3, let (_, a) = f in a) c3 in ()
  axiom lemma_resolvent_of_equisat_extension_is_equisat_spec : forall f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int), c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type, c2 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type, c3 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type, k : int, m : int . ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 21 11 21 31] FormulaInvariant0.formula_invariant f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 22 11 22 40] EquisatExtensionInner0.equisat_extension_inner c f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 23 11 23 33] InFormulaInner0.in_formula_inner c2 f) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 24 11 24 39] ResolventOf0.resolvent_of c3 c c2 k m) -> ([#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 25 10 25 40] EquisatExtensionInner0.equisat_extension_inner c3 f)
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaResolventOfEquisatExtensionIsEquisat_Impl
  use seq.Seq
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model0 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Equals as Equals0 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model0.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant0.invariant',
  function Model0.model = Model0.model
  clone CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas as LemmaEqFormulas0 with predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
  predicate Equals0.equals = Equals0.equals, function Model0.model = Model0.model, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf as ResolventOf0 with function Model0.model = Model0.model,
  predicate LitIn0.lit_in = LitIn0.lit_in, predicate IsOpp0.is_opp = IsOpp0.is_opp
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner as InFormulaInner0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  let rec ghost function lemma_resolvent_of_equisat_extension_is_equisat (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (c2 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (c3 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (k : int) (m : int) : ()
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 21 11 21 31] FormulaInvariant0.formula_invariant f}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 22 11 22 40] EquisatExtensionInner0.equisat_extension_inner c f}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 23 11 23 33] InFormulaInner0.in_formula_inner c2 f}
    requires {[#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 24 11 24 39] ResolventOf0.resolvent_of c3 c c2 k m}
    ensures { [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 25 10 25 40] EquisatExtensionInner0.equisat_extension_inner c3 f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_conflict_analysis.rs" 29 4 29 49] let _ = LemmaEqFormulas0.lemma_eq_formulas f (Seq.snoc (let (a, _) = f in a) c3, let (_, a) = f in a) c3 in ()
end
module CreusotContracts_Logic_Int_Impl20
  
end
module CreusotContracts_Logic_Int_Impl20_Model_Interface
  use mach.int.Int
  use prelude.UIntSize
  function model (self : usize) : int
end
module CreusotContracts_Logic_Int_Impl20_Model
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.UInt64
  function model (self : usize) : int =
    UInt64.to_int self
end
module Alloc_Vec_Impl1_Push_Interface
  type t
  type a
  use prelude.Borrow
  use seq.Seq
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val push [@cfg:stackify] (self : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type t a)) (value : t) : ()
    ensures { Model0.model ( ^ self) = Seq.snoc (Model0.model ( * self)) value }
    
end
module Alloc_Vec_Impl1_Push
  type t
  type a
  use prelude.Borrow
  use seq.Seq
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val push [@cfg:stackify] (self : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type t a)) (value : t) : ()
    ensures { Model0.model ( ^ self) = Seq.snoc (Model0.model ( * self)) value }
    
end
module CreuSat_Trail_Impl0_DecisionLevel_Interface
  use mach.int.UInt64
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val decision_level [@cfg:stackify] (self : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : usize
    ensures { [#"../CreuSAT/src/trail.rs" 36 14 36 48] UInt64.to_int result = Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions self)) }
    
end
module CreuSat_Trail_Impl0_DecisionLevel
  use mach.int.UInt64
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  let rec cfg decision_level [@cfg:stackify] [#"../CreuSAT/src/trail.rs" 37 4 37 41] (self : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : usize
    ensures { [#"../CreuSAT/src/trail.rs" 36 14 36 48] UInt64.to_int result = Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions self)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _2 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _2 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions self_1;
    _0 <- ([#"../CreuSAT/src/trail.rs" 38 8 38 28] Len0.len _2);
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module CreuSat_ConflictAnalysis_Resolve_Interface
  use mach.int.UInt64
  use mach.int.Int
  use seq.Seq
  use mach.int.Int32
  use prelude.Borrow
  use prelude.UIntSize
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy4
  use Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy2 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Logic_Int_Impl20_ModelTy_Type as ModelTy1
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use Alloc_Vec_Vec_Type
  use CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model9 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model8 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model7
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen_Interface as ClauseIsSeen0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model6 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy4.modelTy
  clone CreuSat_Logic_LogicUtil_ElemsLessThan_Interface as ElemsLessThan0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model5 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy3.modelTy
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model4 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy2.modelTy
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model3 with type t = usize,
  type ModelTy0.modelTy = ModelTy1.modelTy
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept_Interface as SameIdxSamePolarityExcept0
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_InFormula_Interface as InFormula0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val resolve [@cfg:stackify] (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (c : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)) (o : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (idx : usize) (c_idx : usize) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (seen : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) (path_c : borrowed usize) (to_bump : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) : ()
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 32 11 32 25] Invariant0.invariant' _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 33 11 33 31] Invariant1.invariant' trail _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 34 11 34 30] UInt64.to_int idx < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 35 11 35 28] InFormula0.in_formula o _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 36 11 38 35] UInt64.to_int c_idx < Seq.length (Model0.model c) /\ IndexLogic0.index_logic (Seq.get (Model0.model c) (UInt64.to_int c_idx)) = UInt64.to_int idx /\ IsOpp0.is_opp (Seq.get (Model1.model o) 0) (Seq.get (Model0.model c) (UInt64.to_int c_idx))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 40 11 40 52] SameIdxSamePolarityExcept0.same_idx_same_polarity_except ( * c) o (UInt64.to_int idx)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 42 0 42 96] forall j : (int) . 1 <= j /\ j < Seq.length (Model1.model o) -> UnsatInner0.unsat_inner (Seq.get (Model1.model o) j) (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 43 11 43 48] SatInner0.sat_inner (Seq.get (Model1.model o) 0) (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 44 11 44 47] Model3.model path_c > 0 /\ Model3.model path_c <= Seq.length (Model0.model c)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 47 11 47 40] Seq.length (Model4.model seen) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 49 11 49 50] ElemsLessThan0.elems_less_than (Model5.model to_bump) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 51 0 51 49] EquisatExtensionInner0.equisat_extension_inner ( * c) (Model6.model _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 52 0 52 46] ClauseIsSeen0.clause_is_seen ( * c) ( * seen)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 53 0 53 46] Unsat0.unsat ( * c) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 54 0 54 45] Invariant2.invariant' ( * c) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 45 10 45 33] UInt64.to_int ( ^ path_c) <= Seq.length (Model7.model ( ^ c)) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 48 10 48 40] Seq.length (Model8.model ( ^ seen)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 50 10 50 50] ElemsLessThan0.elems_less_than (Model9.model ( ^ to_bump)) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 51 0 51 49] EquisatExtensionInner0.equisat_extension_inner ( ^ c) (Model6.model _f) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 52 0 52 46] ClauseIsSeen0.clause_is_seen ( ^ c) ( ^ seen) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 53 0 53 46] Unsat0.unsat ( ^ c) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 54 0 54 45] Invariant2.invariant' ( ^ c) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    
end
module CreuSat_ConflictAnalysis_Resolve
  use mach.int.UInt64
  use mach.int.Int
  use seq.Seq
  use mach.int.Int32
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model15 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model7 with function Model0.model = Model15.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model13 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model13.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model12 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with function Model0.model = Model12.model,
  function Model1.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_Equals as Equals0 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model7.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model7.model
  clone CreuSat_Logic_LogicConflictAnalysis_LemmaEqFormulas as LemmaEqFormulas0 with predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
  predicate Equals0.equals = Equals0.equals, function Model0.model = Model7.model, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner as InFormulaInner0
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_IdxInLogic as IdxInLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy4
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy2 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Logic_Int_Impl20_Model as Model14
  clone CreusotContracts_Logic_Int_Impl20_ModelTy_Type as ModelTy1
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model12.model,
  function Model1.model = Model7.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model12.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model12.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model11 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model10 with function Model0.model = Model12.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model12.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf as ResolventOf0 with function Model0.model = Model7.model,
  predicate LitIn0.lit_in = LitIn0.lit_in, predicate IsOpp0.is_opp = IsOpp0.is_opp
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicConflictAnalysis_LemmaResolventOfEquisatExtensionIsEquisat as LemmaResolventOfEquisatExtensionIsEquisat0 with predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  predicate InFormulaInner0.in_formula_inner = InFormulaInner0.in_formula_inner,
  predicate ResolventOf0.resolvent_of = ResolventOf0.resolvent_of,
  function LemmaEqFormulas0.lemma_eq_formulas = LemmaEqFormulas0.lemma_eq_formulas,
  predicate Equals0.equals = Equals0.equals, function Model0.model = Model7.model, axiom .
  use CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with function Model0.model = Model2.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen as ClauseIsSeen0 with function Model0.model = Model8.model,
  function Model1.model = Model7.model, predicate IdxInLogic0.idx_in_logic = IdxInLogic0.idx_in_logic
  clone CreusotContracts_Logic_Model_Impl0_Model as Model6 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy4.modelTy, function Model0.model = Model10.model
  clone CreuSat_Logic_LogicUtil_ElemsLessThan as ElemsLessThan0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model5 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy3.modelTy, function Model0.model = Model9.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model4 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model8.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model3 with type t = usize,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model14.model
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept as SameIdxSamePolarityExcept0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Logic_Model_Impl0_Model as Model1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model7.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_InFormula as InFormula0 with function Model0.model = Model12.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model11.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model9.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model2.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model10.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy7 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = usize
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy6 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Logic_Model_Impl0_Model as Model17 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model8.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model16 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy6.modelTy, function Model0.model = Model15.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy5 with type t = bool
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = bool
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve4 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve3 with type t = usize
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with function Model0.model = Model9.model
  clone Alloc_Vec_Impl16_Index_Interface as Index2 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model9.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  type Output0.output = Output1.output
  clone Alloc_Vec_Impl1_Push_Interface as Push1 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model15.model
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model9.model
  clone CreuSat_ConflictAnalysis_IdxIn_Interface as IdxIn0 with function Model0.model = Model16.model,
  function Model1.model = Model17.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate IdxInLogic0.idx_in_logic = IdxInLogic0.idx_in_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Lit_Impl1_Index_Interface as Index1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with function Model0.model = Model1.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len0 with function Model0.model = Model1.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = bool
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = bool, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model8.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreuSat_Clause_Impl3_RemoveFromClause_Interface as RemoveFromClause0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model0.model, function Model1.model = Model7.model, predicate LitIn0.lit_in = LitIn0.lit_in
  let rec cfg resolve [@cfg:stackify] [#"../CreuSAT/src/conflict_analysis.rs" 55 0 58 1] (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (c : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)) (o : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (idx : usize) (c_idx : usize) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (seen : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) (path_c : borrowed usize) (to_bump : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) : ()
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 32 11 32 25] Invariant0.invariant' _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 33 11 33 31] Invariant1.invariant' trail _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 34 11 34 30] UInt64.to_int idx < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 35 11 35 28] InFormula0.in_formula o _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 36 11 38 35] UInt64.to_int c_idx < Seq.length (Model0.model c) /\ IndexLogic0.index_logic (Seq.get (Model0.model c) (UInt64.to_int c_idx)) = UInt64.to_int idx /\ IsOpp0.is_opp (Seq.get (Model1.model o) 0) (Seq.get (Model0.model c) (UInt64.to_int c_idx))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 40 11 40 52] SameIdxSamePolarityExcept0.same_idx_same_polarity_except ( * c) o (UInt64.to_int idx)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 42 0 42 96] forall j : (int) . 1 <= j /\ j < Seq.length (Model1.model o) -> UnsatInner0.unsat_inner (Seq.get (Model1.model o) j) (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 43 11 43 48] SatInner0.sat_inner (Seq.get (Model1.model o) 0) (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 44 11 44 47] Model3.model path_c > 0 /\ Model3.model path_c <= Seq.length (Model0.model c)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 47 11 47 40] Seq.length (Model4.model seen) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 49 11 49 50] ElemsLessThan0.elems_less_than (Model5.model to_bump) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 51 0 51 49] EquisatExtensionInner0.equisat_extension_inner ( * c) (Model6.model _f)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 52 0 52 46] ClauseIsSeen0.clause_is_seen ( * c) ( * seen)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 53 0 53 46] Unsat0.unsat ( * c) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 54 0 54 45] Invariant2.invariant' ( * c) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 45 10 45 33] UInt64.to_int ( ^ path_c) <= Seq.length (Model7.model ( ^ c)) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 48 10 48 40] Seq.length (Model8.model ( ^ seen)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 50 10 50 50] ElemsLessThan0.elems_less_than (Model9.model ( ^ to_bump)) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 51 0 51 49] EquisatExtensionInner0.equisat_extension_inner ( ^ c) (Model6.model _f) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 52 0 52 46] ClauseIsSeen0.clause_is_seen ( ^ c) ( ^ seen) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 53 0 53 46] Unsat0.unsat ( ^ c) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail) }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 54 0 54 45] Invariant2.invariant' ( ^ c) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var _f_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var c_2 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var o_3 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var idx_4 : usize;
  var c_idx_5 : usize;
  var trail_6 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var seen_7 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var path_c_8 : borrowed usize;
  var to_bump_9 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  ghost var old_c_10 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _11 : ();
  ghost var old_seen_12 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _13 : ();
  ghost var old_path_c_14 : borrowed usize;
  var _15 : ();
  ghost var old_to_bump_16 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _17 : ();
  var _18 : ();
  var _19 : ();
  var _20 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _21 : usize;
  var _22 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _23 : borrowed bool;
  var _24 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _25 : usize;
  var _26 : ();
  var _27 : ();
  ghost var old_c2_28 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _29 : ();
  var _30 : ();
  var _31 : ();
  var _32 : ();
  var i_33 : usize;
  var _34 : ();
  var _35 : ();
  var _36 : bool;
  var _37 : usize;
  var _38 : usize;
  var _39 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  ghost var old_c3_40 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _41 : ();
  var _42 : ();
  var _43 : ();
  var _44 : bool;
  var _45 : bool;
  var _46 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _47 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _48 : usize;
  var _49 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _50 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _51 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _52 : usize;
  var _53 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _54 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _55 : borrowed bool;
  var _56 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _57 : usize;
  var _58 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _59 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _60 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _61 : usize;
  var _62 : ();
  var _63 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _64 : usize;
  var _65 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _66 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _67 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _68 : usize;
  var _69 : ();
  var _70 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _71 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _72 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _73 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _74 : usize;
  var _75 : ();
  var _76 : bool;
  var _77 : usize;
  var _78 : usize;
  var _79 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _80 : usize;
  var _81 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _82 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _83 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _84 : usize;
  var _85 : usize;
  var _86 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _87 : ();
  var _88 : ();
  var _89 : ();
  var _90 : ();
  var _91 : ();
  var _92 : ();
  var _93 : ();
  var _94 : ();
  var _95 : ();
  {
    _f_1 <- _f;
    c_2 <- c;
    o_3 <- o;
    idx_4 <- idx;
    c_idx_5 <- c_idx;
    trail_6 <- trail;
    seen_7 <- seen;
    path_c_8 <- path_c;
    to_bump_9 <- to_bump;
    goto BB0
  }
  BB0 {
    _11 <- ();
    old_c_10 <- ghost ([#"../CreuSAT/src/conflict_analysis.rs" 59 36 59 45] c_2);
    goto BB1
  }
  BB1 {
    _13 <- ();
    old_seen_12 <- ghost ([#"../CreuSAT/src/conflict_analysis.rs" 60 42 60 54] seen_7);
    goto BB2
  }
  BB2 {
    _15 <- ();
    old_path_c_14 <- ghost ([#"../CreuSAT/src/conflict_analysis.rs" 61 40 61 54] path_c_8);
    goto BB3
  }
  BB3 {
    _17 <- ();
    old_to_bump_16 <- ghost ([#"../CreuSAT/src/conflict_analysis.rs" 62 46 62 61] to_bump_9);
    goto BB4
  }
  BB4 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 64 18 64 41] ClauseIsSeen0.clause_is_seen ( * c_2) ( * seen_7) };
    _18 <- ();
    _20 <- borrow_mut ( * c_2);
    c_2 <- { c_2 with current = ( ^ _20) };
    _21 <- c_idx_5;
    _22 <- _f_1;
    _19 <- ([#"../CreuSAT/src/conflict_analysis.rs" 66 4 66 35] RemoveFromClause0.remove_from_clause _20 _21 _22);
    goto BB5
  }
  BB5 {
    path_c_8 <- { path_c_8 with current = ([#"../CreuSAT/src/conflict_analysis.rs" 68 4 68 16]  * path_c_8 - (1 : usize)) };
    _24 <- borrow_mut ( * seen_7);
    seen_7 <- { seen_7 with current = ( ^ _24) };
    _25 <- idx_4;
    _23 <- ([#"../CreuSAT/src/conflict_analysis.rs" 69 4 69 13] IndexMut0.index_mut _24 _25);
    goto BB6
  }
  BB6 {
    _23 <- { _23 with current = false };
    assume { Resolve0.resolve _23 };
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 71 18 71 44]  ^ seen_7 =  ^ old_seen_12 };
    _26 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 72 18 72 41] ClauseIsSeen0.clause_is_seen ( * c_2) ( * seen_7) };
    _27 <- ();
    _29 <- ();
    old_c2_28 <- ghost ([#"../CreuSAT/src/conflict_analysis.rs" 73 37 73 46] c_2);
    goto BB7
  }
  BB7 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 74 18 74 46] not LitIn0.lit_in (Seq.get (Model0.model old_c_10) (UInt64.to_int c_idx_5)) ( * c_2) };
    _30 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 75 18 75 38]  ^ c_2 =  ^ old_c_10 };
    _31 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 76 4 77 50] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model old_c_10) /\ j <> UInt64.to_int c_idx_5 -> LitIn0.lit_in (Seq.get (Model0.model old_c_10) j) ( * c_2) };
    _32 <- ();
    i_33 <- (1 : usize);
    goto BB8
  }
  BB8 {
    invariant inv { [#"../CreuSAT/src/conflict_analysis.rs" 81 21 81 46] Invariant2.invariant' ( * c_2) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f_1)) };
    invariant all_unsat { [#"../CreuSAT/src/conflict_analysis.rs" 82 27 82 53] Unsat0.unsat ( * c_2) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail_6) };
    invariant i_bound { [#"../CreuSAT/src/conflict_analysis.rs" 83 25 83 52] 1 <= UInt64.to_int i_33 /\ UInt64.to_int i_33 <= Seq.length (Model1.model o_3) };
    invariant not_in { [#"../CreuSAT/src/conflict_analysis.rs" 84 24 84 75] not LitIn0.lit_in (Seq.get (Model0.model old_c_10) (UInt64.to_int c_idx_5)) ( * c_2) /\ not LitIn0.lit_in (Seq.get (Model1.model o_3) 0) ( * c_2) };
    invariant all_in { [#"../CreuSAT/src/conflict_analysis.rs" 81 4 81 48] forall j : (int) . 1 <= j /\ j < UInt64.to_int i_33 -> LitIn0.lit_in (Seq.get (Model1.model o_3) j) ( * c_2) };
    invariant all_in2 { [#"../CreuSAT/src/conflict_analysis.rs" 81 4 81 48] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model old_c_10) /\ j <> UInt64.to_int c_idx_5 -> LitIn0.lit_in (Seq.get (Model0.model old_c_10) j) ( * c_2) };
    invariant from_c_or_o { [#"../CreuSAT/src/conflict_analysis.rs" 81 4 81 48] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model c_2) -> LitIn0.lit_in (Seq.get (Model0.model c_2) j) ( * old_c_10) \/ LitIn0.lit_in (Seq.get (Model0.model c_2) j) o_3 };
    invariant path_c_less { [#"../CreuSAT/src/conflict_analysis.rs" 90 29 90 50] Model3.model path_c_8 <= Seq.length (Model0.model c_2) };
    invariant seen_is_clause { [#"../CreuSAT/src/conflict_analysis.rs" 91 32 91 55] ClauseIsSeen0.clause_is_seen ( * c_2) ( * seen_7) };
    invariant seen_len { [#"../CreuSAT/src/conflict_analysis.rs" 92 26 92 55] Seq.length (Model4.model seen_7) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f_1) };
    invariant elems_less { [#"../CreuSAT/src/conflict_analysis.rs" 93 28 93 67] ElemsLessThan0.elems_less_than (Model5.model to_bump_9) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f_1)) };
    invariant proph_c { [#"../CreuSAT/src/conflict_analysis.rs" 94 25 94 45]  ^ c_2 =  ^ old_c_10 };
    invariant proph_seen { [#"../CreuSAT/src/conflict_analysis.rs" 95 28 95 54]  ^ seen_7 =  ^ old_seen_12 };
    invariant proph_path_c { [#"../CreuSAT/src/conflict_analysis.rs" 96 30 96 60]  ^ path_c_8 =  ^ old_path_c_14 };
    invariant proph_to_bump { [#"../CreuSAT/src/conflict_analysis.rs" 97 31 97 63]  ^ to_bump_9 =  ^ old_to_bump_16 };
    _37 <- i_33;
    _39 <- o_3;
    _38 <- ([#"../CreuSAT/src/conflict_analysis.rs" 98 14 98 21] Len0.len _39);
    goto BB9
  }
  BB9 {
    _36 <- ([#"../CreuSAT/src/conflict_analysis.rs" 98 10 98 21] _37 < _38);
    switch (_36)
      | False -> goto BB33
      | _ -> goto BB10
      end
  }
  BB10 {
    _41 <- ();
    old_c3_40 <- ghost ([#"../CreuSAT/src/conflict_analysis.rs" 99 41 99 50] c_2);
    goto BB11
  }
  BB11 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 100 22 100 43]  ^ c_2 =  ^ old_c3_40 };
    _42 <- ();
    _47 <- CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_lits ( * c_2);
    _46 <- _47;
    _51 <- o_3;
    _52 <- i_33;
    _50 <- ([#"../CreuSAT/src/conflict_analysis.rs" 102 28 102 32] Index0.index _51 _52);
    goto BB12
  }
  BB12 {
    _49 <- _50;
    _48 <- ([#"../CreuSAT/src/conflict_analysis.rs" 102 28 102 40] Index1.index _49);
    goto BB13
  }
  BB13 {
    _54 <- seen_7;
    _53 <-  * _54;
    _45 <- ([#"../CreuSAT/src/conflict_analysis.rs" 102 12 102 48] IdxIn0.idx_in _46 _48 _53);
    goto BB14
  }
  BB14 {
    _44 <- not _45;
    switch (_44)
      | False -> goto BB31
      | _ -> goto BB15
      end
  }
  BB15 {
    _56 <- borrow_mut ( * seen_7);
    seen_7 <- { seen_7 with current = ( ^ _56) };
    _60 <- o_3;
    _61 <- i_33;
    _59 <- ([#"../CreuSAT/src/conflict_analysis.rs" 103 17 103 21] Index0.index _60 _61);
    goto BB16
  }
  BB16 {
    _58 <- _59;
    _57 <- ([#"../CreuSAT/src/conflict_analysis.rs" 103 17 103 29] Index1.index _58);
    goto BB17
  }
  BB17 {
    _55 <- ([#"../CreuSAT/src/conflict_analysis.rs" 103 12 103 30] IndexMut0.index_mut _56 _57);
    goto BB18
  }
  BB18 {
    _55 <- { _55 with current = true };
    assume { Resolve0.resolve _55 };
    _63 <- borrow_mut ( * to_bump_9);
    to_bump_9 <- { to_bump_9 with current = ( ^ _63) };
    _67 <- o_3;
    _68 <- i_33;
    _66 <- ([#"../CreuSAT/src/conflict_analysis.rs" 104 25 104 29] Index0.index _67 _68);
    goto BB19
  }
  BB19 {
    _65 <- _66;
    _64 <- ([#"../CreuSAT/src/conflict_analysis.rs" 104 25 104 37] Index1.index _65);
    goto BB20
  }
  BB20 {
    _62 <- ([#"../CreuSAT/src/conflict_analysis.rs" 104 12 104 38] Push0.push _63 _64);
    goto BB21
  }
  BB21 {
    _70 <- borrow_mut (CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_lits ( * c_2));
    c_2 <- { c_2 with current = (let CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c d =  * c_2 in CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c ( ^ _70)) };
    _73 <- o_3;
    _74 <- i_33;
    _72 <- ([#"../CreuSAT/src/conflict_analysis.rs" 105 24 105 28] Index0.index _73 _74);
    goto BB22
  }
  BB22 {
    _71 <- _72;
    _69 <- ([#"../CreuSAT/src/conflict_analysis.rs" 105 12 105 29] Push1.push _70 _71);
    goto BB23
  }
  BB23 {
    _79 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level trail_6;
    _83 <- o_3;
    _84 <- i_33;
    _82 <- ([#"../CreuSAT/src/conflict_analysis.rs" 106 34 106 38] Index0.index _83 _84);
    goto BB24
  }
  BB24 {
    _81 <- _82;
    _80 <- ([#"../CreuSAT/src/conflict_analysis.rs" 106 34 106 46] Index1.index _81);
    goto BB25
  }
  BB25 {
    _78 <- ([#"../CreuSAT/src/conflict_analysis.rs" 106 15 106 47] Index2.index _79 _80);
    goto BB26
  }
  BB26 {
    _77 <- _78;
    _86 <- trail_6;
    _85 <- ([#"../CreuSAT/src/conflict_analysis.rs" 106 51 106 73] DecisionLevel0.decision_level _86);
    goto BB27
  }
  BB27 {
    _76 <- ([#"../CreuSAT/src/conflict_analysis.rs" 106 15 106 73] _77 >= _85);
    switch (_76)
      | False -> goto BB29
      | _ -> goto BB28
      end
  }
  BB28 {
    path_c_8 <- { path_c_8 with current = ([#"../CreuSAT/src/conflict_analysis.rs" 107 16 107 28]  * path_c_8 + (1 : usize)) };
    _75 <- ();
    goto BB30
  }
  BB29 {
    _75 <- ();
    goto BB30
  }
  BB30 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 109 26 109 56] Model0.model c_2 = Seq.snoc (Model0.model old_c3_40) (Seq.get (Model1.model o_3) (UInt64.to_int i_33)) };
    _87 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 110 26 110 59] Seq.length (Model0.model c_2) = Seq.length (Model0.model old_c3_40) + 1 };
    _88 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 111 26 111 45] LitIn0.lit_in (Seq.get (Model1.model o_3) (UInt64.to_int i_33)) ( * c_2) };
    _89 <- ();
    _43 <- ();
    goto BB32
  }
  BB31 {
    _43 <- ();
    goto BB32
  }
  BB32 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 114 8 115 38] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model old_c3_40) -> Seq.get (Model0.model old_c3_40) j = Seq.get (Model0.model c_2) j };
    _90 <- ();
    i_33 <- ([#"../CreuSAT/src/conflict_analysis.rs" 116 8 116 14] i_33 + (1 : usize));
    _35 <- ();
    goto BB8
  }
  BB33 {
    assume { Resolve1.resolve c_2 };
    assume { Resolve2.resolve seen_7 };
    assume { Resolve3.resolve path_c_8 };
    assume { Resolve4.resolve to_bump_9 };
    _34 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 118 18 118 63] ResolventOf0.resolvent_of ( * c_2) ( * old_c_10) o_3 0 (UInt64.to_int c_idx_5) };
    _94 <- ();
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 119 18 119 105] let _ = LemmaResolventOfEquisatExtensionIsEquisat0.lemma_resolvent_of_equisat_extension_is_equisat (Model6.model _f_1) ( * old_c_10) o_3 ( * c_2) (UInt64.to_int c_idx_5) 0 in true };
    _95 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_ConflictAnalysis_ChooseLiteral_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.UInt64
  use prelude.UIntSize
  use prelude.Borrow
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy2
  use Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy1 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Logic_Int_Impl20_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model3 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy2.modelTy
  use Core_Option_Option_Type
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model2 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy1.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = usize,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  val choose_literal [@cfg:stackify] (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (i : borrowed usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (seen : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) : Core_Option_Option_Type.core_option_option_type usize
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 123 11 123 31] Invariant0.invariant' trail _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 124 11 124 37] Unsat0.unsat c (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 125 11 125 37] Model0.model i <= Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 126 11 126 40] Seq.length (Model2.model seen) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 127 10 135 1] match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type r -> UInt64.to_int r < Seq.length (Model3.model c) /\ IsOpp0.is_opp (Seq.get (Model3.model c) (UInt64.to_int r)) (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail)) (UInt64.to_int ( ^ i)))) /\ IndexLogic0.index_logic (Seq.get (Model3.model c) (UInt64.to_int r)) = IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail)) (UInt64.to_int ( ^ i)))) /\ UInt64.to_int ( ^ i) < Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail))
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> UInt64.to_int ( ^ i) = 0
      end }
    
end
module CreuSat_ConflictAnalysis_ChooseLiteral
  use seq.Seq
  use mach.int.Int
  use mach.int.UInt64
  use prelude.UIntSize
  use prelude.Borrow
  use mach.int.Int32
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model11 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model5 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model8 with function Model0.model = Model11.model
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model8.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model8.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Reason_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant3 with function Model0.model = Model9.model,
  function Model1.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy2
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy1 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Logic_Int_Impl20_Model as Model6
  clone CreusotContracts_Logic_Int_Impl20_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model8.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model9.model,
  function Model1.model = Model8.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model9.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model9.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model5.model
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Logic_Model_Impl0_Model as Model3 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model8.model
  use Core_Option_Option_Type
  clone CreusotContracts_Logic_Model_Impl0_Model as Model2 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model7.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = usize,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with function Model0.model = Model5.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant0 with predicate Invariant0.invariant' = Invariant1.invariant',
  function Model0.model = Model1.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model5.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy4 with type t = bool
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy3 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = usize
  clone CreuSat_Clause_Impl0_Index_Interface as Index3 with function Model0.model = Model3.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len0 with function Model0.model = Model3.model
  clone Alloc_Vec_Impl16_Index_Interface as Index2 with type t = bool, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model7.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  type Output0.output = Output1.output
  clone CreuSat_Lit_Impl1_Index_Interface as Index1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  let rec cfg choose_literal [@cfg:stackify] [#"../CreuSAT/src/conflict_analysis.rs" 136 0 136 108] (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (i : borrowed usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (seen : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) : Core_Option_Option_Type.core_option_option_type usize
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 123 11 123 31] Invariant0.invariant' trail _f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 124 11 124 37] Unsat0.unsat c (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 125 11 125 37] Model0.model i <= Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 126 11 126 40] Seq.length (Model2.model seen) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 127 10 135 1] match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type r -> UInt64.to_int r < Seq.length (Model3.model c) /\ IsOpp0.is_opp (Seq.get (Model3.model c) (UInt64.to_int r)) (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail)) (UInt64.to_int ( ^ i)))) /\ IndexLogic0.index_logic (Seq.get (Model3.model c) (UInt64.to_int r)) = IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail)) (UInt64.to_int ( ^ i)))) /\ UInt64.to_int ( ^ i) < Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail))
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> UInt64.to_int ( ^ i) = 0
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.core_option_option_type usize;
  var c_1 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var trail_2 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var i_3 : borrowed usize;
  var _f_4 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var seen_5 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  ghost var old_i_6 : borrowed usize;
  var _7 : ();
  var _8 : ();
  var _9 : ();
  var _10 : bool;
  var _11 : usize;
  var _12 : bool;
  var _13 : bool;
  var _14 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _15 : usize;
  var _16 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _17 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _18 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _19 : usize;
  var k_20 : usize;
  var _21 : bool;
  var _22 : usize;
  var _23 : usize;
  var _24 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _25 : ();
  var _26 : bool;
  var _27 : usize;
  var _28 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _29 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _30 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _31 : usize;
  var _32 : usize;
  var _33 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _34 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _35 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _36 : usize;
  var _37 : ();
  var _38 : usize;
  var _39 : ();
  var _40 : ();
  var _41 : ();
  var _42 : ();
  var _43 : ();
  var _44 : ();
  {
    c_1 <- c;
    trail_2 <- trail;
    i_3 <- i;
    _f_4 <- _f;
    seen_5 <- seen;
    goto BB0
  }
  BB0 {
    _7 <- ();
    old_i_6 <- ghost ([#"../CreuSAT/src/conflict_analysis.rs" 137 35 137 45] i_3);
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    invariant i_bound { [#"../CreuSAT/src/conflict_analysis.rs" 138 25 138 62] 0 <= Model0.model i_3 /\ Model0.model i_3 <= Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2)) };
    invariant proph_i { [#"../CreuSAT/src/conflict_analysis.rs" 139 25 139 45]  ^ i_3 =  ^ old_i_6 };
    _11 <-  * i_3;
    _10 <- ([#"../CreuSAT/src/conflict_analysis.rs" 140 10 140 16] _11 > (0 : usize));
    switch (_10)
      | False -> goto BB20
      | _ -> goto BB3
      end
  }
  BB3 {
    i_3 <- { i_3 with current = ([#"../CreuSAT/src/conflict_analysis.rs" 141 8 141 15]  * i_3 - (1 : usize)) };
    _14 <- seen_5;
    _18 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2;
    _19 <-  * i_3;
    _17 <- ([#"../CreuSAT/src/conflict_analysis.rs" 142 16 142 31] Index0.index _18 _19);
    goto BB4
  }
  BB4 {
    _16 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit _17;
    _15 <- ([#"../CreuSAT/src/conflict_analysis.rs" 142 16 142 43] Index1.index _16);
    goto BB5
  }
  BB5 {
    _13 <- ([#"../CreuSAT/src/conflict_analysis.rs" 142 11 142 44] Index2.index _14 _15);
    goto BB6
  }
  BB6 {
    _12 <- _13;
    switch (_12)
      | False -> goto BB18
      | _ -> goto BB7
      end
  }
  BB7 {
    k_20 <- (0 : usize);
    goto BB8
  }
  BB8 {
    invariant i_bound2 { [#"../CreuSAT/src/conflict_analysis.rs" 144 34 144 70] 0 <= Model0.model i_3 /\ Model0.model i_3 < Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2)) };
    invariant k_bound { [#"../CreuSAT/src/conflict_analysis.rs" 145 33 145 60] 0 <= UInt64.to_int k_20 /\ UInt64.to_int k_20 <= Seq.length (Model3.model c_1) };
    invariant proph_i2 { [#"../CreuSAT/src/conflict_analysis.rs" 146 34 146 54]  ^ i_3 =  ^ old_i_6 };
    _22 <- k_20;
    _24 <- c_1;
    _23 <- ([#"../CreuSAT/src/conflict_analysis.rs" 147 22 147 29] Len0.len _24);
    goto BB9
  }
  BB9 {
    _21 <- ([#"../CreuSAT/src/conflict_analysis.rs" 147 18 147 29] _22 < _23);
    switch (_21)
      | False -> goto BB17
      | _ -> goto BB10
      end
  }
  BB10 {
    _30 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2;
    _31 <-  * i_3;
    _29 <- ([#"../CreuSAT/src/conflict_analysis.rs" 148 19 148 34] Index0.index _30 _31);
    goto BB11
  }
  BB11 {
    _28 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit _29;
    _27 <- ([#"../CreuSAT/src/conflict_analysis.rs" 148 19 148 46] Index1.index _28);
    goto BB12
  }
  BB12 {
    _35 <- c_1;
    _36 <- k_20;
    _34 <- ([#"../CreuSAT/src/conflict_analysis.rs" 148 50 148 54] Index3.index _35 _36);
    goto BB13
  }
  BB13 {
    _33 <- _34;
    _32 <- ([#"../CreuSAT/src/conflict_analysis.rs" 148 50 148 62] Index1.index _33);
    goto BB14
  }
  BB14 {
    _26 <- ([#"../CreuSAT/src/conflict_analysis.rs" 148 19 148 62] _27 = _32);
    switch (_26)
      | False -> goto BB16
      | _ -> goto BB15
      end
  }
  BB15 {
    assume { Resolve0.resolve i_3 };
    _38 <- k_20;
    _0 <- Core_Option_Option_Type.Core_Option_Option_Some_Type _38;
    goto BB21
  }
  BB16 {
    _25 <- ();
    k_20 <- ([#"../CreuSAT/src/conflict_analysis.rs" 151 16 151 22] k_20 + (1 : usize));
    _9 <- ();
    goto BB8
  }
  BB17 {
    _9 <- ();
    goto BB19
  }
  BB18 {
    _9 <- ();
    goto BB19
  }
  BB19 {
    goto BB2
  }
  BB20 {
    assume { Resolve0.resolve i_3 };
    _8 <- ();
    _0 <- Core_Option_Option_Type.Core_Option_Option_None_Type;
    goto BB21
  }
  BB21 {
    return _0
  }
  
end
module CreuSat_Decision_Node_Type
  use mach.int.Int
  use prelude.UIntSize
  type creusat_decision_node_type  =
    | CreuSat_Decision_Node_Type usize usize usize
    
  let function creusat_decision_node_type_Node_next (self : creusat_decision_node_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Decision_Node_Type a _ _ -> a
      end
  let function creusat_decision_node_type_Node_prev (self : creusat_decision_node_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Decision_Node_Type _ a _ -> a
      end
  let function creusat_decision_node_type_Node_ts (self : creusat_decision_node_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Decision_Node_Type _ _ a -> a
      end
end
module CreuSat_Decision_Decisions_Type
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Decision_Node_Type
  use Alloc_Vec_Vec_Type
  type creusat_decision_decisions_type  =
    | CreuSat_Decision_Decisions_Type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) usize usize usize
    
  let function creusat_decision_decisions_type_Decisions_linked_list (self : creusat_decision_decisions_type) : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Decision_Decisions_Type a _ _ _ -> a
      end
  let function creusat_decision_decisions_type_Decisions_search (self : creusat_decision_decisions_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Decision_Decisions_Type _ _ _ a -> a
      end
  let function creusat_decision_decisions_type_Decisions_start (self : creusat_decision_decisions_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Decision_Decisions_Type _ _ a _ -> a
      end
  let function creusat_decision_decisions_type_Decisions_timestamp (self : creusat_decision_decisions_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Decision_Decisions_Type _ a _ _ -> a
      end
end
module CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface
  use mach.int.Int
  use CreuSat_Decision_Decisions_Type
  predicate invariant' (self : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type) (n : int)
end
module CreuSat_Logic_LogicDecision_Impl0_Invariant
  use mach.int.Int
  use CreuSat_Decision_Decisions_Type
  use seq.Seq
  use mach.int.UInt64
  use prelude.UIntSize
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use CreuSat_Decision_Node_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate invariant' [#"../CreuSAT/src/logic/logic_decision.rs" 9 4 9 42] (self : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type) (n : int)
    
   =
    [#"../CreuSAT/src/logic/logic_decision.rs" 10 8 17 9] Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list self)) = n /\ (UInt64.to_int (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_search self) < Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list self)) \/ UInt64.to_int (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_search self) = 18446744073709551615) /\ UInt64.to_int (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_start self) < Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list self)) /\ (forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list self)) -> (UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next (Seq.get (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list self)) i)) = 18446744073709551615 \/ UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next (Seq.get (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list self)) i)) < n) /\ (UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_prev (Seq.get (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list self)) i)) = 18446744073709551615 \/ UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_prev (Seq.get (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list self)) i)) < n))
end
module CreuSat_ConflictAnalysis_Conflict_Type
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Clause_Clause_Type
  type creusat_conflictanalysis_conflict_type  =
    | CreuSat_ConflictAnalysis_Conflict_Ground_Type
    | CreuSat_ConflictAnalysis_Conflict_Unit_Type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    | CreuSat_ConflictAnalysis_Conflict_Learned_Type usize (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    | CreuSat_ConflictAnalysis_Conflict_Restart_Type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    
  let function creusat_conflictanalysis_conflict_type_Restart_0 (self : creusat_conflictanalysis_conflict_type) : CreuSat_Clause_Clause_Type.creusat_clause_clause_type
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_ConflictAnalysis_Conflict_Ground_Type -> any CreuSat_Clause_Clause_Type.creusat_clause_clause_type
      | CreuSat_ConflictAnalysis_Conflict_Unit_Type _ -> any CreuSat_Clause_Clause_Type.creusat_clause_clause_type
      | CreuSat_ConflictAnalysis_Conflict_Learned_Type _ _ -> any CreuSat_Clause_Clause_Type.creusat_clause_clause_type
      | CreuSat_ConflictAnalysis_Conflict_Restart_Type a -> a
      end
  let function creusat_conflictanalysis_conflict_type_Learned_0 (self : creusat_conflictanalysis_conflict_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_ConflictAnalysis_Conflict_Ground_Type -> any usize
      | CreuSat_ConflictAnalysis_Conflict_Unit_Type _ -> any usize
      | CreuSat_ConflictAnalysis_Conflict_Learned_Type a _ -> a
      | CreuSat_ConflictAnalysis_Conflict_Restart_Type _ -> any usize
      end
  let function creusat_conflictanalysis_conflict_type_Learned_1 (self : creusat_conflictanalysis_conflict_type) : CreuSat_Clause_Clause_Type.creusat_clause_clause_type
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_ConflictAnalysis_Conflict_Ground_Type -> any CreuSat_Clause_Clause_Type.creusat_clause_clause_type
      | CreuSat_ConflictAnalysis_Conflict_Unit_Type _ -> any CreuSat_Clause_Clause_Type.creusat_clause_clause_type
      | CreuSat_ConflictAnalysis_Conflict_Learned_Type _ a -> a
      | CreuSat_ConflictAnalysis_Conflict_Restart_Type _ -> any CreuSat_Clause_Clause_Type.creusat_clause_clause_type
      end
  let function creusat_conflictanalysis_conflict_type_Unit_0 (self : creusat_conflictanalysis_conflict_type) : CreuSat_Clause_Clause_Type.creusat_clause_clause_type
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_ConflictAnalysis_Conflict_Ground_Type -> any CreuSat_Clause_Clause_Type.creusat_clause_clause_type
      | CreuSat_ConflictAnalysis_Conflict_Unit_Type a -> a
      | CreuSat_ConflictAnalysis_Conflict_Learned_Type _ _ -> any CreuSat_Clause_Clause_Type.creusat_clause_clause_type
      | CreuSat_ConflictAnalysis_Conflict_Restart_Type _ -> any CreuSat_Clause_Clause_Type.creusat_clause_clause_type
      end
end
module CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface
  use CreuSat_Formula_Formula_Type
  predicate not_satisfiable (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
end
module CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable
  use CreuSat_Formula_Formula_Type
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension_Interface as EquisatExtension0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate not_satisfiable [#"../CreuSAT/src/logic/logic_formula.rs" 131 4 131 40] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 132 8 132 84] exists c : (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) . Seq.length (Model0.model c) = 0 /\ EquisatExtension0.equisat_extension c self
end
module Alloc_Vec_Impl0_New_Interface
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val new [@cfg:stackify] (_ : ()) : Alloc_Vec_Vec_Type.alloc_vec_vec_type t (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    ensures { Seq.length (Model0.model result) = 0 }
    
end
module Alloc_Vec_Impl0_New
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val new [@cfg:stackify] (_ : ()) : Alloc_Vec_Vec_Type.alloc_vec_vec_type t (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    ensures { Seq.length (Model0.model result) = 0 }
    
end
module CreuSat_Formula_Impl0_Index_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val index [@cfg:stackify] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (ix : usize) : CreuSat_Clause_Clause_Type.creusat_clause_clause_type
    requires {[#"../CreuSAT/src/formula.rs" 29 15 29 36] UInt64.to_int ix < Seq.length (let (a, _) = Model0.model self in a)}
    ensures { [#"../CreuSAT/src/formula.rs" 30 14 30 39] Seq.get (let (a, _) = Model0.model self in a) (UInt64.to_int ix) = result }
    
end
module CreuSat_Formula_Impl0_Index
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  let rec cfg index [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 31 4 31 41] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (ix : usize) : CreuSat_Clause_Clause_Type.creusat_clause_clause_type
    requires {[#"../CreuSAT/src/formula.rs" 29 15 29 36] UInt64.to_int ix < Seq.length (let (a, _) = Model0.model self in a)}
    ensures { [#"../CreuSAT/src/formula.rs" 30 14 30 39] Seq.get (let (a, _) = Model0.model self in a) (UInt64.to_int ix) = result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var self_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var ix_2 : usize;
  var _3 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _4 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _5 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _6 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _5 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self_1;
    _6 <- ix_2;
    _4 <- ([#"../CreuSAT/src/formula.rs" 37 9 37 25] Index0.index _5 _6);
    goto BB1
  }
  BB1 {
    _3 <- _4;
    _0 <- _3;
    return _0
  }
  
end
module CreusotContracts_Logic_Resolve_Resolve_Resolve_Interface
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Logic_Resolve_Resolve_Resolve
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Std1_Vec_Impl3_Resolve_Interface
  type t
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  predicate resolve (self : Alloc_Vec_Vec_Type.alloc_vec_vec_type t (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
end
module CreusotContracts_Std1_Vec_Impl3_Resolve
  type t
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreusotContracts_Logic_Resolve_Resolve_Resolve_Interface as Resolve0 with type self = t
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate resolve (self : Alloc_Vec_Vec_Type.alloc_vec_vec_type t (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) =
    forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model self) -> Resolve0.resolve (Seq.get (Model0.model self) i)
end
module CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate sorted_range_tuple_zeroth (s : Seq.seq (usize, usize)) (l : int) (u : int)
end
module CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate sorted_range_tuple_zeroth [#"../CreuSAT/src/logic/logic_util.rs" 28 0 28 80] (s : Seq.seq (usize, usize)) (l : int) (u : int)
    
   =
    [#"../CreuSAT/src/logic/logic_util.rs" 29 4 31 5] forall j : (int) . forall i : (int) . l <= i /\ i < j /\ j < u -> (let (a, _) = Seq.get s i in a) <= (let (a, _) = Seq.get s j in a)
end
module CreuSat_Logic_LogicUtil_SortedTupleZeroth_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate sorted_tuple_zeroth (s : Seq.seq (usize, usize))
end
module CreuSat_Logic_LogicUtil_SortedTupleZeroth
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  clone CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth_Interface as SortedRangeTupleZeroth0
  predicate sorted_tuple_zeroth [#"../CreuSAT/src/logic/logic_util.rs" 35 0 35 58] (s : Seq.seq (usize, usize)) =
    [#"../CreuSAT/src/logic/logic_util.rs" 36 4 36 44] SortedRangeTupleZeroth0.sorted_range_tuple_zeroth s 0 (Seq.length s)
end
module CreusotContracts_Logic_Seq_Impl2_PermutationOf_Interface
  type t
  use seq.Seq
  predicate permutation_of (self : Seq.seq t) (o : Seq.seq t)
end
module CreusotContracts_Logic_Seq_Impl2_PermutationOf
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq.Permut
  predicate permutation_of (self : Seq.seq t) (o : Seq.seq t) =
    Permut.permut self o 0 (Seq.length self)
end
module CreuSat_Logic_LogicUtil_Partition_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate partition (v : Seq.seq (usize, usize)) (i : int)
end
module CreuSat_Logic_LogicUtil_Partition
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  predicate partition [#"../CreuSAT/src/logic/logic_util.rs" 40 0 40 56] (v : Seq.seq (usize, usize)) (i : int) =
    [#"../CreuSAT/src/logic/logic_util.rs" 41 4 41 110] forall k2 : (int) . forall k1 : (int) . 0 <= k1 /\ k1 < i /\ i <= k2 /\ k2 < Seq.length v -> (let (a, _) = Seq.get v k1 in a) <= (let (a, _) = Seq.get v k2 in a)
end
module CreuSat_Util_Sort_Interface
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Logic_Seq_Impl2_PermutationOf_Interface as PermutationOf0 with type t = (usize, usize)
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicUtil_SortedTupleZeroth_Interface as SortedTupleZeroth0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val sort [@cfg:stackify] (v : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) : ()
    ensures { [#"../CreuSAT/src/util.rs" 60 10 60 34] SortedTupleZeroth0.sorted_tuple_zeroth (Model0.model ( ^ v)) }
    ensures { [#"../CreuSAT/src/util.rs" 61 10 61 34] PermutationOf0.permutation_of (Model0.model ( ^ v)) (Model1.model v) }
    
end
module CreuSat_Util_Sort
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreuSat_Logic_LogicUtil_Partition as Partition0
  clone CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth as SortedRangeTupleZeroth0
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Logic_Seq_Impl2_PermutationOf as PermutationOf0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model0.model
  clone CreuSat_Logic_LogicUtil_SortedTupleZeroth as SortedTupleZeroth0 with predicate SortedRangeTupleZeroth0.sorted_range_tuple_zeroth = SortedRangeTupleZeroth0.sorted_range_tuple_zeroth
  use prelude.Slice
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model2 with type t = (usize, usize), axiom .
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = (usize, usize)
  clone CreusotContracts_Logic_Model_Impl1_Model as Model3 with type t = seq (usize, usize),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model2.model
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = (usize, usize)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = seq (usize, usize)
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = (usize, usize), function Model0.model = Model3.model,
  function Model1.model = Model2.model
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  function Model1.model = Model0.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = (usize, usize), type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  let rec cfg sort [@cfg:stackify] [#"../CreuSAT/src/util.rs" 62 0 62 40] (v : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) : ()
    ensures { [#"../CreuSAT/src/util.rs" 60 10 60 34] SortedTupleZeroth0.sorted_tuple_zeroth (Model0.model ( ^ v)) }
    ensures { [#"../CreuSAT/src/util.rs" 61 10 61 34] PermutationOf0.permutation_of (Model0.model ( ^ v)) (Model1.model v) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var v_1 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var i_2 : usize;
  ghost var old_v_3 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _4 : ();
  var _5 : ();
  var _6 : bool;
  var _7 : usize;
  var _8 : usize;
  var _9 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var max_10 : usize;
  var j_11 : usize;
  var _12 : usize;
  var _13 : ();
  var _14 : bool;
  var _15 : usize;
  var _16 : usize;
  var _17 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _18 : ();
  var _19 : bool;
  var _20 : usize;
  var _21 : (usize, usize);
  var _22 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _23 : usize;
  var _24 : usize;
  var _25 : (usize, usize);
  var _26 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _27 : usize;
  var _28 : usize;
  var _29 : ();
  var _30 : ();
  var _31 : ();
  var _32 : ();
  var _33 : borrowed (seq (usize, usize));
  var _34 : borrowed (seq (usize, usize));
  var _35 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _36 : usize;
  var _37 : usize;
  var _38 : ();
  var _39 : ();
  var _40 : ();
  {
    v_1 <- v;
    goto BB0
  }
  BB0 {
    i_2 <- (0 : usize);
    _4 <- ();
    old_v_3 <- ghost ([#"../CreuSAT/src/util.rs" 64 49 64 61] v_1);
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    invariant proph_const { [#"../CreuSAT/src/util.rs" 65 29 65 49]  ^ v_1 =  ^ old_v_3 };
    invariant permutation { [#"../CreuSAT/src/util.rs" 66 29 66 65] PermutationOf0.permutation_of (Model1.model v_1) (Model0.model ( * old_v_3)) };
    invariant i_bound { [#"../CreuSAT/src/util.rs" 67 25 67 41] UInt64.to_int i_2 <= Seq.length (Model1.model v_1) };
    invariant sorted { [#"../CreuSAT/src/util.rs" 68 24 68 60] SortedRangeTupleZeroth0.sorted_range_tuple_zeroth (Model1.model v_1) 0 (UInt64.to_int i_2) };
    invariant partition { [#"../CreuSAT/src/util.rs" 69 27 69 44] Partition0.partition (Model1.model v_1) (UInt64.to_int i_2) };
    _7 <- i_2;
    _9 <-  * v_1;
    _8 <- ([#"../CreuSAT/src/util.rs" 70 14 70 21] Len0.len _9);
    goto BB3
  }
  BB3 {
    _6 <- ([#"../CreuSAT/src/util.rs" 70 10 70 21] _7 < _8);
    switch (_6)
      | False -> goto BB16
      | _ -> goto BB4
      end
  }
  BB4 {
    max_10 <- i_2;
    _12 <- i_2;
    j_11 <- ([#"../CreuSAT/src/util.rs" 72 20 72 25] _12 + (1 : usize));
    goto BB5
  }
  BB5 {
    invariant max_is_max { [#"../CreuSAT/src/util.rs" 73 8 73 96] forall k : (int) . UInt64.to_int i_2 <= k /\ k < UInt64.to_int j_11 -> (let (a, _) = Seq.get (Model1.model v_1) (UInt64.to_int max_10) in a) <= (let (a, _) = Seq.get (Model1.model v_1) k in a) };
    invariant j_bound { [#"../CreuSAT/src/util.rs" 74 29 74 57] UInt64.to_int i_2 <= UInt64.to_int j_11 /\ UInt64.to_int j_11 <= Seq.length (Model1.model v_1) };
    invariant max_bound { [#"../CreuSAT/src/util.rs" 75 31 75 54] UInt64.to_int i_2 <= UInt64.to_int max_10 /\ UInt64.to_int max_10 < UInt64.to_int j_11 };
    _15 <- j_11;
    _17 <-  * v_1;
    _16 <- ([#"../CreuSAT/src/util.rs" 76 18 76 25] Len0.len _17);
    goto BB6
  }
  BB6 {
    _14 <- ([#"../CreuSAT/src/util.rs" 76 14 76 25] _15 < _16);
    switch (_14)
      | False -> goto BB13
      | _ -> goto BB7
      end
  }
  BB7 {
    _22 <-  * v_1;
    _23 <- j_11;
    _21 <- ([#"../CreuSAT/src/util.rs" 77 15 77 19] Index0.index _22 _23);
    goto BB8
  }
  BB8 {
    _20 <- (let (a, _) = _21 in a);
    _26 <-  * v_1;
    _27 <- max_10;
    _25 <- ([#"../CreuSAT/src/util.rs" 77 24 77 30] Index0.index _26 _27);
    goto BB9
  }
  BB9 {
    _24 <- (let (a, _) = _25 in a);
    _19 <- ([#"../CreuSAT/src/util.rs" 77 15 77 32] _20 < _24);
    switch (_19)
      | False -> goto BB11
      | _ -> goto BB10
      end
  }
  BB10 {
    _28 <- j_11;
    max_10 <- _28;
    _28 <- any usize;
    _18 <- ();
    goto BB12
  }
  BB11 {
    _18 <- ();
    goto BB12
  }
  BB12 {
    j_11 <- ([#"../CreuSAT/src/util.rs" 80 12 80 18] j_11 + (1 : usize));
    _5 <- ();
    goto BB5
  }
  BB13 {
    _13 <- ();
    _35 <- borrow_mut ( * v_1);
    v_1 <- { v_1 with current = ( ^ _35) };
    _34 <- ([#"../CreuSAT/src/util.rs" 82 8 82 22] DerefMut0.deref_mut _35);
    goto BB14
  }
  BB14 {
    _33 <- borrow_mut ( * _34);
    _34 <- { _34 with current = ( ^ _33) };
    _36 <- i_2;
    _37 <- max_10;
    _32 <- ([#"../CreuSAT/src/util.rs" 82 8 82 22] Swap0.swap _33 _36 _37);
    goto BB15
  }
  BB15 {
    assume { Resolve0.resolve _34 };
    i_2 <- ([#"../CreuSAT/src/util.rs" 83 8 83 14] i_2 + (1 : usize));
    _5 <- ();
    goto BB2
  }
  BB16 {
    assume { Resolve1.resolve v_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Decision_Impl1_Rescore_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use CreuSat_Decision_Node_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Decision_Decisions_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  val rescore [@cfg:stackify] (self : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/decision.rs" 131 4 131 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/decision.rs" 132 15 132 54] Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self))) < 18446744073709551615}
    ensures { [#"../CreuSAT/src/decision.rs" 131 4 131 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/decision.rs" 133 14 133 65] UInt64.to_int (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_timestamp ( ^ self)) = Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self))) + 1 }
    ensures { [#"../CreuSAT/src/decision.rs" 134 14 134 71] Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( ^ self))) = Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self))) }
    
end
module CreuSat_Decision_Impl1_Rescore
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use CreuSat_Decision_Node_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Decision_Decisions_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  let rec cfg rescore [@cfg:stackify] [#"../CreuSAT/src/decision.rs" 135 4 135 39] (self : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/decision.rs" 131 4 131 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/decision.rs" 132 15 132 54] Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self))) < 18446744073709551615}
    ensures { [#"../CreuSAT/src/decision.rs" 131 4 131 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/decision.rs" 133 14 133 65] UInt64.to_int (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_timestamp ( ^ self)) = Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self))) + 1 }
    ensures { [#"../CreuSAT/src/decision.rs" 134 14 134 71] Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( ^ self))) = Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _f_2 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var iNVALID'_3 : usize;
  ghost var old_self_4 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _5 : ();
  var curr_score_6 : usize;
  var _7 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var i_8 : usize;
  var curr_9 : usize;
  var _10 : ();
  var _11 : ();
  var _12 : bool;
  var _13 : usize;
  var _14 : usize;
  var _15 : usize;
  var _16 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _17 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _18 : usize;
  var _19 : ();
  var _20 : bool;
  var _21 : usize;
  var _22 : ();
  var _23 : usize;
  var _24 : CreuSat_Decision_Node_Type.creusat_decision_node_type;
  var _25 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _26 : usize;
  var _27 : ();
  var _28 : ();
  var _29 : ();
  var _30 : usize;
  var _31 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  {
    self_1 <- self;
    _f_2 <- _f;
    goto BB0
  }
  BB0 {
    iNVALID'_3 <- (18446744073709551615 : usize);
    _5 <- ();
    old_self_4 <- ghost ([#"../CreuSAT/src/decision.rs" 137 46 137 61] self_1);
    goto BB1
  }
  BB1 {
    _7 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1);
    curr_score_6 <- ([#"../CreuSAT/src/decision.rs" 138 29 138 51] Len0.len _7);
    goto BB2
  }
  BB2 {
    i_8 <- (0 : usize);
    curr_9 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_start ( * self_1);
    goto BB3
  }
  BB3 {
    invariant curr_ok { [#"../CreuSAT/src/decision.rs" 141 29 141 84] curr_9 = (18446744073709551615 : usize) \/ UInt64.to_int curr_9 < Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1))) };
    invariant proph { [#"../CreuSAT/src/decision.rs" 142 27 142 53]  ^ old_self_4 =  ^ self_1 };
    invariant unch { [#"../CreuSAT/src/decision.rs" 141 8 141 86] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1))) -> CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next (Seq.get (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1))) j) = CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next (Seq.get (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * old_self_4))) j) /\ CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_prev (Seq.get (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1))) j) = CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_prev (Seq.get (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * old_self_4))) j) };
    invariant inv { [#"../CreuSAT/src/decision.rs" 147 25 147 53] Invariant0.invariant' ( * self_1) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f_2)) };
    _13 <- curr_9;
    _14 <- iNVALID'_3;
    _12 <- ([#"../CreuSAT/src/decision.rs" 148 14 148 29] _13 <> _14);
    switch (_12)
      | False -> goto BB9
      | _ -> goto BB4
      end
  }
  BB4 {
    _15 <- curr_score_6;
    _17 <- borrow_mut (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type ( ^ _17) b c d) };
    _18 <- curr_9;
    _16 <- ([#"../CreuSAT/src/decision.rs" 149 12 149 34] IndexMut0.index_mut _17 _18);
    goto BB5
  }
  BB5 {
    _16 <- { _16 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _16 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b _15) };
    _15 <- any usize;
    assume { Resolve0.resolve _16 };
    _21 <- curr_score_6;
    _20 <- ([#"../CreuSAT/src/decision.rs" 150 15 150 29] _21 > (0 : usize));
    switch (_20)
      | False -> goto BB7
      | _ -> goto BB6
      end
  }
  BB6 {
    curr_score_6 <- ([#"../CreuSAT/src/decision.rs" 151 16 151 31] curr_score_6 - (1 : usize));
    _19 <- ();
    _25 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1);
    _26 <- curr_9;
    _24 <- ([#"../CreuSAT/src/decision.rs" 155 19 155 41] Index0.index _25 _26);
    goto BB8
  }
  BB7 {
    _10 <- ();
    goto BB10
  }
  BB8 {
    _23 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next _24;
    curr_9 <- _23;
    _23 <- any usize;
    _11 <- ();
    goto BB3
  }
  BB9 {
    _10 <- ();
    goto BB10
  }
  BB10 {
    _31 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1);
    _30 <- ([#"../CreuSAT/src/decision.rs" 157 25 157 47] Len0.len _31);
    goto BB11
  }
  BB11 {
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a ([#"../CreuSAT/src/decision.rs" 157 8 157 51] _30 + (1 : usize)) c d) };
    assume { Resolve1.resolve self_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Decision_Impl1_MoveToFront_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use prelude.Borrow
  use seq.Seq
  use Alloc_Alloc_Global_Type
  use CreuSat_Decision_Node_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val move_to_front [@cfg:stackify] (self : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (tomove : usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/decision.rs" 161 15 161 41] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f) < 18446744073709551615}
    requires {[#"../CreuSAT/src/decision.rs" 162 15 162 50] UInt64.to_int tomove < Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self)))}
    requires {[#"../CreuSAT/src/decision.rs" 163 4 163 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    ensures { [#"../CreuSAT/src/decision.rs" 163 4 163 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    
end
module CreuSat_Decision_Impl1_MoveToFront
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use prelude.Borrow
  use seq.Seq
  use Alloc_Alloc_Global_Type
  use CreuSat_Decision_Node_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Decision_Decisions_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreuSat_Decision_Impl1_Rescore_Interface as Rescore0 with predicate Invariant0.invariant' = Invariant0.invariant',
  function Model0.model = Model0.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  let rec cfg move_to_front [@cfg:stackify] [#"../CreuSAT/src/decision.rs" 164 4 164 60] (self : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (tomove : usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/decision.rs" 161 15 161 41] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f) < 18446744073709551615}
    requires {[#"../CreuSAT/src/decision.rs" 162 15 162 50] UInt64.to_int tomove < Seq.length (Model0.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self)))}
    requires {[#"../CreuSAT/src/decision.rs" 163 4 163 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    ensures { [#"../CreuSAT/src/decision.rs" 163 4 163 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var tomove_2 : usize;
  var _f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var iNVALID'_4 : usize;
  var _5 : ();
  var _6 : bool;
  var _7 : usize;
  var _8 : usize;
  var _9 : ();
  var moving_10 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _11 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _12 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _13 : usize;
  var prev_14 : usize;
  var old_next_15 : usize;
  var _16 : usize;
  var _17 : usize;
  var _18 : usize;
  var _19 : ();
  var _20 : bool;
  var _21 : usize;
  var _22 : ();
  var _23 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _24 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _25 : ();
  var _26 : usize;
  var _27 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _28 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _29 : usize;
  var _30 : usize;
  var _31 : ();
  var _32 : bool;
  var _33 : usize;
  var _34 : usize;
  var _35 : usize;
  var _36 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _37 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _38 : usize;
  var _39 : bool;
  var _40 : usize;
  var _41 : usize;
  var _42 : usize;
  var _43 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _44 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _45 : usize;
  {
    self_1 <- self;
    tomove_2 <- tomove;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    iNVALID'_4 <- (18446744073709551615 : usize);
    _7 <- tomove_2;
    _8 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_start ( * self_1);
    _6 <- ([#"../CreuSAT/src/decision.rs" 166 11 166 31] _7 = _8);
    switch (_6)
      | False -> goto BB2
      | _ -> goto BB1
      end
  }
  BB1 {
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB17
  }
  BB2 {
    _5 <- ();
    _12 <- borrow_mut (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type ( ^ _12) b c d) };
    _13 <- tomove_2;
    _11 <- ([#"../CreuSAT/src/decision.rs" 169 30 169 54] IndexMut0.index_mut _12 _13);
    goto BB3
  }
  BB3 {
    moving_10 <- borrow_mut ( * _11);
    _11 <- { _11 with current = ( ^ moving_10) };
    assume { Resolve1.resolve _11 };
    prev_14 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_prev ( * moving_10);
    old_next_15 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next ( * moving_10);
    _16 <- iNVALID'_4;
    moving_10 <- { moving_10 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * moving_10 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a _16 c) };
    _16 <- any usize;
    _17 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_start ( * self_1);
    moving_10 <- { moving_10 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * moving_10 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type _17 b c) };
    _17 <- any usize;
    _18 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_timestamp ( * self_1);
    moving_10 <- { moving_10 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * moving_10 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b _18) };
    _18 <- any usize;
    assume { Resolve1.resolve moving_10 };
    _21 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_timestamp ( * self_1);
    _20 <- ([#"../CreuSAT/src/decision.rs" 175 11 175 39] _21 = (18446744073709551615 : usize));
    switch (_20)
      | False -> goto BB6
      | _ -> goto BB4
      end
  }
  BB4 {
    _23 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _23) };
    _24 <- _f_3;
    _22 <- ([#"../CreuSAT/src/decision.rs" 176 12 176 28] Rescore0.rescore _23 _24);
    goto BB5
  }
  BB5 {
    _19 <- ();
    goto BB7
  }
  BB6 {
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a ([#"../CreuSAT/src/decision.rs" 178 12 178 31] CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_timestamp ( * self_1) + (1 : usize)) c d) };
    _19 <- ();
    goto BB7
  }
  BB7 {
    assert { [#"../CreuSAT/src/decision.rs" 180 22 180 50] UInt64.to_int (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_start ( * self_1)) < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f_3) };
    _25 <- ();
    _26 <- tomove_2;
    _28 <- borrow_mut (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type ( ^ _28) b c d) };
    _29 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_start ( * self_1);
    _27 <- ([#"../CreuSAT/src/decision.rs" 181 8 181 36] IndexMut0.index_mut _28 _29);
    goto BB8
  }
  BB8 {
    _27 <- { _27 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _27 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a _26 c) };
    _26 <- any usize;
    assume { Resolve1.resolve _27 };
    _30 <- tomove_2;
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b _30 d) };
    _30 <- any usize;
    _33 <- prev_14;
    _34 <- iNVALID'_4;
    _32 <- ([#"../CreuSAT/src/decision.rs" 183 11 183 26] _33 <> _34);
    switch (_32)
      | False -> goto BB11
      | _ -> goto BB9
      end
  }
  BB9 {
    _35 <- old_next_15;
    _37 <- borrow_mut (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type ( ^ _37) b c d) };
    _38 <- prev_14;
    _36 <- ([#"../CreuSAT/src/decision.rs" 185 12 185 34] IndexMut0.index_mut _37 _38);
    goto BB10
  }
  BB10 {
    _36 <- { _36 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _36 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type _35 b c) };
    _35 <- any usize;
    assume { Resolve1.resolve _36 };
    _31 <- ();
    goto BB12
  }
  BB11 {
    _31 <- ();
    goto BB12
  }
  BB12 {
    _40 <- old_next_15;
    _41 <- iNVALID'_4;
    _39 <- ([#"../CreuSAT/src/decision.rs" 187 11 187 30] _40 <> _41);
    switch (_39)
      | False -> goto BB15
      | _ -> goto BB13
      end
  }
  BB13 {
    _42 <- prev_14;
    _44 <- borrow_mut (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type ( ^ _44) b c d) };
    assume { Resolve0.resolve self_1 };
    _45 <- old_next_15;
    _43 <- ([#"../CreuSAT/src/decision.rs" 188 12 188 38] IndexMut0.index_mut _44 _45);
    goto BB14
  }
  BB14 {
    _43 <- { _43 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _43 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a _42 c) };
    _42 <- any usize;
    assume { Resolve1.resolve _43 };
    _0 <- ();
    goto BB16
  }
  BB15 {
    assume { Resolve0.resolve self_1 };
    _0 <- ();
    goto BB16
  }
  BB16 {
    goto BB17
  }
  BB17 {
    return _0
  }
  
end
module CreusotContracts_Std1_Vec_Impl3
  type t
end
module CreusotContracts_Logic_Resolve_Impl0_Resolve_Interface
  type t1
  type t2
  predicate resolve (self : (t1, t2))
end
module CreusotContracts_Logic_Resolve_Impl0_Resolve
  type t1
  type t2
  clone CreusotContracts_Logic_Resolve_Resolve_Resolve_Interface as Resolve1 with type self = t2
  clone CreusotContracts_Logic_Resolve_Resolve_Resolve_Interface as Resolve0 with type self = t1
  predicate resolve (self : (t1, t2)) =
    Resolve0.resolve (let (a, _) = self in a) /\ Resolve1.resolve (let (_, a) = self in a)
end
module CreusotContracts_Logic_Resolve_Impl0
  type t1
  type t2
end
module CreusotContracts_Logic_Resolve_Impl2_Resolve_Interface
  type t
  predicate resolve (self : t)
end
module CreusotContracts_Logic_Resolve_Impl2_Resolve
  type t
  predicate resolve (self : t) =
    true
end
module CreusotContracts_Logic_Resolve_Impl2
  type t
end
module CreuSat_Decision_Impl1_IncrementAndMove_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreuSat_Logic_LogicUtil_ElemsLessThan_Interface as ElemsLessThan0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val increment_and_move [@cfg:stackify] (self : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (v : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) : ()
    requires {[#"../CreuSAT/src/decision.rs" 200 15 200 47] ElemsLessThan0.elems_less_than (Model0.model v) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/decision.rs" 201 15 201 40] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < 18446744073709551615}
    requires {[#"../CreuSAT/src/decision.rs" 202 15 202 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 203 4 203 51] Invariant1.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    ensures { [#"../CreuSAT/src/decision.rs" 203 4 203 51] Invariant1.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl1_IncrementAndMove
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use prelude.Borrow
  use seq.Seq
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model5 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model5.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Decision_Node_Type
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model5.model
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model4.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model5.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model3.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicUtil_ElemsLessThan as ElemsLessThan0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth as SortedRangeTupleZeroth0
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve6 with type t = usize
  clone CreusotContracts_Logic_Resolve_Impl0_Resolve as Resolve5 with type t1 = usize, type t2 = usize,
  predicate Resolve0.resolve = Resolve6.resolve, predicate Resolve1.resolve = Resolve6.resolve
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy3 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Logic_Seq_Impl2_PermutationOf as PermutationOf0 with type t = (usize, usize)
  clone CreusotContracts_Logic_Model_Impl1_Model as Model7 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy3.modelTy, function Model0.model = Model1.model
  clone CreuSat_Logic_LogicUtil_SortedTupleZeroth as SortedTupleZeroth0 with predicate SortedRangeTupleZeroth0.sorted_range_tuple_zeroth = SortedRangeTupleZeroth0.sorted_range_tuple_zeroth
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy2 with type t = (usize, usize)
  clone Core_Slice_Index_Impl2_Output_Type as Output2 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue2 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds2 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve4 with type t = usize, function Model0.model = Model0.model,
  predicate Resolve0.resolve = Resolve6.resolve
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve3 with type t = (usize, usize),
  function Model0.model = Model1.model, predicate Resolve0.resolve = Resolve5.resolve
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreuSat_Decision_Impl1_MoveToFront_Interface as MoveToFront0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant1.invariant'
  clone Alloc_Vec_Impl16_Index_Interface as Index2 with type t = (usize, usize), type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds2.in_bounds, predicate HasValue0.has_value = HasValue2.has_value,
  type Output0.output = Output2.output
  clone Alloc_Vec_Impl1_Len_Interface as Len1 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreuSat_Util_Sort_Interface as Sort0 with function Model0.model = Model1.model,
  predicate SortedTupleZeroth0.sorted_tuple_zeroth = SortedTupleZeroth0.sorted_tuple_zeroth,
  function Model1.model = Model7.model, predicate PermutationOf0.permutation_of = PermutationOf0.permutation_of
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = (usize, usize)
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = (usize, usize), type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds2.in_bounds, predicate HasValue0.has_value = HasValue2.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output2.output
  clone Alloc_Vec_Impl16_Index_Interface as Index1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  type Output0.output = Output1.output
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone Alloc_Vec_FromElem_Interface as FromElem0 with type t = (usize, usize), function Model0.model = Model1.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  let rec cfg increment_and_move [@cfg:stackify] [#"../CreuSAT/src/decision.rs" 204 4 204 68] (self : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (v : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) : ()
    requires {[#"../CreuSAT/src/decision.rs" 200 15 200 47] ElemsLessThan0.elems_less_than (Model0.model v) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/decision.rs" 201 15 201 40] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < 18446744073709551615}
    requires {[#"../CreuSAT/src/decision.rs" 202 15 202 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 203 4 203 51] Invariant1.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    ensures { [#"../CreuSAT/src/decision.rs" 203 4 203 51] Invariant1.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var f_2 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var v_3 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var counts_with_index_4 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _5 : (usize, usize);
  var _6 : usize;
  var _7 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  ghost var old_self_8 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _9 : ();
  var i_10 : usize;
  var _11 : ();
  var _12 : ();
  var _13 : bool;
  var _14 : usize;
  var _15 : usize;
  var _16 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _17 : usize;
  var _18 : CreuSat_Decision_Node_Type.creusat_decision_node_type;
  var _19 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _20 : usize;
  var _21 : usize;
  var _22 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _23 : usize;
  var _24 : usize;
  var _25 : usize;
  var _26 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _27 : usize;
  var _28 : borrowed (usize, usize);
  var _29 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _30 : usize;
  var _31 : ();
  var _32 : ();
  var _33 : ();
  var _34 : ();
  var _35 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _36 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _37 : bool;
  var _38 : usize;
  var _39 : usize;
  var _40 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _41 : ();
  var _42 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _43 : usize;
  var _44 : (usize, usize);
  var _45 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _46 : usize;
  var _47 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _48 : ();
  var _49 : ();
  var _50 : ();
  {
    self_1 <- self;
    f_2 <- f;
    v_3 <- v;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    _5 <- ((0 : usize), (0 : usize));
    _7 <- v_3;
    _6 <- ([#"../CreuSAT/src/decision.rs" 205 70 205 77] Len0.len _7);
    goto BB2
  }
  BB2 {
    counts_with_index_4 <- ([#"../CreuSAT/src/decision.rs" 205 57 205 78] FromElem0.from_elem _5 _6);
    goto BB3
  }
  BB3 {
    _9 <- ();
    old_self_8 <- ghost ([#"../CreuSAT/src/decision.rs" 206 46 206 61] self_1);
    goto BB4
  }
  BB4 {
    i_10 <- (0 : usize);
    goto BB5
  }
  BB5 {
    goto BB6
  }
  BB6 {
    goto BB7
  }
  BB7 {
    invariant unch { [#"../CreuSAT/src/decision.rs" 208 26 208 50] old_self_8 = self_1 };
    invariant proph { [#"../CreuSAT/src/decision.rs" 209 27 209 53]  ^ old_self_8 =  ^ self_1 };
    invariant len_same { [#"../CreuSAT/src/decision.rs" 210 30 210 70] Seq.length (Model0.model v_3) = Seq.length (Model1.model counts_with_index_4) };
    invariant all_less { [#"../CreuSAT/src/decision.rs" 208 8 208 52] forall j : (int) . 0 <= j /\ j < UInt64.to_int i_10 -> UInt64.to_int (let (_, a) = Seq.get (Model1.model counts_with_index_4) j in a) < Seq.length (Model2.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1))) };
    _14 <- i_10;
    _16 <- v_3;
    _15 <- ([#"../CreuSAT/src/decision.rs" 213 18 213 25] Len0.len _16);
    goto BB8
  }
  BB8 {
    _13 <- ([#"../CreuSAT/src/decision.rs" 213 14 213 25] _14 < _15);
    switch (_13)
      | False -> goto BB14
      | _ -> goto BB9
      end
  }
  BB9 {
    _19 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1);
    _22 <- v_3;
    _23 <- i_10;
    _21 <- ([#"../CreuSAT/src/decision.rs" 214 53 214 57] Index0.index _22 _23);
    goto BB10
  }
  BB10 {
    _20 <- _21;
    _18 <- ([#"../CreuSAT/src/decision.rs" 214 36 214 58] Index1.index _19 _20);
    goto BB11
  }
  BB11 {
    _17 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_ts _18;
    _26 <- v_3;
    _27 <- i_10;
    _25 <- ([#"../CreuSAT/src/decision.rs" 214 63 214 67] Index0.index _26 _27);
    goto BB12
  }
  BB12 {
    _24 <- _25;
    _29 <- borrow_mut counts_with_index_4;
    counts_with_index_4 <-  ^ _29;
    _30 <- i_10;
    _28 <- ([#"../CreuSAT/src/decision.rs" 214 12 214 32] IndexMut0.index_mut _29 _30);
    goto BB13
  }
  BB13 {
    _28 <- { _28 with current = (_17, _24) };
    assume { Resolve0.resolve _28 };
    i_10 <- ([#"../CreuSAT/src/decision.rs" 215 12 215 18] i_10 + (1 : usize));
    _12 <- ();
    goto BB7
  }
  BB14 {
    _11 <- ();
    _36 <- borrow_mut counts_with_index_4;
    counts_with_index_4 <-  ^ _36;
    _35 <- borrow_mut ( * _36);
    _36 <- { _36 with current = ( ^ _35) };
    _34 <- ([#"../CreuSAT/src/decision.rs" 219 8 219 36] Sort0.sort _35);
    goto BB15
  }
  BB15 {
    assume { Resolve1.resolve _36 };
    i_10 <- (0 : usize);
    goto BB16
  }
  BB16 {
    goto BB17
  }
  BB17 {
    invariant proph { [#"../CreuSAT/src/decision.rs" 223 27 223 53]  ^ old_self_8 =  ^ self_1 };
    invariant inv { [#"../CreuSAT/src/decision.rs" 224 25 224 52] Invariant1.invariant' ( * self_1) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_2)) };
    invariant len_same { [#"../CreuSAT/src/decision.rs" 225 30 225 70] Seq.length (Model0.model v_3) = Seq.length (Model1.model counts_with_index_4) };
    _38 <- i_10;
    _40 <- counts_with_index_4;
    _39 <- ([#"../CreuSAT/src/decision.rs" 226 18 226 41] Len1.len _40);
    goto BB18
  }
  BB18 {
    _37 <- ([#"../CreuSAT/src/decision.rs" 226 14 226 41] _38 < _39);
    switch (_37)
      | False -> goto BB22
      | _ -> goto BB19
      end
  }
  BB19 {
    _42 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _42) };
    _45 <- counts_with_index_4;
    _46 <- i_10;
    _44 <- ([#"../CreuSAT/src/decision.rs" 227 31 227 51] Index2.index _45 _46);
    goto BB20
  }
  BB20 {
    _43 <- (let (_, a) = _44 in a);
    _47 <- f_2;
    _41 <- ([#"../CreuSAT/src/decision.rs" 227 12 227 57] MoveToFront0.move_to_front _42 _43 _47);
    goto BB21
  }
  BB21 {
    i_10 <- ([#"../CreuSAT/src/decision.rs" 228 12 228 18] i_10 + (1 : usize));
    _12 <- ();
    goto BB17
  }
  BB22 {
    assume { Resolve2.resolve self_1 };
    _0 <- ();
    goto BB23
  }
  BB23 {
    assume { Resolve3.resolve counts_with_index_4 };
    goto BB24
  }
  BB24 {
    assume { Resolve4.resolve v_3 };
    return _0
  }
  
end
module CreuSat_Formula_Impl0_Output_Type
  use CreuSat_Clause_Clause_Type
  type output  =
    CreuSat_Clause_Clause_Type.creusat_clause_clause_type
end
module CreuSat_Formula_Impl0
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Formula_Impl0_Output_Type as Output0
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with function Model0.model = Model0.model
  clone Core_Ops_Index_Index_Index_Interface as Index1 with type self = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type idx = usize, val index = Index0.index, type Output0.output = Output0.output
  clone Core_Ops_Index_Index_Output_Type as Output1 with type self = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type idx = usize, type output = Output0.output
end
module Core_Clone_Clone_CloneFrom_Interface
  type self
  use prelude.Borrow
  val clone_from [@cfg:stackify] (self : borrowed self) (source : self) : ()
    requires {false}
    
end
module Core_Clone_Clone_CloneFrom
  type self
  use prelude.Borrow
  val clone_from [@cfg:stackify] (self : borrowed self) (source : self) : ()
    requires {false}
    
end
module Core_Clone_Clone_Clone_Interface
  type self
  use prelude.Borrow
  val clone' [@cfg:stackify] (self : self) : self
    ensures { result = self }
    
end
module Core_Clone_Clone_Clone
  type self
  use prelude.Borrow
  val clone' [@cfg:stackify] (self : self) : self
    ensures { result = self }
    
end
module CreuSat_Clause_Impl2
  use CreuSat_Clause_Clause_Type
  clone Core_Clone_Clone_CloneFrom_Interface as CloneFrom0 with type self = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreuSat_Clause_Impl2_Clone_Interface as Clone0
  clone Core_Clone_Clone_Clone_Interface as Clone1 with type self = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  val clone' = Clone0.clone'
end
module CreuSat_ConflictAnalysis_AnalyzeConflict_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int32
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model2 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  use CreuSat_ConflictAnalysis_Conflict_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val analyze_conflict [@cfg:stackify] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (cref : usize) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : CreuSat_ConflictAnalysis_Conflict_Type.creusat_conflictanalysis_conflict_type
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 159 11 159 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 160 11 160 36] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < 18446744073709551615}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 161 11 161 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 162 11 162 37] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 163 11 163 55] Unsat0.unsat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 189 0 189 44] Invariant2.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 164 10 188 1] match (result) with
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Ground_Type -> NotSatisfiable0.not_satisfiable f
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Unit_Type clause -> Invariant3.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ Seq.length (Model1.model clause) = 1 /\ VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (Model2.model f)
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Learned_Type s_idx clause -> Invariant3.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ Seq.length (Model1.model clause) > 1 /\ VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (Model2.model f) /\ UInt64.to_int s_idx < Seq.length (Model1.model clause)
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Restart_Type clause -> Invariant3.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ Seq.length (Model1.model clause) > 1 /\ VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (Model2.model f)
      end }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 189 0 189 44] Invariant2.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    
end
module CreuSat_ConflictAnalysis_AnalyzeConflict
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model7 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model6 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model6.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model1.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept as SameIdxSamePolarityExcept0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_IdxInLogic as IdxInLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicUtil_ElemsLessThan as ElemsLessThan0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Trail_Trail_Type
  clone CreusotContracts_Logic_Model_Impl0_Model as Model2 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model1.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use CreuSat_ConflictAnalysis_Conflict_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant2 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model5.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model7.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model6.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  clone CreusotContracts_Logic_Int_Impl20_Model as Model17
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy7 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen as ClauseIsSeen0 with function Model0.model = Model3.model,
  function Model1.model = Model1.model, predicate IdxInLogic0.idx_in_logic = IdxInLogic0.idx_in_logic
  clone CreusotContracts_Logic_Model_Impl1_Model as Model16 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy7.modelTy, function Model0.model = Model4.model
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy5 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Logic_Model_Impl1_Model as Model15 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy5.modelTy, function Model0.model = Model3.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl1_Model as Model14 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_InFormula as InFormula0 with function Model0.model = Model0.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy6 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone Core_Slice_Index_Impl2_Output_Type as Output2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve10 with type t = bool
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve9 with type t = usize
  clone CreusotContracts_Logic_Int_Impl20_ModelTy_Type as ModelTy4
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Logic_Model_Impl0_Model as Model13 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy5.modelTy, function Model0.model = Model3.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model12 with type t = usize,
  type ModelTy0.modelTy = ModelTy4.modelTy, function Model0.model = Model17.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy3 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy2 with type t = bool
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = bool
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model1.model
  use Core_Option_Option_Type
  clone CreuSat_Decision_Impl1_IncrementAndMove_Interface as IncrementAndMove0 with function Model0.model = Model4.model,
  predicate ElemsLessThan0.elems_less_than = ElemsLessThan0.elems_less_than,
  predicate Invariant0.invariant' = Invariant0.invariant', predicate Invariant1.invariant' = Invariant2.invariant',
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve8 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve7 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve6 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreuSat_ConflictAnalysis_Resolve_Interface as Resolve5 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate InFormula0.in_formula = InFormula0.in_formula,
  function Model0.model = Model14.model, function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function Model1.model = Model11.model, predicate IsOpp0.is_opp = IsOpp0.is_opp,
  predicate SameIdxSamePolarityExcept0.same_idx_same_polarity_except = SameIdxSamePolarityExcept0.same_idx_same_polarity_except,
  function Model2.model = Model7.model, predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, function Model3.model = Model12.model,
  function Model4.model = Model15.model, function Model5.model = Model16.model,
  predicate ElemsLessThan0.elems_less_than = ElemsLessThan0.elems_less_than, function Model6.model = Model2.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  predicate ClauseIsSeen0.clause_is_seen = ClauseIsSeen0.clause_is_seen, predicate Unsat0.unsat = Unsat0.unsat,
  predicate Invariant2.invariant' = Invariant3.invariant', function Model7.model = Model1.model,
  function Model8.model = Model3.model, function Model9.model = Model4.model,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone Alloc_Vec_Impl16_Index_Interface as Index4 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model5.model,
  predicate InBounds0.in_bounds = InBounds2.in_bounds, predicate HasValue0.has_value = HasValue2.has_value,
  type Output0.output = Output2.output
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve4 with type t = bool, function Model0.model = Model3.model,
  predicate Resolve0.resolve = Resolve10.resolve
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve3 with type t = usize, function Model0.model = Model4.model,
  predicate Resolve0.resolve = Resolve9.resolve
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = usize
  clone CreuSat_ConflictAnalysis_ChooseLiteral_Interface as ChooseLiteral0 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Unsat0.unsat = Unsat0.unsat, function Model0.model = Model12.model, function Model1.model = Model5.model,
  function Model2.model = Model13.model, function Model3.model = Model11.model, predicate IsOpp0.is_opp = IsOpp0.is_opp,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone Alloc_Vec_Impl16_Index_Interface as Index3 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model4.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  type Output0.output = Output1.output
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model4.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = bool
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = bool, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_Index_Interface as Index2 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model11.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len1 with function Model0.model = Model11.model
  clone CreuSat_Clause_Impl2_Clone_Interface as Clone0
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with function Model0.model = Model2.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model5.model
  clone Alloc_Vec_FromElem_Interface as FromElem0 with type t = bool, function Model0.model = Model3.model
  clone Alloc_Vec_Impl0_New_Interface as New0 with type t = usize, function Model0.model = Model4.model
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with function Model0.model = Model4.model
  let rec cfg analyze_conflict [@cfg:stackify] [#"../CreuSAT/src/conflict_analysis.rs" 190 0 190 95] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (cref : usize) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : CreuSat_ConflictAnalysis_Conflict_Type.creusat_conflictanalysis_conflict_type
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 159 11 159 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 160 11 160 36] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < 18446744073709551615}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 161 11 161 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 162 11 162 37] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 163 11 163 55] Unsat0.unsat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail)}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 189 0 189 44] Invariant2.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 164 10 188 1] match (result) with
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Ground_Type -> NotSatisfiable0.not_satisfiable f
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Unit_Type clause -> Invariant3.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ Seq.length (Model1.model clause) = 1 /\ VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (Model2.model f)
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Learned_Type s_idx clause -> Invariant3.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ Seq.length (Model1.model clause) > 1 /\ VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (Model2.model f) /\ UInt64.to_int s_idx < Seq.length (Model1.model clause)
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Restart_Type clause -> Invariant3.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ Seq.length (Model1.model clause) > 1 /\ VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) /\ NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause) /\ EquisatExtensionInner0.equisat_extension_inner clause (Model2.model f)
      end }
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 189 0 189 44] Invariant2.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_ConflictAnalysis_Conflict_Type.creusat_conflictanalysis_conflict_type;
  var f_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var trail_2 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var cref_3 : usize;
  var d_4 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var decisionlevel_5 : usize;
  var _6 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var to_bump_7 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var break_cond_8 : usize;
  var _9 : bool;
  var _10 : usize;
  var path_c_11 : usize;
  var seen_12 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _13 : usize;
  var i_14 : usize;
  var _15 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var clause_16 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _17 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _18 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _19 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _20 : usize;
  var j_21 : usize;
  var _22 : ();
  var _23 : ();
  var _24 : bool;
  var _25 : usize;
  var _26 : usize;
  var _27 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _28 : borrowed bool;
  var _29 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _30 : usize;
  var _31 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _32 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _33 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _34 : usize;
  var _35 : ();
  var _36 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _37 : usize;
  var _38 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _39 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _40 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _41 : usize;
  var _42 : ();
  var _43 : bool;
  var _44 : usize;
  var _45 : usize;
  var _46 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _47 : usize;
  var _48 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _49 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _50 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _51 : usize;
  var _52 : usize;
  var _53 : ();
  var _54 : ();
  var _55 : ();
  var clause_56 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _57 : ();
  var _58 : bool;
  var _59 : usize;
  var _60 : usize;
  var c_idx_61 : usize;
  var _62 : Core_Option_Option_Type.core_option_option_type usize;
  var _63 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _64 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _65 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _66 : borrowed usize;
  var _67 : borrowed usize;
  var _68 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _69 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _70 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _71 : isize;
  var c_idx_72 : usize;
  var _73 : ();
  var ante_74 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _75 : CreuSat_Trail_Reason_Type.creusat_trail_reason_type;
  var _76 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _77 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _78 : usize;
  var _79 : isize;
  var c_80 : usize;
  var _81 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _82 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _83 : usize;
  var c_84 : usize;
  var _85 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _86 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _87 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _88 : usize;
  var _89 : ();
  var idx_90 : usize;
  var _91 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _92 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _93 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _94 : usize;
  var _95 : ();
  var _96 : ();
  var _97 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _98 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _99 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _100 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _101 : usize;
  var _102 : usize;
  var _103 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _104 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _105 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _106 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _107 : borrowed usize;
  var _108 : borrowed usize;
  var _109 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _110 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _111 : ();
  var _112 : ();
  var _113 : ();
  var _114 : ();
  var _115 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _116 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _117 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _118 : bool;
  var _119 : usize;
  var _120 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _121 : bool;
  var _122 : usize;
  var _123 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _124 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _125 : ();
  var _126 : bool;
  var _127 : usize;
  var _128 : usize;
  var _129 : ();
  var _130 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var k_131 : usize;
  var s_idx_132 : usize;
  var _133 : ();
  var _134 : bool;
  var _135 : usize;
  var _136 : usize;
  var _137 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _138 : ();
  var _139 : bool;
  var _140 : usize;
  var _141 : usize;
  var _142 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _143 : usize;
  var _144 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _145 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _146 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _147 : usize;
  var _148 : usize;
  var _149 : ();
  var _150 : usize;
  var _151 : ();
  var _152 : ();
  var _153 : ();
  var _154 : usize;
  var _155 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  {
    f_1 <- f;
    trail_2 <- trail;
    cref_3 <- cref;
    d_4 <- d;
    goto BB0
  }
  BB0 {
    _6 <- trail_2;
    decisionlevel_5 <- ([#"../CreuSAT/src/conflict_analysis.rs" 191 24 191 46] DecisionLevel0.decision_level _6);
    goto BB1
  }
  BB1 {
    to_bump_7 <- ([#"../CreuSAT/src/conflict_analysis.rs" 192 22 192 32] New0.new ());
    goto BB2
  }
  BB2 {
    _10 <- decisionlevel_5;
    _9 <- ([#"../CreuSAT/src/conflict_analysis.rs" 193 24 193 42] _10 = (0 : usize));
    switch (_9)
      | False -> goto BB4
      | _ -> goto BB3
      end
  }
  BB3 {
    break_cond_8 <- (0 : usize);
    goto BB5
  }
  BB4 {
    break_cond_8 <- (1 : usize);
    goto BB5
  }
  BB5 {
    path_c_11 <- (0 : usize);
    _13 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    seen_12 <- ([#"../CreuSAT/src/conflict_analysis.rs" 195 19 195 42] FromElem0.from_elem false _13);
    goto BB6
  }
  BB6 {
    _15 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2;
    i_14 <- ([#"../CreuSAT/src/conflict_analysis.rs" 196 16 196 33] Len0.len _15);
    goto BB7
  }
  BB7 {
    _19 <- f_1;
    _20 <- cref_3;
    _18 <- ([#"../CreuSAT/src/conflict_analysis.rs" 197 17 197 24] Index0.index _19 _20);
    goto BB8
  }
  BB8 {
    _17 <- _18;
    clause_16 <- ([#"../CreuSAT/src/conflict_analysis.rs" 197 17 197 32] Clone0.clone' _17);
    goto BB9
  }
  BB9 {
    j_21 <- (0 : usize);
    goto BB10
  }
  BB10 {
    goto BB11
  }
  BB11 {
    goto BB12
  }
  BB12 {
    goto BB13
  }
  BB13 {
    goto BB14
  }
  BB14 {
    invariant seen_is_clause { [#"../CreuSAT/src/conflict_analysis.rs" 199 4 200 98] forall idx : (int) . 0 <= idx /\ idx < Seq.length (Model3.model seen_12) -> Seq.get (Model3.model seen_12) idx = (exists i : (int) . 0 <= i /\ i < UInt64.to_int j_21 /\ IndexLogic0.index_logic (Seq.get (Model1.model clause_16) i) = idx) };
    invariant seen_len { [#"../CreuSAT/src/conflict_analysis.rs" 201 26 201 54] Seq.length (Model3.model seen_12) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    invariant path_c_less { [#"../CreuSAT/src/conflict_analysis.rs" 202 29 202 42] UInt64.to_int path_c_11 <= UInt64.to_int j_21 };
    invariant j_is_len { [#"../CreuSAT/src/conflict_analysis.rs" 203 26 203 47] UInt64.to_int j_21 <= Seq.length (Model1.model clause_16) };
    invariant elems_less { [#"../CreuSAT/src/conflict_analysis.rs" 204 28 204 66] ElemsLessThan0.elems_less_than (Model4.model to_bump_7) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1)) };
    _25 <- j_21;
    _27 <- clause_16;
    _26 <- ([#"../CreuSAT/src/conflict_analysis.rs" 205 14 205 26] Len1.len _27);
    goto BB15
  }
  BB15 {
    _24 <- ([#"../CreuSAT/src/conflict_analysis.rs" 205 10 205 26] _25 < _26);
    switch (_24)
      | False -> goto BB29
      | _ -> goto BB16
      end
  }
  BB16 {
    _29 <- borrow_mut seen_12;
    seen_12 <-  ^ _29;
    _33 <- clause_16;
    _34 <- j_21;
    _32 <- ([#"../CreuSAT/src/conflict_analysis.rs" 206 13 206 22] Index1.index _33 _34);
    goto BB17
  }
  BB17 {
    _31 <- _32;
    _30 <- ([#"../CreuSAT/src/conflict_analysis.rs" 206 13 206 30] Index2.index _31);
    goto BB18
  }
  BB18 {
    _28 <- ([#"../CreuSAT/src/conflict_analysis.rs" 206 8 206 31] IndexMut0.index_mut _29 _30);
    goto BB19
  }
  BB19 {
    _28 <- { _28 with current = true };
    assume { Resolve0.resolve _28 };
    _36 <- borrow_mut to_bump_7;
    to_bump_7 <-  ^ _36;
    _40 <- clause_16;
    _41 <- j_21;
    _39 <- ([#"../CreuSAT/src/conflict_analysis.rs" 207 21 207 30] Index1.index _40 _41);
    goto BB20
  }
  BB20 {
    _38 <- _39;
    _37 <- ([#"../CreuSAT/src/conflict_analysis.rs" 207 21 207 38] Index2.index _38);
    goto BB21
  }
  BB21 {
    _35 <- ([#"../CreuSAT/src/conflict_analysis.rs" 207 8 207 39] Push0.push _36 _37);
    goto BB22
  }
  BB22 {
    _46 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level trail_2;
    _50 <- clause_16;
    _51 <- j_21;
    _49 <- ([#"../CreuSAT/src/conflict_analysis.rs" 208 30 208 39] Index1.index _50 _51);
    goto BB23
  }
  BB23 {
    _48 <- _49;
    _47 <- ([#"../CreuSAT/src/conflict_analysis.rs" 208 30 208 47] Index2.index _48);
    goto BB24
  }
  BB24 {
    _45 <- ([#"../CreuSAT/src/conflict_analysis.rs" 208 11 208 48] Index3.index _46 _47);
    goto BB25
  }
  BB25 {
    _44 <- _45;
    _52 <- decisionlevel_5;
    _43 <- ([#"../CreuSAT/src/conflict_analysis.rs" 208 11 208 65] _44 >= _52);
    switch (_43)
      | False -> goto BB27
      | _ -> goto BB26
      end
  }
  BB26 {
    path_c_11 <- ([#"../CreuSAT/src/conflict_analysis.rs" 209 12 209 23] path_c_11 + (1 : usize));
    _42 <- ();
    goto BB28
  }
  BB27 {
    _42 <- ();
    goto BB28
  }
  BB28 {
    j_21 <- ([#"../CreuSAT/src/conflict_analysis.rs" 211 8 211 14] j_21 + (1 : usize));
    _23 <- ();
    goto BB14
  }
  BB29 {
    _22 <- ();
    clause_56 <- clause_16;
    clause_16 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    goto BB30
  }
  BB30 {
    goto BB31
  }
  BB31 {
    goto BB32
  }
  BB32 {
    goto BB33
  }
  BB33 {
    goto BB34
  }
  BB34 {
    goto BB35
  }
  BB35 {
    goto BB36
  }
  BB36 {
    goto BB37
  }
  BB37 {
    invariant seen_len { [#"../CreuSAT/src/conflict_analysis.rs" 214 26 214 54] Seq.length (Model3.model seen_12) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    invariant seen_is_clause { [#"../CreuSAT/src/conflict_analysis.rs" 214 4 214 56] forall idx : (int) . 0 <= idx /\ idx < Seq.length (Model3.model seen_12) -> Seq.get (Model3.model seen_12) idx = IdxInLogic0.idx_in_logic idx (Model1.model clause_56) };
    invariant clause_vars { [#"../CreuSAT/src/conflict_analysis.rs" 217 29 217 58] Invariant3.invariant' clause_56 (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1)) };
    invariant clause_equi { [#"../CreuSAT/src/conflict_analysis.rs" 218 29 218 64] EquisatExtensionInner0.equisat_extension_inner clause_56 (Model2.model f_1) };
    invariant clause_unsat { [#"../CreuSAT/src/conflict_analysis.rs" 219 30 219 61] Unsat0.unsat clause_56 (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail_2) };
    invariant i_bound { [#"../CreuSAT/src/conflict_analysis.rs" 220 25 220 62] 0 <= UInt64.to_int i_14 /\ UInt64.to_int i_14 <= Seq.length (Model5.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2)) };
    invariant path_c_less { [#"../CreuSAT/src/conflict_analysis.rs" 221 29 221 55] UInt64.to_int path_c_11 <= Seq.length (Model1.model clause_56) };
    invariant elems_less { [#"../CreuSAT/src/conflict_analysis.rs" 222 28 222 66] ElemsLessThan0.elems_less_than (Model4.model to_bump_7) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1)) };
    _59 <- path_c_11;
    _60 <- break_cond_8;
    _58 <- ([#"../CreuSAT/src/conflict_analysis.rs" 223 10 223 29] _59 > _60);
    switch (_58)
      | False -> goto BB54
      | _ -> goto BB38
      end
  }
  BB38 {
    _64 <- clause_56;
    _63 <- _64;
    _65 <- trail_2;
    _67 <- borrow_mut i_14;
    i_14 <-  ^ _67;
    _66 <- borrow_mut ( * _67);
    _67 <- { _67 with current = ( ^ _66) };
    _68 <- f_1;
    _70 <- seen_12;
    _69 <- _70;
    _62 <- ([#"../CreuSAT/src/conflict_analysis.rs" 224 26 224 74] ChooseLiteral0.choose_literal _63 _65 _66 _68 _69);
    goto BB39
  }
  BB39 {
    assume { Resolve1.resolve _67 };
    switch (_62)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB40
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB42
      end
  }
  BB40 {
    _57 <- ();
    goto BB55
  }
  BB41 {
    assume { Resolve2.resolve d_4 };
    assume { Resolve3.resolve to_bump_7 };
    assume { Resolve4.resolve seen_12 };
    absurd
  }
  BB42 {
    c_idx_72 <- Core_Option_Option_Type.core_option_option_type_Some_0 _62;
    c_idx_61 <- c_idx_72;
    _77 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2;
    _78 <- i_14;
    _76 <- ([#"../CreuSAT/src/conflict_analysis.rs" 228 26 228 40] Index4.index _77 _78);
    goto BB43
  }
  BB43 {
    _75 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason _76;
    switch (_75)
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Unit_Type _ -> goto BB47
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type _ -> goto BB45
      | _ -> goto BB44
      end
  }
  BB44 {
    _57 <- ();
    goto BB55
  }
  BB45 {
    c_80 <- CreuSat_Trail_Reason_Type.creusat_trail_reason_type_Long_0 _75;
    _82 <- f_1;
    _83 <- c_80;
    _81 <- ([#"../CreuSAT/src/conflict_analysis.rs" 229 32 229 37] Index0.index _82 _83);
    goto BB46
  }
  BB46 {
    ante_74 <- _81;
    goto BB49
  }
  BB47 {
    c_84 <- CreuSat_Trail_Reason_Type.creusat_trail_reason_type_Unit_0 _75;
    _87 <- f_1;
    _88 <- c_84;
    _86 <- ([#"../CreuSAT/src/conflict_analysis.rs" 230 32 230 37] Index0.index _87 _88);
    goto BB48
  }
  BB48 {
    _85 <- _86;
    ante_74 <- _85;
    goto BB49
  }
  BB49 {
    _93 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2;
    _94 <- i_14;
    _92 <- ([#"../CreuSAT/src/conflict_analysis.rs" 233 18 233 32] Index4.index _93 _94);
    goto BB50
  }
  BB50 {
    _91 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit _92;
    idx_90 <- ([#"../CreuSAT/src/conflict_analysis.rs" 233 18 233 44] Index2.index _91);
    goto BB51
  }
  BB51 {
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 234 22 234 71] SameIdxSamePolarityExcept0.same_idx_same_polarity_except clause_56 ante_74 (UInt64.to_int idx_90) };
    goto BB52
  }
  BB52 {
    _95 <- ();
    _97 <- f_1;
    _99 <- borrow_mut clause_56;
    clause_56 <-  ^ _99;
    _98 <- borrow_mut ( * _99);
    _99 <- { _99 with current = ( ^ _98) };
    _100 <- ante_74;
    _101 <- idx_90;
    _102 <- c_idx_61;
    _104 <- trail_2;
    _103 <- _104;
    _106 <- borrow_mut seen_12;
    seen_12 <-  ^ _106;
    _105 <- borrow_mut ( * _106);
    _106 <- { _106 with current = ( ^ _105) };
    _108 <- borrow_mut path_c_11;
    path_c_11 <-  ^ _108;
    _107 <- borrow_mut ( * _108);
    _108 <- { _108 with current = ( ^ _107) };
    _110 <- borrow_mut to_bump_7;
    to_bump_7 <-  ^ _110;
    _109 <- borrow_mut ( * _110);
    _110 <- { _110 with current = ( ^ _109) };
    _96 <- ([#"../CreuSAT/src/conflict_analysis.rs" 235 8 235 95] Resolve5.resolve _97 _98 _100 _101 _102 _103 _105 _107 _109);
    goto BB53
  }
  BB53 {
    assume { Resolve6.resolve _99 };
    assume { Resolve7.resolve _106 };
    assume { Resolve1.resolve _108 };
    assume { Resolve8.resolve _110 };
    _23 <- ();
    goto BB37
  }
  BB54 {
    _57 <- ();
    goto BB56
  }
  BB55 {
    goto BB56
  }
  BB56 {
    _115 <- borrow_mut ( * d_4);
    d_4 <- { d_4 with current = ( ^ _115) };
    _116 <- f_1;
    assume { Resolve3.resolve _117 };
    _117 <- to_bump_7;
    to_bump_7 <- any Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
    _114 <- ([#"../CreuSAT/src/conflict_analysis.rs" 238 4 238 36] IncrementAndMove0.increment_and_move _115 _116 _117);
    goto BB57
  }
  BB57 {
    assume { Resolve2.resolve d_4 };
    _120 <- clause_56;
    _119 <- ([#"../CreuSAT/src/conflict_analysis.rs" 239 7 239 19] Len1.len _120);
    goto BB58
  }
  BB58 {
    _118 <- ([#"../CreuSAT/src/conflict_analysis.rs" 239 7 239 24] _119 = (0 : usize));
    switch (_118)
      | False -> goto BB60
      | _ -> goto BB59
      end
  }
  BB59 {
    _0 <- CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Ground_Type;
    goto BB82
  }
  BB60 {
    _123 <- clause_56;
    _122 <- ([#"../CreuSAT/src/conflict_analysis.rs" 241 14 241 26] Len1.len _123);
    goto BB61
  }
  BB61 {
    _121 <- ([#"../CreuSAT/src/conflict_analysis.rs" 241 14 241 31] _122 = (1 : usize));
    switch (_121)
      | False -> goto BB64
      | _ -> goto BB62
      end
  }
  BB62 {
    _124 <- clause_56;
    clause_56 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    _0 <- CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Unit_Type _124;
    goto BB63
  }
  BB63 {
    goto BB81
  }
  BB64 {
    _127 <- path_c_11;
    _128 <- break_cond_8;
    _126 <- ([#"../CreuSAT/src/conflict_analysis.rs" 245 11 245 30] _127 > _128);
    switch (_126)
      | False -> goto BB67
      | _ -> goto BB65
      end
  }
  BB65 {
    _130 <- clause_56;
    clause_56 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    _0 <- CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Restart_Type _130;
    goto BB66
  }
  BB66 {
    goto BB87
  }
  BB67 {
    _125 <- ();
    k_131 <- (0 : usize);
    s_idx_132 <- (0 : usize);
    goto BB68
  }
  BB68 {
    goto BB69
  }
  BB69 {
    goto BB70
  }
  BB70 {
    invariant k_bound { [#"../CreuSAT/src/conflict_analysis.rs" 250 29 250 50] UInt64.to_int k_131 <= Seq.length (Model1.model clause_56) };
    invariant s_idx_ok { [#"../CreuSAT/src/conflict_analysis.rs" 251 30 251 54] UInt64.to_int s_idx_132 < Seq.length (Model1.model clause_56) };
    _135 <- k_131;
    _137 <- clause_56;
    _136 <- ([#"../CreuSAT/src/conflict_analysis.rs" 252 18 252 30] Len1.len _137);
    goto BB71
  }
  BB71 {
    _134 <- ([#"../CreuSAT/src/conflict_analysis.rs" 252 14 252 30] _135 < _136);
    switch (_134)
      | False -> goto BB78
      | _ -> goto BB72
      end
  }
  BB72 {
    _142 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level trail_2;
    _146 <- clause_56;
    _147 <- k_131;
    _145 <- ([#"../CreuSAT/src/conflict_analysis.rs" 253 34 253 43] Index1.index _146 _147);
    goto BB73
  }
  BB73 {
    _144 <- _145;
    _143 <- ([#"../CreuSAT/src/conflict_analysis.rs" 253 34 253 51] Index2.index _144);
    goto BB74
  }
  BB74 {
    _141 <- ([#"../CreuSAT/src/conflict_analysis.rs" 253 15 253 52] Index3.index _142 _143);
    goto BB75
  }
  BB75 {
    _140 <- _141;
    _148 <- decisionlevel_5;
    _139 <- ([#"../CreuSAT/src/conflict_analysis.rs" 253 15 253 69] _140 = _148);
    switch (_139)
      | False -> goto BB77
      | _ -> goto BB76
      end
  }
  BB76 {
    _150 <- k_131;
    s_idx_132 <- _150;
    _150 <- any usize;
    _133 <- ();
    goto BB79
  }
  BB77 {
    _138 <- ();
    k_131 <- ([#"../CreuSAT/src/conflict_analysis.rs" 257 12 257 18] k_131 + (1 : usize));
    _23 <- ();
    goto BB70
  }
  BB78 {
    _133 <- ();
    goto BB79
  }
  BB79 {
    _154 <- s_idx_132;
    _155 <- clause_56;
    clause_56 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    _0 <- CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Learned_Type _154 _155;
    goto BB80
  }
  BB80 {
    goto BB81
  }
  BB81 {
    goto BB82
  }
  BB82 {
    goto BB83
  }
  BB83 {
    goto BB84
  }
  BB84 {
    goto BB85
  }
  BB85 {
    assume { Resolve4.resolve seen_12 };
    goto BB86
  }
  BB86 {
    goto BB91
  }
  BB87 {
    goto BB88
  }
  BB88 {
    goto BB89
  }
  BB89 {
    assume { Resolve4.resolve seen_12 };
    goto BB90
  }
  BB90 {
    goto BB91
  }
  BB91 {
    return _0
  }
  
end
module CreuSat_ConflictAnalysis_ResolveEmptyClause_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val resolve_empty_clause [@cfg:stackify] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (cref : usize) : bool
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 264 11 264 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 265 11 265 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 266 11 266 37] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 267 11 267 55] Unsat0.unsat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 268 0 268 42] result -> NotSatisfiable0.not_satisfiable f }
    
end
module CreuSat_ConflictAnalysis_ResolveEmptyClause
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model2 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with function Model0.model = Model0.model,
  function Model1.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model2.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_IdxInLogic as IdxInLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model3.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model2.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model2.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant2 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model2.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_ClauseIsSeen as ClauseIsSeen0 with function Model0.model = Model1.model,
  function Model1.model = Model2.model, predicate IdxInLogic0.idx_in_logic = IdxInLogic0.idx_in_logic
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model2.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model3.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  clone CreusotContracts_Logic_Int_Impl20_Model as Model16
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy6 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreuSat_Logic_LogicUtil_ElemsLessThan as ElemsLessThan0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model15 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy6.modelTy, function Model0.model = Model5.model
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy4 with type t = bool,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Logic_Model_Impl1_Model as Model14 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy4.modelTy, function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept as SameIdxSamePolarityExcept0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl1_Model as Model13 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl2_InFormula as InFormula0 with function Model0.model = Model0.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy5 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve9 with type t = usize
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve8 with type t = bool
  clone CreusotContracts_Logic_Int_Impl20_ModelTy_Type as ModelTy3
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Logic_Model_Impl0_Model as Model12 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy4.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model11 with type t = usize,
  type ModelTy0.modelTy = ModelTy3.modelTy, function Model0.model = Model16.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy2 with type t = bool
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = bool
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = bool
  clone CreusotContracts_Logic_Model_Impl0_Model as Model10 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model9 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model3.model
  use Core_Option_Option_Type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve7 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve6 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve5 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreuSat_ConflictAnalysis_Resolve_Interface as Resolve4 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate InFormula0.in_formula = InFormula0.in_formula,
  function Model0.model = Model13.model, function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function Model1.model = Model10.model, predicate IsOpp0.is_opp = IsOpp0.is_opp,
  predicate SameIdxSamePolarityExcept0.same_idx_same_polarity_except = SameIdxSamePolarityExcept0.same_idx_same_polarity_except,
  function Model2.model = Model6.model, predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, function Model3.model = Model11.model,
  function Model4.model = Model14.model, function Model5.model = Model15.model,
  predicate ElemsLessThan0.elems_less_than = ElemsLessThan0.elems_less_than, function Model6.model = Model9.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  predicate ClauseIsSeen0.clause_is_seen = ClauseIsSeen0.clause_is_seen, predicate Unsat0.unsat = Unsat0.unsat,
  predicate Invariant2.invariant' = Invariant3.invariant', function Model7.model = Model2.model,
  function Model8.model = Model1.model, function Model9.model = Model5.model,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone Alloc_Vec_Impl16_Index_Interface as Index3 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model4.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  type Output0.output = Output1.output
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve3 with type t = usize, function Model0.model = Model5.model,
  predicate Resolve0.resolve = Resolve9.resolve
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve2 with type t = bool, function Model0.model = Model1.model,
  predicate Resolve0.resolve = Resolve8.resolve
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = usize
  clone CreuSat_ConflictAnalysis_ChooseLiteral_Interface as ChooseLiteral0 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Unsat0.unsat = Unsat0.unsat, function Model0.model = Model11.model, function Model1.model = Model4.model,
  function Model2.model = Model12.model, function Model3.model = Model10.model, predicate IsOpp0.is_opp = IsOpp0.is_opp,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = bool
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = bool, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_Index_Interface as Index2 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model10.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len1 with function Model0.model = Model10.model
  clone Alloc_Vec_Impl0_New_Interface as New0 with type t = usize, function Model0.model = Model5.model
  clone CreuSat_Clause_Impl2_Clone_Interface as Clone0
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with function Model0.model = Model9.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model4.model
  clone Alloc_Vec_FromElem_Interface as FromElem0 with type t = bool, function Model0.model = Model1.model
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with function Model0.model = Model5.model
  let rec cfg resolve_empty_clause [@cfg:stackify] [#"../CreuSAT/src/conflict_analysis.rs" 269 0 269 76] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (cref : usize) : bool
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 264 11 264 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 265 11 265 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 266 11 266 37] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    requires {[#"../CreuSAT/src/conflict_analysis.rs" 267 11 267 55] Unsat0.unsat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail)}
    ensures { [#"../CreuSAT/src/conflict_analysis.rs" 268 0 268 42] result -> NotSatisfiable0.not_satisfiable f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var f_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var trail_2 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var cref_3 : usize;
  var decisionlevel_4 : usize;
  var _5 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var seen_6 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _7 : usize;
  var i_8 : usize;
  var _9 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var clause_10 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _11 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _12 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _13 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _14 : usize;
  var to_bump_15 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var j_16 : usize;
  var _17 : ();
  var _18 : ();
  var _19 : bool;
  var _20 : usize;
  var _21 : usize;
  var _22 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _23 : borrowed bool;
  var _24 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _25 : usize;
  var _26 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _27 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _28 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _29 : usize;
  var _30 : ();
  var _31 : ();
  var _32 : ();
  var clause_33 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _34 : ();
  var c_idx_35 : usize;
  var _36 : Core_Option_Option_Type.core_option_option_type usize;
  var _37 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _38 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _39 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _40 : borrowed usize;
  var _41 : borrowed usize;
  var _42 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _43 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _44 : Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _45 : isize;
  var c_idx_46 : usize;
  var _47 : ();
  var ante_48 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _49 : CreuSat_Trail_Reason_Type.creusat_trail_reason_type;
  var _50 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _51 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _52 : usize;
  var _53 : isize;
  var c_54 : usize;
  var _55 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _56 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _57 : usize;
  var _58 : ();
  var path_c_59 : usize;
  var _60 : ();
  var _61 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _62 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _63 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _64 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _65 : usize;
  var _66 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _67 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _68 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _69 : usize;
  var _70 : usize;
  var _71 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _72 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _73 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _74 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type bool (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _75 : borrowed usize;
  var _76 : borrowed usize;
  var _77 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _78 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _79 : bool;
  var _80 : usize;
  var _81 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _82 : ();
  var _83 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    cref_3 <- cref;
    goto BB0
  }
  BB0 {
    _5 <- trail_2;
    decisionlevel_4 <- ([#"../CreuSAT/src/conflict_analysis.rs" 270 24 270 46] DecisionLevel0.decision_level _5);
    goto BB1
  }
  BB1 {
    _7 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    seen_6 <- ([#"../CreuSAT/src/conflict_analysis.rs" 271 19 271 42] FromElem0.from_elem false _7);
    goto BB2
  }
  BB2 {
    _9 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2;
    i_8 <- ([#"../CreuSAT/src/conflict_analysis.rs" 272 16 272 33] Len0.len _9);
    goto BB3
  }
  BB3 {
    _13 <- f_1;
    _14 <- cref_3;
    _12 <- ([#"../CreuSAT/src/conflict_analysis.rs" 273 17 273 24] Index0.index _13 _14);
    goto BB4
  }
  BB4 {
    _11 <- _12;
    clause_10 <- ([#"../CreuSAT/src/conflict_analysis.rs" 273 17 273 32] Clone0.clone' _11);
    goto BB5
  }
  BB5 {
    to_bump_15 <- ([#"../CreuSAT/src/conflict_analysis.rs" 274 22 274 32] New0.new ());
    goto BB6
  }
  BB6 {
    j_16 <- (0 : usize);
    goto BB7
  }
  BB7 {
    goto BB8
  }
  BB8 {
    goto BB9
  }
  BB9 {
    goto BB10
  }
  BB10 {
    invariant seen_is_clause { [#"../CreuSAT/src/conflict_analysis.rs" 276 4 277 98] forall idx : (int) . 0 <= idx /\ idx < Seq.length (Model1.model seen_6) -> Seq.get (Model1.model seen_6) idx = (exists i : (int) . 0 <= i /\ i < UInt64.to_int j_16 /\ IndexLogic0.index_logic (Seq.get (Model2.model clause_10) i) = idx) };
    invariant seen_len { [#"../CreuSAT/src/conflict_analysis.rs" 278 26 278 54] Seq.length (Model1.model seen_6) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    invariant j_is_len { [#"../CreuSAT/src/conflict_analysis.rs" 279 26 279 47] UInt64.to_int j_16 <= Seq.length (Model2.model clause_10) };
    _20 <- j_16;
    _22 <- clause_10;
    _21 <- ([#"../CreuSAT/src/conflict_analysis.rs" 281 14 281 26] Len1.len _22);
    goto BB11
  }
  BB11 {
    _19 <- ([#"../CreuSAT/src/conflict_analysis.rs" 281 10 281 26] _20 < _21);
    switch (_19)
      | False -> goto BB16
      | _ -> goto BB12
      end
  }
  BB12 {
    _24 <- borrow_mut seen_6;
    seen_6 <-  ^ _24;
    _28 <- clause_10;
    _29 <- j_16;
    _27 <- ([#"../CreuSAT/src/conflict_analysis.rs" 282 13 282 22] Index1.index _28 _29);
    goto BB13
  }
  BB13 {
    _26 <- _27;
    _25 <- ([#"../CreuSAT/src/conflict_analysis.rs" 282 13 282 30] Index2.index _26);
    goto BB14
  }
  BB14 {
    _23 <- ([#"../CreuSAT/src/conflict_analysis.rs" 282 8 282 31] IndexMut0.index_mut _24 _25);
    goto BB15
  }
  BB15 {
    _23 <- { _23 with current = true };
    assume { Resolve0.resolve _23 };
    j_16 <- ([#"../CreuSAT/src/conflict_analysis.rs" 283 8 283 14] j_16 + (1 : usize));
    _18 <- ();
    goto BB10
  }
  BB16 {
    _17 <- ();
    clause_33 <- clause_10;
    clause_10 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    assert { [#"../CreuSAT/src/conflict_analysis.rs" 286 18 286 45] ClauseIsSeen0.clause_is_seen clause_33 seen_6 };
    goto BB17
  }
  BB17 {
    _34 <- ();
    _38 <- clause_33;
    _37 <- _38;
    _39 <- trail_2;
    _41 <- borrow_mut i_8;
    i_8 <-  ^ _41;
    _40 <- borrow_mut ( * _41);
    _41 <- { _41 with current = ( ^ _40) };
    _42 <- f_1;
    _44 <- seen_6;
    _43 <- _44;
    _36 <- ([#"../CreuSAT/src/conflict_analysis.rs" 287 22 287 70] ChooseLiteral0.choose_literal _37 _39 _40 _42 _43);
    goto BB18
  }
  BB18 {
    assume { Resolve1.resolve _41 };
    switch (_36)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB19
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB21
      end
  }
  BB19 {
    _0 <- false;
    goto BB34
  }
  BB20 {
    assume { Resolve2.resolve seen_6 };
    assume { Resolve3.resolve to_bump_15 };
    absurd
  }
  BB21 {
    c_idx_46 <- Core_Option_Option_Type.core_option_option_type_Some_0 _36;
    c_idx_35 <- c_idx_46;
    _51 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2;
    _52 <- i_8;
    _50 <- ([#"../CreuSAT/src/conflict_analysis.rs" 291 22 291 36] Index3.index _51 _52);
    goto BB22
  }
  BB22 {
    _49 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason _50;
    switch (_49)
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Unit_Type _ -> goto BB24
      | _ -> goto BB23
      end
  }
  BB23 {
    _0 <- false;
    goto BB33
  }
  BB24 {
    c_54 <- CreuSat_Trail_Reason_Type.creusat_trail_reason_type_Unit_0 _49;
    _56 <- f_1;
    _57 <- c_54;
    _55 <- ([#"../CreuSAT/src/conflict_analysis.rs" 293 28 293 33] Index0.index _56 _57);
    goto BB25
  }
  BB25 {
    ante_48 <- _55;
    path_c_59 <- (1 : usize);
    _61 <- f_1;
    _63 <- borrow_mut clause_33;
    clause_33 <-  ^ _63;
    _62 <- borrow_mut ( * _63);
    _63 <- { _63 with current = ( ^ _62) };
    _64 <- ante_48;
    _68 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail_2;
    _69 <- i_8;
    _67 <- ([#"../CreuSAT/src/conflict_analysis.rs" 297 34 297 48] Index3.index _68 _69);
    goto BB26
  }
  BB26 {
    _66 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit _67;
    _65 <- ([#"../CreuSAT/src/conflict_analysis.rs" 297 34 297 60] Index2.index _66);
    goto BB27
  }
  BB27 {
    _70 <- c_idx_35;
    _72 <- trail_2;
    _71 <- _72;
    _74 <- borrow_mut seen_6;
    seen_6 <-  ^ _74;
    _73 <- borrow_mut ( * _74);
    _74 <- { _74 with current = ( ^ _73) };
    _76 <- borrow_mut path_c_59;
    path_c_59 <-  ^ _76;
    _75 <- borrow_mut ( * _76);
    _76 <- { _76 with current = ( ^ _75) };
    _78 <- borrow_mut to_bump_15;
    to_bump_15 <-  ^ _78;
    _77 <- borrow_mut ( * _78);
    _78 <- { _78 with current = ( ^ _77) };
    _60 <- ([#"../CreuSAT/src/conflict_analysis.rs" 297 4 297 114] Resolve4.resolve _61 _62 _64 _65 _70 _71 _73 _75 _77);
    goto BB28
  }
  BB28 {
    assume { Resolve5.resolve _63 };
    assume { Resolve6.resolve _74 };
    assume { Resolve1.resolve _76 };
    assume { Resolve7.resolve _78 };
    _81 <- clause_33;
    _80 <- ([#"../CreuSAT/src/conflict_analysis.rs" 298 7 298 19] Len1.len _81);
    goto BB29
  }
  BB29 {
    _79 <- ([#"../CreuSAT/src/conflict_analysis.rs" 298 7 298 24] _80 = (0 : usize));
    switch (_79)
      | False -> goto BB31
      | _ -> goto BB30
      end
  }
  BB30 {
    _0 <- true;
    goto BB32
  }
  BB31 {
    _0 <- false;
    goto BB32
  }
  BB32 {
    goto BB33
  }
  BB33 {
    goto BB34
  }
  BB34 {
    goto BB35
  }
  BB35 {
    goto BB36
  }
  BB36 {
    assume { Resolve3.resolve to_bump_15 };
    goto BB37
  }
  BB37 {
    goto BB38
  }
  BB38 {
    assume { Resolve2.resolve seen_6 };
    return _0
  }
  
end
module Core_Clone_Impls_Impl5_Clone_Interface
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  val clone' [@cfg:stackify] (self : usize) : usize
    ensures { result = self }
    
end
module Core_Clone_Impls_Impl5_Clone
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  val clone' [@cfg:stackify] (self : usize) : usize
    ensures { result = self }
    
end
module Core_Clone_Impls_Impl5
  
end
module CreuSat_Decision_Impl2_Clone_Interface
  use prelude.Borrow
  use CreuSat_Decision_Node_Type
  val clone' [@cfg:stackify] (self : CreuSat_Decision_Node_Type.creusat_decision_node_type) : CreuSat_Decision_Node_Type.creusat_decision_node_type
    ensures { [#"../CreuSAT/src/decision.rs" 12 9 12 14] result = self }
    
end
module CreuSat_Decision_Impl2_Clone
  use prelude.Borrow
  use CreuSat_Decision_Node_Type
  use mach.int.Int
  use prelude.UIntSize
  clone Core_Clone_Impls_Impl5_Clone_Interface as Clone0
  let rec cfg clone' [@cfg:stackify] [#"../CreuSAT/src/decision.rs" 12 9 12 14] (self : CreuSat_Decision_Node_Type.creusat_decision_node_type) : CreuSat_Decision_Node_Type.creusat_decision_node_type
    ensures { [#"../CreuSAT/src/decision.rs" 12 9 12 14] result = self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Decision_Node_Type.creusat_decision_node_type;
  var self_1 : CreuSat_Decision_Node_Type.creusat_decision_node_type;
  var _2 : usize;
  var _3 : usize;
  var _4 : usize;
  var _5 : usize;
  var _6 : usize;
  var _7 : usize;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next self_1;
    _2 <- ([#"../CreuSAT/src/decision.rs" 14 4 14 19] Clone0.clone' _3);
    goto BB1
  }
  BB1 {
    _5 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_prev self_1;
    _4 <- ([#"../CreuSAT/src/decision.rs" 15 4 15 19] Clone0.clone' _5);
    goto BB2
  }
  BB2 {
    _7 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_ts self_1;
    _6 <- ([#"../CreuSAT/src/decision.rs" 16 4 16 17] Clone0.clone' _7);
    goto BB3
  }
  BB3 {
    _0 <- CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type _2 _4 _6;
    return _0
  }
  
end
module CreuSat_Decision_Impl0_Default_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use CreuSat_Decision_Node_Type
  val default [@cfg:stackify] (_ : ()) : CreuSat_Decision_Node_Type.creusat_decision_node_type
    ensures { [#"../CreuSAT/src/decision.rs" 22 14 22 41] UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next result) = 18446744073709551615 }
    ensures { [#"../CreuSAT/src/decision.rs" 23 14 23 41] UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_prev result) = 18446744073709551615 }
    ensures { [#"../CreuSAT/src/decision.rs" 24 14 24 31] UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_ts result) = 0 }
    
end
module CreuSat_Decision_Impl0_Default
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use CreuSat_Decision_Node_Type
  let rec cfg default [@cfg:stackify] [#"../CreuSAT/src/decision.rs" 25 4 25 24] (_ : ()) : CreuSat_Decision_Node_Type.creusat_decision_node_type
    ensures { [#"../CreuSAT/src/decision.rs" 22 14 22 41] UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next result) = 18446744073709551615 }
    ensures { [#"../CreuSAT/src/decision.rs" 23 14 23 41] UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_prev result) = 18446744073709551615 }
    ensures { [#"../CreuSAT/src/decision.rs" 24 14 24 31] UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_ts result) = 0 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Decision_Node_Type.creusat_decision_node_type;
  {
    goto BB0
  }
  BB0 {
    _0 <- CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type (18446744073709551615 : usize) (18446744073709551615 : usize) (0 : usize);
    return _0
  }
  
end
module Core_Default_Default_Default_Interface
  type self
  val default [@cfg:stackify] (_ : ()) : self
    requires {false}
    
end
module Core_Default_Default_Default
  type self
  val default [@cfg:stackify] (_ : ()) : self
    requires {false}
    
end
module CreuSat_Decision_Impl0
  use CreuSat_Decision_Node_Type
  clone CreuSat_Decision_Impl0_Default_Interface as Default0
  clone Core_Default_Default_Default_Interface as Default1 with type self = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  val default = Default0.default
end
module CreuSat_Decision_Impl1_MakeLinkedList_Interface
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use seq.Seq
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Decision_Decisions_Type
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val make_linked_list [@cfg:stackify] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (lit_order : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
    requires {[#"../CreuSAT/src/decision.rs" 40 15 40 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 41 15 41 61] 0 < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) /\ UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/decision.rs" 42 4 44 48] Seq.length (Model0.model lit_order) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) /\ (forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model lit_order) -> UInt64.to_int (Seq.get (Model0.model lit_order) i) < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    ensures { [#"../CreuSAT/src/decision.rs" 45 14 45 43] Invariant1.invariant' result (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl1_MakeLinkedList
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use seq.Seq
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model4 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model4.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Decision_Node_Type
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model4.model
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model3.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model4.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model1.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model2.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve4 with type t = usize
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve3 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve2 with type t = usize, function Model0.model = Model0.model,
  predicate Resolve0.resolve = Resolve4.resolve
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  function Model0.model = Model1.model, predicate Resolve0.resolve = Resolve3.resolve
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output1.output
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone Alloc_Vec_FromElem_Interface as FromElem0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  function Model0.model = Model1.model
  clone CreuSat_Decision_Impl0_Default_Interface as Default0
  let rec cfg make_linked_list [@cfg:stackify] [#"../CreuSAT/src/decision.rs" 46 4 46 76] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (lit_order : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
    requires {[#"../CreuSAT/src/decision.rs" 40 15 40 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 41 15 41 61] 0 < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) /\ UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/decision.rs" 42 4 44 48] Seq.length (Model0.model lit_order) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) /\ (forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model lit_order) -> UInt64.to_int (Seq.get (Model0.model lit_order) i) < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    ensures { [#"../CreuSAT/src/decision.rs" 45 14 45 43] Invariant1.invariant' result (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type;
  var f_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var lit_order_2 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var iNVALID'_3 : usize;
  var linked_list_4 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _5 : CreuSat_Decision_Node_Type.creusat_decision_node_type;
  var _6 : usize;
  var i_7 : usize;
  var head_8 : usize;
  var _9 : ();
  var _10 : ();
  var _11 : bool;
  var _12 : usize;
  var _13 : usize;
  var j_14 : usize;
  var _15 : usize;
  var _16 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _17 : usize;
  var _18 : ();
  var _19 : bool;
  var _20 : usize;
  var _21 : ();
  var _22 : bool;
  var _23 : usize;
  var _24 : usize;
  var _25 : usize;
  var _26 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _27 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _28 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _29 : usize;
  var _30 : usize;
  var _31 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _32 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _33 : usize;
  var _34 : usize;
  var _35 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _36 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _37 : usize;
  var _38 : usize;
  var _39 : bool;
  var _40 : usize;
  var _41 : usize;
  var _42 : usize;
  var _43 : usize;
  var _44 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _45 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _46 : usize;
  var _47 : usize;
  var _48 : usize;
  var _49 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _50 : usize;
  var _51 : usize;
  var _52 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _53 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _54 : usize;
  var _55 : usize;
  var _56 : usize;
  var _57 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _58 : usize;
  var _59 : usize;
  var _60 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _61 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _62 : usize;
  var _63 : usize;
  var _64 : usize;
  var _65 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _66 : usize;
  var _67 : usize;
  var _68 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _69 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _70 : usize;
  var _71 : usize;
  var _72 : usize;
  var _73 : borrowed (CreuSat_Decision_Node_Type.creusat_decision_node_type);
  var _74 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _75 : usize;
  var _76 : ();
  var _77 : ();
  var _78 : ();
  var _79 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _80 : usize;
  var _81 : usize;
  var _82 : usize;
  var _83 : usize;
  {
    f_1 <- f;
    lit_order_2 <- lit_order;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    iNVALID'_3 <- (18446744073709551615 : usize);
    _5 <- ([#"../CreuSAT/src/decision.rs" 48 56 48 74] Default0.default ());
    goto BB2
  }
  BB2 {
    _6 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    linked_list_4 <- ([#"../CreuSAT/src/decision.rs" 48 41 48 87] FromElem0.from_elem _5 _6);
    goto BB3
  }
  BB3 {
    i_7 <- (0 : usize);
    head_8 <- (0 : usize);
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    goto BB6
  }
  BB6 {
    invariant len_ok { [#"../CreuSAT/src/decision.rs" 51 28 51 63] Seq.length (Model1.model linked_list_4) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    invariant head_ok { [#"../CreuSAT/src/decision.rs" 52 29 52 48] UInt64.to_int head_8 < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    invariant inv { [#"../CreuSAT/src/decision.rs" 51 8 51 65] forall j : (int) . 0 <= j /\ j < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) -> (UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next (Seq.get (Model1.model linked_list_4) j)) = 18446744073709551615 \/ UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next (Seq.get (Model1.model linked_list_4) j)) < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1)) /\ (UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_prev (Seq.get (Model1.model linked_list_4) j)) = 18446744073709551615 \/ UInt64.to_int (CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_prev (Seq.get (Model1.model linked_list_4) j)) < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1)) };
    _12 <- i_7;
    _13 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _11 <- ([#"../CreuSAT/src/decision.rs" 56 14 56 28] _12 < _13);
    switch (_11)
      | False -> goto BB30
      | _ -> goto BB7
      end
  }
  BB7 {
    _16 <- lit_order_2;
    _17 <- i_7;
    _15 <- ([#"../CreuSAT/src/decision.rs" 57 20 57 32] Index0.index _16 _17);
    goto BB8
  }
  BB8 {
    j_14 <- _15;
    _20 <- i_7;
    _19 <- ([#"../CreuSAT/src/decision.rs" 58 15 58 21] _20 = (0 : usize));
    switch (_19)
      | False -> goto BB17
      | _ -> goto BB9
      end
  }
  BB9 {
    _23 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _22 <- ([#"../CreuSAT/src/decision.rs" 59 19 59 33] _23 > (1 : usize));
    switch (_22)
      | False -> goto BB13
      | _ -> goto BB10
      end
  }
  BB10 {
    _26 <- lit_order_2;
    _25 <- ([#"../CreuSAT/src/decision.rs" 60 42 60 54] Index0.index _26 (1 : usize));
    goto BB11
  }
  BB11 {
    _24 <- _25;
    _28 <- borrow_mut linked_list_4;
    linked_list_4 <-  ^ _28;
    _29 <- j_14;
    _27 <- ([#"../CreuSAT/src/decision.rs" 60 20 60 34] IndexMut0.index_mut _28 _29);
    goto BB12
  }
  BB12 {
    _27 <- { _27 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _27 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type _24 b c) };
    _24 <- any usize;
    assume { Resolve0.resolve _27 };
    _21 <- ();
    goto BB15
  }
  BB13 {
    _30 <- iNVALID'_3;
    _32 <- borrow_mut linked_list_4;
    linked_list_4 <-  ^ _32;
    _33 <- j_14;
    _31 <- ([#"../CreuSAT/src/decision.rs" 62 20 62 34] IndexMut0.index_mut _32 _33);
    goto BB14
  }
  BB14 {
    _31 <- { _31 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _31 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type _30 b c) };
    _30 <- any usize;
    assume { Resolve0.resolve _31 };
    _21 <- ();
    goto BB15
  }
  BB15 {
    _34 <- iNVALID'_3;
    _36 <- borrow_mut linked_list_4;
    linked_list_4 <-  ^ _36;
    _37 <- j_14;
    _35 <- ([#"../CreuSAT/src/decision.rs" 64 16 64 30] IndexMut0.index_mut _36 _37);
    goto BB16
  }
  BB16 {
    _35 <- { _35 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _35 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a _34 c) };
    _34 <- any usize;
    assume { Resolve0.resolve _35 };
    _38 <- j_14;
    head_8 <- _38;
    _38 <- any usize;
    _18 <- ();
    goto BB28
  }
  BB17 {
    _40 <- i_7;
    _42 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _41 <- ([#"../CreuSAT/src/decision.rs" 66 27 66 41] _42 - (1 : usize));
    _39 <- ([#"../CreuSAT/src/decision.rs" 66 22 66 41] _40 = _41);
    switch (_39)
      | False -> goto BB22
      | _ -> goto BB18
      end
  }
  BB18 {
    _43 <- iNVALID'_3;
    _45 <- borrow_mut linked_list_4;
    linked_list_4 <-  ^ _45;
    _46 <- j_14;
    _44 <- ([#"../CreuSAT/src/decision.rs" 67 16 67 30] IndexMut0.index_mut _45 _46);
    goto BB19
  }
  BB19 {
    _44 <- { _44 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _44 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type _43 b c) };
    _43 <- any usize;
    assume { Resolve0.resolve _44 };
    _49 <- lit_order_2;
    _51 <- i_7;
    _50 <- ([#"../CreuSAT/src/decision.rs" 68 48 68 53] _51 - (1 : usize));
    _48 <- ([#"../CreuSAT/src/decision.rs" 68 38 68 54] Index0.index _49 _50);
    goto BB20
  }
  BB20 {
    _47 <- _48;
    _53 <- borrow_mut linked_list_4;
    linked_list_4 <-  ^ _53;
    _54 <- j_14;
    _52 <- ([#"../CreuSAT/src/decision.rs" 68 16 68 30] IndexMut0.index_mut _53 _54);
    goto BB21
  }
  BB21 {
    _52 <- { _52 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _52 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a _47 c) };
    _47 <- any usize;
    assume { Resolve0.resolve _52 };
    _18 <- ();
    goto BB27
  }
  BB22 {
    _57 <- lit_order_2;
    _59 <- i_7;
    _58 <- ([#"../CreuSAT/src/decision.rs" 70 48 70 53] _59 + (1 : usize));
    _56 <- ([#"../CreuSAT/src/decision.rs" 70 38 70 54] Index0.index _57 _58);
    goto BB23
  }
  BB23 {
    _55 <- _56;
    _61 <- borrow_mut linked_list_4;
    linked_list_4 <-  ^ _61;
    _62 <- j_14;
    _60 <- ([#"../CreuSAT/src/decision.rs" 70 16 70 30] IndexMut0.index_mut _61 _62);
    goto BB24
  }
  BB24 {
    _60 <- { _60 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _60 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type _55 b c) };
    _55 <- any usize;
    assume { Resolve0.resolve _60 };
    _65 <- lit_order_2;
    _67 <- i_7;
    _66 <- ([#"../CreuSAT/src/decision.rs" 71 48 71 53] _67 - (1 : usize));
    _64 <- ([#"../CreuSAT/src/decision.rs" 71 38 71 54] Index0.index _65 _66);
    goto BB25
  }
  BB25 {
    _63 <- _64;
    _69 <- borrow_mut linked_list_4;
    linked_list_4 <-  ^ _69;
    _70 <- j_14;
    _68 <- ([#"../CreuSAT/src/decision.rs" 71 16 71 30] IndexMut0.index_mut _69 _70);
    goto BB26
  }
  BB26 {
    _68 <- { _68 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _68 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a _63 c) };
    _63 <- any usize;
    assume { Resolve0.resolve _68 };
    _18 <- ();
    goto BB27
  }
  BB27 {
    goto BB28
  }
  BB28 {
    _71 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _72 <- i_7;
    _74 <- borrow_mut linked_list_4;
    linked_list_4 <-  ^ _74;
    _75 <- j_14;
    _73 <- ([#"../CreuSAT/src/decision.rs" 73 12 73 26] IndexMut0.index_mut _74 _75);
    goto BB29
  }
  BB29 {
    _73 <- { _73 with current = (let CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b c =  * _73 in CreuSat_Decision_Node_Type.CreuSat_Decision_Node_Type a b ([#"../CreuSAT/src/decision.rs" 73 12 73 46] _71 - _72)) };
    assume { Resolve0.resolve _73 };
    i_7 <- ([#"../CreuSAT/src/decision.rs" 74 12 74 18] i_7 + (1 : usize));
    _10 <- ();
    goto BB6
  }
  BB30 {
    _9 <- ();
    assume { Resolve1.resolve _79 };
    _79 <- linked_list_4;
    linked_list_4 <- any Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
    _81 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _80 <- ([#"../CreuSAT/src/decision.rs" 76 57 76 71] _81 + (1 : usize));
    _82 <- head_8;
    _83 <- head_8;
    _0 <- CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type _79 _80 _82 _83;
    goto BB31
  }
  BB31 {
    goto BB32
  }
  BB32 {
    goto BB33
  }
  BB33 {
    assume { Resolve2.resolve lit_order_2 };
    return _0
  }
  
end
module CreuSat_Logic_LogicUtil_SortedRangeRev_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate sorted_range_rev (s : Seq.seq (usize, usize)) (l : int) (u : int)
end
module CreuSat_Logic_LogicUtil_SortedRangeRev
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate sorted_range_rev [#"../CreuSAT/src/logic/logic_util.rs" 6 0 6 71] (s : Seq.seq (usize, usize)) (l : int) (u : int)
    
   =
    [#"../CreuSAT/src/logic/logic_util.rs" 7 4 9 5] forall j : (int) . forall i : (int) . l <= i /\ i < j /\ j < u -> (let (a, _) = Seq.get s i in a) >= (let (a, _) = Seq.get s j in a)
end
module CreuSat_Logic_LogicUtil_SortedRev_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate sorted_rev (s : Seq.seq (usize, usize))
end
module CreuSat_Logic_LogicUtil_SortedRev
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  clone CreuSat_Logic_LogicUtil_SortedRangeRev_Interface as SortedRangeRev0
  predicate sorted_rev [#"../CreuSAT/src/logic/logic_util.rs" 13 0 13 49] (s : Seq.seq (usize, usize)) =
    [#"../CreuSAT/src/logic/logic_util.rs" 14 4 14 35] SortedRangeRev0.sorted_range_rev s 0 (Seq.length s)
end
module CreuSat_Logic_LogicUtil_PartitionRev_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  predicate partition_rev (v : Seq.seq (usize, usize)) (i : int)
end
module CreuSat_Logic_LogicUtil_PartitionRev
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  predicate partition_rev [#"../CreuSAT/src/logic/logic_util.rs" 45 0 45 60] (v : Seq.seq (usize, usize)) (i : int) =
    [#"../CreuSAT/src/logic/logic_util.rs" 46 4 46 111] forall k2 : (int) . forall k1 : (int) . 0 <= k1 /\ k1 < i /\ i <= k2 /\ k2 < Seq.length v -> (let (a, _) = Seq.get v k1 in a) >= (let (a, _) = Seq.get v k2 in a)
end
module CreuSat_Util_SortReverse_Interface
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Logic_Seq_Impl2_PermutationOf_Interface as PermutationOf0 with type t = (usize, usize)
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicUtil_SortedRev_Interface as SortedRev0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val sort_reverse [@cfg:stackify] (v : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) : ()
    ensures { [#"../CreuSAT/src/util.rs" 11 10 11 25] SortedRev0.sorted_rev (Model0.model ( ^ v)) }
    ensures { [#"../CreuSAT/src/util.rs" 12 10 12 34] PermutationOf0.permutation_of (Model0.model ( ^ v)) (Model1.model v) }
    
end
module CreuSat_Util_SortReverse
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreuSat_Logic_LogicUtil_PartitionRev as PartitionRev0
  clone CreuSat_Logic_LogicUtil_SortedRangeRev as SortedRangeRev0
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Logic_Seq_Impl2_PermutationOf as PermutationOf0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model0.model
  clone CreuSat_Logic_LogicUtil_SortedRev as SortedRev0 with predicate SortedRangeRev0.sorted_range_rev = SortedRangeRev0.sorted_range_rev
  use prelude.Slice
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model2 with type t = (usize, usize), axiom .
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = (usize, usize)
  clone CreusotContracts_Logic_Model_Impl1_Model as Model3 with type t = seq (usize, usize),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model2.model
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = (usize, usize)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = seq (usize, usize)
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = (usize, usize), function Model0.model = Model3.model,
  function Model1.model = Model2.model
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  function Model1.model = Model0.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = (usize, usize), type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  let rec cfg sort_reverse [@cfg:stackify] [#"../CreuSAT/src/util.rs" 13 0 13 48] (v : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) : ()
    ensures { [#"../CreuSAT/src/util.rs" 11 10 11 25] SortedRev0.sorted_rev (Model0.model ( ^ v)) }
    ensures { [#"../CreuSAT/src/util.rs" 12 10 12 34] PermutationOf0.permutation_of (Model0.model ( ^ v)) (Model1.model v) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var v_1 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var i_2 : usize;
  ghost var old_v_3 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _4 : ();
  var _5 : ();
  var _6 : bool;
  var _7 : usize;
  var _8 : usize;
  var _9 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var max_10 : usize;
  var j_11 : usize;
  var _12 : usize;
  var _13 : ();
  var _14 : bool;
  var _15 : usize;
  var _16 : usize;
  var _17 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _18 : ();
  var _19 : bool;
  var _20 : usize;
  var _21 : (usize, usize);
  var _22 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _23 : usize;
  var _24 : usize;
  var _25 : (usize, usize);
  var _26 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _27 : usize;
  var _28 : usize;
  var _29 : ();
  var _30 : ();
  var _31 : ();
  var _32 : ();
  var _33 : borrowed (seq (usize, usize));
  var _34 : borrowed (seq (usize, usize));
  var _35 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _36 : usize;
  var _37 : usize;
  var _38 : ();
  var _39 : ();
  var _40 : ();
  {
    v_1 <- v;
    goto BB0
  }
  BB0 {
    i_2 <- (0 : usize);
    _4 <- ();
    old_v_3 <- ghost ([#"../CreuSAT/src/util.rs" 15 49 15 61] v_1);
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    invariant proph_const { [#"../CreuSAT/src/util.rs" 16 29 16 49]  ^ v_1 =  ^ old_v_3 };
    invariant permutation { [#"../CreuSAT/src/util.rs" 17 29 17 65] PermutationOf0.permutation_of (Model1.model v_1) (Model0.model ( * old_v_3)) };
    invariant i_bound { [#"../CreuSAT/src/util.rs" 18 25 18 41] UInt64.to_int i_2 <= Seq.length (Model1.model v_1) };
    invariant sorted { [#"../CreuSAT/src/util.rs" 19 24 19 51] SortedRangeRev0.sorted_range_rev (Model1.model v_1) 0 (UInt64.to_int i_2) };
    invariant partition { [#"../CreuSAT/src/util.rs" 20 27 20 48] PartitionRev0.partition_rev (Model1.model v_1) (UInt64.to_int i_2) };
    _7 <- i_2;
    _9 <-  * v_1;
    _8 <- ([#"../CreuSAT/src/util.rs" 21 14 21 21] Len0.len _9);
    goto BB3
  }
  BB3 {
    _6 <- ([#"../CreuSAT/src/util.rs" 21 10 21 21] _7 < _8);
    switch (_6)
      | False -> goto BB16
      | _ -> goto BB4
      end
  }
  BB4 {
    max_10 <- i_2;
    _12 <- i_2;
    j_11 <- ([#"../CreuSAT/src/util.rs" 23 20 23 25] _12 + (1 : usize));
    goto BB5
  }
  BB5 {
    invariant max_is_max { [#"../CreuSAT/src/util.rs" 24 8 24 96] forall k : (int) . UInt64.to_int i_2 <= k /\ k < UInt64.to_int j_11 -> (let (a, _) = Seq.get (Model1.model v_1) (UInt64.to_int max_10) in a) >= (let (a, _) = Seq.get (Model1.model v_1) k in a) };
    invariant j_bound { [#"../CreuSAT/src/util.rs" 25 29 25 57] UInt64.to_int i_2 <= UInt64.to_int j_11 /\ UInt64.to_int j_11 <= Seq.length (Model1.model v_1) };
    invariant max_bound { [#"../CreuSAT/src/util.rs" 26 31 26 54] UInt64.to_int i_2 <= UInt64.to_int max_10 /\ UInt64.to_int max_10 < UInt64.to_int j_11 };
    _15 <- j_11;
    _17 <-  * v_1;
    _16 <- ([#"../CreuSAT/src/util.rs" 27 18 27 25] Len0.len _17);
    goto BB6
  }
  BB6 {
    _14 <- ([#"../CreuSAT/src/util.rs" 27 14 27 25] _15 < _16);
    switch (_14)
      | False -> goto BB13
      | _ -> goto BB7
      end
  }
  BB7 {
    _22 <-  * v_1;
    _23 <- j_11;
    _21 <- ([#"../CreuSAT/src/util.rs" 28 15 28 19] Index0.index _22 _23);
    goto BB8
  }
  BB8 {
    _20 <- (let (a, _) = _21 in a);
    _26 <-  * v_1;
    _27 <- max_10;
    _25 <- ([#"../CreuSAT/src/util.rs" 28 24 28 30] Index0.index _26 _27);
    goto BB9
  }
  BB9 {
    _24 <- (let (a, _) = _25 in a);
    _19 <- ([#"../CreuSAT/src/util.rs" 28 15 28 32] _20 > _24);
    switch (_19)
      | False -> goto BB11
      | _ -> goto BB10
      end
  }
  BB10 {
    _28 <- j_11;
    max_10 <- _28;
    _28 <- any usize;
    _18 <- ();
    goto BB12
  }
  BB11 {
    _18 <- ();
    goto BB12
  }
  BB12 {
    j_11 <- ([#"../CreuSAT/src/util.rs" 31 12 31 18] j_11 + (1 : usize));
    _5 <- ();
    goto BB5
  }
  BB13 {
    _13 <- ();
    _35 <- borrow_mut ( * v_1);
    v_1 <- { v_1 with current = ( ^ _35) };
    _34 <- ([#"../CreuSAT/src/util.rs" 33 8 33 22] DerefMut0.deref_mut _35);
    goto BB14
  }
  BB14 {
    _33 <- borrow_mut ( * _34);
    _34 <- { _34 with current = ( ^ _33) };
    _36 <- i_2;
    _37 <- max_10;
    _32 <- ([#"../CreuSAT/src/util.rs" 33 8 33 22] Swap0.swap _33 _36 _37);
    goto BB15
  }
  BB15 {
    assume { Resolve0.resolve _34 };
    i_2 <- ([#"../CreuSAT/src/util.rs" 34 8 34 14] i_2 + (1 : usize));
    _5 <- ();
    goto BB2
  }
  BB16 {
    assume { Resolve1.resolve v_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Decision_Impl1_New_Interface
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val new [@cfg:stackify] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
    requires {[#"../CreuSAT/src/decision.rs" 80 15 80 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 81 15 81 61] 0 < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) /\ UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/decision.rs" 82 14 82 43] Invariant1.invariant' result (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl1_New
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use prelude.Borrow
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model6.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model4 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model6.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Logic_Model_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model6.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model4.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicUtil_SortedRangeRev as SortedRangeRev0
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve5 with type t = usize
  clone CreusotContracts_Logic_Resolve_Impl0_Resolve as Resolve6 with type t1 = usize, type t2 = usize,
  predicate Resolve0.resolve = Resolve5.resolve, predicate Resolve1.resolve = Resolve5.resolve
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy4 with type t = (usize, usize),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Logic_Seq_Impl2_PermutationOf as PermutationOf0 with type t = (usize, usize)
  clone CreusotContracts_Logic_Model_Impl1_Model as Model9 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy4.modelTy, function Model0.model = Model3.model
  clone CreuSat_Logic_LogicUtil_SortedRev as SortedRev0 with predicate SortedRangeRev0.sorted_range_rev = SortedRangeRev0.sorted_range_rev
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy3 with type t = (usize, usize)
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere1 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = (usize, usize)
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy2 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model8 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model4.model
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve4 with type t = (usize, usize),
  function Model0.model = Model3.model, predicate Resolve0.resolve = Resolve6.resolve
  clone CreuSat_Decision_Impl1_MakeLinkedList_Interface as MakeLinkedList0 with predicate Invariant0.invariant' = Invariant0.invariant',
  function Model0.model = Model1.model, predicate Invariant1.invariant' = Invariant1.invariant',
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve3 with type t = usize, function Model0.model = Model1.model,
  predicate Resolve0.resolve = Resolve5.resolve
  clone Alloc_Vec_Impl16_Index_Interface as Index4 with type t = (usize, usize), type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  type Output0.output = Output1.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreuSat_Util_SortReverse_Interface as SortReverse0 with function Model0.model = Model3.model,
  predicate SortedRev0.sorted_rev = SortedRev0.sorted_rev, function Model1.model = Model9.model,
  predicate PermutationOf0.permutation_of = PermutationOf0.permutation_of
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = (usize, usize)
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut1 with type t = (usize, usize), type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere1.resolve_elswhere, type Output0.output = Output1.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = usize
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone Alloc_Vec_Impl16_Index_Interface as Index3 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_Index_Interface as Index2 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model2.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len1 with function Model0.model = Model2.model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with function Model0.model = Model8.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  clone Alloc_Vec_FromElem_Interface as FromElem1 with type t = (usize, usize), function Model0.model = Model3.model
  clone Alloc_Vec_FromElem_Interface as FromElem0 with type t = usize, function Model0.model = Model1.model
  let rec cfg new [@cfg:stackify] [#"../CreuSAT/src/decision.rs" 83 4 83 40] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
    requires {[#"../CreuSAT/src/decision.rs" 80 15 80 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/decision.rs" 81 15 81 61] 0 < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) /\ UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/decision.rs" 82 14 82 43] Invariant1.invariant' result (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type;
  var f_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var lit_order_2 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _3 : usize;
  var counts_4 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _5 : usize;
  var counts_with_index_6 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _7 : (usize, usize);
  var _8 : usize;
  var i_9 : usize;
  var _10 : ();
  var _11 : ();
  var _12 : bool;
  var _13 : usize;
  var _14 : usize;
  var _15 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var curr_clause_16 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _17 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _18 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _19 : usize;
  var j_20 : usize;
  var _21 : ();
  var _22 : bool;
  var _23 : usize;
  var _24 : usize;
  var _25 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _26 : ();
  var _27 : bool;
  var _28 : usize;
  var _29 : usize;
  var _30 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _31 : usize;
  var _32 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _33 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _34 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _35 : usize;
  var _36 : usize;
  var _37 : borrowed usize;
  var _38 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _39 : usize;
  var _40 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _41 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _42 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _43 : usize;
  var _44 : ();
  var _45 : ();
  var _46 : ();
  var _47 : ();
  var _48 : ();
  var _49 : ();
  var _50 : ();
  var _51 : bool;
  var _52 : usize;
  var _53 : usize;
  var _54 : usize;
  var _55 : usize;
  var _56 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _57 : usize;
  var _58 : usize;
  var _59 : borrowed (usize, usize);
  var _60 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _61 : usize;
  var _62 : ();
  var _63 : ();
  var _64 : ();
  var _65 : ();
  var _66 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _67 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _68 : ();
  var _69 : ();
  var _70 : bool;
  var _71 : usize;
  var _72 : usize;
  var _73 : usize;
  var _74 : (usize, usize);
  var _75 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (usize, usize) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _76 : usize;
  var _77 : borrowed usize;
  var _78 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _79 : usize;
  var _80 : ();
  var _81 : ();
  var _82 : ();
  var _83 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _84 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  {
    f_1 <- f;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    lit_order_2 <- ([#"../CreuSAT/src/decision.rs" 84 40 84 69] FromElem0.from_elem (0 : usize) _3);
    goto BB1
  }
  BB1 {
    _5 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    counts_4 <- ([#"../CreuSAT/src/decision.rs" 85 37 85 66] FromElem0.from_elem (0 : usize) _5);
    goto BB2
  }
  BB2 {
    _7 <- ((0 : usize), (0 : usize));
    _8 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    counts_with_index_6 <- ([#"../CreuSAT/src/decision.rs" 86 57 86 91] FromElem1.from_elem _7 _8);
    goto BB3
  }
  BB3 {
    i_9 <- (0 : usize);
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    invariant i_bound { [#"../CreuSAT/src/decision.rs" 88 29 88 53] UInt64.to_int i_9 <= Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f_1)) };
    invariant counts_len1 { [#"../CreuSAT/src/decision.rs" 89 33 89 63] Seq.length (Model1.model counts_4) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    _13 <- i_9;
    _15 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f_1;
    _14 <- ([#"../CreuSAT/src/decision.rs" 90 18 90 33] Len0.len _15);
    goto BB6
  }
  BB6 {
    _12 <- ([#"../CreuSAT/src/decision.rs" 90 14 90 33] _13 < _14);
    switch (_12)
      | False -> goto BB23
      | _ -> goto BB7
      end
  }
  BB7 {
    _18 <- f_1;
    _19 <- i_9;
    _17 <- ([#"../CreuSAT/src/decision.rs" 91 31 91 35] Index0.index _18 _19);
    goto BB8
  }
  BB8 {
    curr_clause_16 <- _17;
    j_20 <- (0 : usize);
    goto BB9
  }
  BB9 {
    goto BB10
  }
  BB10 {
    invariant i_bound2 { [#"../CreuSAT/src/decision.rs" 93 34 93 58] UInt64.to_int i_9 <= Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f_1)) };
    invariant j_bound { [#"../CreuSAT/src/decision.rs" 94 33 94 59] UInt64.to_int j_20 <= Seq.length (Model2.model curr_clause_16) };
    invariant counts_len { [#"../CreuSAT/src/decision.rs" 95 36 95 66] Seq.length (Model1.model counts_4) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    _23 <- j_20;
    _25 <- curr_clause_16;
    _24 <- ([#"../CreuSAT/src/decision.rs" 96 22 96 39] Len1.len _25);
    goto BB11
  }
  BB11 {
    _22 <- ([#"../CreuSAT/src/decision.rs" 96 18 96 39] _23 < _24);
    switch (_22)
      | False -> goto BB22
      | _ -> goto BB12
      end
  }
  BB12 {
    _30 <- counts_4;
    _34 <- curr_clause_16;
    _35 <- j_20;
    _33 <- ([#"../CreuSAT/src/decision.rs" 99 26 99 40] Index1.index _34 _35);
    goto BB13
  }
  BB13 {
    _32 <- _33;
    _31 <- ([#"../CreuSAT/src/decision.rs" 99 26 99 48] Index2.index _32);
    goto BB14
  }
  BB14 {
    _29 <- ([#"../CreuSAT/src/decision.rs" 99 19 99 49] Index3.index _30 _31);
    goto BB15
  }
  BB15 {
    _28 <- _29;
    _36 <- ([#"../CreuSAT/src/decision.rs" 99 52 99 66] (18446744073709551615 : usize) - (1 : usize));
    _27 <- ([#"../CreuSAT/src/decision.rs" 99 19 99 66] _28 < _36);
    switch (_27)
      | False -> goto BB20
      | _ -> goto BB16
      end
  }
  BB16 {
    _38 <- borrow_mut counts_4;
    counts_4 <-  ^ _38;
    _42 <- curr_clause_16;
    _43 <- j_20;
    _41 <- ([#"../CreuSAT/src/decision.rs" 100 27 100 41] Index1.index _42 _43);
    goto BB17
  }
  BB17 {
    _40 <- _41;
    _39 <- ([#"../CreuSAT/src/decision.rs" 100 27 100 49] Index2.index _40);
    goto BB18
  }
  BB18 {
    _37 <- ([#"../CreuSAT/src/decision.rs" 100 20 100 50] IndexMut0.index_mut _38 _39);
    goto BB19
  }
  BB19 {
    _37 <- { _37 with current = ([#"../CreuSAT/src/decision.rs" 100 20 100 55]  * _37 + (1 : usize)) };
    assume { Resolve0.resolve _37 };
    _26 <- ();
    goto BB21
  }
  BB20 {
    _26 <- ();
    goto BB21
  }
  BB21 {
    j_20 <- ([#"../CreuSAT/src/decision.rs" 102 16 102 22] j_20 + (1 : usize));
    _11 <- ();
    goto BB10
  }
  BB22 {
    _21 <- ();
    i_9 <- ([#"../CreuSAT/src/decision.rs" 104 12 104 18] i_9 + (1 : usize));
    _11 <- ();
    goto BB5
  }
  BB23 {
    _10 <- ();
    i_9 <- (0 : usize);
    goto BB24
  }
  BB24 {
    goto BB25
  }
  BB25 {
    goto BB26
  }
  BB26 {
    invariant i_bound { [#"../CreuSAT/src/decision.rs" 107 29 107 46] UInt64.to_int i_9 <= UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    invariant counts_with_idx_len { [#"../CreuSAT/src/decision.rs" 108 41 108 82] Seq.length (Model3.model counts_with_index_6) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    invariant second_ok { [#"../CreuSAT/src/decision.rs" 107 8 107 48] forall j : (int) . 0 <= j /\ j < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) -> UInt64.to_int (let (_, a) = Seq.get (Model3.model counts_with_index_6) j in a) < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    _52 <- i_9;
    _53 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _51 <- ([#"../CreuSAT/src/decision.rs" 111 14 111 28] _52 < _53);
    switch (_51)
      | False -> goto BB30
      | _ -> goto BB27
      end
  }
  BB27 {
    _56 <- counts_4;
    _57 <- i_9;
    _55 <- ([#"../CreuSAT/src/decision.rs" 112 36 112 45] Index3.index _56 _57);
    goto BB28
  }
  BB28 {
    _54 <- _55;
    _58 <- i_9;
    _60 <- borrow_mut counts_with_index_6;
    counts_with_index_6 <-  ^ _60;
    _61 <- i_9;
    _59 <- ([#"../CreuSAT/src/decision.rs" 112 12 112 32] IndexMut1.index_mut _60 _61);
    goto BB29
  }
  BB29 {
    _59 <- { _59 with current = (_54, _58) };
    assume { Resolve1.resolve _59 };
    i_9 <- ([#"../CreuSAT/src/decision.rs" 113 12 113 18] i_9 + (1 : usize));
    _11 <- ();
    goto BB26
  }
  BB30 {
    _50 <- ();
    _67 <- borrow_mut counts_with_index_6;
    counts_with_index_6 <-  ^ _67;
    _66 <- borrow_mut ( * _67);
    _67 <- { _67 with current = ( ^ _66) };
    _65 <- ([#"../CreuSAT/src/decision.rs" 115 8 115 44] SortReverse0.sort_reverse _66);
    goto BB31
  }
  BB31 {
    assume { Resolve2.resolve _67 };
    assert { [#"../CreuSAT/src/decision.rs" 116 8 117 53] forall j : (int) . 0 <= j /\ j < Seq.length (Model3.model counts_with_index_6) -> UInt64.to_int (let (_, a) = Seq.get (Model3.model counts_with_index_6) j in a) < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    goto BB32
  }
  BB32 {
    _68 <- ();
    i_9 <- (0 : usize);
    goto BB33
  }
  BB33 {
    goto BB34
  }
  BB34 {
    goto BB35
  }
  BB35 {
    invariant i_bound { [#"../CreuSAT/src/decision.rs" 119 29 119 57] 0 <= UInt64.to_int i_9 /\ UInt64.to_int i_9 <= UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    invariant lit_order_len { [#"../CreuSAT/src/decision.rs" 120 35 120 68] Seq.length (Model1.model lit_order_2) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    invariant second_ok { [#"../CreuSAT/src/decision.rs" 119 8 119 59] forall j : (int) . 0 <= j /\ j < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) -> UInt64.to_int (Seq.get (Model1.model lit_order_2) j) < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    _71 <- i_9;
    _72 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _70 <- ([#"../CreuSAT/src/decision.rs" 123 14 123 28] _71 < _72);
    switch (_70)
      | False -> goto BB39
      | _ -> goto BB36
      end
  }
  BB36 {
    _75 <- counts_with_index_6;
    _76 <- i_9;
    _74 <- ([#"../CreuSAT/src/decision.rs" 124 27 124 47] Index4.index _75 _76);
    goto BB37
  }
  BB37 {
    _73 <- (let (_, a) = _74 in a);
    _78 <- borrow_mut lit_order_2;
    lit_order_2 <-  ^ _78;
    _79 <- i_9;
    _77 <- ([#"../CreuSAT/src/decision.rs" 124 12 124 24] IndexMut0.index_mut _78 _79);
    goto BB38
  }
  BB38 {
    _77 <- { _77 with current = _73 };
    _73 <- any usize;
    assume { Resolve0.resolve _77 };
    i_9 <- ([#"../CreuSAT/src/decision.rs" 125 12 125 18] i_9 + (1 : usize));
    _11 <- ();
    goto BB35
  }
  BB39 {
    _69 <- ();
    _83 <- f_1;
    assume { Resolve3.resolve _84 };
    _84 <- lit_order_2;
    lit_order_2 <- any Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
    _0 <- ([#"../CreuSAT/src/decision.rs" 127 8 127 44] MakeLinkedList0.make_linked_list _83 _84);
    goto BB40
  }
  BB40 {
    goto BB41
  }
  BB41 {
    assume { Resolve4.resolve counts_with_index_6 };
    goto BB42
  }
  BB42 {
    assume { Resolve3.resolve counts_4 };
    goto BB43
  }
  BB43 {
    return _0
  }
  
end
module CreuSat_Logic_LogicAssignments_Impl1_Complete_Interface
  use CreuSat_Assignments_Assignments_Type
  predicate complete (self : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
end
module CreuSat_Logic_LogicAssignments_Impl1_Complete
  use CreuSat_Assignments_Assignments_Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate complete [#"../CreuSAT/src/logic/logic_assignments.rs" 55 4 55 33] (self : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 56 8 58 9] forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model self) -> not Unset0.unset (Seq.get (Model0.model self) i)
end
module CreuSat_Decision_Impl1_GetNext_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use seq.Seq
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete_Interface as Complete0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  use Core_Option_Option_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  val get_next [@cfg:stackify] (self : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : Core_Option_Option_Type.core_option_option_type usize
    requires {[#"../CreuSAT/src/decision.rs" 233 4 233 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/decision.rs" 234 15 234 31] Invariant1.invariant' a _f}
    ensures { [#"../CreuSAT/src/decision.rs" 233 4 233 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/decision.rs" 235 14 238 5] match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type k -> UInt64.to_int k < Seq.length (Model0.model a) /\ Unset0.unset (Seq.get (Model0.model a) (UInt64.to_int k))
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> Complete0.complete a
      end }
    
end
module CreuSat_Decision_Impl1_GetNext
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use seq.Seq
  use mach.int.Int32
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model3.model
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  use CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete as Complete0 with function Model0.model = Model2.model,
  predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model2.model
  use Core_Option_Option_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model1.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreuSat_Assignments_Impl2_Len_Interface as Len0 with function Model0.model = Model0.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone Alloc_Vec_Impl16_Index_Interface as Index1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone CreuSat_Assignments_Impl0_Index_Interface as Index0 with function Model0.model = Model0.model
  let rec cfg get_next [@cfg:stackify] [#"../CreuSAT/src/decision.rs" 239 4 239 78] (self : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : Core_Option_Option_Type.core_option_option_type usize
    requires {[#"../CreuSAT/src/decision.rs" 233 4 233 52] Invariant0.invariant' ( * self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/decision.rs" 234 15 234 31] Invariant1.invariant' a _f}
    ensures { [#"../CreuSAT/src/decision.rs" 233 4 233 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)) }
    ensures { [#"../CreuSAT/src/decision.rs" 235 14 238 5] match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type k -> UInt64.to_int k < Seq.length (Model0.model a) /\ Unset0.unset (Seq.get (Model0.model a) (UInt64.to_int k))
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> Complete0.complete a
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.core_option_option_type usize;
  var self_1 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var a_2 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var iNVALID'_4 : usize;
  var curr_5 : usize;
  var _6 : ();
  var _7 : ();
  var _8 : bool;
  var _9 : usize;
  var _10 : usize;
  var _11 : ();
  var _12 : bool;
  var _13 : uint8;
  var _14 : uint8;
  var _15 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _16 : usize;
  var _17 : ();
  var _18 : usize;
  var _19 : CreuSat_Decision_Node_Type.creusat_decision_node_type;
  var _20 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _21 : usize;
  var _22 : usize;
  var _23 : usize;
  var _24 : CreuSat_Decision_Node_Type.creusat_decision_node_type;
  var _25 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _26 : usize;
  var _27 : ();
  var _28 : ();
  var _29 : ();
  var i_30 : usize;
  var _31 : ();
  var _32 : bool;
  var _33 : usize;
  var _34 : usize;
  var _35 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _36 : ();
  var _37 : bool;
  var _38 : uint8;
  var _39 : uint8;
  var _40 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _41 : usize;
  var _42 : ();
  var _43 : usize;
  var _44 : ();
  var _45 : ();
  var _46 : ();
  {
    self_1 <- self;
    a_2 <- a;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    iNVALID'_4 <- (18446744073709551615 : usize);
    curr_5 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_search ( * self_1);
    goto BB1
  }
  BB1 {
    invariant inv { [#"../CreuSAT/src/decision.rs" 242 25 242 65] curr_5 = (18446744073709551615 : usize) \/ UInt64.to_int curr_5 < Seq.length (Model0.model a_2) };
    _9 <- curr_5;
    _10 <- iNVALID'_4;
    _8 <- ([#"../CreuSAT/src/decision.rs" 243 14 243 29] _9 <> _10);
    switch (_8)
      | False -> goto BB8
      | _ -> goto BB2
      end
  }
  BB2 {
    _15 <- a_2;
    _16 <- curr_5;
    _14 <- ([#"../CreuSAT/src/decision.rs" 244 15 244 22] Index0.index _15 _16);
    goto BB3
  }
  BB3 {
    _13 <- _14;
    _12 <- ([#"../CreuSAT/src/decision.rs" 244 15 244 27] _13 >= (2 : uint8));
    switch (_12)
      | False -> goto BB6
      | _ -> goto BB4
      end
  }
  BB4 {
    _20 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1);
    _21 <- curr_5;
    _19 <- ([#"../CreuSAT/src/decision.rs" 245 30 245 52] Index1.index _20 _21);
    goto BB5
  }
  BB5 {
    _18 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next _19;
    self_1 <- { self_1 with current = (let CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c d =  * self_1 in CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c _18) };
    _18 <- any usize;
    assume { Resolve0.resolve self_1 };
    _22 <- curr_5;
    _0 <- Core_Option_Option_Type.Core_Option_Option_Some_Type _22;
    goto BB16
  }
  BB6 {
    _11 <- ();
    _25 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * self_1);
    _26 <- curr_5;
    _24 <- ([#"../CreuSAT/src/decision.rs" 248 19 248 41] Index1.index _25 _26);
    goto BB7
  }
  BB7 {
    _23 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_next _24;
    curr_5 <- _23;
    _23 <- any usize;
    _7 <- ();
    goto BB1
  }
  BB8 {
    assume { Resolve0.resolve self_1 };
    _6 <- ();
    i_30 <- (0 : usize);
    goto BB9
  }
  BB9 {
    invariant prev { [#"../CreuSAT/src/decision.rs" 253 8 253 79] forall j : (int) . 0 <= j /\ j < UInt64.to_int i_30 -> not Unset0.unset (Seq.get (Model0.model a_2) j) };
    _33 <- i_30;
    _35 <- a_2;
    _34 <- ([#"../CreuSAT/src/decision.rs" 254 18 254 25] Len0.len _35);
    goto BB10
  }
  BB10 {
    _32 <- ([#"../CreuSAT/src/decision.rs" 254 14 254 25] _33 < _34);
    switch (_32)
      | False -> goto BB15
      | _ -> goto BB11
      end
  }
  BB11 {
    _40 <- a_2;
    _41 <- i_30;
    _39 <- ([#"../CreuSAT/src/decision.rs" 255 15 255 19] Index0.index _40 _41);
    goto BB12
  }
  BB12 {
    _38 <- _39;
    _37 <- ([#"../CreuSAT/src/decision.rs" 255 15 255 24] _38 >= (2 : uint8));
    switch (_37)
      | False -> goto BB14
      | _ -> goto BB13
      end
  }
  BB13 {
    _43 <- i_30;
    _0 <- Core_Option_Option_Type.Core_Option_Option_Some_Type _43;
    goto BB16
  }
  BB14 {
    _36 <- ();
    i_30 <- ([#"../CreuSAT/src/decision.rs" 258 12 258 18] i_30 + (1 : usize));
    _7 <- ();
    goto BB9
  }
  BB15 {
    _31 <- ();
    _0 <- Core_Option_Option_Type.Core_Option_Option_None_Type;
    goto BB17
  }
  BB16 {
    goto BB17
  }
  BB17 {
    return _0
  }
  
end
module CreuSat_Formula_Impl1_IndexMut_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use mach.int.Int32
  use prelude.UIntSize
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model_Interface as Model1
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val index_mut [@cfg:stackify] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (ix : usize) : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    requires {[#"../CreuSAT/src/formula.rs" 43 15 43 36] UInt64.to_int ix < Seq.length (let (a, _) = Model0.model self in a)}
    ensures { [#"../CreuSAT/src/formula.rs" 44 14 44 40] Seq.get (let (a, _) = Model1.model ( * self) in a) (UInt64.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/formula.rs" 45 14 45 40] Seq.get (let (a, _) = Model1.model ( ^ self) in a) (UInt64.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/formula.rs" 46 4 46 107] forall i : (int) . 0 <= i /\ i <> UInt64.to_int ix /\ i < Seq.length (let (a, _) = Model0.model self in a) -> Seq.get (let (a, _) = Model0.model self in a) i = Seq.get (let (a, _) = Model1.model ( ^ self) in a) i }
    ensures { [#"../CreuSAT/src/formula.rs" 47 14 47 50] Seq.length (let (a, _) = Model1.model ( ^ self) in a) = Seq.length (let (a, _) = Model1.model ( * self) in a) }
    
end
module CreuSat_Formula_Impl1_IndexMut
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use mach.int.Int32
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  let rec cfg index_mut [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 48 4 48 53] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (ix : usize) : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    requires {[#"../CreuSAT/src/formula.rs" 43 15 43 36] UInt64.to_int ix < Seq.length (let (a, _) = Model0.model self in a)}
    ensures { [#"../CreuSAT/src/formula.rs" 44 14 44 40] Seq.get (let (a, _) = Model1.model ( * self) in a) (UInt64.to_int ix) =  * result }
    ensures { [#"../CreuSAT/src/formula.rs" 45 14 45 40] Seq.get (let (a, _) = Model1.model ( ^ self) in a) (UInt64.to_int ix) =  ^ result }
    ensures { [#"../CreuSAT/src/formula.rs" 46 4 46 107] forall i : (int) . 0 <= i /\ i <> UInt64.to_int ix /\ i < Seq.length (let (a, _) = Model0.model self in a) -> Seq.get (let (a, _) = Model0.model self in a) i = Seq.get (let (a, _) = Model1.model ( ^ self) in a) i }
    ensures { [#"../CreuSAT/src/formula.rs" 47 14 47 50] Seq.length (let (a, _) = Model1.model ( ^ self) in a) = Seq.length (let (a, _) = Model1.model ( * self) in a) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var ix_2 : usize;
  var _3 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _4 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _5 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _6 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _7 : usize;
  {
    self_1 <- self;
    ix_2 <- ix;
    goto BB0
  }
  BB0 {
    _6 <- borrow_mut (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type a b =  * self_1 in CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type ( ^ _6) b) };
    assume { Resolve0.resolve self_1 };
    _7 <- ix_2;
    _5 <- ([#"../CreuSAT/src/formula.rs" 54 13 54 29] IndexMut0.index_mut _6 _7);
    goto BB1
  }
  BB1 {
    _4 <- borrow_mut ( * _5);
    _5 <- { _5 with current = ( ^ _4) };
    assume { Resolve1.resolve _5 };
    _3 <- borrow_mut ( * _4);
    _4 <- { _4 with current = ( ^ _3) };
    assume { Resolve1.resolve _4 };
    _0 <- borrow_mut ( * _3);
    _3 <- { _3 with current = ( ^ _0) };
    assume { Resolve1.resolve _3 };
    return _0
  }
  
end
module CreuSat_Solver_SatResult_Type
  use mach.int.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  type creusat_solver_satresult_type  =
    | CreuSat_Solver_SatResult_Sat_Type (Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
    | CreuSat_Solver_SatResult_Unsat_Type
    | CreuSat_Solver_SatResult_Unknown_Type
    | CreuSat_Solver_SatResult_Err_Type
    
end
module CreuSat_Formula_Impl2_CheckFormulaInvariant_Interface
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use prelude.Borrow
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Clause_Clause_Type
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Interface as FormulaSatInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  use CreuSat_Solver_SatResult_Type
  val check_formula_invariant [@cfg:stackify] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type
    ensures { [#"../CreuSAT/src/formula.rs" 60 14 65 5] match (result) with
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type assn -> FormulaSatInner0.formula_sat_inner (Model0.model self) (Model1.model assn)
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type -> NotSatisfiable0.not_satisfiable self
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unknown_Type -> Invariant0.invariant' self /\ 0 < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self) /\ UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self) < div 18446744073709551615 2
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Err_Type -> true
      end }
    
end
module CreuSat_Formula_Impl2_CheckFormulaInvariant
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use prelude.Borrow
  use seq.Seq
  use prelude.UInt8
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant2.invariant'
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant1 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant1.invariant',
  function Model0.model = Model3.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant1.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model4 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model4.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model4.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model3.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model4.model
  use CreuSat_Solver_SatResult_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy2
  clone CreusotContracts_Logic_Model_Impl0_Model as Model6 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model3.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreuSat_Clause_Impl3_Len_Interface as Len1 with function Model0.model = Model6.model
  clone CreuSat_Clause_Impl3_CheckClauseInvariant_Interface as CheckClauseInvariant0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone Alloc_Vec_Impl0_New_Interface as New0 with type t = uint8, function Model0.model = Model1.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  let rec cfg check_formula_invariant [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 66 4 66 54] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type
    ensures { [#"../CreuSAT/src/formula.rs" 60 14 65 5] match (result) with
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type assn -> FormulaSatInner0.formula_sat_inner (Model0.model self) (Model1.model assn)
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type -> NotSatisfiable0.not_satisfiable self
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unknown_Type -> Invariant0.invariant' self /\ 0 < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self) /\ UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self) < div 18446744073709551615 2
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Err_Type -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
  var self_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _2 : ();
  var _3 : bool;
  var _4 : usize;
  var _5 : usize;
  var _6 : bool;
  var _7 : ();
  var _8 : ();
  var _9 : bool;
  var _10 : usize;
  var _11 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _12 : ();
  var _13 : Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _14 : ();
  var _15 : bool;
  var _16 : usize;
  var _17 : ();
  var i_18 : usize;
  var _19 : ();
  var _20 : ();
  var _21 : bool;
  var _22 : usize;
  var _23 : usize;
  var _24 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _25 : ();
  var _26 : bool;
  var _27 : bool;
  var _28 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _29 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _30 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _31 : usize;
  var _32 : usize;
  var _33 : ();
  var _34 : ();
  var _35 : bool;
  var _36 : usize;
  var _37 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _38 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _39 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _40 : usize;
  var _41 : ();
  var _42 : ();
  var _43 : ();
  var _44 : ();
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _4 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self_1;
    _6 <- ([#"../CreuSAT/src/formula.rs" 67 28 67 42] (2 : usize) = (0 : usize));
    assert { not _6 };
    goto BB1
  }
  BB1 {
    _5 <- ([#"../CreuSAT/src/formula.rs" 67 28 67 42] (18446744073709551615 : usize) / (2 : usize));
    _3 <- ([#"../CreuSAT/src/formula.rs" 67 11 67 42] _4 >= _5);
    switch (_3)
      | False -> goto BB3
      | _ -> goto BB2
      end
  }
  BB2 {
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Err_Type;
    goto BB24
  }
  BB3 {
    _2 <- ();
    _11 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self_1;
    _10 <- ([#"../CreuSAT/src/formula.rs" 70 11 70 29] Len0.len _11);
    goto BB4
  }
  BB4 {
    _9 <- ([#"../CreuSAT/src/formula.rs" 70 11 70 34] _10 = (0 : usize));
    switch (_9)
      | False -> goto BB8
      | _ -> goto BB5
      end
  }
  BB5 {
    _13 <- ([#"../CreuSAT/src/formula.rs" 71 34 71 44] New0.new ());
    goto BB6
  }
  BB6 {
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type _13;
    goto BB7
  }
  BB7 {
    goto BB24
  }
  BB8 {
    _8 <- ();
    _16 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self_1;
    _15 <- ([#"../CreuSAT/src/formula.rs" 73 11 73 29] _16 = (0 : usize));
    switch (_15)
      | False -> goto BB10
      | _ -> goto BB9
      end
  }
  BB9 {
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Err_Type;
    goto BB24
  }
  BB10 {
    _14 <- ();
    i_18 <- (0 : usize);
    goto BB11
  }
  BB11 {
    invariant inv { [#"../CreuSAT/src/formula.rs" 77 8 77 107] forall j : (int) . 0 <= j /\ j < UInt64.to_int i_18 -> Invariant1.invariant' (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self_1)) j) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self_1)) };
    invariant clause_len { [#"../CreuSAT/src/formula.rs" 77 8 77 107] forall j : (int) . 0 <= j /\ j < UInt64.to_int i_18 -> Seq.length (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self_1)) j)) > 0 };
    _22 <- i_18;
    _24 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self_1;
    _23 <- ([#"../CreuSAT/src/formula.rs" 79 18 79 36] Len0.len _24);
    goto BB12
  }
  BB12 {
    _21 <- ([#"../CreuSAT/src/formula.rs" 79 14 79 36] _22 < _23);
    switch (_21)
      | False -> goto BB22
      | _ -> goto BB13
      end
  }
  BB13 {
    _30 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self_1;
    _31 <- i_18;
    _29 <- ([#"../CreuSAT/src/formula.rs" 80 16 80 31] Index0.index _30 _31);
    goto BB14
  }
  BB14 {
    _28 <- _29;
    _32 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self_1;
    _27 <- ([#"../CreuSAT/src/formula.rs" 80 16 80 69] CheckClauseInvariant0.check_clause_invariant _28 _32);
    goto BB15
  }
  BB15 {
    _26 <- not _27;
    switch (_26)
      | False -> goto BB17
      | _ -> goto BB16
      end
  }
  BB16 {
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Err_Type;
    goto BB23
  }
  BB17 {
    _25 <- ();
    _39 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self_1;
    _40 <- i_18;
    _38 <- ([#"../CreuSAT/src/formula.rs" 83 15 83 30] Index0.index _39 _40);
    goto BB18
  }
  BB18 {
    _37 <- _38;
    _36 <- ([#"../CreuSAT/src/formula.rs" 83 15 83 36] Len1.len _37);
    goto BB19
  }
  BB19 {
    _35 <- ([#"../CreuSAT/src/formula.rs" 83 15 83 41] _36 = (0 : usize));
    switch (_35)
      | False -> goto BB21
      | _ -> goto BB20
      end
  }
  BB20 {
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type;
    goto BB23
  }
  BB21 {
    _34 <- ();
    i_18 <- ([#"../CreuSAT/src/formula.rs" 86 12 86 18] i_18 + (1 : usize));
    _20 <- ();
    goto BB11
  }
  BB22 {
    _19 <- ();
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unknown_Type;
    goto BB24
  }
  BB23 {
    goto BB24
  }
  BB24 {
    return _0
  }
  
end
module CreuSat_Logic_LogicClause_Impl2_Sat_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  predicate sat (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicClause_Impl2_Sat
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate sat [#"../CreuSAT/src/logic/logic_clause.rs" 166 4 166 44] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 168 12 168 30] SatInner0.sat_inner self (Model0.model a)
end
module CreuSat_Lit_Impl1_LitSat_Interface
  use seq.Seq
  use prelude.Borrow
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val lit_sat [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/lit.rs" 53 15 53 41] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 54 14 54 36] result = Sat0.sat self a }
    
end
module CreuSat_Lit_Impl1_LitSat
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  use prelude.UIntSize
  clone CreuSat_Assignments_Impl0_Index_Interface as Index1 with function Model0.model = Model0.model
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Lit_Impl1_IsPositive_Interface as IsPositive0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  let rec cfg lit_sat [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 55 4 55 49] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/lit.rs" 53 15 53 41] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 54 14 54 36] result = Sat0.sat self a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var a_2 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _3 : bool;
  var _4 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _5 : uint8;
  var _6 : uint8;
  var _7 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _8 : usize;
  var _9 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _10 : uint8;
  var _11 : uint8;
  var _12 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _13 : usize;
  var _14 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    _4 <- self_1;
    _3 <- ([#"../CreuSAT/src/lit.rs" 56 14 56 32] IsPositive0.is_positive _4);
    goto BB1
  }
  BB1 {
    switch (_3)
      | False -> goto BB2
      | _ -> goto BB3
      end
  }
  BB2 {
    _12 <- a_2;
    _14 <- self_1;
    _13 <- ([#"../CreuSAT/src/lit.rs" 58 24 58 36] Index0.index _14);
    goto BB6
  }
  BB3 {
    _7 <- a_2;
    _9 <- self_1;
    _8 <- ([#"../CreuSAT/src/lit.rs" 57 23 57 35] Index0.index _9);
    goto BB4
  }
  BB4 {
    _6 <- ([#"../CreuSAT/src/lit.rs" 57 21 57 36] Index1.index _7 _8);
    goto BB5
  }
  BB5 {
    _5 <- _6;
    _0 <- ([#"../CreuSAT/src/lit.rs" 57 20 57 42] _5 = (1 : uint8));
    goto BB8
  }
  BB6 {
    _11 <- ([#"../CreuSAT/src/lit.rs" 58 22 58 37] Index1.index _12 _13);
    goto BB7
  }
  BB7 {
    _10 <- _11;
    _0 <- ([#"../CreuSAT/src/lit.rs" 58 21 58 43] _10 = (0 : uint8));
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Formula_Impl2_IsClauseSat_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicClause_Impl2_Sat_Interface as Sat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val is_clause_sat [@cfg:stackify] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (idx : usize) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/formula.rs" 92 15 92 31] Invariant0.invariant' self}
    requires {[#"../CreuSAT/src/formula.rs" 93 15 93 33] Invariant1.invariant' a self}
    requires {[#"../CreuSAT/src/formula.rs" 94 15 94 43] UInt64.to_int idx < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self))}
    ensures { [#"../CreuSAT/src/formula.rs" 95 14 95 53] result = Sat0.sat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self)) (UInt64.to_int idx)) a }
    
end
module CreuSat_Formula_Impl2_IsClauseSat
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Borrow
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model4 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model4.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model4.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat1 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreusotContracts_Logic_Model_Impl0_Model as Model1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl2_Sat as Sat0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model2.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy2
  clone CreusotContracts_Logic_Model_Impl0_Model as Model7 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model3.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreuSat_Lit_Impl1_LitSat_Interface as LitSat0 with function Model0.model = Model7.model,
  predicate Invariant0.invariant' = Invariant3.invariant', predicate Sat0.sat = Sat1.sat
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model1.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len0 with function Model0.model = Model1.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  let rec cfg is_clause_sat [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 96 4 96 68] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (idx : usize) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/formula.rs" 92 15 92 31] Invariant0.invariant' self}
    requires {[#"../CreuSAT/src/formula.rs" 93 15 93 33] Invariant1.invariant' a self}
    requires {[#"../CreuSAT/src/formula.rs" 94 15 94 43] UInt64.to_int idx < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self))}
    ensures { [#"../CreuSAT/src/formula.rs" 95 14 95 53] result = Sat0.sat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self)) (UInt64.to_int idx)) a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var idx_2 : usize;
  var a_3 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var clause_4 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _5 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _6 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _7 : usize;
  var i_8 : usize;
  var _9 : ();
  var _10 : ();
  var _11 : bool;
  var _12 : usize;
  var _13 : usize;
  var _14 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _15 : ();
  var _16 : bool;
  var _17 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _18 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _19 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _20 : usize;
  var _21 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _22 : ();
  var _23 : ();
  var _24 : ();
  var _25 : ();
  {
    self_1 <- self;
    idx_2 <- idx;
    a_3 <- a;
    goto BB0
  }
  BB0 {
    _6 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self_1;
    _7 <- idx_2;
    _5 <- ([#"../CreuSAT/src/formula.rs" 97 22 97 39] Index0.index _6 _7);
    goto BB1
  }
  BB1 {
    clause_4 <- _5;
    i_8 <- (0 : usize);
    goto BB2
  }
  BB2 {
    invariant previous_not_sat { [#"../CreuSAT/src/formula.rs" 99 8 99 97] forall j : (int) . 0 <= j /\ j < UInt64.to_int i_8 -> not Sat1.sat (Seq.get (Model1.model clause_4) j) a_3 };
    _12 <- i_8;
    _14 <- clause_4;
    _13 <- ([#"../CreuSAT/src/formula.rs" 100 18 100 30] Len0.len _14);
    goto BB3
  }
  BB3 {
    _11 <- ([#"../CreuSAT/src/formula.rs" 100 14 100 30] _12 < _13);
    switch (_11)
      | False -> goto BB9
      | _ -> goto BB4
      end
  }
  BB4 {
    _19 <- clause_4;
    _20 <- i_8;
    _18 <- ([#"../CreuSAT/src/formula.rs" 101 15 101 24] Index1.index _19 _20);
    goto BB5
  }
  BB5 {
    _17 <- _18;
    _21 <- a_3;
    _16 <- ([#"../CreuSAT/src/formula.rs" 101 15 101 35] LitSat0.lit_sat _17 _21);
    goto BB6
  }
  BB6 {
    switch (_16)
      | False -> goto BB8
      | _ -> goto BB7
      end
  }
  BB7 {
    _0 <- true;
    goto BB10
  }
  BB8 {
    _15 <- ();
    i_8 <- ([#"../CreuSAT/src/formula.rs" 104 12 104 18] i_8 + (1 : usize));
    _10 <- ();
    goto BB2
  }
  BB9 {
    _9 <- ();
    _0 <- false;
    goto BB10
  }
  BB10 {
    return _0
  }
  
end
module CreuSat_Watches_Watcher_Type
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  type creusat_watches_watcher_type  =
    | CreuSat_Watches_Watcher_Type usize (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
    
  let function creusat_watches_watcher_type_Watcher_cref (self : creusat_watches_watcher_type) : usize
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Watches_Watcher_Type a _ -> a
      end
  let function creusat_watches_watcher_type_Watcher_blocker (self : creusat_watches_watcher_type) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Watches_Watcher_Type _ a -> a
      end
end
module CreuSat_Watches_Watches_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  type creusat_watches_watches_type  =
    | CreuSat_Watches_Watches_Type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
    
  let function creusat_watches_watches_type_Watches_watches (self : creusat_watches_watches_type) : Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | CreuSat_Watches_Watches_Type a -> a
      end
end
module CreuSat_Logic_LogicWatches_WatchesInvariantInternal_Interface
  use seq.Seq
  use mach.int.Int
  use CreuSat_Formula_Formula_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  predicate watches_invariant_internal (w : Seq.seq (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) (n : int) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicWatches_WatchesInvariantInternal
  use seq.Seq
  use mach.int.Int
  use CreuSat_Formula_Formula_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  use mach.int.Int32
  use mach.int.UInt64
  use CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model2
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate watches_invariant_internal [#"../CreuSAT/src/logic/logic_watches.rs" 11 0 11 83] (w : Seq.seq (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) (n : int) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 12 4 20 5] 2 * n = Seq.length w /\ (forall i : (int) . 0 <= i /\ i < Seq.length w -> (forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model (Seq.get w i)) -> UInt64.to_int (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_cref (Seq.get (Model0.model (Seq.get w i)) j)) < Seq.length (Model1.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) /\ Seq.length (Model2.model (Seq.get (Model1.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_cref (Seq.get (Model0.model (Seq.get w i)) j))))) > 1 /\ IndexLogic0.index_logic (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_blocker (Seq.get (Model0.model (Seq.get w i)) j)) < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)))
end
module CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watches_Type
  predicate invariant' (self : CreuSat_Watches_Watches_Type.creusat_watches_watches_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicWatches_Impl0_Invariant
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watches_Type
  use mach.int.UInt64
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal_Interface as WatchesInvariantInternal0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate invariant' [#"../CreuSAT/src/logic/logic_watches.rs" 67 4 67 46] (self : CreuSat_Watches_Watches_Type.creusat_watches_watches_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 69 12 69 69] WatchesInvariantInternal0.watches_invariant_internal (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches self)) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) f
end
module CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  predicate sat_inner (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicFormula_Impl1_SatInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Interface as SatInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 105 4 105 57] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 106 8 109 9] forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self)) -> SatInner0.sat_inner (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self)) i) a
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete_Interface
  use CreuSat_Formula_Formula_Type
  predicate eventually_sat_complete (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete
  use CreuSat_Formula_Formula_Type
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use mach.int.UInt64
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  predicate eventually_sat_complete [#"../CreuSAT/src/logic/logic_formula.rs" 54 4 54 48] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 55 8 57 9] exists a2 : (Seq.seq uint8) . Seq.length a2 = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self) /\ CompleteInner0.complete_inner a2 /\ SatInner0.sat_inner self a2
end
module CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface
  use CreuSat_Formula_Formula_Type
  predicate equisat (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (o : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicFormula_Impl1_Equisat
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete_Interface as EventuallySatComplete0
  predicate equisat [#"../CreuSAT/src/logic/logic_formula.rs" 60 4 60 44] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (o : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 61 8 61 69] EventuallySatComplete0.eventually_sat_complete self = EventuallySatComplete0.eventually_sat_complete o
end
module CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Interface
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  function to_neg_watchidx_logic [@inline:trivial] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : int
end
module CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  function to_neg_watchidx_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 39 4 39 45] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : int
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 40 8 40 91] IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      1
    else
      0
    )
end
module CreuSat_Lit_Impl1_ToNegWatchidx_Interface
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use mach.int.UInt64
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Interface as ToNegWatchidxLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  val to_neg_watchidx [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : usize
    requires {[#"../CreuSAT/src/lit.rs" 99 15 99 49] IndexLogic0.index_logic self < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/lit.rs" 100 14 100 53] UInt64.to_int result = ToNegWatchidxLogic0.to_neg_watchidx_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 101 14 101 94] UInt64.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      1
    else
      0
    ) }
    
end
module CreuSat_Lit_Impl1_ToNegWatchidx
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use mach.int.UInt64
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Lit_Impl1_IsPositive_Interface as IsPositive0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg to_neg_watchidx [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 102 4 102 41] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : usize
    requires {[#"../CreuSAT/src/lit.rs" 99 15 99 49] IndexLogic0.index_logic self < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/lit.rs" 100 14 100 53] UInt64.to_int result = ToNegWatchidxLogic0.to_neg_watchidx_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 101 14 101 94] UInt64.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      1
    else
      0
    ) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _2 : usize;
  var _3 : usize;
  var _4 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _5 : usize;
  var _6 : bool;
  var _7 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _4 <- self_1;
    _3 <- ([#"../CreuSAT/src/lit.rs" 103 8 103 20] Index0.index _4);
    goto BB1
  }
  BB1 {
    _2 <- ([#"../CreuSAT/src/lit.rs" 103 8 103 24] _3 * (2 : usize));
    _7 <- self_1;
    _6 <- ([#"../CreuSAT/src/lit.rs" 103 30 103 48] IsPositive0.is_positive _7);
    goto BB2
  }
  BB2 {
    switch (_6)
      | False -> goto BB4
      | _ -> goto BB3
      end
  }
  BB3 {
    _5 <- (1 : usize);
    goto BB5
  }
  BB4 {
    _5 <- (0 : usize);
    goto BB5
  }
  BB5 {
    _0 <- ([#"../CreuSAT/src/lit.rs" 103 8 103 65] _2 + _5);
    return _0
  }
  
end
module CreuSat_Watches_Impl0_AddWatcher_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Lit_Lit_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model2
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Interface as ToNegWatchidxLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  val add_watcher [@cfg:stackify] (self : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (cref : usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (blocker : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : ()
    requires {[#"../CreuSAT/src/watches.rs" 105 4 105 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/watches.rs" 106 15 106 42] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f))}
    requires {[#"../CreuSAT/src/watches.rs" 107 15 107 48] IndexLogic0.index_logic lit < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/watches.rs" 108 15 108 51] IndexLogic0.index_logic blocker < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    requires {[#"../CreuSAT/src/watches.rs" 109 15 109 66] ToNegWatchidxLogic0.to_neg_watchidx_logic lit < Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 110 15 110 48] Seq.length (Model2.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) > 1}
    ensures { [#"../CreuSAT/src/watches.rs" 105 4 105 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/watches.rs" 111 14 111 63] Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self))) = Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( ^ self))) }
    
end
module CreuSat_Watches_Impl0_AddWatcher
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Lit_Lit_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model2 with function Model0.model = Model3.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model4.model,
  function Model1.model = Model0.model, function Model2.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Watches_Watches_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model4.model
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_ToNegWatchidx_Interface as ToNegWatchidx0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function ToNegWatchidxLogic0.to_neg_watchidx_logic = ToNegWatchidxLogic0.to_neg_watchidx_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  let rec cfg add_watcher [@cfg:stackify] [#"../CreuSAT/src/watches.rs" 112 4 112 84] (self : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (cref : usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (blocker : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : ()
    requires {[#"../CreuSAT/src/watches.rs" 105 4 105 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/watches.rs" 106 15 106 42] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f))}
    requires {[#"../CreuSAT/src/watches.rs" 107 15 107 48] IndexLogic0.index_logic lit < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/watches.rs" 108 15 108 51] IndexLogic0.index_logic blocker < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    requires {[#"../CreuSAT/src/watches.rs" 109 15 109 66] ToNegWatchidxLogic0.to_neg_watchidx_logic lit < Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 110 15 110 48] Seq.length (Model2.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) > 1}
    ensures { [#"../CreuSAT/src/watches.rs" 105 4 105 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/watches.rs" 111 14 111 63] Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self))) = Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var lit_2 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var cref_3 : usize;
  var _f_4 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var blocker_5 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _6 : ();
  var _7 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _8 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _9 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _10 : usize;
  var _11 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _12 : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type;
  var _13 : usize;
  var _14 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    lit_2 <- lit;
    cref_3 <- cref;
    _f_4 <- _f;
    blocker_5 <- blocker;
    goto BB0
  }
  BB0 {
    _9 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * self_1 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _9)) };
    assume { Resolve0.resolve self_1 };
    _11 <- lit_2;
    _10 <- ([#"../CreuSAT/src/watches.rs" 113 21 113 42] ToNegWatchidx0.to_neg_watchidx _11);
    goto BB1
  }
  BB1 {
    _8 <- ([#"../CreuSAT/src/watches.rs" 113 8 113 43] IndexMut0.index_mut _9 _10);
    goto BB2
  }
  BB2 {
    _7 <- borrow_mut ( * _8);
    _8 <- { _8 with current = ( ^ _7) };
    _13 <- cref_3;
    _14 <- blocker_5;
    _12 <- CreuSat_Watches_Watcher_Type.CreuSat_Watches_Watcher_Type _13 _14;
    _6 <- ([#"../CreuSAT/src/watches.rs" 113 8 113 75] Push0.push _7 _12);
    goto BB3
  }
  BB3 {
    assume { Resolve1.resolve _8 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Formula_Impl2_AddClause_Interface
  use prelude.Borrow
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val add_clause [@cfg:stackify] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (clause : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (_t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : usize
    requires {[#"../CreuSAT/src/formula.rs" 110 4 110 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 111 4 111 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 112 4 112 51] Invariant2.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 113 15 113 35] Seq.length (Model0.model clause) >= 2}
    requires {[#"../CreuSAT/src/formula.rs" 114 15 114 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/formula.rs" 117 15 117 47] Invariant3.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 118 15 118 53] EquisatExtensionInner0.equisat_extension_inner clause (Model1.model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 110 4 110 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 111 4 111 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 112 4 112 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 119 14 119 49] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 120 14 120 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 121 14 121 46] UInt64.to_int result = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 122 14 122 51] Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) (UInt64.to_int result) = clause }
    ensures { [#"../CreuSAT/src/formula.rs" 123 14 123 67] Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) }
    
end
module CreuSat_Formula_Impl2_AddClause
  use prelude.Borrow
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model0 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model2.model,
  function Model1.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model10.model,
  function Model1.model = Model2.model, function Model2.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model0.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model0.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model4 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model0.model
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreusotContracts_Logic_Model_Impl1_Model as Model1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model4.model
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model7.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model3.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model4.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model0.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreuSat_Watches_Impl0_AddWatcher_Interface as AddWatcher0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model2.model, function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function ToNegWatchidxLogic0.to_neg_watchidx_logic = ToNegWatchidxLogic0.to_neg_watchidx_logic,
  function Model1.model = Model7.model, function Model2.model = Model0.model
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with function Model0.model = Model11.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  let rec cfg add_clause [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 124 4 124 92] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (clause : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (_t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : usize
    requires {[#"../CreuSAT/src/formula.rs" 110 4 110 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 111 4 111 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 112 4 112 51] Invariant2.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 113 15 113 35] Seq.length (Model0.model clause) >= 2}
    requires {[#"../CreuSAT/src/formula.rs" 114 15 114 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/formula.rs" 117 15 117 47] Invariant3.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 118 15 118 53] EquisatExtensionInner0.equisat_extension_inner clause (Model1.model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 110 4 110 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 111 4 111 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 112 4 112 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 119 14 119 49] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 120 14 120 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 121 14 121 46] UInt64.to_int result = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 122 14 122 51] Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) (UInt64.to_int result) = clause }
    ensures { [#"../CreuSAT/src/formula.rs" 123 14 123 67] Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var clause_2 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _t_4 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  ghost var old_self_5 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _6 : ();
  var cref_7 : usize;
  var _8 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var first_lit_9 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _10 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _11 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var second_lit_12 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _13 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _14 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _15 : ();
  var _16 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _17 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _18 : ();
  var _19 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _20 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _21 : usize;
  var _22 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _23 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _24 : ();
  var _25 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _26 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _27 : usize;
  var _28 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _29 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _30 : ();
  var _31 : ();
  var _32 : ();
  {
    self_1 <- self;
    clause_2 <- clause;
    watches_3 <- watches;
    _t_4 <- _t;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    _6 <- ();
    old_self_5 <- ghost ([#"../CreuSAT/src/formula.rs" 125 44 125 59] self_1);
    goto BB5
  }
  BB5 {
    _8 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    cref_7 <- ([#"../CreuSAT/src/formula.rs" 126 19 126 37] Len0.len _8);
    goto BB6
  }
  BB6 {
    _11 <- clause_2;
    _10 <- ([#"../CreuSAT/src/formula.rs" 131 24 131 33] Index0.index _11 (0 : usize));
    goto BB7
  }
  BB7 {
    first_lit_9 <- _10;
    _14 <- clause_2;
    _13 <- ([#"../CreuSAT/src/formula.rs" 132 25 132 34] Index0.index _14 (1 : usize));
    goto BB8
  }
  BB8 {
    second_lit_12 <- _13;
    _16 <- borrow_mut (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type a b =  * self_1 in CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type ( ^ _16) b) };
    _17 <- clause_2;
    clause_2 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    _15 <- ([#"../CreuSAT/src/formula.rs" 133 8 133 33] Push0.push _16 _17);
    goto BB9
  }
  BB9 {
    _19 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _19) };
    _20 <- first_lit_9;
    _21 <- cref_7;
    _22 <-  * self_1;
    _23 <- second_lit_12;
    _18 <- ([#"../CreuSAT/src/formula.rs" 134 8 134 62] AddWatcher0.add_watcher _19 _20 _21 _22 _23);
    goto BB10
  }
  BB10 {
    _25 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _25) };
    _26 <- second_lit_12;
    _27 <- cref_7;
    _28 <-  * self_1;
    assume { Resolve0.resolve self_1 };
    _29 <- first_lit_9;
    _24 <- ([#"../CreuSAT/src/formula.rs" 135 8 135 62] AddWatcher0.add_watcher _25 _26 _27 _28 _29);
    goto BB11
  }
  BB11 {
    assume { Resolve1.resolve watches_3 };
    assert { [#"../CreuSAT/src/formula.rs" 136 22 136 48]  ^ old_self_5 =  ^ self_1 };
    _30 <- ();
    assert { [#"../CreuSAT/src/formula.rs" 138 22 138 45] Equisat0.equisat ( * old_self_5) ( * self_1) };
    _31 <- ();
    assert { [#"../CreuSAT/src/formula.rs" 139 22 139 55] TrailInvariant0.trail_invariant (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail _t_4)) ( * self_1) };
    _32 <- ();
    _0 <- cref_7;
    goto BB12
  }
  BB12 {
    return _0
  }
  
end
module CreuSat_Formula_Impl2_AddUnwatchedClause_Interface
  use prelude.Borrow
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val add_unwatched_clause [@cfg:stackify] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (clause : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (_t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : usize
    requires {[#"../CreuSAT/src/formula.rs" 144 4 144 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 145 4 145 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 146 4 146 51] Invariant2.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 147 15 147 35] Seq.length (Model0.model clause) >= 2}
    requires {[#"../CreuSAT/src/formula.rs" 148 15 148 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/formula.rs" 149 15 149 47] Invariant3.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 150 15 150 53] EquisatExtensionInner0.equisat_extension_inner clause (Model1.model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 144 4 144 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 145 4 145 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 146 4 146 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 151 14 151 49] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 152 14 152 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 153 14 153 46] UInt64.to_int result = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 154 14 154 51] Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) (UInt64.to_int result) = clause }
    ensures { [#"../CreuSAT/src/formula.rs" 155 14 155 67] Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) }
    
end
module CreuSat_Formula_Impl2_AddUnwatchedClause
  use prelude.Borrow
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model0 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model2.model,
  function Model1.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model10.model,
  function Model1.model = Model2.model, function Model2.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model0.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model0.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model0.model
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreusotContracts_Logic_Model_Impl1_Model as Model1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model3.model
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model7.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model3.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  let rec cfg add_unwatched_clause [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 156 4 156 102] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (clause : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (_t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : usize
    requires {[#"../CreuSAT/src/formula.rs" 144 4 144 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 145 4 145 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 146 4 146 51] Invariant2.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 147 15 147 35] Seq.length (Model0.model clause) >= 2}
    requires {[#"../CreuSAT/src/formula.rs" 148 15 148 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/formula.rs" 149 15 149 47] Invariant3.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 150 15 150 53] EquisatExtensionInner0.equisat_extension_inner clause (Model1.model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 144 4 144 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 145 4 145 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 146 4 146 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 151 14 151 49] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 152 14 152 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 153 14 153 46] UInt64.to_int result = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 154 14 154 51] Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) (UInt64.to_int result) = clause }
    ensures { [#"../CreuSAT/src/formula.rs" 155 14 155 67] Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var clause_2 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _t_4 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  ghost var old_self_5 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _6 : ();
  var cref_7 : usize;
  var _8 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _9 : ();
  var _10 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _11 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  {
    self_1 <- self;
    clause_2 <- clause;
    watches_3 <- watches;
    _t_4 <- _t;
    goto BB0
  }
  BB0 {
    assume { Resolve0.resolve watches_3 };
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    _6 <- ();
    old_self_5 <- ghost ([#"../CreuSAT/src/formula.rs" 157 44 157 59] self_1);
    goto BB5
  }
  BB5 {
    _8 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    cref_7 <- ([#"../CreuSAT/src/formula.rs" 158 19 158 37] Len0.len _8);
    goto BB6
  }
  BB6 {
    _10 <- borrow_mut (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type a b =  * self_1 in CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type ( ^ _10) b) };
    _11 <- clause_2;
    clause_2 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    _9 <- ([#"../CreuSAT/src/formula.rs" 159 8 159 33] Push0.push _10 _11);
    goto BB7
  }
  BB7 {
    assume { Resolve1.resolve self_1 };
    _0 <- cref_7;
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Formula_Impl2_AddUnit_Interface
  use prelude.Borrow
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val add_unit [@cfg:stackify] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (clause : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (_t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : usize
    requires {[#"../CreuSAT/src/formula.rs" 164 4 164 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 165 4 165 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 166 15 166 35] Seq.length (Model0.model clause) = 1}
    requires {[#"../CreuSAT/src/formula.rs" 167 15 167 47] Invariant2.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 168 15 168 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/formula.rs" 169 15 169 59] VarsInRangeInner0.vars_in_range_inner (Model0.model clause) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 170 15 170 50] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model0.model clause)}
    requires {[#"../CreuSAT/src/formula.rs" 171 15 171 53] EquisatExtensionInner0.equisat_extension_inner clause (Model1.model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 164 4 164 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 165 4 165 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 172 14 172 49] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 174 4 175 53] forall i : (int) . 0 <= i /\ i < Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) -> Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) i = Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) i }
    ensures { [#"../CreuSAT/src/formula.rs" 176 14 176 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 177 14 177 46] UInt64.to_int result = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 178 14 178 55] Seq.length (Model0.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) (UInt64.to_int result))) = 1 }
    ensures { [#"../CreuSAT/src/formula.rs" 179 14 179 67] Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) }
    
end
module CreuSat_Formula_Impl2_AddUnit
  use prelude.Borrow
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model0 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with function Model0.model = Model2.model,
  function Model1.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model0.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model0.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model0.model
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreusotContracts_Logic_Model_Impl1_Model as Model1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model3.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model3.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  let rec cfg add_unit [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 180 4 180 67] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (clause : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (_t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : usize
    requires {[#"../CreuSAT/src/formula.rs" 164 4 164 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 165 4 165 40] Invariant1.invariant' _t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 166 15 166 35] Seq.length (Model0.model clause) = 1}
    requires {[#"../CreuSAT/src/formula.rs" 167 15 167 47] Invariant2.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 168 15 168 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/formula.rs" 169 15 169 59] VarsInRangeInner0.vars_in_range_inner (Model0.model clause) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)))}
    requires {[#"../CreuSAT/src/formula.rs" 170 15 170 50] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model0.model clause)}
    requires {[#"../CreuSAT/src/formula.rs" 171 15 171 53] EquisatExtensionInner0.equisat_extension_inner clause (Model1.model self)}
    ensures { [#"../CreuSAT/src/formula.rs" 164 4 164 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 165 4 165 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 172 14 172 49] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self)) }
    ensures { [#"../CreuSAT/src/formula.rs" 174 4 175 53] forall i : (int) . 0 <= i /\ i < Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) -> Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) i = Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) i }
    ensures { [#"../CreuSAT/src/formula.rs" 176 14 176 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 177 14 177 46] UInt64.to_int result = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) }
    ensures { [#"../CreuSAT/src/formula.rs" 178 14 178 55] Seq.length (Model0.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) (UInt64.to_int result))) = 1 }
    ensures { [#"../CreuSAT/src/formula.rs" 179 14 179 67] Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var clause_2 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _t_3 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  ghost var old_self_4 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _5 : ();
  var cref_6 : usize;
  var _7 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _8 : ();
  var _9 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _10 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  {
    self_1 <- self;
    clause_2 <- clause;
    _t_3 <- _t;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    _5 <- ();
    old_self_4 <- ghost ([#"../CreuSAT/src/formula.rs" 181 44 181 59] self_1);
    goto BB6
  }
  BB6 {
    _7 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    cref_6 <- ([#"../CreuSAT/src/formula.rs" 182 19 182 37] Len0.len _7);
    goto BB7
  }
  BB7 {
    _9 <- borrow_mut (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type a b =  * self_1 in CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type ( ^ _9) b) };
    _10 <- clause_2;
    clause_2 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    _8 <- ([#"../CreuSAT/src/formula.rs" 183 8 183 33] Push0.push _9 _10);
    goto BB8
  }
  BB8 {
    assume { Resolve0.resolve self_1 };
    _0 <- cref_6;
    goto BB9
  }
  BB9 {
    return _0
  }
  
end
module CreuSat_Logic_LogicFormula_Impl1_Sat_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  predicate sat (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicFormula_Impl1_Sat
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Interface as FormulaSatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicFormula_Impl0_Model_Interface as Model0
  predicate sat [#"../CreuSAT/src/logic/logic_formula.rs" 113 4 113 44] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 114 20 114 48] FormulaSatInner0.formula_sat_inner (Model0.model self) (Model1.model a)
end
module CreuSat_Formula_Impl2_IsSat_Interface
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val is_sat [@cfg:stackify] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/formula.rs" 188 15 188 31] Invariant0.invariant' self}
    requires {[#"../CreuSAT/src/formula.rs" 189 15 189 33] Invariant1.invariant' a self}
    ensures { [#"../CreuSAT/src/formula.rs" 190 14 190 36] result = Sat0.sat self a }
    
end
module CreuSat_Formula_Impl2_IsSat
  use prelude.Borrow
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model3.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model1 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicClause_Impl2_Sat as Sat1 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  function Model1.model = Model2.model,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model1.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.UIntSize
  clone CreuSat_Formula_Impl2_IsClauseSat_Interface as IsClauseSat0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', function Model0.model = Model0.model,
  predicate Sat0.sat = Sat1.sat, predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  let rec cfg is_sat [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 191 4 191 49] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/formula.rs" 188 15 188 31] Invariant0.invariant' self}
    requires {[#"../CreuSAT/src/formula.rs" 189 15 189 33] Invariant1.invariant' a self}
    ensures { [#"../CreuSAT/src/formula.rs" 190 14 190 36] result = Sat0.sat self a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var a_2 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var i_3 : usize;
  var _4 : ();
  var _5 : ();
  var _6 : bool;
  var _7 : usize;
  var _8 : usize;
  var _9 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _10 : ();
  var _11 : bool;
  var _12 : bool;
  var _13 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _14 : usize;
  var _15 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _16 : ();
  var _17 : ();
  var _18 : ();
  var _19 : ();
  {
    self_1 <- self;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    i_3 <- (0 : usize);
    goto BB1
  }
  BB1 {
    invariant prev { [#"../CreuSAT/src/formula.rs" 193 8 193 90] forall k : (int) . 0 <= k /\ k < UInt64.to_int i_3 -> Sat1.sat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self_1)) k) a_2 };
    _7 <- i_3;
    _9 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self_1;
    _8 <- ([#"../CreuSAT/src/formula.rs" 194 18 194 36] Len0.len _9);
    goto BB2
  }
  BB2 {
    _6 <- ([#"../CreuSAT/src/formula.rs" 194 14 194 36] _7 < _8);
    switch (_6)
      | False -> goto BB7
      | _ -> goto BB3
      end
  }
  BB3 {
    _13 <- self_1;
    _14 <- i_3;
    _15 <- a_2;
    _12 <- ([#"../CreuSAT/src/formula.rs" 195 16 195 40] IsClauseSat0.is_clause_sat _13 _14 _15);
    goto BB4
  }
  BB4 {
    _11 <- not _12;
    switch (_11)
      | False -> goto BB6
      | _ -> goto BB5
      end
  }
  BB5 {
    _0 <- false;
    goto BB8
  }
  BB6 {
    _10 <- ();
    i_3 <- ([#"../CreuSAT/src/formula.rs" 198 12 198 18] i_3 + (1 : usize));
    _5 <- ();
    goto BB1
  }
  BB7 {
    _4 <- ();
    _0 <- true;
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreuSat_Watches_Impl0_Unwatch_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  val unwatch [@cfg:stackify] (self : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (cref : usize) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : ()
    requires {[#"../CreuSAT/src/watches.rs" 155 4 155 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/watches.rs" 156 15 156 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/watches.rs" 157 15 157 46] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)}
    requires {[#"../CreuSAT/src/watches.rs" 158 15 158 28] Invariant1.invariant' f}
    requires {[#"../CreuSAT/src/watches.rs" 159 15 159 34] Invariant2.invariant' trail f}
    requires {[#"../CreuSAT/src/watches.rs" 160 15 160 41] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    requires {[#"../CreuSAT/src/watches.rs" 161 15 161 48] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))) >= 2}
    ensures { [#"../CreuSAT/src/watches.rs" 155 4 155 42] Invariant0.invariant' ( ^ self) f }
    
end
module CreuSat_Watches_Impl0_Unwatch
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model8.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model3.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model2.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  use prelude.Slice
  use prelude.IntSize
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model10 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  axiom .
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Logic_Model_Impl1_Model as Model11 with type t = seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model10.model
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  use Core_Option_Option_Type
  clone Alloc_Vec_Impl1_Pop_Interface as Pop0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model8.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  function Model0.model = Model11.model, function Model1.model = Model10.model
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model10.model,
  function Model1.model = Model8.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone Alloc_Vec_Impl16_Index_Interface as Index1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model8.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  type Output0.output = Output1.output
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model8.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_ToNegWatchidx_Interface as ToNegWatchidx0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function ToNegWatchidxLogic0.to_neg_watchidx_logic = ToNegWatchidxLogic0.to_neg_watchidx_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  let rec cfg unwatch [@cfg:stackify] [#"../CreuSAT/src/watches.rs" 162 4 162 80] (self : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (cref : usize) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : ()
    requires {[#"../CreuSAT/src/watches.rs" 155 4 155 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/watches.rs" 156 15 156 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/watches.rs" 157 15 157 46] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)}
    requires {[#"../CreuSAT/src/watches.rs" 158 15 158 28] Invariant1.invariant' f}
    requires {[#"../CreuSAT/src/watches.rs" 159 15 159 34] Invariant2.invariant' trail f}
    requires {[#"../CreuSAT/src/watches.rs" 160 15 160 41] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    requires {[#"../CreuSAT/src/watches.rs" 161 15 161 48] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))) >= 2}
    ensures { [#"../CreuSAT/src/watches.rs" 155 4 155 42] Invariant0.invariant' ( ^ self) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var f_2 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var trail_3 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var cref_4 : usize;
  var lit_5 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var watchidx_6 : usize;
  var _7 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var i_8 : usize;
  var _9 : ();
  var _10 : bool;
  var _11 : usize;
  var _12 : usize;
  var _13 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _14 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _15 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _16 : usize;
  var _17 : ();
  var _18 : bool;
  var _19 : usize;
  var _20 : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type;
  var _21 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _22 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _23 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _24 : usize;
  var _25 : usize;
  var _26 : usize;
  var _27 : ();
  var end'_28 : usize;
  var _29 : usize;
  var _30 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _31 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _32 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _33 : usize;
  var _34 : ();
  var _35 : borrowed (seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type));
  var _36 : borrowed (seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type));
  var _37 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _38 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _39 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _40 : usize;
  var _41 : usize;
  var _42 : usize;
  ghost var old_w_43 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _44 : ();
  var _45 : ();
  var _46 : Core_Option_Option_Type.core_option_option_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type);
  var _47 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _48 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _49 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _50 : usize;
  var _51 : isize;
  var w_52 : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type;
  var _53 : ();
  var _54 : ();
  var _55 : ();
  var _56 : ();
  var _57 : ();
  var _58 : ();
  {
    self_1 <- self;
    f_2 <- f;
    trail_3 <- trail;
    cref_4 <- cref;
    lit_5 <- lit;
    goto BB0
  }
  BB0 {
    _7 <- lit_5;
    watchidx_6 <- ([#"../CreuSAT/src/watches.rs" 163 23 163 44] ToNegWatchidx0.to_neg_watchidx _7);
    goto BB1
  }
  BB1 {
    i_8 <- (0 : usize);
    goto BB2
  }
  BB2 {
    invariant self_inv { [#"../CreuSAT/src/watches.rs" 165 30 165 48] Invariant0.invariant' ( * self_1) f_2 };
    _11 <- i_8;
    _15 <- CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1);
    _16 <- watchidx_6;
    _14 <- ([#"../CreuSAT/src/watches.rs" 166 18 166 40] Index0.index _15 _16);
    goto BB3
  }
  BB3 {
    _13 <- _14;
    _12 <- ([#"../CreuSAT/src/watches.rs" 166 18 166 46] Len0.len _13);
    goto BB4
  }
  BB4 {
    _10 <- ([#"../CreuSAT/src/watches.rs" 166 14 166 46] _11 < _12);
    switch (_10)
      | False -> goto BB21
      | _ -> goto BB5
      end
  }
  BB5 {
    _23 <- CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1);
    _24 <- watchidx_6;
    _22 <- ([#"../CreuSAT/src/watches.rs" 167 15 167 37] Index0.index _23 _24);
    goto BB6
  }
  BB6 {
    _21 <- _22;
    _25 <- i_8;
    _20 <- ([#"../CreuSAT/src/watches.rs" 167 15 167 40] Index1.index _21 _25);
    goto BB7
  }
  BB7 {
    _19 <- CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_cref _20;
    _26 <- cref_4;
    _18 <- ([#"../CreuSAT/src/watches.rs" 167 15 167 53] _19 = _26);
    switch (_18)
      | False -> goto BB20
      | _ -> goto BB8
      end
  }
  BB8 {
    _32 <- CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1);
    _33 <- watchidx_6;
    _31 <- ([#"../CreuSAT/src/watches.rs" 168 26 168 48] Index0.index _32 _33);
    goto BB9
  }
  BB9 {
    _30 <- _31;
    _29 <- ([#"../CreuSAT/src/watches.rs" 168 26 168 54] Len0.len _30);
    goto BB10
  }
  BB10 {
    end'_28 <- ([#"../CreuSAT/src/watches.rs" 168 26 168 58] _29 - (1 : usize));
    _39 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * self_1 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _39)) };
    _40 <- watchidx_6;
    _38 <- ([#"../CreuSAT/src/watches.rs" 169 16 169 38] IndexMut0.index_mut _39 _40);
    goto BB11
  }
  BB11 {
    _37 <- borrow_mut ( * _38);
    _38 <- { _38 with current = ( ^ _37) };
    assume { Resolve0.resolve _38 };
    _36 <- ([#"../CreuSAT/src/watches.rs" 169 16 169 51] DerefMut0.deref_mut _37);
    goto BB12
  }
  BB12 {
    _35 <- borrow_mut ( * _36);
    _36 <- { _36 with current = ( ^ _35) };
    _41 <- i_8;
    _42 <- end'_28;
    _34 <- ([#"../CreuSAT/src/watches.rs" 169 16 169 51] Swap0.swap _35 _41 _42);
    goto BB13
  }
  BB13 {
    assume { Resolve1.resolve _36 };
    _44 <- ();
    old_w_43 <- ghost ([#"../CreuSAT/src/watches.rs" 172 49 172 64] self_1);
    goto BB14
  }
  BB14 {
    _49 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * self_1 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _49)) };
    assume { Resolve2.resolve self_1 };
    _50 <- watchidx_6;
    _48 <- ([#"../CreuSAT/src/watches.rs" 173 22 173 44] IndexMut0.index_mut _49 _50);
    goto BB15
  }
  BB15 {
    _47 <- borrow_mut ( * _48);
    _48 <- { _48 with current = ( ^ _47) };
    _46 <- ([#"../CreuSAT/src/watches.rs" 173 22 173 50] Pop0.pop _47);
    goto BB16
  }
  BB16 {
    assume { Resolve0.resolve _48 };
    switch (_46)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB17
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB19
      end
  }
  BB17 {
    absurd
  }
  BB18 {
    absurd
  }
  BB19 {
    w_52 <- Core_Option_Option_Type.core_option_option_type_Some_0 _46;
    _46 <- (let Core_Option_Option_Type.Core_Option_Option_Some_Type a = _46 in Core_Option_Option_Type.Core_Option_Option_Some_Type (any CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type));
    assert { [#"../CreuSAT/src/watches.rs" 175 38 175 61]  ^ old_w_43 =  ^ self_1 };
    _53 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 176 38 176 56] Invariant0.invariant' ( * self_1) f_2 };
    _54 <- ();
    _45 <- ();
    _0 <- ();
    goto BB22
  }
  BB20 {
    _17 <- ();
    i_8 <- ([#"../CreuSAT/src/watches.rs" 182 12 182 18] i_8 + (1 : usize));
    _9 <- ();
    goto BB2
  }
  BB21 {
    assume { Resolve2.resolve self_1 };
    _0 <- ();
    goto BB22
  }
  BB22 {
    return _0
  }
  
end
module CreuSat_Formula_Impl2_DeleteClause_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  val delete_clause [@cfg:stackify] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (cref : usize) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : ()
    requires {[#"../CreuSAT/src/formula.rs" 204 4 204 51] Invariant0.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 205 4 205 40] Invariant1.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 206 4 206 42] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 207 15 207 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/formula.rs" 208 15 208 50] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) (UInt64.to_int cref))) > 1}
    requires {[#"../CreuSAT/src/formula.rs" 209 15 209 44] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self)))}
    ensures { [#"../CreuSAT/src/formula.rs" 204 4 204 51] Invariant0.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 205 4 205 40] Invariant1.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 206 4 206 42] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 210 14 210 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 211 14 211 47] CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self) }
    
end
module CreuSat_Formula_Impl2_DeleteClause
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model8.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model3.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model2.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model10 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreuSat_Watches_Impl0_Unwatch_Interface as Unwatch0 with predicate Invariant0.invariant' = Invariant0.invariant',
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate Invariant1.invariant' = Invariant1.invariant',
  predicate Invariant2.invariant' = Invariant2.invariant', function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model10.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  let rec cfg delete_clause [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 212 4 212 78] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (cref : usize) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : ()
    requires {[#"../CreuSAT/src/formula.rs" 204 4 204 51] Invariant0.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 205 4 205 40] Invariant1.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 206 4 206 42] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 207 15 207 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/formula.rs" 208 15 208 50] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self))) (UInt64.to_int cref))) > 1}
    requires {[#"../CreuSAT/src/formula.rs" 209 15 209 44] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self)))}
    ensures { [#"../CreuSAT/src/formula.rs" 204 4 204 51] Invariant0.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 205 4 205 40] Invariant1.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 206 4 206 42] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 210 14 210 33] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 211 14 211 47] CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var cref_2 : usize;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var t_4 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  ghost var old_f_5 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _6 : ();
  var _7 : ();
  var _8 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _9 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _10 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _11 : usize;
  var _12 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _13 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _14 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _15 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _16 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _17 : usize;
  var _18 : ();
  var _19 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _20 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _21 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _22 : usize;
  var _23 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _24 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _25 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _26 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _27 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _28 : usize;
  var _29 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _30 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _31 : usize;
  var _32 : ();
  var _33 : ();
  var _34 : ();
  {
    self_1 <- self;
    cref_2 <- cref;
    watches_3 <- watches;
    t_4 <- t;
    goto BB0
  }
  BB0 {
    _6 <- ();
    old_f_5 <- ghost ([#"../CreuSAT/src/formula.rs" 213 41 213 56] self_1);
    goto BB1
  }
  BB1 {
    _8 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _8) };
    _9 <-  * self_1;
    _10 <- t_4;
    _11 <- cref_2;
    _16 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    _17 <- cref_2;
    _15 <- ([#"../CreuSAT/src/formula.rs" 214 39 214 57] Index0.index _16 _17);
    goto BB2
  }
  BB2 {
    _14 <- _15;
    _13 <- ([#"../CreuSAT/src/formula.rs" 214 39 214 60] Index1.index _14 (0 : usize));
    goto BB3
  }
  BB3 {
    _12 <- _13;
    _7 <- ([#"../CreuSAT/src/formula.rs" 214 8 214 61] Unwatch0.unwatch _8 _9 _10 _11 _12);
    goto BB4
  }
  BB4 {
    _19 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _19) };
    _20 <-  * self_1;
    _21 <- t_4;
    _22 <- cref_2;
    _27 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    _28 <- cref_2;
    _26 <- ([#"../CreuSAT/src/formula.rs" 215 39 215 57] Index0.index _27 _28);
    goto BB5
  }
  BB5 {
    _25 <- _26;
    _24 <- ([#"../CreuSAT/src/formula.rs" 215 39 215 60] Index1.index _25 (1 : usize));
    goto BB6
  }
  BB6 {
    _23 <- _24;
    _18 <- ([#"../CreuSAT/src/formula.rs" 215 8 215 61] Unwatch0.unwatch _19 _20 _21 _22 _23);
    goto BB7
  }
  BB7 {
    assume { Resolve0.resolve watches_3 };
    _30 <- borrow_mut (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type a b =  * self_1 in CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type ( ^ _30) b) };
    assume { Resolve1.resolve self_1 };
    _31 <- cref_2;
    _29 <- ([#"../CreuSAT/src/formula.rs" 216 8 216 26] IndexMut0.index_mut _30 _31);
    goto BB8
  }
  BB8 {
    _29 <- { _29 with current = (let CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c d =  * _29 in CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type true b c d) };
    assume { Resolve2.resolve _29 };
    assert { [#"../CreuSAT/src/formula.rs" 217 8 218 74] forall i : (int) . 0 <= i /\ i < Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1))) (UInt64.to_int cref_2))) -> Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1))) (UInt64.to_int cref_2))) i = Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * old_f_5))) (UInt64.to_int cref_2))) i };
    _32 <- ();
    assert { [#"../CreuSAT/src/formula.rs" 219 22 219 42] Equisat0.equisat ( * old_f_5) ( * self_1) };
    _33 <- ();
    assert { [#"../CreuSAT/src/formula.rs" 220 22 220 45]  ^ self_1 =  ^ old_f_5 };
    _34 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Formula_Impl2_DeleteClauses_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val delete_clauses [@cfg:stackify] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : ()
    requires {[#"../CreuSAT/src/formula.rs" 225 4 225 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 226 4 226 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 227 4 227 42] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 228 15 228 33] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 229 15 229 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/formula.rs" 225 4 225 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 226 4 226 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 227 4 227 42] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 230 14 230 47] CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 231 14 231 33] Equisat0.equisat ( * self) ( ^ self) }
    
end
module CreuSat_Formula_Impl2_DeleteClauses
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model4 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model5.model,
  function Model1.model = Model6.model
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model5.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model5.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model7.model,
  function Model1.model = Model5.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model4.model
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model0.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Sat as Sat1 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model10 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model6.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreuSat_Formula_Impl2_DeleteClause_Interface as DeleteClause0 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Invariant1.invariant' = Invariant0.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function Model0.model = Model5.model, function Model1.model = Model6.model,
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Formula_Impl2_IsClauseSat_Interface as IsClauseSat0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant', function Model0.model = Model5.model,
  predicate Sat0.sat = Sat1.sat, predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Clause_Impl3_Len_Interface as Len1 with function Model0.model = Model10.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model5.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model5.model
  let rec cfg delete_clauses [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 232 4 232 70] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : ()
    requires {[#"../CreuSAT/src/formula.rs" 225 4 225 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 226 4 226 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 227 4 227 42] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 228 15 228 33] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 229 15 229 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/formula.rs" 225 4 225 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 226 4 226 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 227 4 227 42] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 230 14 230 47] CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 231 14 231 33] Equisat0.equisat ( * self) ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var watches_2 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var t_3 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  ghost var old_f_4 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _5 : ();
  ghost var old_w_6 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _7 : ();
  var i_8 : usize;
  var _9 : ();
  var _10 : bool;
  var _11 : usize;
  var _12 : usize;
  var _13 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _14 : ();
  var _15 : bool;
  var _16 : bool;
  var _17 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _18 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _19 : usize;
  var _20 : ();
  var _21 : bool;
  var _22 : bool;
  var _23 : usize;
  var _24 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _25 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _26 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _27 : usize;
  var _28 : bool;
  var _29 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _30 : usize;
  var _31 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _32 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _33 : ();
  var _34 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _35 : usize;
  var _36 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _37 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _38 : ();
  var _39 : ();
  var _40 : ();
  {
    self_1 <- self;
    watches_2 <- watches;
    t_3 <- t;
    goto BB0
  }
  BB0 {
    _5 <- ();
    old_f_4 <- ghost ([#"../CreuSAT/src/formula.rs" 233 41 233 56] self_1);
    goto BB1
  }
  BB1 {
    _7 <- ();
    old_w_6 <- ghost ([#"../CreuSAT/src/formula.rs" 234 41 234 59] watches_2);
    goto BB2
  }
  BB2 {
    i_8 <- (0 : usize);
    goto BB3
  }
  BB3 {
    invariant w_inv { [#"../CreuSAT/src/formula.rs" 237 27 237 51] Invariant1.invariant' ( * watches_2) ( * self_1) };
    invariant t_inv { [#"../CreuSAT/src/formula.rs" 238 27 238 45] Invariant2.invariant' t_3 ( * self_1) };
    invariant f_inv { [#"../CreuSAT/src/formula.rs" 239 27 239 43] Invariant0.invariant' ( * self_1) };
    invariant proph_w { [#"../CreuSAT/src/formula.rs" 240 29 240 55]  ^ watches_2 =  ^ old_w_6 };
    invariant proph_f { [#"../CreuSAT/src/formula.rs" 241 29 241 52]  ^ self_1 =  ^ old_f_4 };
    invariant num_vars_unch { [#"../CreuSAT/src/formula.rs" 242 35 242 68] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self_1)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * old_f_4)) };
    invariant equi { [#"../CreuSAT/src/formula.rs" 243 26 243 54] Equisat0.equisat ( * self_1) ( * old_f_4) };
    _11 <- i_8;
    _13 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    _12 <- ([#"../CreuSAT/src/formula.rs" 244 18 244 36] Len0.len _13);
    goto BB4
  }
  BB4 {
    _10 <- ([#"../CreuSAT/src/formula.rs" 244 14 244 36] _11 < _12);
    switch (_10)
      | False -> goto BB20
      | _ -> goto BB5
      end
  }
  BB5 {
    _18 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    _19 <- i_8;
    _17 <- ([#"../CreuSAT/src/formula.rs" 245 16 245 31] Index0.index _18 _19);
    goto BB6
  }
  BB6 {
    _16 <- CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_deleted _17;
    _15 <- not _16;
    switch (_15)
      | False -> goto BB18
      | _ -> goto BB7
      end
  }
  BB7 {
    assert { [#"../CreuSAT/src/formula.rs" 246 16 246 61] Invariant3.invariant' (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments t_3) ( * self_1) };
    _20 <- ();
    _26 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    _27 <- i_8;
    _25 <- ([#"../CreuSAT/src/formula.rs" 247 19 247 34] Index0.index _26 _27);
    goto BB11
  }
  BB8 {
    _21 <- false;
    goto BB10
  }
  BB9 {
    _29 <-  * self_1;
    _30 <- i_8;
    _32 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments t_3;
    _31 <- _32;
    _28 <- ([#"../CreuSAT/src/formula.rs" 247 48 247 85] IsClauseSat0.is_clause_sat _29 _30 _31);
    goto BB13
  }
  BB10 {
    switch (_21)
      | False -> goto BB16
      | _ -> goto BB14
      end
  }
  BB11 {
    _24 <- _25;
    _23 <- ([#"../CreuSAT/src/formula.rs" 247 19 247 40] Len1.len _24);
    goto BB12
  }
  BB12 {
    _22 <- ([#"../CreuSAT/src/formula.rs" 247 19 247 44] _23 > (1 : usize));
    switch (_22)
      | False -> goto BB8
      | _ -> goto BB9
      end
  }
  BB13 {
    _21 <- _28;
    _28 <- any bool;
    goto BB10
  }
  BB14 {
    _34 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _34) };
    _35 <- i_8;
    _36 <- borrow_mut ( * watches_2);
    watches_2 <- { watches_2 with current = ( ^ _36) };
    _37 <- t_3;
    _33 <- ([#"../CreuSAT/src/formula.rs" 248 20 248 53] DeleteClause0.delete_clause _34 _35 _36 _37);
    goto BB15
  }
  BB15 {
    _14 <- ();
    goto BB17
  }
  BB16 {
    _14 <- ();
    goto BB17
  }
  BB17 {
    goto BB19
  }
  BB18 {
    _14 <- ();
    goto BB19
  }
  BB19 {
    i_8 <- ([#"../CreuSAT/src/formula.rs" 251 12 251 18] i_8 + (1 : usize));
    _9 <- ();
    goto BB3
  }
  BB20 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve watches_2 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Formula_Impl2_SimplifyFormula_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val simplify_formula [@cfg:stackify] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : ()
    requires {[#"../CreuSAT/src/formula.rs" 258 4 258 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 259 4 259 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 261 15 261 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/formula.rs" 262 15 262 33] Invariant2.invariant' t ( * self)}
    ensures { [#"../CreuSAT/src/formula.rs" 258 4 258 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 259 4 259 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 263 14 263 32] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 264 14 264 47] CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 265 14 265 33] Equisat0.equisat ( * self) ( ^ self) }
    
end
module CreuSat_Formula_Impl2_SimplifyFormula
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model4 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model5.model,
  function Model1.model = Model6.model
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model5.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model5.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model7.model,
  function Model1.model = Model5.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model0.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreuSat_Formula_Impl2_DeleteClauses_Interface as DeleteClauses0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  let rec cfg simplify_formula [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 266 4 266 72] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) : ()
    requires {[#"../CreuSAT/src/formula.rs" 258 4 258 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 259 4 259 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 261 15 261 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/formula.rs" 262 15 262 33] Invariant2.invariant' t ( * self)}
    ensures { [#"../CreuSAT/src/formula.rs" 258 4 258 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 259 4 259 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 263 14 263 32] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 264 14 264 47] CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 265 14 265 33] Equisat0.equisat ( * self) ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var watches_2 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var t_3 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _4 : ();
  var _5 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _6 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _7 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  {
    self_1 <- self;
    watches_2 <- watches;
    t_3 <- t;
    goto BB0
  }
  BB0 {
    _5 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _5) };
    _6 <- borrow_mut ( * watches_2);
    watches_2 <- { watches_2 with current = ( ^ _6) };
    _7 <- t_3;
    _4 <- ([#"../CreuSAT/src/formula.rs" 268 8 268 39] DeleteClauses0.delete_clauses _5 _6 _7);
    goto BB1
  }
  BB1 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve watches_2 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Formula_Impl2_ReduceDb_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Solver_Solver_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val reduceDB [@cfg:stackify] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (s : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) : ()
    requires {[#"../CreuSAT/src/formula.rs" 273 4 273 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 274 4 274 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 276 15 276 31] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 277 15 277 33] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 279 15 279 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/formula.rs" 273 4 273 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 274 4 274 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 278 14 278 32] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 280 14 280 47] CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 281 14 281 33] Equisat0.equisat ( * self) ( ^ self) }
    
end
module CreuSat_Formula_Impl2_ReduceDb
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model4 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model5.model,
  function Model1.model = Model6.model
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model5.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model5.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model7.model,
  function Model1.model = Model5.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  use CreuSat_Solver_Solver_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model0.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy2
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model10 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model6.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Solver_Solver_Type.creusat_solver_solver_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreuSat_Formula_Impl2_DeleteClause_Interface as DeleteClause0 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Invariant1.invariant' = Invariant0.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function Model0.model = Model5.model, function Model1.model = Model6.model,
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Lit_Impl1_LitSat_Interface as LitSat0 with function Model0.model = Model11.model,
  predicate Invariant0.invariant' = Invariant5.invariant', predicate Sat0.sat = Sat0.sat
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model10.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len1 with function Model0.model = Model10.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model5.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model5.model
  let rec cfg reduceDB [@cfg:stackify] [#"../CreuSAT/src/formula.rs" 282 4 282 80] (self : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (s : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) : ()
    requires {[#"../CreuSAT/src/formula.rs" 273 4 273 40] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 274 4 274 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 276 15 276 31] Invariant0.invariant' ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 277 15 277 33] Invariant2.invariant' t ( * self)}
    requires {[#"../CreuSAT/src/formula.rs" 279 15 279 45] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/formula.rs" 273 4 273 40] Invariant0.invariant' ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 274 4 274 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 278 14 278 32] Invariant2.invariant' t ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 280 14 280 47] CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self) = CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ self) }
    ensures { [#"../CreuSAT/src/formula.rs" 281 14 281 33] Equisat0.equisat ( * self) ( ^ self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var watches_2 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var t_3 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var s_4 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _5 : ();
  var _6 : ();
  var _7 : bool;
  var _8 : usize;
  var _9 : usize;
  var _10 : bool;
  var _11 : usize;
  var _12 : usize;
  var _13 : ();
  var _14 : ();
  var _15 : ();
  var _16 : ();
  var i_17 : usize;
  ghost var old_f_18 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _19 : ();
  ghost var old_w_20 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _21 : ();
  var _22 : bool;
  var _23 : usize;
  var _24 : usize;
  var _25 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _26 : ();
  var _27 : bool;
  var _28 : bool;
  var _29 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _30 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _31 : usize;
  var _32 : bool;
  var _33 : usize;
  var _34 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _35 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _36 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _37 : usize;
  var cnt_38 : int32;
  var j_39 : usize;
  var _40 : ();
  var _41 : bool;
  var _42 : bool;
  var _43 : usize;
  var _44 : usize;
  var _45 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _46 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _47 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _48 : usize;
  var _49 : bool;
  var _50 : int32;
  var _51 : ();
  var _52 : bool;
  var _53 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _54 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _55 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _56 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _57 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _58 : usize;
  var _59 : usize;
  var _60 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _61 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _62 : ();
  var _63 : ();
  var _64 : ();
  var _65 : bool;
  var _66 : int32;
  var _67 : ();
  var _68 : bool;
  var _69 : usize;
  var _70 : ();
  var _71 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _72 : usize;
  var _73 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _74 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _75 : ();
  var _76 : ();
  var _77 : ();
  {
    self_1 <- self;
    watches_2 <- watches;
    t_3 <- t;
    s_4 <- s;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    _8 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_num_lemmas ( * s_4);
    _9 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_max_lemmas ( * s_4);
    _7 <- ([#"../CreuSAT/src/formula.rs" 284 14 284 41] _8 > _9);
    switch (_7)
      | False -> goto BB5
      | _ -> goto BB2
      end
  }
  BB2 {
    _11 <- ([#"../CreuSAT/src/formula.rs" 285 15 285 31] (18446744073709551615 : usize) - (300 : usize));
    _12 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_max_lemmas ( * s_4);
    _10 <- ([#"../CreuSAT/src/formula.rs" 285 15 285 46] _11 > _12);
    switch (_10)
      | False -> goto BB4
      | _ -> goto BB3
      end
  }
  BB3 {
    s_4 <- { s_4 with current = (let CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e f g h =  * s_4 in CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a ([#"../CreuSAT/src/formula.rs" 286 16 286 35] CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_max_lemmas ( * s_4) + (300 : usize)) c d e f g h) };
    _6 <- ();
    goto BB1
  }
  BB4 {
    _5 <- ();
    goto BB6
  }
  BB5 {
    _5 <- ();
    goto BB6
  }
  BB6 {
    i_17 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_initial_len ( * s_4);
    _19 <- ();
    old_f_18 <- ghost ([#"../CreuSAT/src/formula.rs" 293 41 293 56] self_1);
    goto BB7
  }
  BB7 {
    _21 <- ();
    old_w_20 <- ghost ([#"../CreuSAT/src/formula.rs" 294 41 294 59] watches_2);
    goto BB8
  }
  BB8 {
    goto BB9
  }
  BB9 {
    invariant w_inv { [#"../CreuSAT/src/formula.rs" 295 27 295 51] Invariant1.invariant' ( * watches_2) ( * self_1) };
    invariant t_inv { [#"../CreuSAT/src/formula.rs" 296 27 296 45] Invariant2.invariant' t_3 ( * self_1) };
    invariant f_inv { [#"../CreuSAT/src/formula.rs" 297 27 297 43] Invariant0.invariant' ( * self_1) };
    invariant proph_w { [#"../CreuSAT/src/formula.rs" 298 29 298 55]  ^ watches_2 =  ^ old_w_20 };
    invariant proph_f { [#"../CreuSAT/src/formula.rs" 299 29 299 52]  ^ self_1 =  ^ old_f_18 };
    invariant num_vars_unch { [#"../CreuSAT/src/formula.rs" 300 35 300 68] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * self_1)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * old_f_18)) };
    invariant equi { [#"../CreuSAT/src/formula.rs" 301 26 301 54] Equisat0.equisat ( * self_1) ( * old_f_18) };
    _23 <- i_17;
    _25 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    _24 <- ([#"../CreuSAT/src/formula.rs" 302 18 302 36] Len0.len _25);
    goto BB10
  }
  BB10 {
    _22 <- ([#"../CreuSAT/src/formula.rs" 302 14 302 36] _23 < _24);
    switch (_22)
      | False -> goto BB42
      | _ -> goto BB11
      end
  }
  BB11 {
    _30 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    _31 <- i_17;
    _29 <- ([#"../CreuSAT/src/formula.rs" 303 16 303 31] Index0.index _30 _31);
    goto BB12
  }
  BB12 {
    _28 <- CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_deleted _29;
    _27 <- not _28;
    switch (_27)
      | False -> goto BB40
      | _ -> goto BB13
      end
  }
  BB13 {
    _36 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    _37 <- i_17;
    _35 <- ([#"../CreuSAT/src/formula.rs" 305 19 305 34] Index0.index _36 _37);
    goto BB14
  }
  BB14 {
    _34 <- _35;
    _33 <- ([#"../CreuSAT/src/formula.rs" 305 19 305 40] Len1.len _34);
    goto BB15
  }
  BB15 {
    _32 <- ([#"../CreuSAT/src/formula.rs" 305 19 305 44] _33 > (6 : usize));
    switch (_32)
      | False -> goto BB38
      | _ -> goto BB16
      end
  }
  BB16 {
    cnt_38 <- (0 : int32);
    j_39 <- (0 : usize);
    goto BB17
  }
  BB17 {
    _43 <- j_39;
    _47 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    _48 <- i_17;
    _46 <- ([#"../CreuSAT/src/formula.rs" 308 30 308 45] Index0.index _47 _48);
    goto BB21
  }
  BB18 {
    _41 <- false;
    goto BB20
  }
  BB19 {
    _50 <- cnt_38;
    _49 <- ([#"../CreuSAT/src/formula.rs" 308 55 308 62] _50 < (6 : int32));
    _41 <- _49;
    _49 <- any bool;
    goto BB20
  }
  BB20 {
    switch (_41)
      | False -> goto BB30
      | _ -> goto BB23
      end
  }
  BB21 {
    _45 <- _46;
    _44 <- ([#"../CreuSAT/src/formula.rs" 308 30 308 51] Len1.len _45);
    goto BB22
  }
  BB22 {
    _42 <- ([#"../CreuSAT/src/formula.rs" 308 26 308 51] _43 < _44);
    switch (_42)
      | False -> goto BB18
      | _ -> goto BB19
      end
  }
  BB23 {
    _57 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * self_1);
    _58 <- i_17;
    _56 <- ([#"../CreuSAT/src/formula.rs" 309 27 309 42] Index0.index _57 _58);
    goto BB24
  }
  BB24 {
    _55 <- _56;
    _59 <- j_39;
    _54 <- ([#"../CreuSAT/src/formula.rs" 309 27 309 45] Index1.index _55 _59);
    goto BB25
  }
  BB25 {
    _53 <- _54;
    _61 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments t_3;
    _60 <- _61;
    _52 <- ([#"../CreuSAT/src/formula.rs" 309 27 309 69] LitSat0.lit_sat _53 _60);
    goto BB26
  }
  BB26 {
    switch (_52)
      | False -> goto BB28
      | _ -> goto BB27
      end
  }
  BB27 {
    cnt_38 <- ([#"../CreuSAT/src/formula.rs" 310 28 310 36] cnt_38 + (1 : int32));
    _51 <- ();
    goto BB29
  }
  BB28 {
    _51 <- ();
    goto BB29
  }
  BB29 {
    j_39 <- ([#"../CreuSAT/src/formula.rs" 312 24 312 30] j_39 + (1 : usize));
    _6 <- ();
    goto BB17
  }
  BB30 {
    _40 <- ();
    _66 <- cnt_38;
    _65 <- ([#"../CreuSAT/src/formula.rs" 314 23 314 31] _66 >= (6 : int32));
    switch (_65)
      | False -> goto BB32
      | _ -> goto BB31
      end
  }
  BB31 {
    _69 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_num_lemmas ( * s_4);
    _68 <- ([#"../CreuSAT/src/formula.rs" 316 27 316 43] _69 > (0 : usize));
    switch (_68)
      | False -> goto BB34
      | _ -> goto BB33
      end
  }
  BB32 {
    _26 <- ();
    goto BB37
  }
  BB33 {
    s_4 <- { s_4 with current = (let CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e f g h =  * s_4 in CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type ([#"../CreuSAT/src/formula.rs" 317 28 317 45] CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_num_lemmas ( * s_4) - (1 : usize)) b c d e f g h) };
    _67 <- ();
    goto BB35
  }
  BB34 {
    _67 <- ();
    goto BB35
  }
  BB35 {
    _71 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _71) };
    _72 <- i_17;
    _73 <- borrow_mut ( * watches_2);
    watches_2 <- { watches_2 with current = ( ^ _73) };
    _74 <- t_3;
    _70 <- ([#"../CreuSAT/src/formula.rs" 319 24 319 57] DeleteClause0.delete_clause _71 _72 _73 _74);
    goto BB36
  }
  BB36 {
    _26 <- ();
    goto BB37
  }
  BB37 {
    goto BB39
  }
  BB38 {
    _26 <- ();
    goto BB39
  }
  BB39 {
    goto BB41
  }
  BB40 {
    _26 <- ();
    goto BB41
  }
  BB41 {
    i_17 <- ([#"../CreuSAT/src/formula.rs" 323 12 323 18] i_17 + (1 : usize));
    _6 <- ();
    goto BB9
  }
  BB42 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve watches_2 };
    assume { Resolve2.resolve s_4 };
    _0 <- ();
    return _0
  }
  
end
module Core_Clone_Impls_Impl19_Clone_Interface
  use prelude.Borrow
  val clone' [@cfg:stackify] (self : bool) : bool
    ensures { result = self }
    
end
module Core_Clone_Impls_Impl19_Clone
  use prelude.Borrow
  val clone' [@cfg:stackify] (self : bool) : bool
    ensures { result = self }
    
end
module Core_Clone_Impls_Impl19
  
end
module CreuSat_Lit_Impl4_Clone_Interface
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type
  val clone' [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    ensures { [#"../CreuSAT/src/lit.rs" 13 9 13 14] result = self }
    
end
module CreuSat_Lit_Impl4_Clone
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type
  use mach.int.Int
  use prelude.UIntSize
  clone Core_Clone_Impls_Impl19_Clone_Interface as Clone1
  clone Core_Clone_Impls_Impl5_Clone_Interface as Clone0
  let rec cfg clone' [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 13 9 13 14] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    ensures { [#"../CreuSAT/src/lit.rs" 13 9 13 14] result = self }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _2 : usize;
  var _3 : usize;
  var _4 : bool;
  var _5 : bool;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _3 <- CreuSat_Lit_Lit_Type.creusat_lit_lit_type_Lit_idx self_1;
    _2 <- ([#"../CreuSAT/src/lit.rs" 15 4 15 18] Clone0.clone' _3);
    goto BB1
  }
  BB1 {
    _5 <- CreuSat_Lit_Lit_Type.creusat_lit_lit_type_Lit_polarity self_1;
    _4 <- ([#"../CreuSAT/src/lit.rs" 16 4 16 22] Clone1.clone' _5);
    goto BB2
  }
  BB2 {
    _0 <- CreuSat_Lit_Lit_Type.CreuSat_Lit_Lit_Type _2 _4;
    return _0
  }
  
end
module CreuSat_Lit_Impl0_Model_Interface
  use CreuSat_Lit_Lit_Type
  function model (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
end
module CreuSat_Lit_Impl0_Model
  use CreuSat_Lit_Lit_Type
  function model [#"../CreuSAT/src/lit.rs" 24 4 24 26] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    
   =
    [#"../CreuSAT/src/lit.rs" 25 8 25 12] self
end
module CreuSat_Lit_Impl1_LitSet_Interface
  use seq.Seq
  use prelude.Borrow
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val lit_set [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/lit.rs" 83 15 83 41] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 84 14 84 39] result = (not Unset0.unset self a) }
    
end
module CreuSat_Lit_Impl1_LitSet
  use seq.Seq
  use prelude.Borrow
  use mach.int.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with function Model0.model = Model1.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  use prelude.UIntSize
  clone CreuSat_Assignments_Impl0_Index_Interface as Index1 with function Model0.model = Model0.model
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg lit_set [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 85 4 85 49] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : bool
    requires {[#"../CreuSAT/src/lit.rs" 83 15 83 41] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"../CreuSAT/src/lit.rs" 84 14 84 39] result = (not Unset0.unset self a) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var a_2 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _3 : uint8;
  var _4 : uint8;
  var _5 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _6 : usize;
  var _7 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    _5 <- a_2;
    _7 <- self_1;
    _6 <- ([#"../CreuSAT/src/lit.rs" 86 10 86 22] Index0.index _7);
    goto BB1
  }
  BB1 {
    _4 <- ([#"../CreuSAT/src/lit.rs" 86 8 86 23] Index1.index _5 _6);
    goto BB2
  }
  BB2 {
    _3 <- _4;
    _0 <- ([#"../CreuSAT/src/lit.rs" 86 8 86 27] _3 < (2 : uint8));
    return _0
  }
  
end
module CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  function to_watchidx_logic [@inline:trivial] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : int
end
module CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic
  use mach.int.Int
  use CreuSat_Lit_Lit_Type
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  function to_watchidx_logic [@inline:trivial] [#"../CreuSAT/src/logic/logic_lit.rs" 33 4 33 41] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : int
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 34 8 34 91] IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      0
    else
      1
    )
end
module CreuSat_Lit_Impl1_ToWatchidx_Interface
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use mach.int.UInt64
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface as ToWatchidxLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  val to_watchidx [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : usize
    requires {[#"../CreuSAT/src/lit.rs" 91 15 91 49] IndexLogic0.index_logic self < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/lit.rs" 92 14 92 49] UInt64.to_int result = ToWatchidxLogic0.to_watchidx_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 93 14 93 94] UInt64.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      0
    else
      1
    ) }
    
end
module CreuSat_Lit_Impl1_ToWatchidx
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use mach.int.UInt64
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Lit_Impl1_IsPositive_Interface as IsPositive0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg to_watchidx [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 94 4 94 37] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : usize
    requires {[#"../CreuSAT/src/lit.rs" 91 15 91 49] IndexLogic0.index_logic self < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/lit.rs" 92 14 92 49] UInt64.to_int result = ToWatchidxLogic0.to_watchidx_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 93 14 93 94] UInt64.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      0
    else
      1
    ) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _2 : usize;
  var _3 : usize;
  var _4 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _5 : usize;
  var _6 : bool;
  var _7 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _4 <- self_1;
    _3 <- ([#"../CreuSAT/src/lit.rs" 95 8 95 20] Index0.index _4);
    goto BB1
  }
  BB1 {
    _2 <- ([#"../CreuSAT/src/lit.rs" 95 8 95 24] _3 * (2 : usize));
    _7 <- self_1;
    _6 <- ([#"../CreuSAT/src/lit.rs" 95 30 95 48] IsPositive0.is_positive _7);
    goto BB2
  }
  BB2 {
    switch (_6)
      | False -> goto BB4
      | _ -> goto BB3
      end
  }
  BB3 {
    _5 <- (0 : usize);
    goto BB5
  }
  BB4 {
    _5 <- (1 : usize);
    goto BB5
  }
  BB5 {
    _0 <- ([#"../CreuSAT/src/lit.rs" 95 8 95 65] _2 + _5);
    return _0
  }
  
end
module CreuSat_Lit_Impl1_PhaseSaved_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use mach.int.Int32
  use prelude.UIntSize
  use prelude.Borrow
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val phase_saved [@cfg:stackify] (idx : usize) (assignments : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    requires {[#"../CreuSAT/src/lit.rs" 107 15 107 42] UInt64.to_int idx < Seq.length (Model0.model assignments)}
    ensures { [#"../CreuSAT/src/lit.rs" 108 14 108 42] IndexLogic0.index_logic result = UInt64.to_int idx }
    ensures { [#"../CreuSAT/src/lit.rs" 109 14 109 72] IsPositiveLogic0.is_positive_logic result = (UInt8.to_int (Seq.get (Model0.model assignments) (UInt64.to_int idx)) = 1) }
    
end
module CreuSat_Lit_Impl1_PhaseSaved
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use mach.int.Int32
  use prelude.UIntSize
  use prelude.Borrow
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Assignments_Impl0_Index_Interface as Index0 with function Model0.model = Model0.model
  let rec cfg phase_saved [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 110 4 110 68] (idx : usize) (assignments : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    requires {[#"../CreuSAT/src/lit.rs" 107 15 107 42] UInt64.to_int idx < Seq.length (Model0.model assignments)}
    ensures { [#"../CreuSAT/src/lit.rs" 108 14 108 42] IndexLogic0.index_logic result = UInt64.to_int idx }
    ensures { [#"../CreuSAT/src/lit.rs" 109 14 109 72] IsPositiveLogic0.is_positive_logic result = (UInt8.to_int (Seq.get (Model0.model assignments) (UInt64.to_int idx)) = 1) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var idx_1 : usize;
  var assignments_2 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _3 : usize;
  var _4 : bool;
  var _5 : bool;
  var _6 : uint8;
  var _7 : uint8;
  var _8 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _9 : usize;
  {
    idx_1 <- idx;
    assignments_2 <- assignments;
    goto BB0
  }
  BB0 {
    _3 <- idx_1;
    _8 <- assignments_2;
    _9 <- idx_1;
    _7 <- ([#"../CreuSAT/src/lit.rs" 111 37 111 53] Index0.index _8 _9);
    goto BB1
  }
  BB1 {
    _6 <- _7;
    _5 <- ([#"../CreuSAT/src/lit.rs" 111 37 111 58] _6 = (1 : uint8));
    switch (_5)
      | False -> goto BB3
      | _ -> goto BB2
      end
  }
  BB2 {
    _4 <- true;
    goto BB4
  }
  BB3 {
    _4 <- false;
    goto BB4
  }
  BB4 {
    _0 <- CreuSat_Lit_Lit_Type.CreuSat_Lit_Lit_Type _3 _4;
    return _0
  }
  
end
module CreuSat_Lit_Impl2_Eq_Interface
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type
  val eq [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (other : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 122 14 122 39] result = (self = other) }
    
end
module CreuSat_Lit_Impl2_Eq
  use prelude.Borrow
  use CreuSat_Lit_Lit_Type
  use prelude.Bool
  use mach.int.Int
  use prelude.UIntSize
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Lit_Impl1_IsPositive_Interface as IsPositive0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg eq [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 124 4 124 37] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (other : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : bool
    ensures { [#"../CreuSAT/src/lit.rs" 122 14 122 39] result = (self = other) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var other_2 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _3 : bool;
  var _4 : usize;
  var _5 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _6 : usize;
  var _7 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _8 : bool;
  var _9 : bool;
  var _10 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _11 : bool;
  var _12 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    other_2 <- other;
    goto BB0
  }
  BB0 {
    _5 <- self_1;
    _4 <- ([#"../CreuSAT/src/lit.rs" 125 8 125 20] Index0.index _5);
    goto BB4
  }
  BB1 {
    _0 <- false;
    goto BB3
  }
  BB2 {
    _10 <- self_1;
    _9 <- ([#"../CreuSAT/src/lit.rs" 125 41 125 59] IsPositive0.is_positive _10);
    goto BB6
  }
  BB3 {
    return _0
  }
  BB4 {
    _7 <- other_2;
    _6 <- ([#"../CreuSAT/src/lit.rs" 125 24 125 37] Index0.index _7);
    goto BB5
  }
  BB5 {
    _3 <- ([#"../CreuSAT/src/lit.rs" 125 8 125 37] _4 = _6);
    switch (_3)
      | False -> goto BB1
      | _ -> goto BB2
      end
  }
  BB6 {
    _12 <- other_2;
    _11 <- ([#"../CreuSAT/src/lit.rs" 125 63 125 82] IsPositive0.is_positive _12);
    goto BB7
  }
  BB7 {
    _8 <- Bool.eqb _9 _11;
    _0 <- _8;
    _8 <- any bool;
    goto BB3
  }
  
end
module CreuSat_Lit_Impl3_Not_Interface
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  val not' [@cfg:stackify] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    ensures { [#"../CreuSAT/src/lit.rs" 134 14 134 56] IndexLogic0.index_logic result = IndexLogic0.index_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 135 14 135 69] IsPositiveLogic0.is_positive_logic result = (not IsPositiveLogic0.is_positive_logic self) }
    
end
module CreuSat_Lit_Impl3_Not
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  use mach.int.Int
  use prelude.UIntSize
  clone CreuSat_Lit_Impl1_IsPositive_Interface as IsPositive0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  let rec cfg not' [@cfg:stackify] [#"../CreuSAT/src/lit.rs" 136 4 136 23] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : CreuSat_Lit_Lit_Type.creusat_lit_lit_type
    ensures { [#"../CreuSAT/src/lit.rs" 134 14 134 56] IndexLogic0.index_logic result = IndexLogic0.index_logic self }
    ensures { [#"../CreuSAT/src/lit.rs" 135 14 135 69] IsPositiveLogic0.is_positive_logic result = (not IsPositiveLogic0.is_positive_logic self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var self_1 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _2 : usize;
  var _3 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _4 : bool;
  var _5 : bool;
  var _6 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _3 <- self_1;
    _2 <- ([#"../CreuSAT/src/lit.rs" 137 19 137 31] Index0.index _3);
    goto BB1
  }
  BB1 {
    _6 <- self_1;
    _5 <- ([#"../CreuSAT/src/lit.rs" 137 44 137 62] IsPositive0.is_positive _6);
    goto BB2
  }
  BB2 {
    _4 <- not _5;
    _0 <- CreuSat_Lit_Lit_Type.CreuSat_Lit_Lit_Type _2 _4;
    return _0
  }
  
end
module CreuSat_Logic_Logic_Pos_Interface
  use mach.int.Int
  use prelude.UInt8
  function pos (_ : ()) : uint8
end
module CreuSat_Logic_Logic_Pos
  use mach.int.Int
  use prelude.UInt8
  function pos [#"../CreuSAT/src/logic/logic.rs" 10 0 10 25] (_ : ()) : uint8 =
    [#"../CreuSAT/src/logic/logic.rs" 11 4 11 7] (1 : uint8)
end
module CreuSat_Logic_Logic_Neg_Interface
  use mach.int.Int
  use prelude.UInt8
  function neg (_ : ()) : uint8
end
module CreuSat_Logic_Logic_Neg
  use mach.int.Int
  use prelude.UInt8
  function neg [#"../CreuSAT/src/logic/logic.rs" 15 0 15 25] (_ : ()) : uint8 =
    [#"../CreuSAT/src/logic/logic.rs" 16 4 16 7] (0 : uint8)
end
module CreuSat_Logic_Logic_BoolToAssignedstate_Interface
  use prelude.UInt8
  use mach.int.Int
  use mach.int.Int32
  function bool_to_assignedstate (b : bool) : uint8
end
module CreuSat_Logic_Logic_BoolToAssignedstate
  use prelude.UInt8
  use mach.int.Int
  use mach.int.Int32
  function bool_to_assignedstate [#"../CreuSAT/src/logic/logic.rs" 34 0 34 54] (b : bool) : uint8 =
    [#"../CreuSAT/src/logic/logic.rs" 31 0 31 8] if b then (1 : uint8) else (0 : uint8)
  axiom bool_to_assignedstate_spec : forall b : bool . ([#"../CreuSAT/src/logic/logic.rs" 33 0 33 31] not b -> UInt8.to_int (bool_to_assignedstate b) = 0) && ([#"../CreuSAT/src/logic/logic.rs" 32 0 32 30] b -> UInt8.to_int (bool_to_assignedstate b) = 1)
end
module CreuSat_Logic_Logic_BoolToAssignedstate_Impl
  use prelude.UInt8
  use mach.int.Int
  use mach.int.Int32
  let rec ghost function bool_to_assignedstate (b : bool) : uint8
    ensures { [#"../CreuSAT/src/logic/logic.rs" 32 0 32 30] b -> UInt8.to_int result = 1 }
    ensures { [#"../CreuSAT/src/logic/logic.rs" 33 0 33 31] not b -> UInt8.to_int result = 0 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic.rs" 31 0 31 8] if b then (1 : uint8) else (0 : uint8)
end
module CreuSat_Logic_Logic_FlipV_Interface
  use mach.int.Int
  use prelude.UInt8
  function flip_v (v : uint8) : uint8
end
module CreuSat_Logic_Logic_FlipV
  use mach.int.Int
  use prelude.UInt8
  use mach.int.Int32
  function flip_v [#"../CreuSAT/src/logic/logic.rs" 43 0 43 44] (v : uint8) : uint8 =
    [#"../CreuSAT/src/logic/logic.rs" 44 4 52 5] if UInt8.to_int v = 0 then
      (1 : uint8)
    else
      if UInt8.to_int v = 1 then (0 : uint8) else v
    
end
module CreuSat_Logic_LogicAssignments_CompatibleInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  predicate compatible_inner (a : Seq.seq uint8) (a2 : Seq.seq uint8)
end
module CreuSat_Logic_LogicAssignments_CompatibleInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  predicate compatible_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 25 0 25 78] (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 27 8 28 43] Seq.length a = Seq.length a2 /\ (forall i : (int) . 0 <= i /\ i < Seq.length a -> Unset0.unset (Seq.get a i) \/ Seq.get a i = Seq.get a2 i)
end
module CreuSat_Logic_LogicAssignments_CompatibleCompleteInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  predicate compatible_complete_inner (a : Seq.seq uint8) (a2 : Seq.seq uint8)
end
module CreuSat_Logic_LogicAssignments_CompatibleCompleteInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  clone CreuSat_Logic_LogicAssignments_CompatibleInner_Interface as CompatibleInner0
  predicate compatible_complete_inner [#"../CreuSAT/src/logic/logic_assignments.rs" 40 0 40 87] (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_assignments.rs" 41 4 41 49] CompatibleInner0.compatible_inner a a2 /\ CompleteInner0.complete_inner a2
end
module CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  predicate post_unit_inner (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl1_PostUnitInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate post_unit_inner [#"../CreuSAT/src/logic/logic_clause.rs" 56 4 56 63] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 57 8 61 9] exists i : (int) . 0 <= i /\ i < Seq.length (Model0.model self) /\ SatInner0.sat_inner (Seq.get (Model0.model self) i) a /\ (forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) /\ j <> i -> UnsatInner0.unsat_inner (Seq.get (Model0.model self) j) a)
end
module CreuSat_Logic_LogicClause_Impl1_NoUnsetInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  predicate no_unset_inner (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl1_NoUnsetInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner_Interface as UnsetInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate no_unset_inner [#"../CreuSAT/src/logic/logic_clause.rs" 65 4 65 62] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 66 8 68 9] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model self) -> not UnsetInner0.unset_inner (Seq.get (Model0.model self) j) a
end
module CreuSat_Logic_LogicClause_Impl1_PostUnit_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  predicate post_unit (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicClause_Impl1_PostUnit
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate post_unit [#"../CreuSAT/src/logic/logic_clause.rs" 72 4 72 50] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 73 20 73 44] PostUnitInner0.post_unit_inner self (Model0.model a)
end
module CreuSat_Logic_LogicClause_Impl1_EqAssnInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  predicate eq_assn_inner (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicClause_Impl1_EqAssnInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Clause_Clause_Type
  use mach.int.Int32
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate eq_assn_inner [#"../CreuSAT/src/logic/logic_clause.rs" 77 4 77 85] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 78 8 81 9] forall i : (int) . 0 <= i /\ i < Seq.length (Model0.model self) -> Seq.get a (IndexLogic0.index_logic (Seq.get (Model0.model self) i)) = Seq.get a2 (IndexLogic0.index_logic (Seq.get (Model0.model self) i))
end
module CreuSat_Logic_LogicClause_Impl2_Unknown_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  predicate unknown (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicClause_Impl2_Unknown
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicClause_Impl2_Sat_Interface as Sat0
  predicate unknown [#"../CreuSAT/src/logic/logic_clause.rs" 173 4 173 48] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 174 8 174 38] not Sat0.sat self a /\ not Unsat0.unsat self a
end
module CreuSat_Logic_LogicClause_Impl2_SearchIdxInRange_Interface
  use CreuSat_Clause_Clause_Type
  predicate search_idx_in_range (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
end
module CreuSat_Logic_LogicClause_Impl2_SearchIdxInRange
  use CreuSat_Clause_Clause_Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate search_idx_in_range [#"../CreuSAT/src/logic/logic_clause.rs" 188 4 188 44] (self : CreuSat_Clause_Clause_Type.creusat_clause_clause_type)
    
   =
    [#"../CreuSAT/src/logic/logic_clause.rs" 189 20 189 70] 2 <= UInt64.to_int (CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_search self) /\ UInt64.to_int (CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_search self) <= Seq.length (Model0.model self)
end
module CreuSat_Logic_LogicFormula_Equisat_Interface
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  predicate equisat (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (o : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int))
    
end
module CreuSat_Logic_LogicFormula_Equisat
  use seq.Seq
  use mach.int.Int
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete_Interface as EventuallySatComplete0
  predicate equisat [#"../CreuSAT/src/logic/logic_formula.rs" 44 0 44 64] (f : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int)) (o : (Seq.seq (CreuSat_Clause_Clause_Type.creusat_clause_clause_type), int))
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 46 8 46 64] EventuallySatComplete0.eventually_sat_complete f = EventuallySatComplete0.eventually_sat_complete o
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  predicate eventually_sat_inner (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  use mach.int.UInt64
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_CompatibleInner_Interface as CompatibleInner0
  predicate eventually_sat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 86 4 86 64] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 87 8 89 9] exists a2 : (Seq.seq uint8) . Seq.length a2 = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self) /\ CompatibleInner0.compatible_inner a a2 /\ SatInner0.sat_inner self a2
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  predicate eventually_sat_complete_inner (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  use mach.int.UInt64
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_CompatibleCompleteInner_Interface as CompatibleCompleteInner0
  predicate eventually_sat_complete_inner [#"../CreuSAT/src/logic/logic_formula.rs" 93 4 93 73] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 94 8 96 9] exists a2 : (Seq.seq uint8) . Seq.length a2 = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars self) /\ CompatibleCompleteInner0.compatible_complete_inner a a2 /\ SatInner0.sat_inner self a2
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySat_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  predicate eventually_sat (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySat
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatInner_Interface as EventuallySatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate eventually_sat [#"../CreuSAT/src/logic/logic_formula.rs" 100 4 100 51] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 101 20 101 49] EventuallySatInner0.eventually_sat_inner self (Model0.model a)
end
module CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  predicate unsat_inner (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicFormula_Impl1_UnsatInner
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Formula_Formula_Type
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate unsat_inner [#"../CreuSAT/src/logic/logic_formula.rs" 118 4 118 55] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : Seq.seq uint8)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 119 8 122 9] exists i : (int) . 0 <= i /\ i < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self)) /\ UnsatInner0.unsat_inner (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses self)) i) a
end
module CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  predicate unsat (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
end
module CreuSat_Logic_LogicFormula_Impl1_Unsat
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate unsat [#"../CreuSAT/src/logic/logic_formula.rs" 126 4 126 46] (self : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type)
    
   =
    [#"../CreuSAT/src/logic/logic_formula.rs" 127 20 127 40] UnsatInner0.unsat_inner self (Model0.model a)
end
module CreuSat_Logic_LogicLit_Impl1_LitInInternal_Interface
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  predicate lit_in_internal (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (c : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type))
    
end
module CreuSat_Logic_LogicLit_Impl1_LitInInternal
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  use mach.int.Int
  use mach.int.Int32
  predicate lit_in_internal [#"../CreuSAT/src/logic/logic_lit.rs" 54 4 54 53] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (c : Seq.seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type))
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 55 8 55 74] exists i : (int) . 0 <= i /\ i < Seq.length c /\ Seq.get c i = self
end
module CreuSat_Logic_LogicLit_Impl1_IdxInTrail_Interface
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Lit_Lit_Type
  predicate idx_in_trail (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (t : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
    
end
module CreuSat_Logic_LogicLit_Impl1_IdxInTrail
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Lit_Lit_Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate idx_in_trail [#"../CreuSAT/src/logic/logic_lit.rs" 117 4 117 51] (self : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (t : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))
    
   =
    [#"../CreuSAT/src/logic/logic_lit.rs" 118 8 121 9] exists i : (int) . 0 <= i /\ i < Seq.length (Model0.model t) /\ IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get (Model0.model t) i)) = IndexLogic0.index_logic self
end
module CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision_Interface
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type
  predicate invariant_no_decision [@inline:trivial] (self : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Trail_Step_Type
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat_Interface as UnitAreSat0
  clone CreuSat_Logic_LogicUtil_Sorted_Interface as Sorted0
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner_Interface as TrailEntriesAreAssignedInner0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner_Interface as LitIsUniqueInner0
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant0
  predicate invariant_no_decision [@inline:trivial] [#"../CreuSAT/src/logic/logic_trail.rs" 70 4 70 58] (self : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 71 8 81 9] Invariant0.invariant' (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments self) f /\ TrailInvariant0.trail_invariant (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) f /\ Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level self)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) /\ LitNotInLessInner0.lit_not_in_less_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) f /\ LitIsUniqueInner0.lit_is_unique_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) /\ LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) f (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments self)) /\ TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments self)) /\ Sorted0.sorted (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions self)) /\ UnitAreSat0.unit_are_sat (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail self)) f (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments self)
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsTo_Interface
  use mach.int.Int
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  predicate clause_post_with_regards_to (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (j : int)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsTo
  use mach.int.Int
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Interface as ClausePostWithRegardsToInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate clause_post_with_regards_to [#"../CreuSAT/src/logic/logic_trail.rs" 117 0 117 77] (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (j : int)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 118 16 118 59] ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner c (Model0.model a) j
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit_Interface
  use CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  predicate clause_post_with_regards_to_lit (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit
  use CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  use mach.int.UInt64
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Interface as ClausePostWithRegardsToInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate clause_post_with_regards_to_lit [#"../CreuSAT/src/logic/logic_trail.rs" 131 0 131 83] (c : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 132 16 132 66] ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner c (Model0.model a) (UInt64.to_int (CreuSat_Lit_Lit_Type.creusat_lit_lit_type_Lit_idx lit))
end
module CreuSat_Logic_LogicTrail_LongArePostUnit_Interface
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type
  predicate long_are_post_unit (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicTrail_LongArePostUnit
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Trail_Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use mach.int.UInt64
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsTo_Interface as ClausePostWithRegardsTo0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate long_are_post_unit [#"../CreuSAT/src/logic/logic_trail.rs" 145 0 145 59] (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 146 4 152 5] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail)) -> match (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail)) j)) with
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type k -> ClausePostWithRegardsTo0.clause_post_with_regards_to (Seq.get (Model1.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int k)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail trail)) j)))
      | _ -> true
      end
end
module CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess_Interface
  use seq.Seq
  use mach.int.UInt64
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  function lemma_push_maintains_lit_not_in_less (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (step : CreuSat_Trail_Step_Type.creusat_trail_step_type) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess
  use seq.Seq
  use mach.int.UInt64
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Lit_Lit_Type
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  function lemma_push_maintains_lit_not_in_less [#"../CreuSAT/src/logic/logic_trail.rs" 203 0 203 77] (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (step : CreuSat_Trail_Step_Type.creusat_trail_step_type) : ()
    
   =
    [#"../CreuSAT/src/logic/logic_trail.rs" 195 0 195 8] ()
  axiom lemma_push_maintains_lit_not_in_less_spec : forall t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type, f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type, step : CreuSat_Trail_Step_Type.creusat_trail_step_type . ([#"../CreuSAT/src/logic/logic_trail.rs" 196 11 196 24] Invariant0.invariant' f) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 197 11 197 25] Invariant1.invariant' t f) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 198 11 198 58] Unset0.unset (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments t)) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step)))) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 199 0 199 44] Invariant2.invariant' (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 201 11 201 45] LitNotInLessInner0.lit_not_in_less_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail t)) f) -> ([#"../CreuSAT/src/logic/logic_trail.rs" 202 10 202 57] LitNotInLessInner0.lit_not_in_less_inner (Seq.snoc (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail t)) step) f)
end
module CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess_Impl
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant2.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model0 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with function Model0.model = Model5.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model5.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model5.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model1.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model0.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model2.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  let rec ghost function lemma_push_maintains_lit_not_in_less (t : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (step : CreuSat_Trail_Step_Type.creusat_trail_step_type) : ()
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 196 11 196 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 197 11 197 25] Invariant1.invariant' t f}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 198 11 198 58] Unset0.unset (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments t)) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step)))}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 199 0 199 44] Invariant2.invariant' (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/logic/logic_trail.rs" 201 11 201 45] LitNotInLessInner0.lit_not_in_less_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail t)) f}
    ensures { [#"../CreuSAT/src/logic/logic_trail.rs" 202 10 202 57] LitNotInLessInner0.lit_not_in_less_inner (Seq.snoc (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail t)) step) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_trail.rs" 195 0 195 8] ()
end
module CreuSat_Logic_LogicUtil_Pop_Interface
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq_ext.SeqExt
  function pop (s : Seq.seq t) : Seq.seq t
end
module CreuSat_Logic_LogicUtil_Pop
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq_ext.SeqExt
  function pop [#"../CreuSAT/src/logic/logic_util.rs" 60 0 60 34] (s : Seq.seq t) : Seq.seq t =
    [#"../CreuSAT/src/logic/logic_util.rs" 61 4 61 33] SeqExt.subsequence s 0 (Seq.length s - 1)
  axiom pop_spec : forall s : Seq.seq t . ([#"../CreuSAT/src/logic/logic_util.rs" 56 11 56 22] Seq.length s > 0) -> ([#"../CreuSAT/src/logic/logic_util.rs" 59 0 59 75] forall i : (int) . 0 <= i /\ i < Seq.length (pop s) -> Seq.get (pop s) i = Seq.get s i) && ([#"../CreuSAT/src/logic/logic_util.rs" 58 10 58 37] Seq.length (pop s) = Seq.length s - 1) && ([#"../CreuSAT/src/logic/logic_util.rs" 57 10 57 49] pop s = SeqExt.subsequence s 0 (Seq.length s - 1))
end
module CreuSat_Logic_LogicUtil_Pop_Impl
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq_ext.SeqExt
  let rec ghost function pop (s : Seq.seq t) : Seq.seq t
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 56 11 56 22] Seq.length s > 0}
    ensures { [#"../CreuSAT/src/logic/logic_util.rs" 57 10 57 49] result = SeqExt.subsequence s 0 (Seq.length s - 1) }
    ensures { [#"../CreuSAT/src/logic/logic_util.rs" 58 10 58 37] Seq.length result = Seq.length s - 1 }
    ensures { [#"../CreuSAT/src/logic/logic_util.rs" 59 0 59 75] forall i : (int) . 0 <= i /\ i < Seq.length result -> Seq.get result i = Seq.get s i }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_util.rs" 61 4 61 33] SeqExt.subsequence s 0 (Seq.length s - 1)
end
module CreuSat_Logic_LogicUtil_LastIdx_Interface
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  function last_idx (s : Seq.seq t) : int
end
module CreuSat_Logic_LogicUtil_LastIdx
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  function last_idx [#"../CreuSAT/src/logic/logic_util.rs" 67 0 67 36] (s : Seq.seq t) : int =
    [#"../CreuSAT/src/logic/logic_util.rs" 68 4 68 15] Seq.length s - 1
  axiom last_idx_spec : forall s : Seq.seq t . ([#"../CreuSAT/src/logic/logic_util.rs" 66 11 66 22] Seq.length s > 0) -> true
end
module CreuSat_Logic_LogicUtil_LastIdx_Impl
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  let rec ghost function last_idx (s : Seq.seq t) : int
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 66 11 66 22] Seq.length s > 0}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_util.rs" 68 4 68 15] Seq.length s - 1
end
module CreuSat_Logic_LogicUtil_LastElem_Interface
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  function last_elem (s : Seq.seq t) : t
end
module CreuSat_Logic_LogicUtil_LastElem
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  function last_elem [#"../CreuSAT/src/logic/logic_util.rs" 74 0 74 35] (s : Seq.seq t) : t =
    [#"../CreuSAT/src/logic/logic_util.rs" 71 0 71 8] Seq.get s (Seq.length s - 1)
  axiom last_elem_spec : forall s : Seq.seq t . ([#"../CreuSAT/src/logic/logic_util.rs" 73 11 73 22] Seq.length s > 0) -> true
end
module CreuSat_Logic_LogicUtil_LastElem_Impl
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  let rec ghost function last_elem (s : Seq.seq t) : t
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 73 11 73 22] Seq.length s > 0}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_util.rs" 71 0 71 8] Seq.get s (Seq.length s - 1)
end
module CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = usize, axiom .
  clone CreuSat_Logic_LogicUtil_Sorted_Interface as Sorted0
  function lemma_pop_maintains_sorted (s : Seq.seq usize) : ()
end
module CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = usize, axiom .
  clone CreuSat_Logic_LogicUtil_Sorted_Interface as Sorted0
  function lemma_pop_maintains_sorted [#"../CreuSAT/src/logic/logic_util.rs" 83 0 83 48] (s : Seq.seq usize) : () =
    [#"../CreuSAT/src/logic/logic_util.rs" 78 0 78 8] ()
  axiom lemma_pop_maintains_sorted_spec : forall s : Seq.seq usize . ([#"../CreuSAT/src/logic/logic_util.rs" 80 11 80 22] Seq.length s > 0) -> ([#"../CreuSAT/src/logic/logic_util.rs" 81 11 81 20] Sorted0.sorted s) -> ([#"../CreuSAT/src/logic/logic_util.rs" 82 10 82 24] Sorted0.sorted (Pop0.pop s))
end
module CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted_Impl
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Pop as Pop0 with type t = usize, axiom .
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  let rec ghost function lemma_pop_maintains_sorted (s : Seq.seq usize) : ()
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 80 11 80 22] Seq.length s > 0}
    requires {[#"../CreuSAT/src/logic/logic_util.rs" 81 11 81 20] Sorted0.sorted s}
    ensures { [#"../CreuSAT/src/logic/logic_util.rs" 82 10 82 24] Sorted0.sorted (Pop0.pop s) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_util.rs" 78 0 78 8] ()
end
module CreuSat_Logic_LogicWatches_WatchValid_Interface
  use seq.Seq
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type
  predicate watch_valid (w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicWatches_WatchValid
  use seq.Seq
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate watch_valid [#"../CreuSAT/src/logic/logic_watches.rs" 25 0 25 55] (w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 26 4 31 5] forall j : (int) . 0 <= j /\ j < Seq.length w -> UInt64.to_int (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_cref (Seq.get w j)) < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) /\ Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_cref (Seq.get w j))))) > 1 /\ IndexLogic0.index_logic (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_blocker (Seq.get w j)) < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)
end
module CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface
  use seq.Seq
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type
  predicate watcher_crefs_in_range (w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicWatches_WatcherCrefsInRange
  use seq.Seq
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate watcher_crefs_in_range [#"../CreuSAT/src/logic/logic_watches.rs" 35 0 35 66] (w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 36 4 39 5] forall j : (int) . 0 <= j /\ j < Seq.length w -> UInt64.to_int (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_cref (Seq.get w j)) < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))
end
module CreuSat_Logic_LogicWatches_WatchesCrefsInRange_Interface
  use seq.Seq
  use CreuSat_Formula_Formula_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  predicate watches_crefs_in_range (w : Seq.seq (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
end
module CreuSat_Logic_LogicWatches_WatchesCrefsInRange
  use seq.Seq
  use CreuSat_Formula_Formula_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface as WatcherCrefsInRange0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  predicate watches_crefs_in_range [#"../CreuSAT/src/logic/logic_watches.rs" 43 0 43 71] (w : Seq.seq (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type)
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 44 4 47 5] forall i : (int) . 0 <= i /\ i < Seq.length w -> WatcherCrefsInRange0.watcher_crefs_in_range (Model0.model (Seq.get w i)) f
end
module CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface as WatcherCrefsInRange0
  function lemma_pop_watch_maintains_watcher_invariant (w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    
end
module CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface as WatcherCrefsInRange0
  function lemma_pop_watch_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 55 0 55 79] (w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 50 0 50 8] ()
  axiom lemma_pop_watch_maintains_watcher_invariant_spec : forall w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type), f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type . ([#"../CreuSAT/src/logic/logic_watches.rs" 52 11 52 22] Seq.length w > 0) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 53 11 53 39] WatcherCrefsInRange0.watcher_crefs_in_range w f) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 54 10 54 43] WatcherCrefsInRange0.watcher_crefs_in_range (Pop0.pop w) f)
end
module CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant_Impl
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicUtil_Pop as Pop0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange as WatcherCrefsInRange0 with function Model0.model = Model0.model
  let rec ghost function lemma_pop_watch_maintains_watcher_invariant (w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 52 11 52 22] Seq.length w > 0}
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 53 11 53 39] WatcherCrefsInRange0.watcher_crefs_in_range w f}
    ensures { [#"../CreuSAT/src/logic/logic_watches.rs" 54 10 54 43] WatcherCrefsInRange0.watcher_crefs_in_range (Pop0.pop w) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_watches.rs" 50 0 50 8] ()
end
module CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface as WatcherCrefsInRange0
  function lemma_push_maintains_watcher_invariant (w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (o : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) : ()
    
end
module CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface as WatcherCrefsInRange0
  function lemma_push_maintains_watcher_invariant [#"../CreuSAT/src/logic/logic_watches.rs" 62 0 62 86] (w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (o : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) : ()
    
   =
    [#"../CreuSAT/src/logic/logic_watches.rs" 57 0 57 8] ()
  axiom lemma_push_maintains_watcher_invariant_spec : forall w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type), f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type, o : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type . ([#"../CreuSAT/src/logic/logic_watches.rs" 59 11 59 39] WatcherCrefsInRange0.watcher_crefs_in_range w f) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 60 11 60 39] UInt64.to_int (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_cref o) < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))) -> ([#"../CreuSAT/src/logic/logic_watches.rs" 61 10 61 46] WatcherCrefsInRange0.watcher_crefs_in_range (Seq.snoc w o) f)
end
module CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant_Impl
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange as WatcherCrefsInRange0 with function Model0.model = Model0.model
  let rec ghost function lemma_push_maintains_watcher_invariant (w : Seq.seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (o : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) : ()
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 59 11 59 39] WatcherCrefsInRange0.watcher_crefs_in_range w f}
    requires {[#"../CreuSAT/src/logic/logic_watches.rs" 60 11 60 39] UInt64.to_int (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_cref o) < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    ensures { [#"../CreuSAT/src/logic/logic_watches.rs" 61 10 61 46] WatcherCrefsInRange0.watcher_crefs_in_range (Seq.snoc w o) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../CreuSAT/src/logic/logic_watches.rs" 57 0 57 8] ()
end
module CreuSat_Solver_GetAssertingLevel_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Borrow
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val get_asserting_level [@cfg:stackify] (clause : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : (usize, usize)
    requires {[#"../CreuSAT/src/solver.rs" 32 11 32 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/solver.rs" 33 11 33 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/solver.rs" 34 11 34 47] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model f)}
    requires {[#"../CreuSAT/src/solver.rs" 35 11 35 40] Invariant2.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/solver.rs" 36 11 36 30] Seq.length (Model1.model clause) > 1}
    requires {[#"../CreuSAT/src/solver.rs" 37 11 37 52] VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/solver.rs" 38 11 38 46] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause)}
    ensures { [#"../CreuSAT/src/solver.rs" 39 10 39 37] UInt64.to_int (let (a, _) = result in a) < Seq.length (Model1.model clause) }
    
end
module CreuSat_Solver_GetAssertingLevel
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model5 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with function Model0.model = Model7.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model7.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model7.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model7.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model6.model
  use CreuSat_Trail_Trail_Type
  clone CreusotContracts_Logic_Model_Impl0_Model as Model1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model6.model
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model2.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model3.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model5.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model2.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy2 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  clone CreuSat_Clause_Impl3_Len_Interface as Len0 with function Model0.model = Model1.model
  clone Alloc_Vec_Impl16_Index_Interface as Index2 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model4.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_Index_Interface as Index1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index0 with function Model0.model = Model1.model
  let rec cfg get_asserting_level [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 40 0 40 89] (clause : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : (usize, usize)
    requires {[#"../CreuSAT/src/solver.rs" 32 11 32 24] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/solver.rs" 33 11 33 30] Invariant1.invariant' trail f}
    requires {[#"../CreuSAT/src/solver.rs" 34 11 34 47] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model f)}
    requires {[#"../CreuSAT/src/solver.rs" 35 11 35 40] Invariant2.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/solver.rs" 36 11 36 30] Seq.length (Model1.model clause) > 1}
    requires {[#"../CreuSAT/src/solver.rs" 37 11 37 52] VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/solver.rs" 38 11 38 46] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause)}
    ensures { [#"../CreuSAT/src/solver.rs" 39 10 39 37] UInt64.to_int (let (a, _) = result in a) < Seq.length (Model1.model clause) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : (usize, usize);
  var clause_1 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var trail_2 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var max_i_4 : usize;
  var max_level_5 : usize;
  var _6 : usize;
  var _7 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _8 : usize;
  var _9 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _10 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _11 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var i_12 : usize;
  var _13 : ();
  var _14 : ();
  var _15 : bool;
  var _16 : usize;
  var _17 : usize;
  var _18 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var level_19 : usize;
  var _20 : usize;
  var _21 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _22 : usize;
  var _23 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _24 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _25 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _26 : usize;
  var _27 : ();
  var _28 : bool;
  var _29 : usize;
  var _30 : usize;
  var _31 : usize;
  var _32 : usize;
  var _33 : ();
  var _34 : ();
  var _35 : ();
  var _36 : usize;
  var _37 : usize;
  {
    clause_1 <- clause;
    trail_2 <- trail;
    f_3 <- f;
    goto BB0
  }
  BB0 {
    max_i_4 <- (1 : usize);
    _7 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level trail_2;
    _11 <- clause_1;
    _10 <- ([#"../CreuSAT/src/solver.rs" 42 43 42 52] Index0.index _11 (1 : usize));
    goto BB1
  }
  BB1 {
    _9 <- _10;
    _8 <- ([#"../CreuSAT/src/solver.rs" 42 43 42 60] Index1.index _9);
    goto BB2
  }
  BB2 {
    _6 <- ([#"../CreuSAT/src/solver.rs" 42 24 42 61] Index2.index _7 _8);
    goto BB3
  }
  BB3 {
    max_level_5 <- _6;
    i_12 <- (2 : usize);
    goto BB4
  }
  BB4 {
    invariant max_i_less { [#"../CreuSAT/src/solver.rs" 44 28 44 52] UInt64.to_int max_i_4 < Seq.length (Model1.model clause_1) };
    _16 <- i_12;
    _18 <- clause_1;
    _17 <- ([#"../CreuSAT/src/solver.rs" 45 14 45 26] Len0.len _18);
    goto BB5
  }
  BB5 {
    _15 <- ([#"../CreuSAT/src/solver.rs" 45 10 45 26] _16 < _17);
    switch (_15)
      | False -> goto BB13
      | _ -> goto BB6
      end
  }
  BB6 {
    _21 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level trail_2;
    _25 <- clause_1;
    _26 <- i_12;
    _24 <- ([#"../CreuSAT/src/solver.rs" 46 39 46 48] Index0.index _25 _26);
    goto BB7
  }
  BB7 {
    _23 <- _24;
    _22 <- ([#"../CreuSAT/src/solver.rs" 46 39 46 56] Index1.index _23);
    goto BB8
  }
  BB8 {
    _20 <- ([#"../CreuSAT/src/solver.rs" 46 20 46 57] Index2.index _21 _22);
    goto BB9
  }
  BB9 {
    level_19 <- _20;
    _29 <- level_19;
    _30 <- max_level_5;
    _28 <- ([#"../CreuSAT/src/solver.rs" 47 11 47 28] _29 > _30);
    switch (_28)
      | False -> goto BB11
      | _ -> goto BB10
      end
  }
  BB10 {
    _31 <- level_19;
    max_level_5 <- _31;
    _31 <- any usize;
    _32 <- i_12;
    max_i_4 <- _32;
    _32 <- any usize;
    _27 <- ();
    goto BB12
  }
  BB11 {
    _27 <- ();
    goto BB12
  }
  BB12 {
    i_12 <- ([#"../CreuSAT/src/solver.rs" 51 8 51 14] i_12 + (1 : usize));
    _14 <- ();
    goto BB4
  }
  BB13 {
    _13 <- ();
    _36 <- max_i_4;
    _37 <- max_level_5;
    _0 <- (_36, _37);
    return _0
  }
  
end
module Core_Ops_Index_IndexMut_IndexMut_Interface
  type self
  type idx
  use prelude.Borrow
  clone Core_Ops_Index_Index_Output_Type as Output0 with type self = self, type idx = idx
  val index_mut [@cfg:stackify] (self : borrowed self) (index : idx) : borrowed Output0.output
    requires {false}
    
end
module Core_Ops_Index_IndexMut_IndexMut
  type self
  type idx
  use prelude.Borrow
  clone Core_Ops_Index_Index_Output_Type as Output0 with type self = self, type idx = idx
  val index_mut [@cfg:stackify] (self : borrowed self) (index : idx) : borrowed Output0.output
    requires {false}
    
end
module CreuSat_Assignments_Impl1
  use mach.int.Int
  use prelude.UInt8
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Assignments_Impl0_Output_Type as Output0
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Assignments_Impl1_IndexMut_Interface as IndexMut0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone Core_Ops_Index_IndexMut_IndexMut_Interface as IndexMut1 with type self = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type idx = usize, val index_mut = IndexMut0.index_mut, type Output0.output = Output0.output
end
module CreuSat_Trail_Impl0_Backstep_Interface
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Borrow
  use prelude.UIntSize
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision_Interface as InvariantNoDecision0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val backstep [@cfg:stackify] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : usize
    requires {[#"../CreuSAT/src/trail.rs" 58 15 58 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 59 15 59 30] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) > 0}
    requires {[#"../CreuSAT/src/trail.rs" 60 4 60 54] InvariantNoDecision0.invariant_no_decision ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 61 15 61 75] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) f (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 60 4 60 54] InvariantNoDecision0.invariant_no_decision ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 62 14 62 84] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) f (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 63 14 63 35] UInt64.to_int result < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) }
    
end
module CreuSat_Trail_Impl0_Backstep
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Borrow
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant4 with function Model0.model = Model5.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model5.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model5.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant3.invariant',
  predicate Invariant1.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicUtil_Pop as Pop0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model1.model
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant1.invariant',
  function Model0.model = Model0.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model2.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model8 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  use Core_Option_Option_Type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = usize
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut1 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = uint8
  clone CreuSat_Assignments_Impl1_IndexMut_Interface as IndexMut0 with function Model0.model = Model8.model,
  function Model1.model = Model1.model
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone Alloc_Vec_Impl1_Pop_Interface as Pop1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  let rec cfg backstep [@cfg:stackify] [#"../CreuSAT/src/trail.rs" 65 4 65 48] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : usize
    requires {[#"../CreuSAT/src/trail.rs" 58 15 58 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 59 15 59 30] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) > 0}
    requires {[#"../CreuSAT/src/trail.rs" 60 4 60 54] InvariantNoDecision0.invariant_no_decision ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 61 15 61 75] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) f (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 60 4 60 54] InvariantNoDecision0.invariant_no_decision ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 62 14 62 84] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) f (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 63 14 63 35] UInt64.to_int result < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var f_2 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _3 : ();
  ghost var old_t_4 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _5 : ();
  var last_6 : Core_Option_Option_Type.core_option_option_type (CreuSat_Trail_Step_Type.creusat_trail_step_type);
  var _7 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _8 : ();
  var _9 : isize;
  var step_10 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _11 : ();
  var _12 : borrowed uint8;
  var _13 : borrowed (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type);
  var _14 : usize;
  var _15 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _16 : ();
  var _17 : ();
  var _18 : borrowed usize;
  var _19 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _20 : usize;
  var _21 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _22 : ();
  var _23 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _24 : ();
  var _25 : ();
  var _26 : ();
  {
    self_1 <- self;
    f_2 <- f;
    goto BB0
  }
  BB0 {
    _5 <- ();
    old_t_4 <- ghost ([#"../CreuSAT/src/trail.rs" 66 39 66 54] self_1);
    goto BB1
  }
  BB1 {
    _7 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b ( ^ _7) d e) };
    last_6 <- ([#"../CreuSAT/src/trail.rs" 68 19 68 35] Pop1.pop _7);
    goto BB2
  }
  BB2 {
    switch (last_6)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB3
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB5
      end
  }
  BB3 {
    assume { Resolve0.resolve self_1 };
    assert { [#"../CreuSAT/src/trail.rs" 85 30 85 97] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1))) f_2 (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1))) /\ true };
    _24 <- ();
    _8 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 88 8 88 53] Invariant1.invariant' (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1)) f_2 };
    _25 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 94 22 94 82] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1))) f_2 (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1))) };
    _26 <- ();
    _0 <- (0 : usize);
    goto BB11
  }
  BB4 {
    assume { Resolve0.resolve self_1 };
    absurd
  }
  BB5 {
    step_10 <- Core_Option_Option_Type.core_option_option_type_Some_0 last_6;
    last_6 <- (let Core_Option_Option_Type.Core_Option_Option_Some_Type a = last_6 in Core_Option_Option_Type.Core_Option_Option_Some_Type (any CreuSat_Trail_Step_Type.creusat_trail_step_type));
    _13 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type ( ^ _13) b c d e) };
    _15 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step_10;
    _14 <- ([#"../CreuSAT/src/trail.rs" 72 33 72 49] Index0.index _15);
    goto BB6
  }
  BB6 {
    _12 <- ([#"../CreuSAT/src/trail.rs" 72 16 72 50] IndexMut0.index_mut _13 _14);
    goto BB7
  }
  BB7 {
    _12 <- { _12 with current = ([#"../CreuSAT/src/trail.rs" 72 16 72 55]  * _12 + (2 : uint8)) };
    assume { Resolve1.resolve _12 };
    assert { [#"../CreuSAT/src/trail.rs" 74 30 74 62] Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1)) = Pop0.pop (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * old_t_4))) };
    _16 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 75 30 75 53]  ^ old_t_4 =  ^ self_1 };
    _17 <- ();
    _19 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a ( ^ _19) c d e) };
    assume { Resolve0.resolve self_1 };
    _21 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step_10;
    _20 <- ([#"../CreuSAT/src/trail.rs" 77 34 77 50] Index0.index _21);
    goto BB8
  }
  BB8 {
    _18 <- ([#"../CreuSAT/src/trail.rs" 77 16 77 51] IndexMut1.index_mut _19 _20);
    goto BB9
  }
  BB9 {
    _18 <- { _18 with current = (18446744073709551615 : usize) };
    assume { Resolve2.resolve _18 };
    assert { [#"../CreuSAT/src/trail.rs" 79 30 79 90] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1))) f_2 (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1))) };
    _22 <- ();
    _23 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step_10;
    _0 <- ([#"../CreuSAT/src/trail.rs" 80 23 80 39] Index0.index _23);
    goto BB10
  }
  BB10 {
    goto BB11
  }
  BB11 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_BacktrackTo_Interface
  use prelude.Borrow
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  val backtrack_to [@cfg:stackify] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (level : usize) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : ()
    requires {[#"../CreuSAT/src/trail.rs" 113 15 113 47] Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self))) > UInt64.to_int level}
    requires {[#"../CreuSAT/src/trail.rs" 114 15 114 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 115 4 115 42] Invariant1.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 116 4 116 48] Invariant2.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 118 15 118 75] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) f (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 115 4 115 42] Invariant1.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 116 4 116 48] Invariant2.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 119 14 119 84] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) f (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    
end
module CreuSat_Trail_Impl0_BacktrackTo
  use prelude.Borrow
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model7 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model6.model,
  function Model1.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model7.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use CreuSat_Decision_Node_Type
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model6.model,
  function Model1.model = Model7.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model6.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model7.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model4 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model6.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model7.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicUtil_Pop as Pop0 with type t = usize, axiom .
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted as LemmaPopMaintainsSorted0 with predicate Sorted0.sorted = Sorted0.sorted,
  function Pop0.pop = Pop0.pop, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model1.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model0.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model2.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  use CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant2 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model1.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model0.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model2.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model4.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  use Core_Option_Option_Type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone Alloc_Vec_Impl1_Pop_Interface as Pop1 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  clone Alloc_Vec_Impl1_Len_Interface as Len1 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreuSat_Trail_Impl0_Backstep_Interface as Backstep0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model1.model, function Model1.model = Model2.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone Alloc_Vec_Impl16_Index_Interface as Index1 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  type Output0.output = Output1.output
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model
  let rec cfg backtrack_to [@cfg:stackify] [#"../CreuSAT/src/trail.rs" 121 4 121 80] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (level : usize) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : ()
    requires {[#"../CreuSAT/src/trail.rs" 113 15 113 47] Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self))) > UInt64.to_int level}
    requires {[#"../CreuSAT/src/trail.rs" 114 15 114 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 115 4 115 42] Invariant1.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 116 4 116 48] Invariant2.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 118 15 118 75] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) f (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 115 4 115 42] Invariant1.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 116 4 116 48] Invariant2.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 119 14 119 84] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) f (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var level_2 : usize;
  var f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var d_4 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  ghost var old_t_5 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _6 : ();
  ghost var old_d_7 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _8 : ();
  var how_many_9 : usize;
  var _10 : usize;
  var _11 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _12 : usize;
  var _13 : usize;
  var _14 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _15 : usize;
  var des_16 : usize;
  var _17 : usize;
  var _18 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _19 : usize;
  var i_20 : usize;
  var curr_21 : usize;
  var timestamp_22 : usize;
  var _23 : bool;
  var _24 : usize;
  var _25 : CreuSat_Decision_Node_Type.creusat_decision_node_type;
  var _26 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _27 : usize;
  var _28 : ();
  var _29 : ();
  var _30 : bool;
  var _31 : usize;
  var _32 : usize;
  var idx_33 : usize;
  var _34 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _35 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _36 : ();
  var curr_timestamp_37 : usize;
  var _38 : CreuSat_Decision_Node_Type.creusat_decision_node_type;
  var _39 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Decision_Node_Type.creusat_decision_node_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _40 : usize;
  var _41 : ();
  var _42 : bool;
  var _43 : usize;
  var _44 : usize;
  var _45 : usize;
  var _46 : usize;
  var _47 : ();
  var _48 : ();
  var _49 : ();
  var _50 : usize;
  var _51 : ();
  var _52 : bool;
  var _53 : usize;
  var _54 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _55 : usize;
  ghost var old_t2_56 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _57 : ();
  var _58 : ();
  var _59 : ();
  var _60 : ();
  var _61 : ();
  var _62 : Core_Option_Option_Type.core_option_option_type usize;
  var _63 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _64 : isize;
  var _65 : ();
  var _66 : ();
  var _67 : ();
  var _68 : ();
  var _69 : ();
  var _70 : ();
  var _71 : ();
  var _72 : ();
  var _73 : ();
  var _74 : bool;
  var _75 : bool;
  var _76 : usize;
  var _77 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _78 : bool;
  var _79 : usize;
  var _80 : usize;
  var _81 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _82 : usize;
  var _83 : usize;
  var _84 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _85 : usize;
  var _86 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  ghost var old_t3_87 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _88 : ();
  var _89 : ();
  var _90 : ();
  var _91 : ();
  var _92 : ();
  var _93 : Core_Option_Option_Type.core_option_option_type usize;
  var _94 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _95 : isize;
  var _96 : ();
  var _97 : ();
  var _98 : ();
  var _99 : ();
  var _100 : ();
  var _101 : ();
  var _102 : ();
  var _103 : ();
  var _104 : ();
  var _105 : ();
  var _106 : ();
  var _107 : ();
  var _108 : usize;
  {
    self_1 <- self;
    level_2 <- level;
    f_3 <- f;
    d_4 <- d;
    goto BB0
  }
  BB0 {
    _6 <- ();
    old_t_5 <- ghost ([#"../CreuSAT/src/trail.rs" 122 39 122 54] self_1);
    goto BB1
  }
  BB1 {
    _8 <- ();
    old_d_7 <- ghost ([#"../CreuSAT/src/trail.rs" 123 43 123 55] d_4);
    goto BB2
  }
  BB2 {
    _11 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1);
    _10 <- ([#"../CreuSAT/src/trail.rs" 124 23 124 39] Len0.len _11);
    goto BB3
  }
  BB3 {
    _14 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1);
    _15 <- level_2;
    _13 <- ([#"../CreuSAT/src/trail.rs" 124 42 124 63] Index0.index _14 _15);
    goto BB4
  }
  BB4 {
    _12 <- _13;
    how_many_9 <- ([#"../CreuSAT/src/trail.rs" 124 23 124 63] _10 - _12);
    _18 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1);
    _19 <- level_2;
    _17 <- ([#"../CreuSAT/src/trail.rs" 125 18 125 39] Index0.index _18 _19);
    goto BB5
  }
  BB5 {
    des_16 <- _17;
    i_20 <- (0 : usize);
    curr_21 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_search ( * d_4);
    _24 <- curr_21;
    _23 <- ([#"../CreuSAT/src/trail.rs" 128 31 128 49] _24 <> (18446744073709551615 : usize));
    switch (_23)
      | False -> goto BB8
      | _ -> goto BB6
      end
  }
  BB6 {
    _26 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * d_4);
    _27 <- curr_21;
    _25 <- ([#"../CreuSAT/src/trail.rs" 128 52 128 71] Index1.index _26 _27);
    goto BB7
  }
  BB7 {
    timestamp_22 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_ts _25;
    goto BB9
  }
  BB8 {
    timestamp_22 <- (0 : usize);
    goto BB9
  }
  BB9 {
    goto BB10
  }
  BB10 {
    invariant i_less2 { [#"../CreuSAT/src/trail.rs" 129 29 129 55] UInt64.to_int i_20 <= Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * old_t_5))) };
    invariant i_less { [#"../CreuSAT/src/trail.rs" 130 28 130 41] i_20 <= how_many_9 };
    invariant post_unit { [#"../CreuSAT/src/trail.rs" 131 31 131 91] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1))) f_3 (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1))) };
    invariant inv { [#"../CreuSAT/src/trail.rs" 132 25 132 55] InvariantNoDecision0.invariant_no_decision ( * self_1) f_3 };
    invariant d_inv { [#"../CreuSAT/src/trail.rs" 133 27 133 51] Invariant2.invariant' ( * d_4) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_3)) };
    invariant proph { [#"../CreuSAT/src/trail.rs" 135 27 135 50]  ^ old_t_5 =  ^ self_1 };
    invariant proph_d { [#"../CreuSAT/src/trail.rs" 136 29 136 49]  ^ old_d_7 =  ^ d_4 };
    invariant curr_less { [#"../CreuSAT/src/trail.rs" 137 31 137 85] UInt64.to_int curr_21 < Seq.length (Model3.model (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * d_4))) \/ UInt64.to_int curr_21 = 18446744073709551615 };
    _31 <- i_20;
    _32 <- how_many_9;
    _30 <- ([#"../CreuSAT/src/trail.rs" 139 14 139 26] _31 < _32);
    switch (_30)
      | False -> goto BB17
      | _ -> goto BB11
      end
  }
  BB11 {
    _34 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _34) };
    _35 <- f_3;
    idx_33 <- ([#"../CreuSAT/src/trail.rs" 140 22 140 38] Backstep0.backstep _34 _35);
    goto BB12
  }
  BB12 {
    assert { [#"../CreuSAT/src/trail.rs" 141 26 141 44] UInt64.to_int idx_33 < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_3) };
    _36 <- ();
    _39 <- CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type_Decisions_linked_list ( * d_4);
    _40 <- idx_33;
    _38 <- ([#"../CreuSAT/src/trail.rs" 142 33 142 51] Index1.index _39 _40);
    goto BB13
  }
  BB13 {
    curr_timestamp_37 <- CreuSat_Decision_Node_Type.creusat_decision_node_type_Node_ts _38;
    _43 <- curr_timestamp_37;
    _44 <- timestamp_22;
    _42 <- ([#"../CreuSAT/src/trail.rs" 143 15 143 41] _43 > _44);
    switch (_42)
      | False -> goto BB15
      | _ -> goto BB14
      end
  }
  BB14 {
    _45 <- curr_timestamp_37;
    timestamp_22 <- _45;
    _45 <- any usize;
    _46 <- idx_33;
    curr_21 <- _46;
    _46 <- any usize;
    _41 <- ();
    goto BB16
  }
  BB15 {
    _41 <- ();
    goto BB16
  }
  BB16 {
    i_20 <- ([#"../CreuSAT/src/trail.rs" 147 12 147 18] i_20 + (1 : usize));
    _29 <- ();
    goto BB10
  }
  BB17 {
    _28 <- ();
    _50 <- curr_21;
    d_4 <- { d_4 with current = (let CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c d =  * d_4 in CreuSat_Decision_Decisions_Type.CreuSat_Decision_Decisions_Type a b c _50) };
    _50 <- any usize;
    assume { Resolve0.resolve d_4 };
    goto BB18
  }
  BB18 {
    invariant post_unit { [#"../CreuSAT/src/trail.rs" 151 31 151 91] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1))) f_3 (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1))) };
    invariant inv { [#"../CreuSAT/src/trail.rs" 152 25 152 55] InvariantNoDecision0.invariant_no_decision ( * self_1) f_3 };
    invariant proph { [#"../CreuSAT/src/trail.rs" 153 27 153 50]  ^ old_t_5 =  ^ self_1 };
    _54 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1);
    _53 <- ([#"../CreuSAT/src/trail.rs" 154 14 154 34] Len1.len _54);
    goto BB19
  }
  BB19 {
    _55 <- level_2;
    _52 <- ([#"../CreuSAT/src/trail.rs" 154 14 154 42] _53 > _55);
    switch (_52)
      | False -> goto BB26
      | _ -> goto BB20
      end
  }
  BB20 {
    _57 <- ();
    old_t2_56 <- ghost ([#"../CreuSAT/src/trail.rs" 155 44 155 59] self_1);
    goto BB21
  }
  BB21 {
    assert { [#"../CreuSAT/src/trail.rs" 156 26 156 49] Sorted0.sorted (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) };
    _58 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 157 26 157 53] Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) > 0 };
    _59 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 158 26 158 69] let _ = LemmaPopMaintainsSorted0.lemma_pop_maintains_sorted (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) in true };
    _60 <- ();
    _63 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d ( ^ _63)) };
    _62 <- ([#"../CreuSAT/src/trail.rs" 159 18 159 38] Pop1.pop _63);
    goto BB22
  }
  BB22 {
    switch (_62)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB23
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB25
      end
  }
  BB23 {
    assume { Resolve1.resolve self_1 };
    absurd
  }
  BB24 {
    assume { Resolve1.resolve self_1 };
    absurd
  }
  BB25 {
    assert { [#"../CreuSAT/src/trail.rs" 161 34 161 75] Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1)) = Pop0.pop (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * old_t2_56))) };
    _65 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 162 34 162 60]  ^ old_t2_56 =  ^ self_1 };
    _66 <- ();
    _61 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 168 26 168 49] Sorted0.sorted (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) };
    _69 <- ();
    _29 <- ();
    goto BB18
  }
  BB26 {
    _51 <- ();
    goto BB27
  }
  BB27 {
    invariant post_unit { [#"../CreuSAT/src/trail.rs" 171 31 171 91] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1))) f_3 (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1))) };
    invariant inv { [#"../CreuSAT/src/trail.rs" 172 25 172 55] InvariantNoDecision0.invariant_no_decision ( * self_1) f_3 };
    invariant proph { [#"../CreuSAT/src/trail.rs" 173 27 173 50]  ^ old_t_5 =  ^ self_1 };
    _77 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1);
    _76 <- ([#"../CreuSAT/src/trail.rs" 174 14 174 34] Len1.len _77);
    goto BB31
  }
  BB28 {
    _74 <- false;
    goto BB30
  }
  BB29 {
    _81 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1);
    _84 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1);
    _83 <- ([#"../CreuSAT/src/trail.rs" 174 57 174 77] Len1.len _84);
    goto BB32
  }
  BB30 {
    switch (_74)
      | False -> goto BB41
      | _ -> goto BB35
      end
  }
  BB31 {
    _75 <- ([#"../CreuSAT/src/trail.rs" 174 14 174 38] _76 > (0 : usize));
    switch (_75)
      | False -> goto BB28
      | _ -> goto BB29
      end
  }
  BB32 {
    _82 <- ([#"../CreuSAT/src/trail.rs" 174 57 174 81] _83 - (1 : usize));
    _80 <- ([#"../CreuSAT/src/trail.rs" 174 42 174 82] Index0.index _81 _82);
    goto BB33
  }
  BB33 {
    _79 <- _80;
    _86 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1);
    _85 <- ([#"../CreuSAT/src/trail.rs" 174 85 174 101] Len0.len _86);
    goto BB34
  }
  BB34 {
    _78 <- ([#"../CreuSAT/src/trail.rs" 174 42 174 101] _79 > _85);
    _74 <- _78;
    _78 <- any bool;
    goto BB30
  }
  BB35 {
    _88 <- ();
    old_t3_87 <- ghost ([#"../CreuSAT/src/trail.rs" 175 44 175 59] self_1);
    goto BB36
  }
  BB36 {
    assert { [#"../CreuSAT/src/trail.rs" 176 26 176 49] Sorted0.sorted (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) };
    _89 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 177 26 177 53] Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) > 0 };
    _90 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 178 26 178 69] let _ = LemmaPopMaintainsSorted0.lemma_pop_maintains_sorted (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) in true };
    _91 <- ();
    _94 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d ( ^ _94)) };
    _93 <- ([#"../CreuSAT/src/trail.rs" 180 18 180 38] Pop1.pop _94);
    goto BB37
  }
  BB37 {
    switch (_93)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB38
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB40
      end
  }
  BB38 {
    assume { Resolve1.resolve self_1 };
    absurd
  }
  BB39 {
    assume { Resolve1.resolve self_1 };
    absurd
  }
  BB40 {
    assert { [#"../CreuSAT/src/trail.rs" 182 34 182 77] Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1)) = Pop0.pop (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * old_t3_87))) };
    _96 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 183 34 183 60]  ^ old_t3_87 =  ^ self_1 };
    _97 <- ();
    _92 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 189 26 189 71] let _ = LemmaPopMaintainsSorted0.lemma_pop_maintains_sorted (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * old_t3_87))) in true };
    _100 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 190 26 190 49] Sorted0.sorted (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) };
    _101 <- ();
    _29 <- ();
    goto BB27
  }
  BB41 {
    _73 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 193 12 194 80] Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) = 0 \/ UInt64.to_int (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) (Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1))) - 1)) <= Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1))) };
    _105 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 197 8 197 53] Invariant3.invariant' (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1)) f_3 };
    _106 <- ();
    assert { [#"../CreuSAT/src/trail.rs" 202 22 202 82] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1))) f_3 (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1))) };
    _107 <- ();
    _108 <- level_2;
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c _108 e) };
    _108 <- any usize;
    assume { Resolve1.resolve self_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Trail_Impl0_BacktrackSafe_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val backtrack_safe [@cfg:stackify] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (level : usize) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : ()
    requires {[#"../CreuSAT/src/trail.rs" 101 15 101 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 102 4 102 42] Invariant1.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 103 4 103 48] Invariant2.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 104 15 104 75] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) f (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 102 4 102 42] Invariant1.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 103 4 103 48] Invariant2.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 105 14 105 84] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) f (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    
end
module CreuSat_Trail_Impl0_BacktrackSafe
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model7 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model6.model,
  function Model1.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model7.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model6.model,
  function Model1.model = Model7.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model6.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model7.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model6.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model7.model
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant2 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model0.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model2.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreuSat_Trail_Impl0_BacktrackTo_Interface as BacktrackTo0 with function Model0.model = Model3.model,
  predicate Invariant0.invariant' = Invariant0.invariant', predicate Invariant1.invariant' = Invariant1.invariant',
  predicate Invariant2.invariant' = Invariant2.invariant', function Model1.model = Model0.model,
  function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with function Model0.model = Model3.model
  let rec cfg backtrack_safe [@cfg:stackify] [#"../CreuSAT/src/trail.rs" 106 4 106 82] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (level : usize) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : ()
    requires {[#"../CreuSAT/src/trail.rs" 101 15 101 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 102 4 102 42] Invariant1.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 103 4 103 48] Invariant2.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 104 15 104 75] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) f (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 102 4 102 42] Invariant1.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 103 4 103 48] Invariant2.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 105 14 105 84] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) f (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var level_2 : usize;
  var f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var d_4 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _5 : bool;
  var _6 : usize;
  var _7 : usize;
  var _8 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _9 : ();
  var _10 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _11 : usize;
  var _12 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _13 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  {
    self_1 <- self;
    level_2 <- level;
    f_3 <- f;
    d_4 <- d;
    goto BB0
  }
  BB0 {
    _6 <- level_2;
    _8 <-  * self_1;
    _7 <- ([#"../CreuSAT/src/trail.rs" 107 19 107 40] DecisionLevel0.decision_level _8);
    goto BB1
  }
  BB1 {
    _5 <- ([#"../CreuSAT/src/trail.rs" 107 11 107 40] _6 < _7);
    switch (_5)
      | False -> goto BB4
      | _ -> goto BB2
      end
  }
  BB2 {
    _10 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _10) };
    _11 <- level_2;
    _12 <- f_3;
    _13 <- borrow_mut ( * d_4);
    d_4 <- { d_4 with current = ( ^ _13) };
    _9 <- ([#"../CreuSAT/src/trail.rs" 108 12 108 42] BacktrackTo0.backtrack_to _10 _11 _12 _13);
    goto BB3
  }
  BB3 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve d_4 };
    _0 <- ();
    goto BB5
  }
  BB4 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve d_4 };
    _0 <- ();
    goto BB5
  }
  BB5 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_EnqAssignment_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  use CreuSat_Lit_Lit_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit_Interface as ClausePostWithRegardsToLit0
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model3 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_Logic_Unset_Interface as Unset1
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail_Interface as IdxInTrail0
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  val enq_assignment [@cfg:stackify] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (step : CreuSat_Trail_Step_Type.creusat_trail_step_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/trail.rs" 210 4 210 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/trail.rs" 211 15 211 29] Invariant1.invariant' _f}
    requires {[#"../CreuSAT/src/trail.rs" 212 4 212 49] Invariant2.invariant' (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/trail.rs" 213 4 213 43] Invariant3.invariant' (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason step) _f}
    requires {[#"../CreuSAT/src/trail.rs" 214 15 227 5] match (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason step) with
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type cref -> UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) /\ Unset0.unset (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) 0) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)) /\ (forall i : (int) . 1 <= i /\ i < Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) -> Unsat0.unsat (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) i) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) /\ Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) 0 = CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Unit_Type cref -> UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) /\ CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step = Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) 0
      | _ -> true
      end}
    requires {[#"../CreuSAT/src/trail.rs" 228 4 228 51] not IdxInTrail0.idx_in_trail (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))}
    requires {[#"../CreuSAT/src/trail.rs" 229 15 229 65] Unset1.unset (Seq.get (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step)))}
    requires {[#"../CreuSAT/src/trail.rs" 230 15 230 76] LongArePostUnitInner0.long_are_post_unit_inner (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) _f (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 210 4 210 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/trail.rs" 231 4 232 94] forall j : (int) . 0 <= j /\ j < Seq.length (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) /\ j <> IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step) -> Seq.get (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) j = Seq.get (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) j }
    ensures { [#"../CreuSAT/src/trail.rs" 233 4 233 49] Sat0.sat (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self)) }
    ensures { [#"../CreuSAT/src/trail.rs" 234 14 234 85] LongArePostUnitInner0.long_are_post_unit_inner (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) _f (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 235 14 238 5] match (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason step) with
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type k -> ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int k)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self)) (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step)
      | _ -> true
      end }
    ensures { [#"../CreuSAT/src/trail.rs" 239 14 239 63] Seq.length (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) = 1 + Seq.length (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 240 14 240 49] CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( ^ self) = CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self) }
    
end
module CreuSat_Trail_Impl0_EnqAssignment
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant2.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  function Model0.model = Model1.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model5 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model1.model
  use CreuSat_Trail_Step_Type
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant3 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model2.model
  use CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_Logic_Unset as Unset1
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model3.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model2.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model5.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess as LemmaPushMaintainsLitNotInLess0 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Invariant1.invariant' = Invariant0.invariant', function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate Unset0.unset = Unset1.unset,
  predicate Invariant2.invariant' = Invariant2.invariant', function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror, axiom .
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit as ClausePostWithRegardsToLit0 with function Model0.model = Model2.model,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail as IdxInTrail0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model2.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with function Model0.model = Model2.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy2
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type
  clone CreusotContracts_Logic_Model_Impl1_Model as Model9 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model8 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model3.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model
  clone CreuSat_Assignments_Impl2_SetAssignment_Interface as SetAssignment0 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant2.invariant', predicate Invariant2.invariant' = Invariant1.invariant',
  function Model0.model = Model8.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model9.model, function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate Unset0.unset = Unset1.unset,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  function Model2.model = Model2.model, predicate Sat0.sat = Sat0.sat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = usize
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model4.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with function Model0.model = Model4.model
  let rec cfg enq_assignment [@cfg:stackify] [#"../CreuSAT/src/trail.rs" 241 4 241 62] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (step : CreuSat_Trail_Step_Type.creusat_trail_step_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/trail.rs" 210 4 210 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/trail.rs" 211 15 211 29] Invariant1.invariant' _f}
    requires {[#"../CreuSAT/src/trail.rs" 212 4 212 49] Invariant2.invariant' (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f))}
    requires {[#"../CreuSAT/src/trail.rs" 213 4 213 43] Invariant3.invariant' (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason step) _f}
    requires {[#"../CreuSAT/src/trail.rs" 214 15 227 5] match (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason step) with
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type cref -> UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) /\ Unset0.unset (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) 0) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)) /\ (forall i : (int) . 1 <= i /\ i < Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) -> Unsat0.unsat (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) i) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) /\ Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) 0 = CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Unit_Type cref -> UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) /\ CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step = Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int cref))) 0
      | _ -> true
      end}
    requires {[#"../CreuSAT/src/trail.rs" 228 4 228 51] not IdxInTrail0.idx_in_trail (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))}
    requires {[#"../CreuSAT/src/trail.rs" 229 15 229 65] Unset1.unset (Seq.get (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) (IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step)))}
    requires {[#"../CreuSAT/src/trail.rs" 230 15 230 76] LongArePostUnitInner0.long_are_post_unit_inner (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) _f (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 210 4 210 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/trail.rs" 231 4 232 94] forall j : (int) . 0 <= j /\ j < Seq.length (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) /\ j <> IndexLogic0.index_logic (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step) -> Seq.get (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) j = Seq.get (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) j }
    ensures { [#"../CreuSAT/src/trail.rs" 233 4 233 49] Sat0.sat (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self)) }
    ensures { [#"../CreuSAT/src/trail.rs" 234 14 234 85] LongArePostUnitInner0.long_are_post_unit_inner (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) _f (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 235 14 238 5] match (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_reason step) with
      | CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type k -> ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses _f)) (UInt64.to_int k)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self)) (CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step)
      | _ -> true
      end }
    ensures { [#"../CreuSAT/src/trail.rs" 239 14 239 63] Seq.length (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) = 1 + Seq.length (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 240 14 240 49] CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( ^ self) = CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var step_2 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _4 : usize;
  var _5 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _6 : borrowed usize;
  var _7 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _8 : usize;
  var _9 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var trail_10 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _11 : ();
  var _12 : borrowed (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type);
  var _13 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _14 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _15 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _16 : ();
  var _17 : ();
  var _18 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _19 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _20 : ();
  {
    self_1 <- self;
    step_2 <- step;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    _5 <-  * self_1;
    _4 <- ([#"../CreuSAT/src/trail.rs" 242 46 242 67] DecisionLevel0.decision_level _5);
    goto BB1
  }
  BB1 {
    _7 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a ( ^ _7) c d e) };
    _9 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step_2;
    _8 <- ([#"../CreuSAT/src/trail.rs" 242 26 242 42] Index0.index _9);
    goto BB2
  }
  BB2 {
    _6 <- ([#"../CreuSAT/src/trail.rs" 242 8 242 43] IndexMut0.index_mut _7 _8);
    goto BB3
  }
  BB3 {
    _6 <- { _6 with current = _4 };
    _4 <- any usize;
    assume { Resolve0.resolve _6 };
    trail_10 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1);
    _12 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type ( ^ _12) b c d e) };
    _13 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit step_2;
    _14 <- _f_3;
    _15 <- trail_10;
    _11 <- ([#"../CreuSAT/src/trail.rs" 245 8 245 60] SetAssignment0.set_assignment _12 _13 _14 _15);
    goto BB4
  }
  BB4 {
    assert { [#"../CreuSAT/src/trail.rs" 248 22 248 76] let _ = LemmaPushMaintainsLitNotInLess0.lemma_push_maintains_lit_not_in_less ( * self_1) _f_3 step_2 in true };
    _16 <- ();
    _18 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b ( ^ _18) d e) };
    _19 <- step_2;
    step_2 <- any CreuSat_Trail_Step_Type.creusat_trail_step_type;
    _17 <- ([#"../CreuSAT/src/trail.rs" 249 8 249 29] Push0.push _18 _19);
    goto BB5
  }
  BB5 {
    assume { Resolve1.resolve self_1 };
    assert { [#"../CreuSAT/src/trail.rs" 254 22 254 83] LongArePostUnitInner0.long_are_post_unit_inner (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1))) _f_3 (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1))) };
    _20 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Solver_Impl0_HandleLongClause_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant4
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val handle_long_clause [@cfg:stackify] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (t : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (w : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (clause : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (s_idx : usize) : ()
    requires {[#"../CreuSAT/src/solver.rs" 106 4 106 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 107 4 107 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 108 4 108 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 109 4 109 48] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 110 15 110 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/solver.rs" 111 15 111 44] Invariant4.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 112 15 112 50] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model f)}
    requires {[#"../CreuSAT/src/solver.rs" 113 15 113 34] Seq.length (Model1.model clause) > 1}
    requires {[#"../CreuSAT/src/solver.rs" 114 15 114 39] UInt64.to_int s_idx < Seq.length (Model1.model clause)}
    ensures { [#"../CreuSAT/src/solver.rs" 106 4 106 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 107 4 107 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 108 4 108 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 109 4 109 48] Invariant3.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 115 14 115 43] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 116 14 116 27] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_Solver_Impl0_HandleLongClause
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model9.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model11 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model5 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model9.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model11.model,
  function Model1.model = Model9.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model9.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model9.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model9.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant5 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model9.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model1.model
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model2.model
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model6.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant5.invariant',
  function Model0.model = Model3.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model5.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model2.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with function Model0.model = Model1.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner as UnitInner0 with predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
  predicate SatInner0.sat_inner = SatInner2.sat_inner, function Model0.model = Model1.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit as ClausePostWithRegardsToLit0 with function Model0.model = Model5.model,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail as IdxInTrail0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model5.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset1 with function Model0.model = Model5.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unit as Unit0 with function Model0.model = Model5.model,
  predicate UnitInner0.unit_inner = UnitInner0.unit_inner
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve7 with type t = usize
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model14 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model13 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model2.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreusotContracts_Logic_Model_Impl1_Model as Model12 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve6 with type t = CreuSat_Solver_Solver_Type.creusat_solver_solver_type
  clone CreuSat_Solver_Impl0_IncreaseNumConflicts_Interface as IncreaseNumConflicts0
  clone CreuSat_Solver_Impl0_IncreaseNumLemmas_Interface as IncreaseNumLemmas0
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve5 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreuSat_Trail_Impl0_EnqAssignment_Interface as EnqAssignment0 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Invariant1.invariant' = Invariant0.invariant', predicate Invariant2.invariant' = Invariant6.invariant',
  predicate Invariant3.invariant' = Invariant7.invariant', function Model0.model = Model9.model,
  function Model1.model = Model1.model, predicate Unset0.unset = Unset1.unset, predicate Unsat0.unsat = Unsat0.unsat,
  predicate IdxInTrail0.idx_in_trail = IdxInTrail0.idx_in_trail, function Model2.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate Unset1.unset = Unset0.unset,
  function Model3.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate Sat0.sat = Sat0.sat,
  predicate ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit = ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve4 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreuSat_Clause_Impl3_UnitAndUnset_Interface as UnitAndUnset0 with function Model0.model = Model14.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal,
  predicate Invariant0.invariant' = Invariant5.invariant', predicate Unit0.unit = Unit0.unit,
  predicate Unset0.unset = Unset1.unset
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model14.model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with function Model0.model = Model13.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve3 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreuSat_Trail_Impl0_BacktrackSafe_Interface as BacktrackSafe0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant3.invariant',
  function Model0.model = Model3.model, function Model1.model = Model5.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Util_UpdateSlow_Interface as UpdateSlow0
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = usize
  clone CreuSat_Util_UpdateFast_Interface as UpdateFast0
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreuSat_Formula_Impl2_AddClause_Interface as AddClause0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function Model0.model = Model1.model, predicate Invariant3.invariant' = Invariant4.invariant',
  function Model1.model = Model0.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  predicate Equisat0.equisat = Equisat0.equisat, function Model2.model = Model9.model,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Clause_Impl3_CalcLbd_Interface as CalcLbd0 with function Model0.model = Model4.model,
  predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreusotContracts_Logic_Resolve_Impl0_Resolve as Resolve0 with type t1 = usize, type t2 = usize,
  predicate Resolve0.resolve = Resolve7.resolve, predicate Resolve1.resolve = Resolve7.resolve
  clone CreuSat_Solver_GetAssertingLevel_Interface as GetAssertingLevel0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', function Model0.model = Model13.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  predicate Invariant2.invariant' = Invariant4.invariant', function Model1.model = Model14.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Clause_Impl3_SwapLitsInClause_Interface as SwapLitsInClause0 with function Model0.model = Model12.model,
  predicate Invariant0.invariant' = Invariant4.invariant',
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension,
  function Model1.model = Model1.model
  let rec cfg handle_long_clause [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 117 4 119 5] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (t : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (w : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (clause : CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (s_idx : usize) : ()
    requires {[#"../CreuSAT/src/solver.rs" 106 4 106 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 107 4 107 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 108 4 108 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 109 4 109 48] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 110 15 110 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/solver.rs" 111 15 111 44] Invariant4.invariant' clause (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 112 15 112 50] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model f)}
    requires {[#"../CreuSAT/src/solver.rs" 113 15 113 34] Seq.length (Model1.model clause) > 1}
    requires {[#"../CreuSAT/src/solver.rs" 114 15 114 39] UInt64.to_int s_idx < Seq.length (Model1.model clause)}
    ensures { [#"../CreuSAT/src/solver.rs" 106 4 106 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 107 4 107 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 108 4 108 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 109 4 109 48] Invariant3.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 115 14 115 43] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 116 14 116 27] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var f_2 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var t_3 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var w_4 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var d_5 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var clause_6 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var s_idx_7 : usize;
  var _8 : ();
  var _9 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _10 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _11 : usize;
  var idx_12 : usize;
  var level_13 : usize;
  var _14 : (usize, usize);
  var _15 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _16 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _17 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _18 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _19 : ();
  var _20 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _21 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _22 : usize;
  var lbd_23 : usize;
  var _24 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _25 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _26 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _27 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var cref_28 : usize;
  var _29 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _30 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _31 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _32 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _33 : ();
  var _34 : borrowed usize;
  var _35 : borrowed usize;
  var _36 : usize;
  var _37 : ();
  var _38 : borrowed usize;
  var _39 : borrowed usize;
  var _40 : usize;
  var _41 : ();
  var _42 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _43 : usize;
  var _44 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _45 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var lit_46 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _47 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _48 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _49 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _50 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _51 : usize;
  var step_52 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _53 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _54 : usize;
  var _55 : CreuSat_Trail_Reason_Type.creusat_trail_reason_type;
  var _56 : usize;
  var _57 : ();
  var _58 : bool;
  var _59 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _60 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _61 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _62 : usize;
  var _63 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _64 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _65 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _66 : ();
  var _67 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _68 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _69 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _70 : ();
  var _71 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _72 : ();
  var _73 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  {
    self_1 <- self;
    f_2 <- f;
    t_3 <- t;
    w_4 <- w;
    d_5 <- d;
    clause_6 <- clause;
    s_idx_7 <- s_idx;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    _9 <- borrow_mut clause_6;
    clause_6 <-  ^ _9;
    _10 <-  * f_2;
    _11 <- s_idx_7;
    _8 <- ([#"../CreuSAT/src/solver.rs" 120 8 120 47] SwapLitsInClause0.swap_lits_in_clause _9 _10 _11 (0 : usize));
    goto BB5
  }
  BB5 {
    _16 <- clause_6;
    _15 <- _16;
    _17 <-  * t_3;
    _18 <-  * f_2;
    _14 <- ([#"../CreuSAT/src/solver.rs" 121 27 121 61] GetAssertingLevel0.get_asserting_level _15 _17 _18);
    goto BB6
  }
  BB6 {
    idx_12 <- (let (a, _) = _14 in a);
    level_13 <- (let (_, a) = _14 in a);
    assume { Resolve0.resolve _14 };
    _20 <- borrow_mut clause_6;
    clause_6 <-  ^ _20;
    _21 <-  * f_2;
    _22 <- idx_12;
    _19 <- ([#"../CreuSAT/src/solver.rs" 122 8 122 45] SwapLitsInClause0.swap_lits_in_clause _20 _21 _22 (1 : usize));
    goto BB7
  }
  BB7 {
    _24 <- clause_6;
    _25 <-  * f_2;
    _26 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _26) };
    _27 <-  * t_3;
    lbd_23 <- ([#"../CreuSAT/src/solver.rs" 125 18 125 45] CalcLbd0.calc_lbd _24 _25 _26 _27);
    goto BB8
  }
  BB8 {
    _29 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _29) };
    _30 <- clause_6;
    clause_6 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    _31 <- borrow_mut ( * w_4);
    w_4 <- { w_4 with current = ( ^ _31) };
    _32 <-  * t_3;
    cref_28 <- ([#"../CreuSAT/src/solver.rs" 126 19 126 45] AddClause0.add_clause _29 _30 _31 _32);
    goto BB9
  }
  BB9 {
    assume { Resolve1.resolve w_4 };
    _35 <- borrow_mut (CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_fast ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e f g h =  * self_1 in CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e ( ^ _35) g h) };
    _34 <- borrow_mut ( * _35);
    _35 <- { _35 with current = ( ^ _34) };
    _36 <- lbd_23;
    _33 <- ([#"../CreuSAT/src/solver.rs" 127 8 127 40] UpdateFast0.update_fast _34 _36);
    goto BB10
  }
  BB10 {
    assume { Resolve2.resolve _35 };
    _39 <- borrow_mut (CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_slow ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e f g h =  * self_1 in CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e f ( ^ _39) h) };
    _38 <- borrow_mut ( * _39);
    _39 <- { _39 with current = ( ^ _38) };
    _40 <- lbd_23;
    _37 <- ([#"../CreuSAT/src/solver.rs" 128 8 128 40] UpdateSlow0.update_slow _38 _40);
    goto BB11
  }
  BB11 {
    assume { Resolve2.resolve _39 };
    _42 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _42) };
    _43 <- level_13;
    _44 <-  * f_2;
    _45 <- borrow_mut ( * d_5);
    d_5 <- { d_5 with current = ( ^ _45) };
    _41 <- ([#"../CreuSAT/src/solver.rs" 131 8 131 37] BacktrackSafe0.backtrack_safe _42 _43 _44 _45);
    goto BB12
  }
  BB12 {
    assume { Resolve3.resolve d_5 };
    _50 <-  * f_2;
    _51 <- cref_28;
    _49 <- ([#"../CreuSAT/src/solver.rs" 133 18 133 25] Index0.index _50 _51);
    goto BB13
  }
  BB13 {
    _48 <- _49;
    _47 <- ([#"../CreuSAT/src/solver.rs" 133 18 133 28] Index1.index _48 (0 : usize));
    goto BB14
  }
  BB14 {
    lit_46 <- _47;
    _53 <- lit_46;
    _54 <- level_13;
    _56 <- cref_28;
    _55 <- CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type _56;
    step_52 <- CreuSat_Trail_Step_Type.CreuSat_Trail_Step_Type _53 _54 _55;
    _61 <-  * f_2;
    _62 <- cref_28;
    _60 <- ([#"../CreuSAT/src/solver.rs" 140 11 140 18] Index0.index _61 _62);
    goto BB15
  }
  BB15 {
    _59 <- _60;
    _64 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * t_3);
    _63 <- _64;
    _65 <-  * f_2;
    _58 <- ([#"../CreuSAT/src/solver.rs" 140 11 140 52] UnitAndUnset0.unit_and_unset _59 _63 _65);
    goto BB16
  }
  BB16 {
    switch (_58)
      | False -> goto BB19
      | _ -> goto BB17
      end
  }
  BB17 {
    _67 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _67) };
    _68 <- step_52;
    step_52 <- any CreuSat_Trail_Step_Type.creusat_trail_step_type;
    _69 <-  * f_2;
    assume { Resolve4.resolve f_2 };
    _66 <- ([#"../CreuSAT/src/solver.rs" 141 12 141 37] EnqAssignment0.enq_assignment _67 _68 _69);
    goto BB18
  }
  BB18 {
    assume { Resolve5.resolve t_3 };
    _57 <- ();
    goto BB20
  }
  BB19 {
    assume { Resolve4.resolve f_2 };
    assume { Resolve5.resolve t_3 };
    _57 <- ();
    goto BB20
  }
  BB20 {
    _71 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _71) };
    _70 <- ([#"../CreuSAT/src/solver.rs" 144 8 144 34] IncreaseNumLemmas0.increase_num_lemmas _71);
    goto BB21
  }
  BB21 {
    _73 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _73) };
    _72 <- ([#"../CreuSAT/src/solver.rs" 145 8 145 37] IncreaseNumConflicts0.increase_num_conflicts _73);
    goto BB22
  }
  BB22 {
    assume { Resolve6.resolve self_1 };
    _0 <- ();
    goto BB23
  }
  BB23 {
    return _0
  }
  
end
module Core_Result_Result_Type
  type core_result_result_type 't 'e =
    | Core_Result_Result_Ok_Type 't
    | Core_Result_Result_Err_Type 'e
    
  let function core_result_result_type_Err_0 (self : core_result_result_type 't 'e) : 'e
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | Core_Result_Result_Ok_Type _ -> any 'e
      | Core_Result_Result_Err_Type a -> a
      end
  let function core_result_result_type_Ok_0 (self : core_result_result_type 't 'e) : 't
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | Core_Result_Result_Ok_Type a -> a
      | Core_Result_Result_Err_Type _ -> any 't
      end
end
module CreuSat_Trail_Impl0_LearnUnit_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Lit_Lit_Type
  use CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Interface as Sat0
  use Core_Result_Result_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model3
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  val learn_unit [@cfg:stackify] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (cref : usize) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : Core_Result_Result_Type.core_result_result_type () ()
    requires {[#"../CreuSAT/src/trail.rs" 283 4 283 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 284 4 284 48] Invariant1.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 285 15 285 28] Invariant2.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 286 15 286 41] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    requires {[#"../CreuSAT/src/trail.rs" 287 15 287 48] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))) = 1}
    requires {[#"../CreuSAT/src/trail.rs" 288 15 288 57] Invariant3.invariant' (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref)) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 294 15 294 75] LongArePostUnitInner0.long_are_post_unit_inner (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) f (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 283 4 283 42] Invariant0.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 284 4 284 48] Invariant1.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 291 14 293 68] match (result) with
      | Core_Result_Result_Type.Core_Result_Result_Err_Type _ -> true
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type _ -> Sat0.sat (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))) 0) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))
      end }
    ensures { [#"../CreuSAT/src/trail.rs" 295 14 295 84] LongArePostUnitInner0.long_are_post_unit_inner (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) f (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    
end
module CreuSat_Trail_Impl0_LearnUnit
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model6 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model1.model
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model3 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model3.model
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Trail_Trail_Type
  use Core_Result_Result_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model6.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit as ClausePostWithRegardsToLit0 with function Model0.model = Model3.model,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_Logic_Unset as Unset1
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail as IdxInTrail0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model3.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy2
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with function Model0.model = Model3.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model3.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model10 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model9 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model6.model
  clone CreuSat_Trail_Impl0_EnqAssignment_Interface as EnqAssignment0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant2.invariant', predicate Invariant2.invariant' = Invariant5.invariant',
  predicate Invariant3.invariant' = Invariant6.invariant', function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Unset0.unset = Unset0.unset, predicate Unsat0.unsat = Unsat0.unsat,
  predicate IdxInTrail0.idx_in_trail = IdxInTrail0.idx_in_trail, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate Unset1.unset = Unset1.unset,
  function Model3.model = Model2.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate Sat0.sat = Sat0.sat,
  predicate ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit = ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreuSat_Lit_Impl1_LitSet_Interface as LitSet0 with function Model0.model = Model11.model,
  predicate Invariant0.invariant' = Invariant5.invariant', predicate Unset0.unset = Unset0.unset
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model10.model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with function Model0.model = Model9.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreuSat_Trail_Impl0_BacktrackTo_Interface as BacktrackTo0 with function Model0.model = Model4.model,
  predicate Invariant0.invariant' = Invariant2.invariant', predicate Invariant1.invariant' = Invariant0.invariant',
  predicate Invariant2.invariant' = Invariant1.invariant', function Model1.model = Model2.model,
  function Model2.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with function Model0.model = Model4.model
  let rec cfg learn_unit [@cfg:stackify] [#"../CreuSAT/src/trail.rs" 296 4 296 95] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (cref : usize) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : Core_Result_Result_Type.core_result_result_type () ()
    requires {[#"../CreuSAT/src/trail.rs" 283 4 283 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 284 4 284 48] Invariant1.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 285 15 285 28] Invariant2.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 286 15 286 41] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    requires {[#"../CreuSAT/src/trail.rs" 287 15 287 48] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))) = 1}
    requires {[#"../CreuSAT/src/trail.rs" 288 15 288 57] Invariant3.invariant' (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref)) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 294 15 294 75] LongArePostUnitInner0.long_are_post_unit_inner (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) f (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 283 4 283 42] Invariant0.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 284 4 284 48] Invariant1.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 291 14 293 68] match (result) with
      | Core_Result_Result_Type.Core_Result_Result_Err_Type _ -> true
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type _ -> Sat0.sat (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))) 0) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))
      end }
    ensures { [#"../CreuSAT/src/trail.rs" 295 14 295 84] LongArePostUnitInner0.long_are_post_unit_inner (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) f (Model3.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Result_Result_Type.core_result_result_type () ();
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var cref_2 : usize;
  var f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var d_4 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _5 : ();
  var _6 : bool;
  var _7 : usize;
  var _8 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _9 : ();
  var _10 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _11 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _12 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _13 : ();
  var _14 : bool;
  var _15 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _16 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _17 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _18 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _19 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _20 : usize;
  var _21 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _22 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _23 : ();
  var _24 : ();
  var _25 : ();
  var _26 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _27 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _28 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _29 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _30 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _31 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _32 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _33 : usize;
  var _34 : CreuSat_Trail_Reason_Type.creusat_trail_reason_type;
  var _35 : usize;
  var _36 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _37 : ();
  {
    self_1 <- self;
    cref_2 <- cref;
    f_3 <- f;
    d_4 <- d;
    goto BB0
  }
  BB0 {
    _8 <-  * self_1;
    _7 <- ([#"../CreuSAT/src/trail.rs" 297 11 297 32] DecisionLevel0.decision_level _8);
    goto BB1
  }
  BB1 {
    _6 <- ([#"../CreuSAT/src/trail.rs" 297 11 297 36] _7 > (0 : usize));
    switch (_6)
      | False -> goto BB4
      | _ -> goto BB2
      end
  }
  BB2 {
    _10 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _10) };
    _11 <- f_3;
    _12 <- borrow_mut ( * d_4);
    d_4 <- { d_4 with current = ( ^ _12) };
    _9 <- ([#"../CreuSAT/src/trail.rs" 298 12 298 38] BacktrackTo0.backtrack_to _10 (0 : usize) _11 _12);
    goto BB3
  }
  BB3 {
    assume { Resolve0.resolve d_4 };
    _5 <- ();
    goto BB5
  }
  BB4 {
    assume { Resolve0.resolve d_4 };
    _5 <- ();
    goto BB5
  }
  BB5 {
    _19 <- f_3;
    _20 <- cref_2;
    _18 <- ([#"../CreuSAT/src/trail.rs" 302 11 302 18] Index0.index _19 _20);
    goto BB6
  }
  BB6 {
    _17 <- _18;
    _16 <- ([#"../CreuSAT/src/trail.rs" 302 11 302 21] Index1.index _17 (0 : usize));
    goto BB7
  }
  BB7 {
    _15 <- _16;
    _22 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1);
    _21 <- _22;
    _14 <- ([#"../CreuSAT/src/trail.rs" 302 11 302 48] LitSet0.lit_set _15 _21);
    goto BB8
  }
  BB8 {
    switch (_14)
      | False -> goto BB10
      | _ -> goto BB9
      end
  }
  BB9 {
    assume { Resolve1.resolve self_1 };
    _24 <- ();
    _0 <- Core_Result_Result_Type.Core_Result_Result_Err_Type _24;
    goto BB14
  }
  BB10 {
    _13 <- ();
    _26 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _26) };
    _32 <- f_3;
    _33 <- cref_2;
    _31 <- ([#"../CreuSAT/src/trail.rs" 305 40 305 47] Index0.index _32 _33);
    goto BB11
  }
  BB11 {
    _30 <- _31;
    _29 <- ([#"../CreuSAT/src/trail.rs" 305 40 305 50] Index1.index _30 (0 : usize));
    goto BB12
  }
  BB12 {
    _28 <- _29;
    _35 <- cref_2;
    _34 <- CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Unit_Type _35;
    _27 <- CreuSat_Trail_Step_Type.CreuSat_Trail_Step_Type _28 (0 : usize) _34;
    _36 <- f_3;
    _25 <- ([#"../CreuSAT/src/trail.rs" 305 8 305 103] EnqAssignment0.enq_assignment _26 _27 _36);
    goto BB13
  }
  BB13 {
    assume { Resolve1.resolve self_1 };
    _37 <- ();
    _0 <- Core_Result_Result_Type.Core_Result_Result_Ok_Type _37;
    goto BB14
  }
  BB14 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_HandleConflict_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  use Core_Option_Option_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val handle_conflict [@cfg:stackify] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (t : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (cref : usize) (w : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : Core_Option_Option_Type.core_option_option_type bool
    requires {[#"../CreuSAT/src/solver.rs" 149 4 149 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 150 4 150 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 151 4 151 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 152 4 152 48] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 153 15 153 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/solver.rs" 154 15 154 41] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 155 15 155 55] Unsat0.unsat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * t))}
    ensures { [#"../CreuSAT/src/solver.rs" 149 4 149 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 150 4 150 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 151 4 151 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 152 4 152 48] Invariant3.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 156 14 156 43] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 157 14 157 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 158 14 162 5] match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Core_Option_Option_Type.Core_Option_Option_Some_Type (True) -> true
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> true
      end }
    
end
module CreuSat_Solver_Impl0_HandleConflict
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model7 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model4 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model0.model,
  function Model1.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model7.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model1 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model1.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model9.model,
  function Model1.model = Model0.model, function Model2.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model7.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  function Model0.model = Model7.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model7.model
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model7.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use Core_Option_Option_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with function Model0.model = Model4.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model5.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model1.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model12 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  use Core_Result_Result_Type
  use CreuSat_ConflictAnalysis_Conflict_Type
  clone CreuSat_Formula_Impl2_SimplifyFormula_Interface as SimplifyFormula0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant2.invariant', predicate Invariant2.invariant' = Invariant1.invariant',
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Formula_Impl2_ReduceDb_Interface as ReduceDb0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant2.invariant', predicate Invariant2.invariant' = Invariant1.invariant',
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_LearnUnit_Interface as LearnUnit0 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant', predicate Invariant2.invariant' = Invariant0.invariant',
  function Model0.model = Model0.model, function Model1.model = Model7.model,
  predicate Invariant3.invariant' = Invariant5.invariant', function Model2.model = Model2.model,
  function Model3.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate Sat0.sat = Sat0.sat, predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Formula_Impl2_AddUnit_Interface as AddUnit0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', function Model0.model = Model7.model,
  predicate Invariant2.invariant' = Invariant5.invariant',
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner,
  function Model1.model = Model12.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  function Model2.model = Model0.model, predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Solver_Impl0_HandleLongClause_Interface as HandleLongClause0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  predicate Invariant3.invariant' = Invariant3.invariant', predicate Invariant4.invariant' = Invariant5.invariant',
  function Model0.model = Model12.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  function Model1.model = Model7.model, predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_BacktrackSafe_Interface as BacktrackSafe0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant3.invariant',
  function Model0.model = Model2.model, function Model1.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Formula_Impl2_AddClause_Interface as AddClause0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function Model0.model = Model7.model, predicate Invariant3.invariant' = Invariant5.invariant',
  function Model1.model = Model12.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  predicate Equisat0.equisat = Equisat0.equisat, function Model2.model = Model0.model,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve4 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve3 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Solver_Solver_Type.creusat_solver_solver_type
  clone CreuSat_ConflictAnalysis_AnalyzeConflict_Interface as AnalyzeConflict0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', function Model0.model = Model0.model,
  predicate Unsat0.unsat = Unsat0.unsat, predicate Invariant2.invariant' = Invariant3.invariant',
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate Invariant3.invariant' = Invariant5.invariant', function Model1.model = Model7.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner,
  function Model2.model = Model11.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  let rec cfg handle_conflict [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 163 4 165 21] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (t : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (cref : usize) (w : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : Core_Option_Option_Type.core_option_option_type bool
    requires {[#"../CreuSAT/src/solver.rs" 149 4 149 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 150 4 150 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 151 4 151 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 152 4 152 48] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 153 15 153 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/solver.rs" 154 15 154 41] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 155 15 155 55] Unsat0.unsat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * t))}
    ensures { [#"../CreuSAT/src/solver.rs" 149 4 149 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 150 4 150 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 151 4 151 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 152 4 152 48] Invariant3.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 156 14 156 43] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 157 14 157 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 158 14 162 5] match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Core_Option_Option_Type.Core_Option_Option_Some_Type (True) -> true
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.core_option_option_type bool;
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var f_2 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var t_3 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var cref_4 : usize;
  var w_5 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var d_6 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var res_7 : CreuSat_ConflictAnalysis_Conflict_Type.creusat_conflictanalysis_conflict_type;
  var _8 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _9 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _10 : usize;
  var _11 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _12 : ();
  var _13 : isize;
  var _14 : ();
  var clause_15 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var cref_16 : usize;
  var _17 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _18 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _19 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _20 : ();
  var _21 : Core_Result_Result_Type.core_result_result_type () ();
  var _22 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _23 : usize;
  var _24 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _25 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _26 : isize;
  var _27 : ();
  var _28 : ();
  var _29 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _30 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _31 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _32 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _33 : ();
  var _34 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _35 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _36 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var s_idx_37 : usize;
  var clause_38 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _39 : ();
  var _40 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _41 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _42 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _43 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _44 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _45 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _46 : usize;
  var clause_47 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _48 : usize;
  var _49 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _50 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _51 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _52 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _53 : ();
  var _54 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _55 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _56 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  {
    self_1 <- self;
    f_2 <- f;
    t_3 <- t;
    cref_4 <- cref;
    w_5 <- w;
    d_6 <- d;
    goto BB0
  }
  BB0 {
    _8 <-  * f_2;
    _9 <-  * t_3;
    _10 <- cref_4;
    _11 <- borrow_mut ( * d_6);
    d_6 <- { d_6 with current = ( ^ _11) };
    res_7 <- ([#"../CreuSAT/src/solver.rs" 166 18 166 49] AnalyzeConflict0.analyze_conflict _8 _9 _10 _11);
    goto BB1
  }
  BB1 {
    switch (res_7)
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Ground_Type -> goto BB4
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Unit_Type _ -> goto BB5
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Learned_Type _ _ -> goto BB14
      | CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Restart_Type _ -> goto BB2
      end
  }
  BB2 {
    assume { Resolve0.resolve self_1 };
    clause_47 <- CreuSat_ConflictAnalysis_Conflict_Type.creusat_conflictanalysis_conflict_type_Restart_0 res_7;
    res_7 <- (let CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Restart_Type a = res_7 in CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Restart_Type (any CreuSat_Clause_Clause_Type.creusat_clause_clause_type));
    _49 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _49) };
    _50 <- clause_47;
    clause_47 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    _51 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _51) };
    _52 <-  * t_3;
    _48 <- ([#"../CreuSAT/src/solver.rs" 188 16 188 42] AddClause0.add_clause _49 _50 _51 _52);
    goto BB17
  }
  BB3 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    assume { Resolve4.resolve d_6 };
    absurd
  }
  BB4 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    assume { Resolve4.resolve d_6 };
    _0 <- Core_Option_Option_Type.Core_Option_Option_Some_Type false;
    goto BB23
  }
  BB5 {
    clause_15 <- CreuSat_ConflictAnalysis_Conflict_Type.creusat_conflictanalysis_conflict_type_Unit_0 res_7;
    res_7 <- (let CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Unit_Type a = res_7 in CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Unit_Type (any CreuSat_Clause_Clause_Type.creusat_clause_clause_type));
    _17 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _17) };
    _18 <- clause_15;
    clause_15 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    _19 <-  * t_3;
    cref_16 <- ([#"../CreuSAT/src/solver.rs" 175 27 175 48] AddUnit0.add_unit _17 _18 _19);
    goto BB6
  }
  BB6 {
    _22 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _22) };
    _23 <- cref_16;
    _24 <-  * f_2;
    _25 <- borrow_mut ( * d_6);
    d_6 <- { d_6 with current = ( ^ _25) };
    _21 <- ([#"../CreuSAT/src/solver.rs" 176 22 176 46] LearnUnit0.learn_unit _22 _23 _24 _25);
    goto BB7
  }
  BB7 {
    assume { Resolve4.resolve d_6 };
    switch (_21)
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type _ -> goto BB8
      | Core_Result_Result_Type.Core_Result_Result_Err_Type _ -> goto BB10
      end
  }
  BB8 {
    _20 <- ();
    _29 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _29) };
    _30 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _30) };
    _31 <-  * t_3;
    _32 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _32) };
    _28 <- ([#"../CreuSAT/src/solver.rs" 181 16 181 38] ReduceDb0.reduceDB _29 _30 _31 _32);
    goto BB11
  }
  BB9 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    absurd
  }
  BB10 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    _0 <- Core_Option_Option_Type.Core_Option_Option_Some_Type true;
    goto BB22
  }
  BB11 {
    assume { Resolve0.resolve self_1 };
    _34 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _34) };
    _35 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _35) };
    _36 <-  * t_3;
    assume { Resolve2.resolve t_3 };
    _33 <- ([#"../CreuSAT/src/solver.rs" 182 16 182 40] SimplifyFormula0.simplify_formula _34 _35 _36);
    goto BB12
  }
  BB12 {
    assume { Resolve1.resolve f_2 };
    assume { Resolve3.resolve w_5 };
    _12 <- ();
    goto BB13
  }
  BB13 {
    goto BB20
  }
  BB14 {
    s_idx_37 <- CreuSat_ConflictAnalysis_Conflict_Type.creusat_conflictanalysis_conflict_type_Learned_0 res_7;
    clause_38 <- CreuSat_ConflictAnalysis_Conflict_Type.creusat_conflictanalysis_conflict_type_Learned_1 res_7;
    res_7 <- (let CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Learned_Type a b = res_7 in CreuSat_ConflictAnalysis_Conflict_Type.CreuSat_ConflictAnalysis_Conflict_Learned_Type a (any CreuSat_Clause_Clause_Type.creusat_clause_clause_type));
    _40 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _40) };
    _41 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _41) };
    _42 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _42) };
    _43 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _43) };
    _44 <- borrow_mut ( * d_6);
    d_6 <- { d_6 with current = ( ^ _44) };
    _45 <- clause_38;
    clause_38 <- any CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
    _46 <- s_idx_37;
    _39 <- ([#"../CreuSAT/src/solver.rs" 185 16 185 66] HandleLongClause0.handle_long_clause _40 _41 _42 _43 _44 _45 _46);
    goto BB15
  }
  BB15 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    assume { Resolve4.resolve d_6 };
    _12 <- ();
    goto BB16
  }
  BB16 {
    goto BB20
  }
  BB17 {
    assume { Resolve3.resolve w_5 };
    _54 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _54) };
    _55 <-  * f_2;
    assume { Resolve1.resolve f_2 };
    _56 <- borrow_mut ( * d_6);
    d_6 <- { d_6 with current = ( ^ _56) };
    _53 <- ([#"../CreuSAT/src/solver.rs" 189 16 189 41] BacktrackSafe0.backtrack_safe _54 (0 : usize) _55 _56);
    goto BB18
  }
  BB18 {
    assume { Resolve2.resolve t_3 };
    assume { Resolve4.resolve d_6 };
    _12 <- ();
    goto BB19
  }
  BB19 {
    goto BB20
  }
  BB20 {
    _0 <- Core_Option_Option_Type.Core_Option_Option_None_Type;
    goto BB21
  }
  BB21 {
    goto BB25
  }
  BB22 {
    goto BB23
  }
  BB23 {
    goto BB24
  }
  BB24 {
    goto BB25
  }
  BB25 {
    return _0
  }
  
end
module CreuSat_Solver_ConflictResult_Type
  type creusat_solver_conflictresult_type  =
    | CreuSat_Solver_ConflictResult_Ok_Type
    | CreuSat_Solver_ConflictResult_Err_Type
    | CreuSat_Solver_ConflictResult_Ground_Type
    | CreuSat_Solver_ConflictResult_Continue_Type
    
end
module CreuSat_Util_MinLog_Interface
  use mach.int.Int
  function min_log (a : int) (b : int) : int
end
module CreuSat_Util_MinLog
  use mach.int.Int
  function min_log [#"../CreuSAT/src/util.rs" 88 0 88 33] (a : int) (b : int) : int =
    [#"../CreuSAT/src/util.rs" 87 0 87 8] if a <= b then a else b
end
module CreuSat_Util_Min_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  clone CreuSat_Util_MinLog_Interface as MinLog0
  val min [@cfg:stackify] (a : usize) (b : usize) : usize
    ensures { [#"../CreuSAT/src/util.rs" 96 10 96 36] UInt64.to_int result = MinLog0.min_log (UInt64.to_int a) (UInt64.to_int b) }
    ensures { [#"../CreuSAT/src/util.rs" 97 0 97 38] UInt64.to_int a <= UInt64.to_int b -> UInt64.to_int result = UInt64.to_int a }
    ensures { [#"../CreuSAT/src/util.rs" 98 0 98 37] UInt64.to_int b < UInt64.to_int a -> UInt64.to_int result = UInt64.to_int b }
    ensures { [#"../CreuSAT/src/util.rs" 99 10 99 40] UInt64.to_int result <= UInt64.to_int b /\ UInt64.to_int result <= UInt64.to_int a }
    
end
module CreuSat_Util_Min
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  clone CreuSat_Util_MinLog as MinLog0
  let rec cfg min [@cfg:stackify] [#"../CreuSAT/src/util.rs" 100 0 100 39] (a : usize) (b : usize) : usize
    ensures { [#"../CreuSAT/src/util.rs" 96 10 96 36] UInt64.to_int result = MinLog0.min_log (UInt64.to_int a) (UInt64.to_int b) }
    ensures { [#"../CreuSAT/src/util.rs" 97 0 97 38] UInt64.to_int a <= UInt64.to_int b -> UInt64.to_int result = UInt64.to_int a }
    ensures { [#"../CreuSAT/src/util.rs" 98 0 98 37] UInt64.to_int b < UInt64.to_int a -> UInt64.to_int result = UInt64.to_int b }
    ensures { [#"../CreuSAT/src/util.rs" 99 10 99 40] UInt64.to_int result <= UInt64.to_int b /\ UInt64.to_int result <= UInt64.to_int a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var a_1 : usize;
  var b_2 : usize;
  var _3 : bool;
  var _4 : usize;
  var _5 : usize;
  {
    a_1 <- a;
    b_2 <- b;
    goto BB0
  }
  BB0 {
    _4 <- a_1;
    _5 <- b_2;
    _3 <- ([#"../CreuSAT/src/util.rs" 101 7 101 13] _4 <= _5);
    switch (_3)
      | False -> goto BB2
      | _ -> goto BB1
      end
  }
  BB1 {
    _0 <- a_1;
    goto BB3
  }
  BB2 {
    _0 <- b_2;
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module CreuSat_Util_MaxLog_Interface
  use mach.int.Int
  function max_log (a : int) (b : int) : int
end
module CreuSat_Util_MaxLog
  use mach.int.Int
  function max_log [#"../CreuSAT/src/util.rs" 109 0 109 33] (a : int) (b : int) : int =
    [#"../CreuSAT/src/util.rs" 108 0 108 8] if a >= b then a else b
end
module CreuSat_Util_Max_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  clone CreuSat_Util_MaxLog_Interface as MaxLog0
  val max [@cfg:stackify] (a : usize) (b : usize) : usize
    ensures { [#"../CreuSAT/src/util.rs" 117 10 117 36] UInt64.to_int result = MaxLog0.max_log (UInt64.to_int a) (UInt64.to_int b) }
    
end
module CreuSat_Util_Max
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  clone CreuSat_Util_MaxLog as MaxLog0
  let rec cfg max [@cfg:stackify] [#"../CreuSAT/src/util.rs" 118 0 118 39] (a : usize) (b : usize) : usize
    ensures { [#"../CreuSAT/src/util.rs" 117 10 117 36] UInt64.to_int result = MaxLog0.max_log (UInt64.to_int a) (UInt64.to_int b) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : usize;
  var a_1 : usize;
  var b_2 : usize;
  var _3 : bool;
  var _4 : usize;
  var _5 : usize;
  {
    a_1 <- a;
    b_2 <- b;
    goto BB0
  }
  BB0 {
    _4 <- a_1;
    _5 <- b_2;
    _3 <- ([#"../CreuSAT/src/util.rs" 119 7 119 13] _4 >= _5);
    switch (_3)
      | False -> goto BB2
      | _ -> goto BB1
      end
  }
  BB1 {
    _0 <- a_1;
    goto BB3
  }
  BB2 {
    _0 <- b_2;
    goto BB3
  }
  BB3 {
    return _0
  }
  
end
module CreuSat_UnitProp_Swap_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq.Permut
  use prelude.UIntSize
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val swap [@cfg:stackify] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (watches : CreuSat_Watches_Watches_Type.creusat_watches_watches_type) (cref : usize) (j : usize) (k : usize) : ()
    requires {[#"../CreuSAT/src/unit_prop.rs" 55 0 55 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 56 0 56 39] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 57 0 57 41] Invariant2.invariant' watches ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 58 11 58 44] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 59 11 59 37] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 60 11 60 44] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) > UInt64.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 61 11 61 44] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) > UInt64.to_int k}
    requires {[#"../CreuSAT/src/unit_prop.rs" 62 11 62 67] not SatInner0.sat_inner (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) 0) (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 55 0 55 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 56 0 56 39] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 57 0 57 41] Invariant2.invariant' watches ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 63 10 63 76] Permut.exchange (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int cref))) (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) (UInt64.to_int j) (UInt64.to_int k) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 64 10 64 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 65 10 65 53] Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) = Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 67 10 67 23] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_UnitProp_Swap
  use prelude.Borrow
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq.Permut
  use prelude.UIntSize
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner2 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model10.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model4 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreusotContracts_Logic_Model_Impl1_Model as Model3 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model4.model
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model7.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model5.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model6.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model2.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model4.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.Slice
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model11 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model12 with type t = seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type),
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model11.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type)
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  function Model0.model = Model12.model, function Model1.model = Model11.model
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model11.model,
  function Model1.model = Model8.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  let rec cfg swap [@cfg:stackify] [#"../CreuSAT/src/unit_prop.rs" 68 0 68 91] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (watches : CreuSat_Watches_Watches_Type.creusat_watches_watches_type) (cref : usize) (j : usize) (k : usize) : ()
    requires {[#"../CreuSAT/src/unit_prop.rs" 55 0 55 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 56 0 56 39] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 57 0 57 41] Invariant2.invariant' watches ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 58 11 58 44] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 59 11 59 37] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 60 11 60 44] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) > UInt64.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 61 11 61 44] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) > UInt64.to_int k}
    requires {[#"../CreuSAT/src/unit_prop.rs" 62 11 62 67] not SatInner0.sat_inner (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) 0) (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 55 0 55 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 56 0 56 39] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 57 0 57 41] Invariant2.invariant' watches ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 63 10 63 76] Permut.exchange (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int cref))) (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) (UInt64.to_int j) (UInt64.to_int k) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 64 10 64 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 65 10 65 53] Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) = Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 67 10 67 23] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var trail_2 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var watches_3 : CreuSat_Watches_Watches_Type.creusat_watches_watches_type;
  var cref_4 : usize;
  var j_5 : usize;
  var k_6 : usize;
  ghost var old_f_7 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _8 : ();
  var _9 : ();
  var _10 : borrowed (seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type));
  var _11 : borrowed (seq (CreuSat_Lit_Lit_Type.creusat_lit_lit_type));
  var _12 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _13 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _14 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _15 : usize;
  var _16 : usize;
  var _17 : usize;
  var _18 : ();
  var _19 : ();
  var _20 : ();
  var _21 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    j_5 <- j;
    k_6 <- k;
    goto BB0
  }
  BB0 {
    _8 <- ();
    old_f_7 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 69 37 69 49] f_1);
    goto BB1
  }
  BB1 {
    _14 <- borrow_mut (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1));
    f_1 <- { f_1 with current = (let CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type a b =  * f_1 in CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type ( ^ _14) b) };
    assume { Resolve0.resolve f_1 };
    _15 <- cref_4;
    _13 <- ([#"../CreuSAT/src/unit_prop.rs" 71 4 71 19] IndexMut0.index_mut _14 _15);
    goto BB2
  }
  BB2 {
    _12 <- borrow_mut (CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_lits ( * _13));
    _13 <- { _13 with current = (let CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c d =  * _13 in CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c ( ^ _12)) };
    assume { Resolve1.resolve _13 };
    _11 <- ([#"../CreuSAT/src/unit_prop.rs" 71 4 71 35] DerefMut0.deref_mut _12);
    goto BB3
  }
  BB3 {
    _10 <- borrow_mut ( * _11);
    _11 <- { _11 with current = ( ^ _10) };
    _16 <- j_5;
    _17 <- k_6;
    _9 <- ([#"../CreuSAT/src/unit_prop.rs" 71 4 71 35] Swap0.swap _10 _16 _17);
    goto BB4
  }
  BB4 {
    assume { Resolve2.resolve _11 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 73 18 73 72] VarsInRangeInner0.vars_in_range_inner (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f_1))) };
    _18 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 74 18 74 66] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) };
    _19 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 76 4 76 175] forall a2 : (Seq.seq uint8) . Seq.length a2 = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f_1)) /\ CompleteInner0.complete_inner a2 /\ SatInner1.sat_inner (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * old_f_7))) (UInt64.to_int cref_4)) a2 -> SatInner1.sat_inner (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) a2 };
    _20 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 77 4 77 82] EventuallySatComplete0.eventually_sat_complete (Model3.model old_f_7) -> EventuallySatComplete0.eventually_sat_complete (Model3.model f_1) };
    _21 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Watches_UpdateWatch_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model3 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface as ToWatchidxLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  val update_watch [@cfg:stackify] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (cref : usize) (j : usize) (k : usize) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : ()
    requires {[#"../CreuSAT/src/watches.rs" 30 0 30 41] Invariant0.invariant' ( * watches) f}
    requires {[#"../CreuSAT/src/watches.rs" 31 11 31 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/watches.rs" 32 11 32 42] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)}
    requires {[#"../CreuSAT/src/watches.rs" 33 11 33 24] Invariant1.invariant' f}
    requires {[#"../CreuSAT/src/watches.rs" 34 11 34 30] Invariant2.invariant' trail f}
    requires {[#"../CreuSAT/src/watches.rs" 35 11 35 37] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    requires {[#"../CreuSAT/src/watches.rs" 36 11 36 55] 0 <= UInt64.to_int k /\ UInt64.to_int k < Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref)))}
    requires {[#"../CreuSAT/src/watches.rs" 37 11 37 44] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/watches.rs" 38 11 38 68] Seq.length (Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    ensures { [#"../CreuSAT/src/watches.rs" 30 0 30 41] Invariant0.invariant' ( ^ watches) f }
    
end
module CreuSat_Watches_UpdateWatch
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model7 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model4 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model1.model
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model3.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_WatchValid as WatchValid0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange as WatcherCrefsInRange0 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant as LemmaPushMaintainsWatcherInvariant0 with predicate WatcherCrefsInRange0.watcher_crefs_in_range = WatcherCrefsInRange0.watcher_crefs_in_range,
  function Model0.model = Model0.model, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicUtil_Pop as Pop0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  axiom .
  clone CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant as LemmaPopWatchMaintainsWatcherInvariant0 with predicate WatcherCrefsInRange0.watcher_crefs_in_range = WatcherCrefsInRange0.watcher_crefs_in_range,
  function Pop0.pop = Pop0.pop, axiom .
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model5.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model6.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model7.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model4.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model2.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  use prelude.Slice
  use prelude.IntSize
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy3
  clone CreusotContracts_Logic_Model_Impl0_Model as Model13 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy3.modelTy, function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy2
  clone CreusotContracts_Logic_Model_Impl0_Model as Model12 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model4.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model10 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model11 with type t = seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model10.model
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  use Core_Option_Option_Type
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model
  clone CreuSat_Lit_Impl1_ToNegWatchidx_Interface as ToNegWatchidx0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function ToNegWatchidxLogic0.to_neg_watchidx_logic = ToNegWatchidxLogic0.to_neg_watchidx_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone Alloc_Vec_Impl1_Pop_Interface as Pop1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model
  clone CreuSat_Clause_Impl0_Index_Interface as Index2 with function Model0.model = Model13.model
  clone CreuSat_Formula_Impl0_Index_Interface as Index1 with function Model0.model = Model12.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  function Model0.model = Model11.model, function Model1.model = Model10.model
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model10.model,
  function Model1.model = Model3.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_ToWatchidx_Interface as ToWatchidx0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  let rec cfg update_watch [@cfg:stackify] [#"../CreuSAT/src/watches.rs" 39 0 39 113] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (cref : usize) (j : usize) (k : usize) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : ()
    requires {[#"../CreuSAT/src/watches.rs" 30 0 30 41] Invariant0.invariant' ( * watches) f}
    requires {[#"../CreuSAT/src/watches.rs" 31 11 31 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/watches.rs" 32 11 32 42] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)}
    requires {[#"../CreuSAT/src/watches.rs" 33 11 33 24] Invariant1.invariant' f}
    requires {[#"../CreuSAT/src/watches.rs" 34 11 34 30] Invariant2.invariant' trail f}
    requires {[#"../CreuSAT/src/watches.rs" 35 11 35 37] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f))}
    requires {[#"../CreuSAT/src/watches.rs" 36 11 36 55] 0 <= UInt64.to_int k /\ UInt64.to_int k < Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref)))}
    requires {[#"../CreuSAT/src/watches.rs" 37 11 37 44] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f)) (UInt64.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/watches.rs" 38 11 38 68] Seq.length (Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    ensures { [#"../CreuSAT/src/watches.rs" 30 0 30 41] Invariant0.invariant' ( ^ watches) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var f_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var trail_2 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var cref_4 : usize;
  var j_5 : usize;
  var k_6 : usize;
  var lit_7 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var watchidx_8 : usize;
  var _9 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var end'_10 : usize;
  var _11 : usize;
  var _12 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _13 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _14 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _15 : usize;
  var _16 : ();
  var _17 : borrowed (seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type));
  var _18 : borrowed (seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type));
  var _19 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _20 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _21 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _22 : usize;
  var _23 : usize;
  var _24 : usize;
  var curr_lit_25 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _26 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _27 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _28 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _29 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _30 : usize;
  var _31 : usize;
  var _32 : ();
  ghost var old_w_33 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _34 : ();
  var _35 : ();
  var _36 : Core_Option_Option_Type.core_option_option_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type);
  var _37 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _38 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _39 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _40 : usize;
  var _41 : isize;
  var w_42 : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type;
  var _43 : ();
  var _44 : ();
  var _45 : ();
  var _46 : ();
  var _47 : ();
  var _48 : ();
  var _49 : ();
  var _50 : ();
  var watch_lit_51 : usize;
  var _52 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _53 : ();
  var _54 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _55 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _56 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _57 : usize;
  var _58 : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type;
  var _59 : ();
  var _60 : ();
  var _61 : ();
  var _62 : ();
  var _63 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    j_5 <- j;
    k_6 <- k;
    lit_7 <- lit;
    goto BB0
  }
  BB0 {
    _9 <- lit_7;
    watchidx_8 <- ([#"../CreuSAT/src/watches.rs" 40 19 40 36] ToWatchidx0.to_watchidx _9);
    goto BB1
  }
  BB1 {
    _14 <- CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3);
    _15 <- watchidx_8;
    _13 <- ([#"../CreuSAT/src/watches.rs" 41 14 41 39] Index0.index _14 _15);
    goto BB2
  }
  BB2 {
    _12 <- _13;
    _11 <- ([#"../CreuSAT/src/watches.rs" 41 14 41 45] Len0.len _12);
    goto BB3
  }
  BB3 {
    end'_10 <- ([#"../CreuSAT/src/watches.rs" 41 14 41 49] _11 - (1 : usize));
    _21 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * watches_3 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _21)) };
    _22 <- watchidx_8;
    _20 <- ([#"../CreuSAT/src/watches.rs" 42 4 42 29] IndexMut0.index_mut _21 _22);
    goto BB4
  }
  BB4 {
    _19 <- borrow_mut ( * _20);
    _20 <- { _20 with current = ( ^ _19) };
    assume { Resolve0.resolve _20 };
    _18 <- ([#"../CreuSAT/src/watches.rs" 42 4 42 42] DerefMut0.deref_mut _19);
    goto BB5
  }
  BB5 {
    _17 <- borrow_mut ( * _18);
    _18 <- { _18 with current = ( ^ _17) };
    _23 <- j_5;
    _24 <- end'_10;
    _16 <- ([#"../CreuSAT/src/watches.rs" 42 4 42 42] Swap0.swap _17 _23 _24);
    goto BB6
  }
  BB6 {
    assume { Resolve1.resolve _18 };
    _29 <- f_1;
    _30 <- cref_4;
    _28 <- ([#"../CreuSAT/src/watches.rs" 43 19 43 26] Index1.index _29 _30);
    goto BB7
  }
  BB7 {
    _27 <- _28;
    _31 <- k_6;
    _26 <- ([#"../CreuSAT/src/watches.rs" 43 19 43 29] Index2.index _27 _31);
    goto BB8
  }
  BB8 {
    curr_lit_25 <- _26;
    assert { [#"../CreuSAT/src/watches.rs" 44 18 44 54] UInt64.to_int watchidx_8 < Seq.length (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) };
    _32 <- ();
    _34 <- ();
    old_w_33 <- ghost ([#"../CreuSAT/src/watches.rs" 45 37 45 52] watches_3);
    goto BB9
  }
  BB9 {
    assert { [#"../CreuSAT/src/watches.rs" 46 18 46 76] WatcherCrefsInRange0.watcher_crefs_in_range (Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) (UInt64.to_int watchidx_8))) f_1 };
    _35 <- ();
    _39 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * watches_3 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _39)) };
    _40 <- watchidx_8;
    _38 <- ([#"../CreuSAT/src/watches.rs" 47 10 47 35] IndexMut0.index_mut _39 _40);
    goto BB10
  }
  BB10 {
    _37 <- borrow_mut ( * _38);
    _38 <- { _38 with current = ( ^ _37) };
    _36 <- ([#"../CreuSAT/src/watches.rs" 47 10 47 41] Pop1.pop _37);
    goto BB11
  }
  BB11 {
    assume { Resolve0.resolve _38 };
    switch (_36)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB12
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB14
      end
  }
  BB12 {
    assume { Resolve2.resolve watches_3 };
    absurd
  }
  BB13 {
    assume { Resolve2.resolve watches_3 };
    absurd
  }
  BB14 {
    w_42 <- Core_Option_Option_Type.core_option_option_type_Some_0 _36;
    _36 <- (let Core_Option_Option_Type.Core_Option_Option_Some_Type a = _36 in Core_Option_Option_Type.Core_Option_Option_Some_Type (any CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type));
    assert { [#"../CreuSAT/src/watches.rs" 49 26 49 103] let _ = LemmaPopWatchMaintainsWatcherInvariant0.lemma_pop_watch_maintains_watcher_invariant (Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * old_w_33))) (UInt64.to_int watchidx_8))) f_1 in true };
    _43 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 50 26 50 93] Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) (UInt64.to_int watchidx_8)) = Pop0.pop (Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * old_w_33))) (UInt64.to_int watchidx_8))) };
    _44 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 51 26 51 84] WatcherCrefsInRange0.watcher_crefs_in_range (Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) (UInt64.to_int watchidx_8))) f_1 };
    _45 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 52 26 52 47] Invariant0.invariant' ( * watches_3) f_1 };
    _46 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 53 26 53 85] ToNegWatchidxLogic0.to_neg_watchidx_logic curr_lit_25 < Seq.length (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) };
    _47 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 54 26 54 107] WatcherCrefsInRange0.watcher_crefs_in_range (Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) (ToNegWatchidxLogic0.to_neg_watchidx_logic curr_lit_25))) f_1 };
    _48 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 55 26 55 54] UInt64.to_int (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_cref w_42) < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f_1)) };
    _49 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 56 26 56 126] let _ = LemmaPushMaintainsWatcherInvariant0.lemma_push_maintains_watcher_invariant (Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) (ToNegWatchidxLogic0.to_neg_watchidx_logic curr_lit_25))) f_1 w_42 in true };
    _50 <- ();
    _52 <- curr_lit_25;
    watch_lit_51 <- ([#"../CreuSAT/src/watches.rs" 58 28 58 54] ToNegWatchidx0.to_neg_watchidx _52);
    goto BB15
  }
  BB15 {
    _56 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * watches_3 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _56)) };
    assume { Resolve2.resolve watches_3 };
    _57 <- watch_lit_51;
    _55 <- ([#"../CreuSAT/src/watches.rs" 59 12 59 38] IndexMut0.index_mut _56 _57);
    goto BB16
  }
  BB16 {
    _54 <- borrow_mut ( * _55);
    _55 <- { _55 with current = ( ^ _54) };
    _58 <- w_42;
    w_42 <- any CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type;
    _53 <- ([#"../CreuSAT/src/watches.rs" 59 12 59 46] Push0.push _54 _58);
    goto BB17
  }
  BB17 {
    assume { Resolve0.resolve _55 };
    assert { [#"../CreuSAT/src/watches.rs" 61 26 61 76] WatchValid0.watch_valid (Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) (UInt64.to_int watch_lit_51))) f_1 };
    _59 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 62 26 62 107] WatcherCrefsInRange0.watcher_crefs_in_range (Model3.model (Seq.get (Model2.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) (ToNegWatchidxLogic0.to_neg_watchidx_logic curr_lit_25))) f_1 };
    _60 <- ();
    assert { [#"../CreuSAT/src/watches.rs" 63 26 63 47] Invariant0.invariant' ( * watches_3) f_1 };
    _61 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_UnitProp_CheckAndMoveWatch_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model4 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface as ToWatchidxLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model3 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val check_and_move_watch [@cfg:stackify] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (cref : usize) (j : usize) (k : usize) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : bool
    requires {[#"../CreuSAT/src/unit_prop.rs" 19 0 19 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 20 0 20 36] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 21 0 21 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 22 11 22 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 23 11 23 42] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 24 11 24 67] not SatInner0.sat_inner (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) 0) (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 25 11 25 37] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 26 11 26 55] 2 <= UInt64.to_int k /\ UInt64.to_int k < Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 27 11 27 68] Seq.length (Model4.model (Seq.get (Model3.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 19 0 19 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 20 0 20 36] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 21 0 21 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 28 10 28 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 29 10 29 23] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 30 10 30 53] Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) = Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 31 0 31 114] not result -> Unsat0.unsat (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int cref))) (UInt64.to_int k)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail) /\  ^ f =  * f /\  * watches =  ^ watches }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 32 10 32 73] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int cref))) = Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) }
    
end
module CreuSat_UnitProp_CheckAndMoveWatch
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model4.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model5 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model1.model
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model2.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model3.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model6.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model7.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model2.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model5.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy2
  clone CreusotContracts_Logic_Model_Impl0_Model as Model12 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model10 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model5.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreuSat_Watches_UpdateWatch_Interface as UpdateWatch0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate Invariant1.invariant' = Invariant0.invariant',
  predicate Invariant2.invariant' = Invariant1.invariant', function Model0.model = Model0.model,
  function Model1.model = Model1.model, function Model2.model = Model3.model,
  function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
  function Model3.model = Model4.model, predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreuSat_UnitProp_Swap_Interface as Swap0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function Model0.model = Model0.model, function Model1.model = Model1.model, function Model2.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Lit_Impl1_Index_Interface as Index2 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Lit_Impl1_LitUnsat_Interface as LitUnsat0 with function Model0.model = Model12.model,
  predicate Invariant0.invariant' = Invariant5.invariant', predicate Unsat0.unsat = Unsat0.unsat
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model11.model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with function Model0.model = Model10.model
  let rec cfg check_and_move_watch [@cfg:stackify] [#"../CreuSAT/src/unit_prop.rs" 33 0 35 9] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (cref : usize) (j : usize) (k : usize) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : bool
    requires {[#"../CreuSAT/src/unit_prop.rs" 19 0 19 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 20 0 20 36] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 21 0 21 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 22 11 22 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 23 11 23 42] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 24 11 24 67] not SatInner0.sat_inner (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) 0) (Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 25 11 25 37] UInt64.to_int cref < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 26 11 26 55] 2 <= UInt64.to_int k /\ UInt64.to_int k < Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 27 11 27 68] Seq.length (Model4.model (Seq.get (Model3.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 19 0 19 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 20 0 20 36] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 21 0 21 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 28 10 28 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 29 10 29 23] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 30 10 30 53] Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) = Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 31 0 31 114] not result -> Unsat0.unsat (Seq.get (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int cref))) (UInt64.to_int k)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail) /\  ^ f =  * f /\  * watches =  ^ watches }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 32 10 32 73] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int cref))) = Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var trail_2 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var cref_4 : usize;
  var j_5 : usize;
  var k_6 : usize;
  var lit_7 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _8 : ();
  var curr_lit_9 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _10 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _11 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _12 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _13 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _14 : usize;
  var _15 : usize;
  var _16 : ();
  var _17 : bool;
  var _18 : bool;
  var _19 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _20 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _21 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _22 : ();
  var _23 : ();
  var _24 : bool;
  var _25 : usize;
  var _26 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _27 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _28 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _29 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _30 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _31 : usize;
  var _32 : usize;
  var _33 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _34 : ();
  var _35 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _36 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _37 : CreuSat_Watches_Watches_Type.creusat_watches_watches_type;
  var _38 : usize;
  var _39 : usize;
  var _40 : ();
  var _41 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _42 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _43 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _44 : usize;
  var _45 : usize;
  var _46 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _47 : ();
  var _48 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _49 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _50 : CreuSat_Watches_Watches_Type.creusat_watches_watches_type;
  var _51 : usize;
  var _52 : usize;
  var _53 : ();
  var _54 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _55 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _56 : CreuSat_Watches_Watches_Type.creusat_watches_watches_type;
  var _57 : usize;
  var _58 : ();
  var _59 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _60 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _61 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _62 : usize;
  var _63 : usize;
  var _64 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    j_5 <- j;
    k_6 <- k;
    lit_7 <- lit;
    goto BB0
  }
  BB0 {
    _13 <-  * f_1;
    _14 <- cref_4;
    _12 <- ([#"../CreuSAT/src/unit_prop.rs" 36 19 36 26] Index0.index _13 _14);
    goto BB1
  }
  BB1 {
    _11 <- _12;
    _15 <- k_6;
    _10 <- ([#"../CreuSAT/src/unit_prop.rs" 36 19 36 29] Index1.index _11 _15);
    goto BB2
  }
  BB2 {
    curr_lit_9 <- _10;
    _19 <- curr_lit_9;
    _21 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail_2;
    _20 <- _21;
    _18 <- ([#"../CreuSAT/src/unit_prop.rs" 37 8 37 46] LitUnsat0.lit_unsat _19 _20);
    goto BB3
  }
  BB3 {
    _17 <- not _18;
    switch (_17)
      | False -> goto BB17
      | _ -> goto BB4
      end
  }
  BB4 {
    _30 <-  * f_1;
    _31 <- cref_4;
    _29 <- ([#"../CreuSAT/src/unit_prop.rs" 39 11 39 18] Index0.index _30 _31);
    goto BB5
  }
  BB5 {
    _28 <- _29;
    _27 <- ([#"../CreuSAT/src/unit_prop.rs" 39 11 39 21] Index1.index _28 (0 : usize));
    goto BB6
  }
  BB6 {
    _26 <- _27;
    _25 <- ([#"../CreuSAT/src/unit_prop.rs" 39 11 39 29] Index2.index _26);
    goto BB7
  }
  BB7 {
    _33 <- lit_7;
    _32 <- ([#"../CreuSAT/src/unit_prop.rs" 39 33 39 44] Index2.index _33);
    goto BB8
  }
  BB8 {
    _24 <- ([#"../CreuSAT/src/unit_prop.rs" 39 11 39 44] _25 = _32);
    switch (_24)
      | False -> goto BB12
      | _ -> goto BB9
      end
  }
  BB9 {
    _35 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _35) };
    _36 <- trail_2;
    _37 <-  * watches_3;
    _38 <- cref_4;
    _39 <- k_6;
    _34 <- ([#"../CreuSAT/src/unit_prop.rs" 41 12 41 47] Swap0.swap _35 _36 _37 _38 _39 (0 : usize));
    goto BB10
  }
  BB10 {
    _41 <-  * f_1;
    assume { Resolve0.resolve f_1 };
    _42 <- trail_2;
    _43 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _43) };
    _44 <- cref_4;
    _45 <- j_5;
    _46 <- lit_7;
    _40 <- ([#"../CreuSAT/src/unit_prop.rs" 42 12 42 60] UpdateWatch0.update_watch _41 _42 _43 _44 _45 (0 : usize) _46);
    goto BB11
  }
  BB11 {
    assume { Resolve1.resolve watches_3 };
    _23 <- ();
    goto BB16
  }
  BB12 {
    _48 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _48) };
    _49 <- trail_2;
    _50 <-  * watches_3;
    _51 <- cref_4;
    _52 <- k_6;
    _47 <- ([#"../CreuSAT/src/unit_prop.rs" 44 12 44 47] Swap0.swap _48 _49 _50 _51 _52 (1 : usize));
    goto BB13
  }
  BB13 {
    _54 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _54) };
    _55 <- trail_2;
    _56 <-  * watches_3;
    _57 <- cref_4;
    _53 <- ([#"../CreuSAT/src/unit_prop.rs" 45 12 45 47] Swap0.swap _54 _55 _56 _57 (1 : usize) (0 : usize));
    goto BB14
  }
  BB14 {
    _59 <-  * f_1;
    assume { Resolve0.resolve f_1 };
    _60 <- trail_2;
    _61 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _61) };
    _62 <- cref_4;
    _63 <- j_5;
    _64 <- lit_7;
    _58 <- ([#"../CreuSAT/src/unit_prop.rs" 47 12 47 60] UpdateWatch0.update_watch _59 _60 _61 _62 _63 (0 : usize) _64);
    goto BB15
  }
  BB15 {
    assume { Resolve1.resolve watches_3 };
    _23 <- ();
    goto BB16
  }
  BB16 {
    _0 <- true;
    goto BB18
  }
  BB17 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve watches_3 };
    _16 <- ();
    _0 <- false;
    goto BB18
  }
  BB18 {
    return _0
  }
  
end
module CreuSat_UnitProp_ExistsNewWatchableLit_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Watches_Watcher_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model4
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model3
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface as ToWatchidxLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val exists_new_watchable_lit [@cfg:stackify] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (cref : usize) (j : usize) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : bool
    requires {[#"../CreuSAT/src/unit_prop.rs" 82 0 82 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 83 0 83 38] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 84 0 84 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 85 11 85 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 86 11 86 61] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 87 11 87 68] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 88 11 88 42] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 89 11 89 37] UInt64.to_int cref < Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 90 11 90 44] Seq.length (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 91 11 91 67] not SatInner0.sat_inner (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) 0) (Model4.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 82 0 82 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 83 0 83 38] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 84 0 84 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 92 0 92 136] not result -> (forall m : (int) . 2 <= m /\ m < Seq.length (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) -> Unsat0.unsat (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) m) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 93 0 93 75] not result -> Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref)) = Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int cref)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 94 10 94 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 95 10 95 53] Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 96 10 96 23] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_UnitProp_ExistsNewWatchableLit
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model4 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model2.model,
  function Model1.model = Model3.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model1.model,
  function Model1.model = Model2.model, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model3.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model5 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model3.model
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model4.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model0.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model6.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model7.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model5.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreuSat_Util_MaxLog as MaxLog0
  clone CreuSat_Util_MinLog as MinLog0
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy2
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model10 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model3.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreuSat_UnitProp_CheckAndMoveWatch_Interface as CheckAndMoveWatch0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function IndexLogic0.index_logic = IndexLogic0.index_logic, function Model0.model = Model2.model,
  function Model1.model = Model3.model, function Model2.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, function Model3.model = Model0.model,
  function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
  function Model4.model = Model1.model, predicate Equisat0.equisat = Equisat0.equisat,
  predicate Unsat0.unsat = Unsat0.unsat, predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Util_Max_Interface as Max0 with function MaxLog0.max_log = MaxLog0.max_log
  clone CreuSat_Util_Min_Interface as Min0 with function MinLog0.min_log = MinLog0.min_log
  clone CreuSat_Formula_Impl0_Index_Interface as Index1 with function Model0.model = Model11.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len0 with function Model0.model = Model10.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  let rec cfg exists_new_watchable_lit [@cfg:stackify] [#"../CreuSAT/src/unit_prop.rs" 97 0 99 9] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (cref : usize) (j : usize) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : bool
    requires {[#"../CreuSAT/src/unit_prop.rs" 82 0 82 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 83 0 83 38] Invariant1.invariant' trail ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 84 0 84 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 85 11 85 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 86 11 86 61] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 87 11 87 68] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 88 11 88 42] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 89 11 89 37] UInt64.to_int cref < Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 90 11 90 44] Seq.length (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 91 11 91 67] not SatInner0.sat_inner (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) 0) (Model4.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 82 0 82 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 83 0 83 38] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 84 0 84 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 92 0 92 136] not result -> (forall m : (int) . 2 <= m /\ m < Seq.length (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) -> Unsat0.unsat (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) m) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 93 0 93 75] not result -> Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref)) = Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int cref)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 94 10 94 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 95 10 95 53] Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) = Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 96 10 96 23] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : bool;
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var trail_2 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var cref_4 : usize;
  var j_5 : usize;
  var lit_6 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  ghost var old_w_7 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _8 : ();
  ghost var old_f_9 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _10 : ();
  var clause_len_11 : usize;
  var _12 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _13 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _14 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _15 : usize;
  var init_search_16 : usize;
  var _17 : usize;
  var _18 : usize;
  var _19 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _20 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _21 : usize;
  var _22 : usize;
  var search_23 : usize;
  var _24 : ();
  var _25 : ();
  var _26 : bool;
  var _27 : usize;
  var _28 : usize;
  var _29 : ();
  var _30 : bool;
  var _31 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _32 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _33 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _34 : usize;
  var _35 : usize;
  var _36 : usize;
  var _37 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _38 : ();
  ghost var old_f2_39 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _40 : ();
  var _41 : usize;
  var _42 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _43 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _44 : usize;
  var _45 : ();
  var _46 : ();
  var _47 : ();
  var _48 : ();
  var _49 : ();
  var _50 : ();
  var _51 : bool;
  var _52 : usize;
  var _53 : usize;
  var _54 : ();
  var _55 : bool;
  var _56 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _57 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _58 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _59 : usize;
  var _60 : usize;
  var _61 : usize;
  var _62 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _63 : ();
  ghost var old_f2_64 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _65 : ();
  var _66 : usize;
  var _67 : borrowed (CreuSat_Clause_Clause_Type.creusat_clause_clause_type);
  var _68 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _69 : usize;
  var _70 : ();
  var _71 : ();
  var _72 : ();
  var _73 : ();
  var _74 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    j_5 <- j;
    lit_6 <- lit;
    goto BB0
  }
  BB0 {
    _8 <- ();
    old_w_7 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 100 37 100 55] watches_3);
    goto BB1
  }
  BB1 {
    _10 <- ();
    old_f_9 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 101 37 101 49] f_1);
    goto BB2
  }
  BB2 {
    _14 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1);
    _15 <- cref_4;
    _13 <- ([#"../CreuSAT/src/unit_prop.rs" 102 28 102 43] Index0.index _14 _15);
    goto BB3
  }
  BB3 {
    _12 <- _13;
    clause_len_11 <- ([#"../CreuSAT/src/unit_prop.rs" 102 28 102 49] Len0.len _12);
    goto BB4
  }
  BB4 {
    _20 <-  * f_1;
    _21 <- cref_4;
    _19 <- ([#"../CreuSAT/src/unit_prop.rs" 103 42 103 49] Index1.index _20 _21);
    goto BB5
  }
  BB5 {
    _18 <- CreuSat_Clause_Clause_Type.creusat_clause_clause_type_Clause_search _19;
    _22 <- clause_len_11;
    _17 <- ([#"../CreuSAT/src/unit_prop.rs" 103 32 103 69] Min0.min _18 _22);
    goto BB6
  }
  BB6 {
    init_search_16 <- ([#"../CreuSAT/src/unit_prop.rs" 103 22 103 73] Max0.max _17 (2 : usize));
    goto BB7
  }
  BB7 {
    search_23 <- init_search_16;
    goto BB8
  }
  BB8 {
    invariant search { [#"../CreuSAT/src/unit_prop.rs" 105 24 105 36] UInt64.to_int search_23 >= 2 };
    invariant f_unchanged { [#"../CreuSAT/src/unit_prop.rs" 106 29 106 40] f_1 = old_f_9 };
    invariant w_unchanged { [#"../CreuSAT/src/unit_prop.rs" 107 29 107 46] watches_3 = old_w_7 };
    invariant uns { [#"../CreuSAT/src/unit_prop.rs" 105 4 105 38] forall m : (int) . UInt64.to_int init_search_16 <= m /\ m < UInt64.to_int search_23 -> Unsat0.unsat (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) m) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail_2) };
    invariant first_not_sat { [#"../CreuSAT/src/unit_prop.rs" 110 31 110 87] not SatInner0.sat_inner (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) 0) (Model4.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail_2)) };
    _27 <- search_23;
    _28 <- clause_len_11;
    _26 <- ([#"../CreuSAT/src/unit_prop.rs" 111 10 111 29] _27 < _28);
    switch (_26)
      | False -> goto BB15
      | _ -> goto BB9
      end
  }
  BB9 {
    _31 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _31) };
    _32 <- trail_2;
    _33 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _33) };
    _34 <- cref_4;
    _35 <- j_5;
    _36 <- search_23;
    _37 <- lit_6;
    _30 <- ([#"../CreuSAT/src/unit_prop.rs" 112 11 112 72] CheckAndMoveWatch0.check_and_move_watch _31 _32 _33 _34 _35 _36 _37);
    goto BB10
  }
  BB10 {
    switch (_30)
      | False -> goto BB14
      | _ -> goto BB11
      end
  }
  BB11 {
    assume { Resolve0.resolve watches_3 };
    _40 <- ();
    old_f2_39 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 113 46 113 58] f_1);
    goto BB12
  }
  BB12 {
    _41 <- search_23;
    _43 <- borrow_mut (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1));
    f_1 <- { f_1 with current = (let CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type a b =  * f_1 in CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type ( ^ _43) b) };
    assume { Resolve1.resolve f_1 };
    _44 <- cref_4;
    _42 <- ([#"../CreuSAT/src/unit_prop.rs" 114 12 114 27] IndexMut0.index_mut _43 _44);
    goto BB13
  }
  BB13 {
    _42 <- { _42 with current = (let CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c d =  * _42 in CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b _41 d) };
    _41 <- any usize;
    assume { Resolve2.resolve _42 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 115 12 115 130] forall j : (int) . 0 <= j /\ j < Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) -> Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) j) = Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * old_f2_39))) j) };
    _45 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 116 26 116 52] Equisat0.equisat ( * old_f2_39) ( * f_1) };
    _46 <- ();
    _0 <- true;
    goto BB24
  }
  BB14 {
    _29 <- ();
    search_23 <- ([#"../CreuSAT/src/unit_prop.rs" 120 8 120 19] search_23 + (1 : usize));
    _25 <- ();
    goto BB8
  }
  BB15 {
    _24 <- ();
    search_23 <- (2 : usize);
    goto BB16
  }
  BB16 {
    invariant search_bound { [#"../CreuSAT/src/unit_prop.rs" 123 30 123 68] 2 <= UInt64.to_int search_23 /\ UInt64.to_int search_23 <= UInt64.to_int clause_len_11 };
    invariant f_unchanged { [#"../CreuSAT/src/unit_prop.rs" 124 29 124 40] f_1 = old_f_9 };
    invariant w_unchanged { [#"../CreuSAT/src/unit_prop.rs" 125 29 125 46] watches_3 = old_w_7 };
    invariant uns { [#"../CreuSAT/src/unit_prop.rs" 123 4 123 70] forall m : (int) . UInt64.to_int init_search_16 <= m /\ m < UInt64.to_int clause_len_11 -> Unsat0.unsat (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) m) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail_2) };
    invariant uns2 { [#"../CreuSAT/src/unit_prop.rs" 123 4 123 70] forall m : (int) . 2 <= m /\ m < UInt64.to_int search_23 -> Unsat0.unsat (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) m) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail_2) };
    invariant first_not_sat { [#"../CreuSAT/src/unit_prop.rs" 129 31 129 87] not SatInner0.sat_inner (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) 0) (Model4.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail_2)) };
    _52 <- search_23;
    _53 <- init_search_16;
    _51 <- ([#"../CreuSAT/src/unit_prop.rs" 130 10 130 30] _52 < _53);
    switch (_51)
      | False -> goto BB23
      | _ -> goto BB17
      end
  }
  BB17 {
    _56 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _56) };
    _57 <- trail_2;
    _58 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _58) };
    _59 <- cref_4;
    _60 <- j_5;
    _61 <- search_23;
    _62 <- lit_6;
    _55 <- ([#"../CreuSAT/src/unit_prop.rs" 131 11 131 72] CheckAndMoveWatch0.check_and_move_watch _56 _57 _58 _59 _60 _61 _62);
    goto BB18
  }
  BB18 {
    switch (_55)
      | False -> goto BB22
      | _ -> goto BB19
      end
  }
  BB19 {
    assume { Resolve0.resolve watches_3 };
    _65 <- ();
    old_f2_64 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 132 46 132 58] f_1);
    goto BB20
  }
  BB20 {
    _66 <- search_23;
    _68 <- borrow_mut (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1));
    f_1 <- { f_1 with current = (let CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type a b =  * f_1 in CreuSat_Formula_Formula_Type.CreuSat_Formula_Formula_Type ( ^ _68) b) };
    assume { Resolve1.resolve f_1 };
    _69 <- cref_4;
    _67 <- ([#"../CreuSAT/src/unit_prop.rs" 133 12 133 27] IndexMut0.index_mut _68 _69);
    goto BB21
  }
  BB21 {
    _67 <- { _67 with current = (let CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b c d =  * _67 in CreuSat_Clause_Clause_Type.CreuSat_Clause_Clause_Type a b _66 d) };
    _66 <- any usize;
    assume { Resolve2.resolve _67 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 134 12 134 130] forall j : (int) . 0 <= j /\ j < Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) -> Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) j) = Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * old_f2_64))) j) };
    _70 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 135 26 135 52] Equisat0.equisat ( * old_f2_64) ( * f_1) };
    _71 <- ();
    _0 <- true;
    goto BB24
  }
  BB22 {
    _54 <- ();
    search_23 <- ([#"../CreuSAT/src/unit_prop.rs" 139 8 139 19] search_23 + (1 : usize));
    _25 <- ();
    goto BB16
  }
  BB23 {
    assume { Resolve1.resolve f_1 };
    assume { Resolve0.resolve watches_3 };
    _50 <- ();
    _0 <- false;
    goto BB25
  }
  BB24 {
    goto BB25
  }
  BB25 {
    return _0
  }
  
end
module CreuSat_UnitProp_PropagateLitWithRegardToClause_Interface
  use prelude.Borrow
  use seq.Seq
  use mach.int.Int
  use mach.int.UInt64
  use prelude.UIntSize
  use mach.int.Int32
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type
  use CreuSat_Watches_Watcher_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat1
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model4 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use Core_Result_Result_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model3
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface as ToWatchidxLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val propagate_lit_with_regard_to_clause [@cfg:stackify] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (cref : usize) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (j : usize) : Core_Result_Result_Type.core_result_result_type bool usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 145 0 145 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 146 0 146 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 147 0 147 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 148 11 148 61] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 149 11 149 68] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 150 11 150 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 151 11 151 42] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 152 11 152 37] UInt64.to_int cref < Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 153 11 153 44] Seq.length (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 145 0 145 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 146 0 146 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 147 0 147 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 154 10 154 47] CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( ^ trail) = CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * trail) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 155 10 159 1] match (result) with
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type (True) -> true
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type (False) -> Seq.length (Model4.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ trail))) = Seq.length (Model4.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * trail)))
      | Core_Result_Result_Type.Core_Result_Result_Err_Type n -> UInt64.to_int n < Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int n)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 160 10 160 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 161 10 161 23] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_UnitProp_PropagateLitWithRegardToClause
  use prelude.Borrow
  use seq.Seq
  use mach.int.Int
  use mach.int.UInt64
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Permut
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_Logic_Unset as Unset1
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with function Model0.model = Model3.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset1.unset
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model7 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model2.model,
  function Model1.model = Model3.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner as PostUnitInner0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner as UnitInner0 with predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
  predicate SatInner0.sat_inner = SatInner2.sat_inner, function Model0.model = Model3.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with function Model0.model = Model3.model,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner0 with function Model0.model = Model2.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model1.model,
  function Model1.model = Model2.model, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model3.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model5 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model3.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit as ClausePostWithRegardsToLit0 with function Model0.model = Model7.model,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl1_PostUnit as PostUnit0 with function Model0.model = Model7.model,
  predicate PostUnitInner0.post_unit_inner = PostUnitInner0.post_unit_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unit as Unit0 with function Model0.model = Model7.model,
  predicate UnitInner0.unit_inner = UnitInner0.unit_inner
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with function Model0.model = Model7.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use Core_Result_Result_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model0.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model6.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model7.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model5.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail as IdxInTrail0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat2 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy5 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone Core_Slice_Index_Impl2_Output_Type as Output2 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue2 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds2 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy4 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy3
  clone CreusotContracts_Logic_Model_Impl0_Model as Model12 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy3.modelTy, function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy2
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model10 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model5.model
  clone CreuSat_UnitProp_Swap_Interface as Swap0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function Model0.model = Model2.model, function Model1.model = Model3.model, function Model2.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_EnqAssignment_Interface as EnqAssignment0 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Invariant1.invariant' = Invariant0.invariant', predicate Invariant2.invariant' = Invariant5.invariant',
  predicate Invariant3.invariant' = Invariant6.invariant', function Model0.model = Model2.model,
  function Model1.model = Model3.model, predicate Unset0.unset = Unset0.unset, predicate Unsat0.unsat = Unsat2.unsat,
  predicate IdxInTrail0.idx_in_trail = IdxInTrail0.idx_in_trail, function Model2.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate Unset1.unset = Unset1.unset,
  function Model3.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate Sat0.sat = Sat0.sat,
  predicate ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit = ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with function Model0.model = Model6.model
  clone CreuSat_Lit_Impl1_LitUnset_Interface as LitUnset0 with function Model0.model = Model12.model,
  predicate Invariant0.invariant' = Invariant5.invariant', predicate Unset0.unset = Unset0.unset
  clone CreuSat_UnitProp_ExistsNewWatchableLit_Interface as ExistsNewWatchableLit0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
  function Model0.model = Model0.model, function Model1.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, function Model2.model = Model2.model,
  function Model3.model = Model3.model, function Model4.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, predicate Unsat0.unsat = Unsat2.unsat,
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve4 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds2.in_bounds, predicate HasValue0.has_value = HasValue2.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere1.resolve_elswhere, type Output0.output = Output2.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve3 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output1.output
  clone CreuSat_Lit_Impl1_ToWatchidx_Interface as ToWatchidx0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreuSat_Lit_Impl1_LitSat_Interface as LitSat0 with function Model0.model = Model12.model,
  predicate Invariant0.invariant' = Invariant5.invariant', predicate Sat0.sat = Sat0.sat
  clone CreuSat_Clause_Impl0_Index_Interface as Index2 with function Model0.model = Model11.model
  clone CreuSat_Formula_Impl0_Index_Interface as Index1 with function Model0.model = Model10.model
  let rec cfg propagate_lit_with_regard_to_clause [@cfg:stackify] [#"../CreuSAT/src/unit_prop.rs" 162 0 164 24] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (cref : usize) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (j : usize) : Core_Result_Result_Type.core_result_result_type bool usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 145 0 145 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 146 0 146 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 147 0 147 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 148 11 148 61] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 149 11 149 68] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"../CreuSAT/src/unit_prop.rs" 150 11 150 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 151 11 151 42] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 152 11 152 37] UInt64.to_int cref < Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f)))}
    requires {[#"../CreuSAT/src/unit_prop.rs" 153 11 153 44] Seq.length (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 145 0 145 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 146 0 146 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 147 0 147 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 154 10 154 47] CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( ^ trail) = CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * trail) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 155 10 159 1] match (result) with
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type (True) -> true
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type (False) -> Seq.length (Model4.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ trail))) = Seq.length (Model4.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * trail)))
      | Core_Result_Result_Type.Core_Result_Result_Err_Type n -> UInt64.to_int n < Seq.length (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int n)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 160 10 160 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 161 10 161 23] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Result_Result_Type.core_result_result_type bool usize;
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var trail_2 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var cref_4 : usize;
  var lit_5 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var j_6 : usize;
  ghost var old_w_7 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _8 : ();
  var clause_9 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _10 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _11 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _12 : usize;
  var first_lit_13 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _14 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _15 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _16 : ();
  var _17 : bool;
  var _18 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _19 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _20 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _21 : ();
  var _22 : ();
  var _23 : ();
  var _24 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _25 : borrowed (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type);
  var _26 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _27 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _28 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _29 : usize;
  var _30 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _31 : usize;
  var second_lit_32 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _33 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _34 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _35 : ();
  var _36 : bool;
  var _37 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _38 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _39 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _40 : ();
  var _41 : ();
  var _42 : ();
  var _43 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _44 : borrowed (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type);
  var _45 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _46 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _47 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _48 : usize;
  var _49 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _50 : usize;
  var _51 : ();
  var _52 : bool;
  var _53 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _54 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _55 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _56 : usize;
  var _57 : usize;
  var _58 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _59 : ();
  var _60 : ();
  var _61 : bool;
  var _62 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _63 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _64 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _65 : ();
  var _66 : ();
  var _67 : bool;
  var _68 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _69 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _70 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _71 : ();
  var _72 : ();
  var _73 : ();
  var _74 : ();
  var step_75 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _76 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _77 : usize;
  var _78 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _79 : CreuSat_Trail_Reason_Type.creusat_trail_reason_type;
  var _80 : usize;
  var _81 : ();
  var _82 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _83 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _84 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _85 : ();
  var _86 : ();
  var _87 : bool;
  var _88 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _89 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _90 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _91 : ();
  var step_92 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _93 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _94 : usize;
  var _95 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _96 : CreuSat_Trail_Reason_Type.creusat_trail_reason_type;
  var _97 : usize;
  ghost var old_c_98 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _99 : ();
  var _100 : ();
  var _101 : ();
  var _102 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _103 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _104 : CreuSat_Watches_Watches_Type.creusat_watches_watches_type;
  var _105 : usize;
  var _106 : ();
  var _107 : ();
  var _108 : ();
  var _109 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _110 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _111 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _112 : ();
  var _113 : ();
  var _114 : ();
  var _115 : usize;
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    lit_5 <- lit;
    j_6 <- j;
    goto BB0
  }
  BB0 {
    _8 <- ();
    old_w_7 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 165 37 165 55] watches_3);
    goto BB1
  }
  BB1 {
    _11 <-  * f_1;
    _12 <- cref_4;
    _10 <- ([#"../CreuSAT/src/unit_prop.rs" 166 18 166 25] Index1.index _11 _12);
    goto BB2
  }
  BB2 {
    clause_9 <- _10;
    _15 <- clause_9;
    _14 <- ([#"../CreuSAT/src/unit_prop.rs" 167 20 167 29] Index2.index _15 (0 : usize));
    goto BB3
  }
  BB3 {
    first_lit_13 <- _14;
    _18 <- first_lit_13;
    _20 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2);
    _19 <- _20;
    _17 <- ([#"../CreuSAT/src/unit_prop.rs" 168 7 168 44] LitSat0.lit_sat _18 _19);
    goto BB4
  }
  BB4 {
    switch (_17)
      | False -> goto BB9
      | _ -> goto BB5
      end
  }
  BB5 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 170 22 170 48]  ^ watches_3 =  ^ old_w_7 };
    _22 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 171 22 171 59] IndexLogic0.index_logic first_lit_13 < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f_1)) };
    _23 <- ();
    _24 <- first_lit_13;
    _28 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * watches_3 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _28)) };
    assume { Resolve2.resolve watches_3 };
    _30 <- lit_5;
    _29 <- ([#"../CreuSAT/src/unit_prop.rs" 172 24 172 41] ToWatchidx0.to_watchidx _30);
    goto BB6
  }
  BB6 {
    _27 <- ([#"../CreuSAT/src/unit_prop.rs" 172 8 172 42] IndexMut0.index_mut _28 _29);
    goto BB7
  }
  BB7 {
    _26 <- borrow_mut ( * _27);
    _27 <- { _27 with current = ( ^ _26) };
    assume { Resolve3.resolve _27 };
    _31 <- j_6;
    _25 <- ([#"../CreuSAT/src/unit_prop.rs" 172 8 172 45] IndexMut1.index_mut _26 _31);
    goto BB8
  }
  BB8 {
    _25 <- { _25 with current = (let CreuSat_Watches_Watcher_Type.CreuSat_Watches_Watcher_Type a b =  * _25 in CreuSat_Watches_Watcher_Type.CreuSat_Watches_Watcher_Type a _24) };
    _24 <- any CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
    assume { Resolve4.resolve _25 };
    _0 <- Core_Result_Result_Type.Core_Result_Result_Ok_Type true;
    goto BB38
  }
  BB9 {
    _16 <- ();
    _34 <- clause_9;
    _33 <- ([#"../CreuSAT/src/unit_prop.rs" 175 21 175 30] Index2.index _34 (1 : usize));
    goto BB10
  }
  BB10 {
    second_lit_32 <- _33;
    _37 <- second_lit_32;
    _39 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2);
    _38 <- _39;
    _36 <- ([#"../CreuSAT/src/unit_prop.rs" 176 7 176 45] LitSat0.lit_sat _37 _38);
    goto BB11
  }
  BB11 {
    switch (_36)
      | False -> goto BB16
      | _ -> goto BB12
      end
  }
  BB12 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 178 22 178 48]  ^ watches_3 =  ^ old_w_7 };
    _41 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 179 22 179 60] IndexLogic0.index_logic second_lit_32 < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f_1)) };
    _42 <- ();
    _43 <- second_lit_32;
    _47 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * watches_3 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _47)) };
    assume { Resolve2.resolve watches_3 };
    _49 <- lit_5;
    _48 <- ([#"../CreuSAT/src/unit_prop.rs" 180 24 180 41] ToWatchidx0.to_watchidx _49);
    goto BB13
  }
  BB13 {
    _46 <- ([#"../CreuSAT/src/unit_prop.rs" 180 8 180 42] IndexMut0.index_mut _47 _48);
    goto BB14
  }
  BB14 {
    _45 <- borrow_mut ( * _46);
    _46 <- { _46 with current = ( ^ _45) };
    assume { Resolve3.resolve _46 };
    _50 <- j_6;
    _44 <- ([#"../CreuSAT/src/unit_prop.rs" 180 8 180 45] IndexMut1.index_mut _45 _50);
    goto BB15
  }
  BB15 {
    _44 <- { _44 with current = (let CreuSat_Watches_Watcher_Type.CreuSat_Watches_Watcher_Type a b =  * _44 in CreuSat_Watches_Watcher_Type.CreuSat_Watches_Watcher_Type a _43) };
    _43 <- any CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
    assume { Resolve4.resolve _44 };
    _0 <- Core_Result_Result_Type.Core_Result_Result_Ok_Type true;
    goto BB37
  }
  BB16 {
    _35 <- ();
    _53 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _53) };
    _54 <-  * trail_2;
    _55 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _55) };
    _56 <- cref_4;
    _57 <- j_6;
    _58 <- lit_5;
    _52 <- ([#"../CreuSAT/src/unit_prop.rs" 184 7 184 64] ExistsNewWatchableLit0.exists_new_watchable_lit _53 _54 _55 _56 _57 _58);
    goto BB17
  }
  BB17 {
    switch (_52)
      | False -> goto BB19
      | _ -> goto BB18
      end
  }
  BB18 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    _0 <- Core_Result_Result_Type.Core_Result_Result_Ok_Type false;
    goto BB37
  }
  BB19 {
    _51 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 188 18 188 174] Unsat1.unsat (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) \/ Unset0.unset (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) 0) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) \/ Unset0.unset (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) 1) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) };
    _60 <- ();
    _62 <- first_lit_13;
    _64 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2);
    _63 <- _64;
    _61 <- ([#"../CreuSAT/src/unit_prop.rs" 189 7 189 46] LitUnset0.lit_unset _62 _63);
    goto BB20
  }
  BB20 {
    switch (_61)
      | False -> goto BB27
      | _ -> goto BB21
      end
  }
  BB21 {
    assume { Resolve2.resolve watches_3 };
    _68 <- second_lit_32;
    _70 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2);
    _69 <- _70;
    _67 <- ([#"../CreuSAT/src/unit_prop.rs" 192 11 192 51] LitUnset0.lit_unset _68 _69);
    goto BB22
  }
  BB22 {
    switch (_67)
      | False -> goto BB24
      | _ -> goto BB23
      end
  }
  BB23 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    _0 <- Core_Result_Result_Type.Core_Result_Result_Ok_Type true;
    goto BB36
  }
  BB24 {
    _66 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 195 22 195 41] Invariant1.invariant' ( * trail_2) ( * f_1) };
    _72 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 196 22 196 67] not Unsat1.unsat (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) };
    _73 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 197 22 197 65] Unit0.unit (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) };
    _74 <- ();
    _76 <- first_lit_13;
    _78 <-  * trail_2;
    _77 <- ([#"../CreuSAT/src/unit_prop.rs" 201 28 201 50] DecisionLevel0.decision_level _78);
    goto BB25
  }
  BB25 {
    _80 <- cref_4;
    _79 <- CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type _80;
    step_75 <- CreuSat_Trail_Step_Type.CreuSat_Trail_Step_Type _76 _77 _79;
    _82 <- borrow_mut ( * trail_2);
    trail_2 <- { trail_2 with current = ( ^ _82) };
    _83 <- step_75;
    step_75 <- any CreuSat_Trail_Step_Type.creusat_trail_step_type;
    _84 <-  * f_1;
    assume { Resolve0.resolve f_1 };
    _81 <- ([#"../CreuSAT/src/unit_prop.rs" 205 8 205 37] EnqAssignment0.enq_assignment _82 _83 _84);
    goto BB26
  }
  BB26 {
    assume { Resolve1.resolve trail_2 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 206 22 206 80] PostUnit0.post_unit (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) /\ true };
    _85 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 207 22 207 106] ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) first_lit_13 };
    _86 <- ();
    _0 <- Core_Result_Result_Type.Core_Result_Result_Ok_Type true;
    goto BB36
  }
  BB27 {
    _88 <- second_lit_32;
    _90 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2);
    _89 <- _90;
    _87 <- ([#"../CreuSAT/src/unit_prop.rs" 209 14 209 54] LitUnset0.lit_unset _88 _89);
    goto BB28
  }
  BB28 {
    switch (_87)
      | False -> goto BB34
      | _ -> goto BB29
      end
  }
  BB29 {
    _93 <- second_lit_32;
    _95 <-  * trail_2;
    _94 <- ([#"../CreuSAT/src/unit_prop.rs" 210 59 210 81] DecisionLevel0.decision_level _95);
    goto BB30
  }
  BB30 {
    _97 <- cref_4;
    _96 <- CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Long_Type _97;
    step_92 <- CreuSat_Trail_Step_Type.CreuSat_Trail_Step_Type _93 _94 _96;
    _99 <- ();
    old_c_98 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 211 35 211 61] Index0.index (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1)) cref_4);
    goto BB31
  }
  BB31 {
    assert { [#"../CreuSAT/src/unit_prop.rs" 212 22 212 72] Unset0.unset (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) 1) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) };
    _100 <- ();
    _102 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _102) };
    _103 <-  * trail_2;
    _104 <-  * watches_3;
    assume { Resolve2.resolve watches_3 };
    _105 <- cref_4;
    _101 <- ([#"../CreuSAT/src/unit_prop.rs" 213 8 213 43] Swap0.swap _102 _103 _104 _105 (0 : usize) (1 : usize));
    goto BB32
  }
  BB32 {
    assert { [#"../CreuSAT/src/unit_prop.rs" 214 22 214 67] Permut.exchange (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) (Model3.model old_c_98) 0 1 };
    _106 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 215 22 215 72] Unset0.unset (Seq.get (Model3.model (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) 0) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) };
    _107 <- ();
    _109 <- borrow_mut ( * trail_2);
    trail_2 <- { trail_2 with current = ( ^ _109) };
    _110 <- step_92;
    step_92 <- any CreuSat_Trail_Step_Type.creusat_trail_step_type;
    _111 <-  * f_1;
    assume { Resolve0.resolve f_1 };
    _108 <- ([#"../CreuSAT/src/unit_prop.rs" 216 8 216 37] EnqAssignment0.enq_assignment _109 _110 _111);
    goto BB33
  }
  BB33 {
    assume { Resolve1.resolve trail_2 };
    assert { [#"../CreuSAT/src/unit_prop.rs" 217 22 217 72] PostUnit0.post_unit (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) };
    _112 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 218 22 218 107] ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (Model2.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2)) second_lit_32 };
    _113 <- ();
    _0 <- Core_Result_Result_Type.Core_Result_Result_Ok_Type true;
    goto BB35
  }
  BB34 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    _115 <- cref_4;
    _0 <- Core_Result_Result_Type.Core_Result_Result_Err_Type _115;
    goto BB35
  }
  BB35 {
    goto BB36
  }
  BB36 {
    goto BB37
  }
  BB37 {
    goto BB38
  }
  BB38 {
    return _0
  }
  
end
module CreuSat_UnitProp_PropagateLiteral_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Lit_Lit_Type
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat1
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use Core_Result_Result_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val propagate_literal [@cfg:stackify] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : Core_Result_Result_Type.core_result_result_type () usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 226 0 226 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 227 0 227 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 228 0 228 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 229 11 229 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 230 11 230 42] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 226 0 226 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 227 0 227 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 228 0 228 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 231 10 234 1] match (result) with
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type () -> true
      | Core_Result_Result_Type.Core_Result_Result_Err_Type n -> UInt64.to_int n < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int n)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 235 10 235 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 236 10 236 23] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_UnitProp_PropagateLiteral
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model5 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model0.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner0 with function Model0.model = Model0.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model8.model,
  function Model1.model = Model0.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with function Model0.model = Model5.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with function Model0.model = Model5.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use Core_Result_Result_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model2.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model5.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model3.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy2
  clone CreusotContracts_Logic_Model_Impl0_Model as Model10 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model5.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone Core_Slice_Index_Impl2_Output_Type as Output1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreuSat_UnitProp_PropagateLitWithRegardToClause_Interface as PropagateLitWithRegardToClause0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
  function Model0.model = Model1.model, function Model1.model = Model8.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, function Model2.model = Model0.model,
  function Model3.model = Model6.model, function Model4.model = Model4.model, predicate Unsat0.unsat = Unsat0.unsat,
  predicate Unsat1.unsat = Unsat1.unsat, predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Lit_Impl1_LitSat_Interface as LitSat0 with function Model0.model = Model10.model,
  predicate Invariant0.invariant' = Invariant5.invariant', predicate Sat0.sat = Sat0.sat
  clone Alloc_Vec_Impl16_Index_Interface as Index1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model8.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  type Output0.output = Output1.output
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model8.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_ToWatchidx_Interface as ToWatchidx0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  let rec cfg propagate_literal [@cfg:stackify] [#"../CreuSAT/src/unit_prop.rs" 237 0 237 110] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) : Core_Result_Result_Type.core_result_result_type () usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 226 0 226 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 227 0 227 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 228 0 228 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 229 11 229 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/unit_prop.rs" 230 11 230 42] IndexLogic0.index_logic lit < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 226 0 226 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 227 0 227 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 228 0 228 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 231 10 234 1] match (result) with
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type () -> true
      | Core_Result_Result_Type.Core_Result_Result_Err_Type n -> UInt64.to_int n < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int n)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 235 10 235 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 236 10 236 23] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Result_Result_Type.core_result_result_type () usize;
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var trail_2 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var lit_4 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var j_5 : usize;
  var watchidx_6 : usize;
  var _7 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _8 : ();
  var _9 : ();
  ghost var old_trail_10 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _11 : ();
  ghost var old_f_12 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _13 : ();
  ghost var old_w_14 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _15 : ();
  var _16 : ();
  var _17 : ();
  var _18 : bool;
  var _19 : usize;
  var _20 : usize;
  var _21 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _22 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _23 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _24 : usize;
  var curr_watch_25 : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type;
  var _26 : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type;
  var _27 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _28 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _29 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _30 : usize;
  var _31 : usize;
  var _32 : bool;
  var _33 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _34 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _35 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var cref_36 : usize;
  var _37 : Core_Result_Result_Type.core_result_result_type bool usize;
  var _38 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _39 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _40 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _41 : usize;
  var _42 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _43 : usize;
  var _44 : isize;
  var cref_45 : usize;
  var _46 : ();
  var _47 : usize;
  var _48 : ();
  var _49 : ();
  var _50 : ();
  var _51 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    lit_4 <- lit;
    goto BB0
  }
  BB0 {
    j_5 <- (0 : usize);
    _7 <- lit_4;
    watchidx_6 <- ([#"../CreuSAT/src/unit_prop.rs" 239 19 239 36] ToWatchidx0.to_watchidx _7);
    goto BB1
  }
  BB1 {
    assert { [#"../CreuSAT/src/unit_prop.rs" 240 18 240 61] Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) = 2 * UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f_1)) };
    _8 <- ();
    assert { [#"../CreuSAT/src/unit_prop.rs" 241 18 241 54] Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) > UInt64.to_int watchidx_6 };
    _9 <- ();
    _11 <- ();
    old_trail_10 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 242 39 242 55] trail_2);
    goto BB2
  }
  BB2 {
    _13 <- ();
    old_f_12 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 243 37 243 49] f_1);
    goto BB3
  }
  BB3 {
    _15 <- ();
    old_w_14 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 244 37 244 55] watches_3);
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    invariant trail_inv { [#"../CreuSAT/src/unit_prop.rs" 245 27 245 46] Invariant1.invariant' ( * trail_2) ( * f_1) };
    invariant watch_len { [#"../CreuSAT/src/unit_prop.rs" 246 27 246 77] Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) = Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * old_w_14))) };
    invariant watch_inv { [#"../CreuSAT/src/unit_prop.rs" 247 27 247 48] Invariant2.invariant' ( * watches_3) ( * f_1) };
    invariant f_equi { [#"../CreuSAT/src/unit_prop.rs" 248 24 248 41] Equisat0.equisat ( * old_f_12) ( * f_1) };
    invariant f_inv { [#"../CreuSAT/src/unit_prop.rs" 249 23 249 36] Invariant0.invariant' ( * f_1) };
    invariant dec_unch { [#"../CreuSAT/src/unit_prop.rs" 250 26 250 70] Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * trail_2)) = Model2.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * old_trail_10)) };
    invariant nvars_unch { [#"../CreuSAT/src/unit_prop.rs" 251 28 251 58] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f_1)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * old_f_12)) };
    invariant proph_t { [#"../CreuSAT/src/unit_prop.rs" 252 25 252 53]  ^ trail_2 =  ^ old_trail_10 };
    invariant proph_f { [#"../CreuSAT/src/unit_prop.rs" 253 25 253 45]  ^ f_1 =  ^ old_f_12 };
    invariant proph_w { [#"../CreuSAT/src/unit_prop.rs" 254 25 254 51]  ^ watches_3 =  ^ old_w_14 };
    _19 <- j_5;
    _23 <- CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3);
    _24 <- watchidx_6;
    _22 <- ([#"../CreuSAT/src/unit_prop.rs" 255 14 255 39] Index0.index _23 _24);
    goto BB6
  }
  BB6 {
    _21 <- _22;
    _20 <- ([#"../CreuSAT/src/unit_prop.rs" 255 14 255 45] Len0.len _21);
    goto BB7
  }
  BB7 {
    _18 <- ([#"../CreuSAT/src/unit_prop.rs" 255 10 255 45] _19 < _20);
    switch (_18)
      | False -> goto BB22
      | _ -> goto BB8
      end
  }
  BB8 {
    _29 <- CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3);
    _30 <- watchidx_6;
    _28 <- ([#"../CreuSAT/src/unit_prop.rs" 256 26 256 51] Index0.index _29 _30);
    goto BB9
  }
  BB9 {
    _27 <- _28;
    _31 <- j_5;
    _26 <- ([#"../CreuSAT/src/unit_prop.rs" 256 26 256 54] Index1.index _27 _31);
    goto BB10
  }
  BB10 {
    curr_watch_25 <- _26;
    _33 <- CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_blocker curr_watch_25;
    _35 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_2);
    _34 <- _35;
    _32 <- ([#"../CreuSAT/src/unit_prop.rs" 257 11 257 57] LitSat0.lit_sat _33 _34);
    goto BB11
  }
  BB11 {
    switch (_32)
      | False -> goto BB13
      | _ -> goto BB12
      end
  }
  BB12 {
    j_5 <- ([#"../CreuSAT/src/unit_prop.rs" 258 12 258 18] j_5 + (1 : usize));
    _17 <- ();
    goto BB21
  }
  BB13 {
    cref_36 <- CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type_Watcher_cref curr_watch_25;
    _38 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _38) };
    _39 <- borrow_mut ( * trail_2);
    trail_2 <- { trail_2 with current = ( ^ _39) };
    _40 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _40) };
    _41 <- cref_36;
    _42 <- lit_4;
    _43 <- j_5;
    _37 <- ([#"../CreuSAT/src/unit_prop.rs" 261 18 261 86] PropagateLitWithRegardToClause0.propagate_lit_with_regard_to_clause _38 _39 _40 _41 _42 _43);
    goto BB14
  }
  BB14 {
    switch (_37)
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type _ -> goto BB15
      | Core_Result_Result_Type.Core_Result_Result_Err_Type _ -> goto BB16
      end
  }
  BB15 {
    switch (Core_Result_Result_Type.core_result_result_type_Ok_0 _37)
      | False -> goto BB19
      | _ -> goto BB18
      end
  }
  BB16 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    cref_45 <- Core_Result_Result_Type.core_result_result_type_Err_0 _37;
    _47 <- cref_45;
    _0 <- Core_Result_Result_Type.Core_Result_Result_Err_Type _47;
    goto BB23
  }
  BB17 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    absurd
  }
  BB18 {
    j_5 <- ([#"../CreuSAT/src/unit_prop.rs" 263 20 263 26] j_5 + (1 : usize));
    _17 <- ();
    goto BB20
  }
  BB19 {
    _17 <- ();
    goto BB20
  }
  BB20 {
    goto BB21
  }
  BB21 {
    goto BB5
  }
  BB22 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    _16 <- ();
    _51 <- ();
    _0 <- Core_Result_Result_Type.Core_Result_Result_Ok_Type _51;
    goto BB23
  }
  BB23 {
    return _0
  }
  
end
module CreuSat_UnitProp_UnitPropagate_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Assignments_Assignments_Type
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat1
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use Core_Result_Result_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val unit_propagate [@cfg:stackify] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) : Core_Result_Result_Type.core_result_result_type () usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 276 0 276 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 277 0 277 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 278 0 278 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 279 11 279 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 276 0 276 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 277 0 277 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 278 0 278 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 280 10 283 1] match (result) with
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type () -> true
      | Core_Result_Result_Type.Core_Result_Result_Err_Type n -> UInt64.to_int n < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int n)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 284 10 284 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 285 10 285 23] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_UnitProp_UnitPropagate
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model5 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model0.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner0 with function Model0.model = Model0.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model8.model,
  function Model1.model = Model0.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with function Model0.model = Model5.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with function Model0.model = Model5.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use Core_Result_Result_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model3.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model5.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model2.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreuSat_UnitProp_PropagateLiteral_Interface as PropagateLiteral0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function IndexLogic0.index_logic = IndexLogic0.index_logic, function Model0.model = Model0.model,
  predicate Unsat0.unsat = Unsat0.unsat, predicate Unsat1.unsat = Unsat1.unsat,
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model
  let rec cfg unit_propagate [@cfg:stackify] [#"../CreuSAT/src/unit_prop.rs" 286 0 286 101] (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (trail : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (watches : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) : Core_Result_Result_Type.core_result_result_type () usize
    requires {[#"../CreuSAT/src/unit_prop.rs" 276 0 276 33] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 277 0 277 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 278 0 278 44] Invariant2.invariant' ( * watches) ( * f)}
    requires {[#"../CreuSAT/src/unit_prop.rs" 279 11 279 38] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/unit_prop.rs" 276 0 276 33] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 277 0 277 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 278 0 278 44] Invariant2.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 280 10 283 1] match (result) with
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type () -> true
      | Core_Result_Result_Type.Core_Result_Result_Err_Type n -> UInt64.to_int n < Seq.length (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) /\ Unsat0.unsat ( ^ f) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail)) /\ Unsat1.unsat (Seq.get (Model0.model (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses ( ^ f))) (UInt64.to_int n)) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail))
      end }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 284 10 284 39] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/unit_prop.rs" 285 10 285 23] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Result_Result_Type.core_result_result_type () usize;
  var f_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var trail_2 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var watches_3 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var i_4 : usize;
  ghost var old_trail_5 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _6 : ();
  ghost var old_f_7 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _8 : ();
  ghost var old_w_9 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _10 : ();
  var _11 : ();
  var _12 : ();
  var _13 : bool;
  var _14 : usize;
  var _15 : usize;
  var _16 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var lit_17 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _18 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _19 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _20 : usize;
  var _21 : ();
  var _22 : Core_Result_Result_Type.core_result_result_type () usize;
  var _23 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _24 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _25 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _26 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _27 : isize;
  var cref_28 : usize;
  var _29 : ();
  var _30 : usize;
  var _31 : ();
  var _32 : ();
  var _33 : ();
  var _34 : usize;
  var _35 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    goto BB0
  }
  BB0 {
    i_4 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_curr_i ( * trail_2);
    _6 <- ();
    old_trail_5 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 288 39 288 55] trail_2);
    goto BB1
  }
  BB1 {
    _8 <- ();
    old_f_7 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 289 37 289 49] f_1);
    goto BB2
  }
  BB2 {
    _10 <- ();
    old_w_9 <- ghost ([#"../CreuSAT/src/unit_prop.rs" 290 37 290 55] watches_3);
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    invariant f_inv { [#"../CreuSAT/src/unit_prop.rs" 291 23 291 36] Invariant0.invariant' ( * f_1) };
    invariant trail_inv { [#"../CreuSAT/src/unit_prop.rs" 292 27 292 46] Invariant1.invariant' ( * trail_2) ( * f_1) };
    invariant watch_len { [#"../CreuSAT/src/unit_prop.rs" 293 27 293 77] Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * watches_3))) = Seq.length (Model1.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * old_w_9))) };
    invariant watch_inv { [#"../CreuSAT/src/unit_prop.rs" 294 27 294 48] Invariant2.invariant' ( * watches_3) ( * f_1) };
    invariant f_equi { [#"../CreuSAT/src/unit_prop.rs" 295 24 295 41] Equisat0.equisat ( * old_f_7) ( * f_1) };
    invariant nvars_unch { [#"../CreuSAT/src/unit_prop.rs" 296 28 296 58] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f_1)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * old_f_7)) };
    invariant proph_t { [#"../CreuSAT/src/unit_prop.rs" 297 25 297 53]  ^ trail_2 =  ^ old_trail_5 };
    invariant proph_f { [#"../CreuSAT/src/unit_prop.rs" 298 25 298 45]  ^ f_1 =  ^ old_f_7 };
    invariant proph_w { [#"../CreuSAT/src/unit_prop.rs" 299 25 299 51]  ^ watches_3 =  ^ old_w_9 };
    _14 <- i_4;
    _16 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * trail_2);
    _15 <- ([#"../CreuSAT/src/unit_prop.rs" 300 14 300 31] Len0.len _16);
    goto BB5
  }
  BB5 {
    _13 <- ([#"../CreuSAT/src/unit_prop.rs" 300 10 300 31] _14 < _15);
    switch (_13)
      | False -> goto BB12
      | _ -> goto BB6
      end
  }
  BB6 {
    _19 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * trail_2);
    _20 <- i_4;
    _18 <- ([#"../CreuSAT/src/unit_prop.rs" 301 18 301 32] Index0.index _19 _20);
    goto BB7
  }
  BB7 {
    lit_17 <- CreuSat_Trail_Step_Type.creusat_trail_step_type_Step_lit _18;
    _23 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _23) };
    _24 <- borrow_mut ( * trail_2);
    trail_2 <- { trail_2 with current = ( ^ _24) };
    _25 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _25) };
    _26 <- lit_17;
    _22 <- ([#"../CreuSAT/src/unit_prop.rs" 302 14 302 55] PropagateLiteral0.propagate_literal _23 _24 _25 _26);
    goto BB8
  }
  BB8 {
    switch (_22)
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type _ -> goto BB11
      | Core_Result_Result_Type.Core_Result_Result_Err_Type _ -> goto BB9
      end
  }
  BB9 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    cref_28 <- Core_Result_Result_Type.core_result_result_type_Err_0 _22;
    _30 <- cref_28;
    _0 <- Core_Result_Result_Type.Core_Result_Result_Err_Type _30;
    goto BB13
  }
  BB10 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assume { Resolve2.resolve watches_3 };
    absurd
  }
  BB11 {
    _21 <- ();
    i_4 <- ([#"../CreuSAT/src/unit_prop.rs" 308 8 308 14] i_4 + (1 : usize));
    _12 <- ();
    goto BB4
  }
  BB12 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve2.resolve watches_3 };
    _11 <- ();
    _34 <- i_4;
    trail_2 <- { trail_2 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * trail_2 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c _34 e) };
    _34 <- any usize;
    assume { Resolve1.resolve trail_2 };
    _35 <- ();
    _0 <- Core_Result_Result_Type.Core_Result_Result_Ok_Type _35;
    goto BB13
  }
  BB13 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_UnitPropStep_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  use CreuSat_Solver_ConflictResult_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val unit_prop_step [@cfg:stackify] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (t : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (w : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) : CreuSat_Solver_ConflictResult_Type.creusat_solver_conflictresult_type
    requires {[#"../CreuSAT/src/solver.rs" 196 4 196 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 197 4 197 42] Invariant1.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 198 4 198 42] Invariant2.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 199 4 199 48] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 200 15 200 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/solver.rs" 196 4 196 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 197 4 197 42] Invariant1.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 198 4 198 42] Invariant2.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 199 4 199 48] Invariant3.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 201 14 201 43] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 202 14 202 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 203 14 206 5] match (result) with
      | CreuSat_Solver_ConflictResult_Type.CreuSat_Solver_ConflictResult_Ground_Type -> NotSatisfiable0.not_satisfiable ( ^ f)
      | _ -> true
      end }
    
end
module CreuSat_Solver_Impl0_UnitPropStep
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model4 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model7.model,
  function Model1.model = Model6.model
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model0.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model7.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model7.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model8.model,
  function Model1.model = Model7.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model7.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model6.model
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model6.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use CreuSat_Solver_ConflictResult_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model0.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner2 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner1 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with function Model0.model = Model4.model,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with function Model0.model = Model4.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  use Core_Option_Option_Type
  use Core_Result_Result_Type
  clone CreuSat_Solver_Impl0_HandleConflict_Interface as HandleConflict0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant2.invariant', predicate Invariant2.invariant' = Invariant1.invariant',
  predicate Invariant3.invariant' = Invariant3.invariant', function Model0.model = Model7.model,
  predicate Unsat0.unsat = Unsat1.unsat, predicate Equisat0.equisat = Equisat0.equisat,
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve4 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve3 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Solver_Solver_Type.creusat_solver_solver_type
  clone CreuSat_UnitProp_UnitPropagate_Interface as UnitPropagate0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant2.invariant', predicate Invariant2.invariant' = Invariant1.invariant',
  function Model0.model = Model7.model, predicate Unsat0.unsat = Unsat0.unsat, predicate Unsat1.unsat = Unsat1.unsat,
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  let rec cfg unit_prop_step [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 207 4 207 118] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (t : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (w : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) : CreuSat_Solver_ConflictResult_Type.creusat_solver_conflictresult_type
    requires {[#"../CreuSAT/src/solver.rs" 196 4 196 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 197 4 197 42] Invariant1.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 198 4 198 42] Invariant2.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 199 4 199 48] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 200 15 200 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/solver.rs" 196 4 196 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 197 4 197 42] Invariant1.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 198 4 198 42] Invariant2.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 199 4 199 48] Invariant3.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 201 14 201 43] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 202 14 202 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 203 14 206 5] match (result) with
      | CreuSat_Solver_ConflictResult_Type.CreuSat_Solver_ConflictResult_Ground_Type -> NotSatisfiable0.not_satisfiable ( ^ f)
      | _ -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_ConflictResult_Type.creusat_solver_conflictresult_type;
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var f_2 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var d_3 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var t_4 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var w_5 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _6 : Core_Result_Result_Type.core_result_result_type () usize;
  var _7 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _8 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _9 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _10 : isize;
  var cref_11 : usize;
  var _12 : Core_Option_Option_Type.core_option_option_type bool;
  var _13 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _14 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _15 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _16 : usize;
  var _17 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _18 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _19 : isize;
  {
    self_1 <- self;
    f_2 <- f;
    d_3 <- d;
    t_4 <- t;
    w_5 <- w;
    goto BB0
  }
  BB0 {
    _7 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _7) };
    _8 <- borrow_mut ( * t_4);
    t_4 <- { t_4 with current = ( ^ _8) };
    _9 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _9) };
    _6 <- ([#"../CreuSAT/src/solver.rs" 208 14 208 37] UnitPropagate0.unit_propagate _7 _8 _9);
    goto BB1
  }
  BB1 {
    switch (_6)
      | Core_Result_Result_Type.Core_Result_Result_Ok_Type _ -> goto BB4
      | Core_Result_Result_Type.Core_Result_Result_Err_Type _ -> goto BB2
      end
  }
  BB2 {
    cref_11 <- Core_Result_Result_Type.core_result_result_type_Err_0 _6;
    _13 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _13) };
    _14 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _14) };
    _15 <- borrow_mut ( * t_4);
    t_4 <- { t_4 with current = ( ^ _15) };
    _16 <- cref_11;
    _17 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _17) };
    _18 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _18) };
    _12 <- ([#"../CreuSAT/src/solver.rs" 210 31 210 69] HandleConflict0.handle_conflict _13 _14 _15 _16 _17 _18);
    goto BB5
  }
  BB3 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    absurd
  }
  BB4 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    _0 <- CreuSat_Solver_ConflictResult_Type.CreuSat_Solver_ConflictResult_Ok_Type;
    goto BB12
  }
  BB5 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    switch (_12)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB6
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB7
      end
  }
  BB6 {
    _0 <- CreuSat_Solver_ConflictResult_Type.CreuSat_Solver_ConflictResult_Continue_Type;
    goto BB11
  }
  BB7 {
    switch (Core_Option_Option_Type.core_option_option_type_Some_0 _12)
      | False -> goto BB9
      | _ -> goto BB10
      end
  }
  BB8 {
    absurd
  }
  BB9 {
    _0 <- CreuSat_Solver_ConflictResult_Type.CreuSat_Solver_ConflictResult_Ground_Type;
    goto BB11
  }
  BB10 {
    _0 <- CreuSat_Solver_ConflictResult_Type.CreuSat_Solver_ConflictResult_Err_Type;
    goto BB11
  }
  BB11 {
    goto BB12
  }
  BB12 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_UnitPropLoop_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  use Core_Option_Option_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val unit_prop_loop [@cfg:stackify] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (t : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (w : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) : Core_Option_Option_Type.core_option_option_type bool
    requires {[#"../CreuSAT/src/solver.rs" 219 4 219 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 220 4 220 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 221 4 221 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 222 4 222 48] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 223 15 223 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/solver.rs" 219 4 219 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 220 4 220 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 221 4 221 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 222 4 222 48] Invariant3.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 224 14 228 5] match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Core_Option_Option_Type.Core_Option_Option_Some_Type (True) -> true
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> true
      end }
    ensures { [#"../CreuSAT/src/solver.rs" 229 14 229 43] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 230 14 230 27] Equisat0.equisat ( * f) ( ^ f) }
    
end
module CreuSat_Solver_Impl0_UnitPropLoop
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model3 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model7.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model0.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model9.model,
  function Model1.model = Model7.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model7.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model7.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model7.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model6.model
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model6.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use Core_Option_Option_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model4.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model1.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model2.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model0.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  use CreuSat_Solver_ConflictResult_Type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve4 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve3 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Solver_Solver_Type.creusat_solver_solver_type
  clone CreuSat_Solver_Impl0_UnitPropStep_Interface as UnitPropStep0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant2.invariant', predicate Invariant2.invariant' = Invariant1.invariant',
  predicate Invariant3.invariant' = Invariant3.invariant', predicate Equisat0.equisat = Equisat0.equisat,
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  let rec cfg unit_prop_loop [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 231 4 231 116] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (t : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (w : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) : Core_Option_Option_Type.core_option_option_type bool
    requires {[#"../CreuSAT/src/solver.rs" 219 4 219 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 220 4 220 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 221 4 221 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 222 4 222 48] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 223 15 223 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/solver.rs" 219 4 219 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 220 4 220 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 221 4 221 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 222 4 222 48] Invariant3.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 224 14 228 5] match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Core_Option_Option_Type.Core_Option_Option_Some_Type (True) -> true
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> true
      end }
    ensures { [#"../CreuSAT/src/solver.rs" 229 14 229 43] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 230 14 230 27] Equisat0.equisat ( * f) ( ^ f) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.core_option_option_type bool;
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var f_2 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var d_3 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var t_4 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var w_5 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  ghost var old_f_6 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _7 : ();
  ghost var old_t_8 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _9 : ();
  ghost var old_w_10 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _11 : ();
  ghost var old_d_12 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _13 : ();
  var _14 : ();
  var _15 : ();
  var _16 : CreuSat_Solver_ConflictResult_Type.creusat_solver_conflictresult_type;
  var _17 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _18 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _19 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _20 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _21 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _22 : isize;
  var _23 : ();
  var _24 : ();
  var _25 : ();
  {
    self_1 <- self;
    f_2 <- f;
    d_3 <- d;
    t_4 <- t;
    w_5 <- w;
    goto BB0
  }
  BB0 {
    _7 <- ();
    old_f_6 <- ghost ([#"../CreuSAT/src/solver.rs" 232 41 232 53] f_2);
    goto BB1
  }
  BB1 {
    _9 <- ();
    old_t_8 <- ghost ([#"../CreuSAT/src/solver.rs" 233 39 233 51] t_4);
    goto BB2
  }
  BB2 {
    _11 <- ();
    old_w_10 <- ghost ([#"../CreuSAT/src/solver.rs" 234 41 234 53] w_5);
    goto BB3
  }
  BB3 {
    _13 <- ();
    old_d_12 <- ghost ([#"../CreuSAT/src/solver.rs" 235 43 235 55] d_3);
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    invariant maintains_f { [#"../CreuSAT/src/solver.rs" 236 33 236 46] Invariant0.invariant' ( * f_2) };
    invariant maintains_t { [#"../CreuSAT/src/solver.rs" 237 33 237 48] Invariant1.invariant' ( * t_4) ( * f_2) };
    invariant maintains_w { [#"../CreuSAT/src/solver.rs" 238 33 238 48] Invariant2.invariant' ( * w_5) ( * f_2) };
    invariant maintains_d { [#"../CreuSAT/src/solver.rs" 239 33 239 57] Invariant3.invariant' ( * d_3) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f_2))) };
    invariant equi { [#"../CreuSAT/src/solver.rs" 240 26 240 51] Equisat0.equisat ( * old_f_6) ( * f_2) };
    invariant num_vars { [#"../CreuSAT/src/solver.rs" 241 30 241 60] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f_2)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * old_f_6)) };
    invariant prophf { [#"../CreuSAT/src/solver.rs" 242 28 242 48]  ^ f_2 =  ^ old_f_6 };
    invariant propht { [#"../CreuSAT/src/solver.rs" 243 28 243 48]  ^ t_4 =  ^ old_t_8 };
    invariant prophw { [#"../CreuSAT/src/solver.rs" 244 28 244 48]  ^ w_5 =  ^ old_w_10 };
    invariant prophd { [#"../CreuSAT/src/solver.rs" 245 28 245 48]  ^ d_3 =  ^ old_d_12 };
    _17 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _17) };
    _18 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _18) };
    _19 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _19) };
    _20 <- borrow_mut ( * t_4);
    t_4 <- { t_4 with current = ( ^ _20) };
    _21 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _21) };
    _16 <- ([#"../CreuSAT/src/solver.rs" 247 18 247 49] UnitPropStep0.unit_prop_step _17 _18 _19 _20 _21);
    goto BB6
  }
  BB6 {
    switch (_16)
      | CreuSat_Solver_ConflictResult_Type.CreuSat_Solver_ConflictResult_Ok_Type -> goto BB9
      | CreuSat_Solver_ConflictResult_Type.CreuSat_Solver_ConflictResult_Err_Type -> goto BB11
      | CreuSat_Solver_ConflictResult_Type.CreuSat_Solver_ConflictResult_Ground_Type -> goto BB10
      | CreuSat_Solver_ConflictResult_Type.CreuSat_Solver_ConflictResult_Continue_Type -> goto BB7
      end
  }
  BB7 {
    _15 <- ();
    goto BB5
  }
  BB8 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    absurd
  }
  BB9 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    _0 <- Core_Option_Option_Type.Core_Option_Option_Some_Type true;
    goto BB12
  }
  BB10 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    _0 <- Core_Option_Option_Type.Core_Option_Option_Some_Type false;
    goto BB12
  }
  BB11 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve3.resolve t_4 };
    assume { Resolve4.resolve w_5 };
    _0 <- Core_Option_Option_Type.Core_Option_Option_None_Type;
    goto BB12
  }
  BB12 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_EnqDecision_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use seq.Seq
  use mach.int.Int32
  use prelude.UInt8
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Trail_Step_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val enq_decision [@cfg:stackify] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/trail.rs" 258 15 258 29] Invariant0.invariant' _f}
    requires {[#"../CreuSAT/src/trail.rs" 259 4 259 43] Invariant1.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/trail.rs" 260 15 260 34] UInt64.to_int idx < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    requires {[#"../CreuSAT/src/trail.rs" 261 15 261 47] Unset0.unset (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) (UInt64.to_int idx))}
    requires {[#"../CreuSAT/src/trail.rs" 265 15 265 76] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) _f (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 259 4 259 43] Invariant1.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/trail.rs" 262 4 263 76] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) /\ j <> UInt64.to_int idx -> Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) j = Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) j }
    ensures { [#"../CreuSAT/src/trail.rs" 264 14 264 86] UInt8.to_int (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) (UInt64.to_int idx)) = 1 \/ UInt8.to_int (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) (UInt64.to_int idx)) = 0 }
    ensures { [#"../CreuSAT/src/trail.rs" 266 14 266 85] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) _f (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 267 14 267 63] Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) = 1 + Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) }
    
end
module CreuSat_Trail_Impl0_EnqDecision
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use seq.Seq
  use mach.int.Int32
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model0 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with function Model0.model = Model5.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model5.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model5.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant2 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model6.model
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model1.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model0.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model2.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model9 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model0.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model8 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model0.model
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = usize
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone Alloc_Vec_Impl1_Push_Interface as Push1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model
  clone CreuSat_Lit_Impl1_PhaseSaved_Interface as PhaseSaved0 with function Model0.model = Model9.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = uint8
  clone CreuSat_Assignments_Impl1_IndexMut_Interface as IndexMut1 with function Model0.model = Model8.model,
  function Model1.model = Model0.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = usize
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = usize, type i = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len1 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model
  let rec cfg enq_decision [@cfg:stackify] [#"../CreuSAT/src/trail.rs" 268 4 268 60] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (idx : usize) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/trail.rs" 258 15 258 29] Invariant0.invariant' _f}
    requires {[#"../CreuSAT/src/trail.rs" 259 4 259 43] Invariant1.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/trail.rs" 260 15 260 34] UInt64.to_int idx < UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars _f)}
    requires {[#"../CreuSAT/src/trail.rs" 261 15 261 47] Unset0.unset (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) (UInt64.to_int idx))}
    requires {[#"../CreuSAT/src/trail.rs" 265 15 265 76] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) _f (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self)))}
    ensures { [#"../CreuSAT/src/trail.rs" 259 4 259 43] Invariant1.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/trail.rs" 262 4 263 76] forall j : (int) . 0 <= j /\ j < Seq.length (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) /\ j <> UInt64.to_int idx -> Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self))) j = Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) j }
    ensures { [#"../CreuSAT/src/trail.rs" 264 14 264 86] UInt8.to_int (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) (UInt64.to_int idx)) = 1 \/ UInt8.to_int (Seq.get (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) (UInt64.to_int idx)) = 0 }
    ensures { [#"../CreuSAT/src/trail.rs" 266 14 266 85] LongArePostUnitInner0.long_are_post_unit_inner (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) _f (Model0.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ self))) }
    ensures { [#"../CreuSAT/src/trail.rs" 267 14 267 63] Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( ^ self))) = 1 + Seq.length (Model1.model (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var idx_2 : usize;
  var _f_3 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var trail_len_4 : usize;
  var _5 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _6 : ();
  var _7 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _8 : usize;
  var dlevel_9 : usize;
  var _10 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _11 : usize;
  var _12 : borrowed usize;
  var _13 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _14 : usize;
  var _15 : borrowed uint8;
  var _16 : borrowed (CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type);
  var _17 : usize;
  var lit_18 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _19 : usize;
  var _20 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _21 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var step_22 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  var _23 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _24 : usize;
  var _25 : CreuSat_Trail_Reason_Type.creusat_trail_reason_type;
  var _26 : ();
  var _27 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _28 : CreuSat_Trail_Step_Type.creusat_trail_step_type;
  {
    self_1 <- self;
    idx_2 <- idx;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    _5 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1);
    trail_len_4 <- ([#"../CreuSAT/src/trail.rs" 269 24 269 40] Len0.len _5);
    goto BB1
  }
  BB1 {
    _7 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d ( ^ _7)) };
    _8 <- trail_len_4;
    _6 <- ([#"../CreuSAT/src/trail.rs" 270 8 270 38] Push0.push _7 _8);
    goto BB2
  }
  BB2 {
    _10 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_decisions ( * self_1);
    dlevel_9 <- ([#"../CreuSAT/src/trail.rs" 271 21 271 41] Len1.len _10);
    goto BB3
  }
  BB3 {
    _11 <- dlevel_9;
    _13 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_lit_to_level ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a ( ^ _13) c d e) };
    _14 <- idx_2;
    _12 <- ([#"../CreuSAT/src/trail.rs" 272 8 272 30] IndexMut0.index_mut _13 _14);
    goto BB4
  }
  BB4 {
    _12 <- { _12 with current = _11 };
    _11 <- any usize;
    assume { Resolve0.resolve _12 };
    _16 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type ( ^ _16) b c d e) };
    _17 <- idx_2;
    _15 <- ([#"../CreuSAT/src/trail.rs" 273 8 273 29] IndexMut1.index_mut _16 _17);
    goto BB5
  }
  BB5 {
    _15 <- { _15 with current = ([#"../CreuSAT/src/trail.rs" 273 8 273 34]  * _15 - (2 : uint8)) };
    assume { Resolve1.resolve _15 };
    _19 <- idx_2;
    _21 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1);
    _20 <- _21;
    lit_18 <- ([#"../CreuSAT/src/trail.rs" 274 18 274 58] PhaseSaved0.phase_saved _19 _20);
    goto BB6
  }
  BB6 {
    _23 <- lit_18;
    _24 <- dlevel_9;
    _25 <- CreuSat_Trail_Reason_Type.CreuSat_Trail_Reason_Decision_Type;
    step_22 <- CreuSat_Trail_Step_Type.CreuSat_Trail_Step_Type _23 _24 _25;
    _27 <- borrow_mut (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_trail ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e =  * self_1 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b ( ^ _27) d e) };
    _28 <- step_22;
    step_22 <- any CreuSat_Trail_Step_Type.creusat_trail_step_type;
    _26 <- ([#"../CreuSAT/src/trail.rs" 278 8 278 29] Push1.push _27 _28);
    goto BB7
  }
  BB7 {
    assume { Resolve2.resolve self_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Solver_Impl0_OuterLoop_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use CreuSat_Assignments_Assignments_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete_Interface as Complete0
  clone CreuSat_Logic_LogicFormula_Impl1_Sat_Interface as Sat0
  use CreuSat_Solver_SatResult_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val outer_loop [@cfg:stackify] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (trail : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (w : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type
    requires {[#"../CreuSAT/src/solver.rs" 263 4 263 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 264 4 264 46] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 265 4 265 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 266 4 266 48] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 267 15 267 39] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 268 15 268 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/solver.rs" 263 4 263 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 264 4 264 46] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 265 4 265 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 266 4 266 48] Invariant3.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 269 14 269 43] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 270 14 270 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 271 14 277 5] match (result) with
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type _ -> Sat0.sat ( ^ f) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail)) /\ Complete0.complete (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail))
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type -> NotSatisfiable0.not_satisfiable ( ^ f)
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unknown_Type -> true
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Err_Type -> true
      end }
    
end
module CreuSat_Solver_Impl0_OuterLoop
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner1 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model3 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat1 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model7.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model0.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model9.model,
  function Model1.model = Model7.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model7.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat1.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model7.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model7.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model6.model
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model6.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete as Complete0 with function Model0.model = Model3.model,
  predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_Impl1_Sat as Sat0 with function Model0.model = Model0.model,
  function Model1.model = Model3.model,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  use CreuSat_Solver_SatResult_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model4.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant1 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model1.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model2.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model0.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model3.model
  use Core_Option_Option_Type
  clone Alloc_Vec_Impl0_New_Interface as New0 with type t = uint8, function Model0.model = Model8.model
  clone CreuSat_Formula_Impl2_IsSat_Interface as IsSat0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant4.invariant', predicate Sat0.sat = Sat0.sat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_EnqDecision_Interface as EnqDecision0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', function Model0.model = Model3.model,
  predicate Unset0.unset = Unset0.unset, function Model1.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve4 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve3 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreuSat_Decision_Impl1_GetNext_Interface as GetNext0 with predicate Invariant0.invariant' = Invariant3.invariant',
  predicate Invariant1.invariant' = Invariant4.invariant', function Model0.model = Model11.model,
  predicate Unset0.unset = Unset0.unset, predicate Complete0.complete = Complete0.complete
  clone CreuSat_Trail_Impl0_BacktrackTo_Interface as BacktrackTo0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant0.invariant', predicate Invariant1.invariant' = Invariant1.invariant',
  predicate Invariant2.invariant' = Invariant3.invariant', function Model1.model = Model1.model,
  function Model2.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Solver_Solver_Type.creusat_solver_solver_type
  clone CreuSat_Formula_Impl2_ReduceDb_Interface as ReduceDb0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant2.invariant', predicate Invariant2.invariant' = Invariant1.invariant',
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with function Model0.model = Model2.model
  clone CreuSat_Solver_Impl0_UnitPropLoop_Interface as UnitPropLoop0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  predicate Invariant3.invariant' = Invariant3.invariant',
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  let rec cfg outer_loop [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 278 4 278 113] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (f : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) (trail : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (w : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type
    requires {[#"../CreuSAT/src/solver.rs" 263 4 263 37] Invariant0.invariant' ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 264 4 264 46] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 265 4 265 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"../CreuSAT/src/solver.rs" 266 4 266 48] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 267 15 267 39] Invariant3.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)))}
    requires {[#"../CreuSAT/src/solver.rs" 268 15 268 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    ensures { [#"../CreuSAT/src/solver.rs" 263 4 263 37] Invariant0.invariant' ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 264 4 264 46] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 265 4 265 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 266 4 266 48] Invariant3.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f))) }
    ensures { [#"../CreuSAT/src/solver.rs" 269 14 269 43] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * f)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( ^ f)) }
    ensures { [#"../CreuSAT/src/solver.rs" 270 14 270 27] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"../CreuSAT/src/solver.rs" 271 14 277 5] match (result) with
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type _ -> Sat0.sat ( ^ f) (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail)) /\ Complete0.complete (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( ^ trail))
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type -> NotSatisfiable0.not_satisfiable ( ^ f)
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unknown_Type -> true
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Err_Type -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var f_2 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var d_3 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var trail_4 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var w_5 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _6 : ();
  var _7 : Core_Option_Option_Type.core_option_option_type bool;
  var _8 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _9 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _10 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _11 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _12 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _13 : isize;
  var _14 : ();
  var _15 : ();
  var slow_16 : usize;
  var _17 : bool;
  var _18 : usize;
  var _19 : usize;
  var _20 : bool;
  var _21 : usize;
  var _22 : usize;
  var _23 : bool;
  var _24 : ();
  var _25 : bool;
  var _26 : bool;
  var _27 : usize;
  var _28 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _29 : bool;
  var _30 : usize;
  var _31 : usize;
  var _32 : usize;
  var _33 : ();
  var _34 : bool;
  var _35 : usize;
  var _36 : usize;
  var _37 : ();
  var _38 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _39 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _40 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _41 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _42 : ();
  var _43 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _44 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _45 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _46 : ();
  var _47 : Core_Option_Option_Type.core_option_option_type usize;
  var _48 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _49 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _50 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _51 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _52 : isize;
  var next_53 : usize;
  var _54 : ();
  var _55 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _56 : usize;
  var _57 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _58 : bool;
  var _59 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _60 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _61 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _62 : ();
  var _63 : Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _64 : ();
  {
    self_1 <- self;
    f_2 <- f;
    d_3 <- d;
    trail_4 <- trail;
    w_5 <- w;
    goto BB0
  }
  BB0 {
    _8 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _8) };
    _9 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _9) };
    _10 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _10) };
    _11 <- borrow_mut ( * trail_4);
    trail_4 <- { trail_4 with current = ( ^ _11) };
    _12 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _12) };
    _7 <- ([#"../CreuSAT/src/solver.rs" 279 14 279 49] UnitPropLoop0.unit_prop_loop _8 _9 _10 _11 _12);
    goto BB1
  }
  BB1 {
    switch (_7)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB5
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB2
      end
  }
  BB2 {
    switch (Core_Option_Option_Type.core_option_option_type_Some_0 _7)
      | False -> goto BB4
      | _ -> goto BB3
      end
  }
  BB3 {
    _6 <- ();
    _18 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_slow ( * self_1);
    _20 <- ([#"../CreuSAT/src/solver.rs" 284 34 284 48] (2 : usize) = (0 : usize));
    assert { not _20 };
    goto BB6
  }
  BB4 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve3.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve4.resolve trail_4 };
    assume { Resolve1.resolve w_5 };
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type;
    goto BB34
  }
  BB5 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve3.resolve f_2 };
    assume { Resolve2.resolve d_3 };
    assume { Resolve4.resolve trail_4 };
    assume { Resolve1.resolve w_5 };
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Err_Type;
    goto BB34
  }
  BB6 {
    _19 <- ([#"../CreuSAT/src/solver.rs" 284 34 284 48] (18446744073709551615 : usize) / (2 : usize));
    _17 <- ([#"../CreuSAT/src/solver.rs" 284 22 284 48] _18 < _19);
    switch (_17)
      | False -> goto BB9
      | _ -> goto BB7
      end
  }
  BB7 {
    _22 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_slow ( * self_1);
    _23 <- ([#"../CreuSAT/src/solver.rs" 284 51 284 68] (100 : usize) = (0 : usize));
    assert { not _23 };
    goto BB8
  }
  BB8 {
    _21 <- ([#"../CreuSAT/src/solver.rs" 284 51 284 68] _22 / (100 : usize));
    slow_16 <- ([#"../CreuSAT/src/solver.rs" 284 51 284 74] _21 * (125 : usize));
    goto BB10
  }
  BB9 {
    slow_16 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_slow ( * self_1);
    goto BB10
  }
  BB10 {
    _28 <-  * trail_4;
    _27 <- ([#"../CreuSAT/src/solver.rs" 285 11 285 33] DecisionLevel0.decision_level _28);
    goto BB14
  }
  BB11 {
    _25 <- false;
    goto BB13
  }
  BB12 {
    _30 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_fast ( * self_1);
    _31 <- slow_16;
    _29 <- ([#"../CreuSAT/src/solver.rs" 285 41 285 57] _30 > _31);
    _25 <- _29;
    _29 <- any bool;
    goto BB13
  }
  BB13 {
    switch (_25)
      | False -> goto BB21
      | _ -> goto BB15
      end
  }
  BB14 {
    _26 <- ([#"../CreuSAT/src/solver.rs" 285 11 285 37] _27 > (0 : usize));
    switch (_26)
      | False -> goto BB11
      | _ -> goto BB12
      end
  }
  BB15 {
    _32 <- slow_16;
    self_1 <- { self_1 with current = (let CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e f g h =  * self_1 in CreuSat_Solver_Solver_Type.CreuSat_Solver_Solver_Type a b c d e _32 g h) };
    _32 <- any usize;
    _35 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_num_lemmas ( * self_1);
    _36 <- CreuSat_Solver_Solver_Type.creusat_solver_solver_type_Solver_max_lemmas ( * self_1);
    _34 <- ([#"../CreuSAT/src/solver.rs" 287 15 287 48] _35 > _36);
    switch (_34)
      | False -> goto BB18
      | _ -> goto BB16
      end
  }
  BB16 {
    _38 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _38) };
    _39 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _39) };
    _40 <-  * trail_4;
    _41 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _41) };
    _37 <- ([#"../CreuSAT/src/solver.rs" 288 16 288 42] ReduceDb0.reduceDB _38 _39 _40 _41);
    goto BB17
  }
  BB17 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve w_5 };
    _33 <- ();
    goto BB19
  }
  BB18 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve w_5 };
    _33 <- ();
    goto BB19
  }
  BB19 {
    _43 <- borrow_mut ( * trail_4);
    trail_4 <- { trail_4 with current = ( ^ _43) };
    _44 <-  * f_2;
    _45 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _45) };
    _42 <- ([#"../CreuSAT/src/solver.rs" 290 12 290 39] BacktrackTo0.backtrack_to _43 (0 : usize) _44 _45);
    goto BB20
  }
  BB20 {
    _24 <- ();
    goto BB22
  }
  BB21 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve w_5 };
    _24 <- ();
    goto BB22
  }
  BB22 {
    _48 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _48) };
    _50 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_4);
    _49 <- _50;
    _51 <-  * f_2;
    _47 <- ([#"../CreuSAT/src/solver.rs" 293 14 293 47] GetNext0.get_next _48 _49 _51);
    goto BB23
  }
  BB23 {
    assume { Resolve2.resolve d_3 };
    switch (_47)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB24
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB26
      end
  }
  BB24 {
    _59 <-  * f_2;
    assume { Resolve3.resolve f_2 };
    _61 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * trail_4);
    assume { Resolve4.resolve trail_4 };
    _60 <- _61;
    _58 <- ([#"../CreuSAT/src/solver.rs" 302 19 302 47] IsSat0.is_sat _59 _60);
    goto BB28
  }
  BB25 {
    assume { Resolve3.resolve f_2 };
    assume { Resolve4.resolve trail_4 };
    absurd
  }
  BB26 {
    next_53 <- Core_Option_Option_Type.core_option_option_type_Some_0 _47;
    _55 <- borrow_mut ( * trail_4);
    trail_4 <- { trail_4 with current = ( ^ _55) };
    _56 <- next_53;
    _57 <-  * f_2;
    assume { Resolve3.resolve f_2 };
    _54 <- ([#"../CreuSAT/src/solver.rs" 295 16 295 43] EnqDecision0.enq_decision _55 _56 _57);
    goto BB27
  }
  BB27 {
    assume { Resolve4.resolve trail_4 };
    _46 <- ();
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unknown_Type;
    goto BB35
  }
  BB28 {
    switch (_58)
      | False -> goto BB32
      | _ -> goto BB29
      end
  }
  BB29 {
    _63 <- ([#"../CreuSAT/src/solver.rs" 303 42 303 52] New0.new ());
    goto BB30
  }
  BB30 {
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type _63;
    goto BB31
  }
  BB31 {
    goto BB33
  }
  BB32 {
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Err_Type;
    goto BB33
  }
  BB33 {
    goto BB35
  }
  BB34 {
    goto BB35
  }
  BB35 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_Inner_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete_Interface as EventuallySatComplete0
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Solver_SatResult_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val inner [@cfg:stackify] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (formula : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (decisions : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (watches : CreuSat_Watches_Watches_Type.creusat_watches_watches_type) : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type
    requires {[#"../CreuSAT/src/solver.rs" 314 15 314 48] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * formula)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/solver.rs" 315 15 315 34] Invariant0.invariant' ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 316 15 316 53] Invariant1.invariant' decisions (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * formula)))}
    requires {[#"../CreuSAT/src/solver.rs" 317 15 317 40] Invariant2.invariant' trail ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 318 15 318 42] Invariant3.invariant' watches ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 319 15 319 53] Invariant1.invariant' decisions (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * formula)))}
    ensures { [#"../CreuSAT/src/solver.rs" 320 14 324 5] match (result) with
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type v -> SatInner0.sat_inner ( ^ formula) (Model0.model v) /\ Equisat0.equisat ( * formula) ( ^ formula) /\ EventuallySatComplete0.eventually_sat_complete ( * formula)
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type -> NotSatisfiable0.not_satisfiable ( ^ formula) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    ensures { [#"../CreuSAT/src/solver.rs" 325 14 325 39] Equisat0.equisat ( * formula) ( ^ formula) }
    
end
module CreuSat_Solver_Impl0_Inner
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model8 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model8.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model5 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model8.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model8.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model7.model,
  function Model1.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model8.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model1 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model1.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model9.model,
  function Model1.model = Model7.model, function Model2.model = Model8.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model7.model,
  function Model1.model = Model8.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model7.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model5.model
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  function Model0.model = Model8.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model7.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model8.model
  use CreuSat_Watches_Watches_Type
  use CreuSat_Trail_Trail_Type
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Solver_Solver_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model8.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  use CreuSat_Solver_SatResult_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant3 with function Model0.model = Model6.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model3.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model5.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model1.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  use prelude.IntSize
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve6 with type t = uint8
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete as Complete0 with function Model0.model = Model5.model,
  predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_Impl1_Sat as Sat1 with function Model0.model = Model1.model,
  function Model1.model = Model5.model,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve5 with type t = uint8, function Model0.model = Model0.model,
  predicate Resolve0.resolve = Resolve6.resolve
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve4 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve3 with type t = CreuSat_Solver_Solver_Type.creusat_solver_solver_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreuSat_Solver_Impl0_OuterLoop_Interface as OuterLoop0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant2.invariant', predicate Invariant2.invariant' = Invariant3.invariant',
  predicate Invariant3.invariant' = Invariant1.invariant', predicate Equisat0.equisat = Equisat0.equisat,
  predicate Sat0.sat = Sat1.sat, predicate Complete0.complete = Complete0.complete,
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  let rec cfg inner [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 326 4 328 18] (self : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type)) (formula : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) (decisions : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type) (trail : CreuSat_Trail_Trail_Type.creusat_trail_trail_type) (watches : CreuSat_Watches_Watches_Type.creusat_watches_watches_type) : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type
    requires {[#"../CreuSAT/src/solver.rs" 314 15 314 48] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * formula)) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/solver.rs" 315 15 315 34] Invariant0.invariant' ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 316 15 316 53] Invariant1.invariant' decisions (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * formula)))}
    requires {[#"../CreuSAT/src/solver.rs" 317 15 317 40] Invariant2.invariant' trail ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 318 15 318 42] Invariant3.invariant' watches ( * formula)}
    requires {[#"../CreuSAT/src/solver.rs" 319 15 319 53] Invariant1.invariant' decisions (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * formula)))}
    ensures { [#"../CreuSAT/src/solver.rs" 320 14 324 5] match (result) with
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type v -> SatInner0.sat_inner ( ^ formula) (Model0.model v) /\ Equisat0.equisat ( * formula) ( ^ formula) /\ EventuallySatComplete0.eventually_sat_complete ( * formula)
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type -> NotSatisfiable0.not_satisfiable ( ^ formula) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    ensures { [#"../CreuSAT/src/solver.rs" 325 14 325 39] Equisat0.equisat ( * formula) ( ^ formula) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
  var self_1 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var formula_2 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var decisions_3 : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type;
  var trail_4 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var watches_5 : CreuSat_Watches_Watches_Type.creusat_watches_watches_type;
  ghost var old_f_6 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _7 : ();
  var _8 : ();
  var _9 : ();
  var _10 : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
  var _11 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _12 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _13 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _14 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _15 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _16 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _17 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _18 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _19 : isize;
  var _20 : ();
  var _21 : Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var o_22 : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
  var _23 : ();
  {
    self_1 <- self;
    formula_2 <- formula;
    decisions_3 <- decisions;
    trail_4 <- trail;
    watches_5 <- watches;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    _7 <- ();
    old_f_6 <- ghost ([#"../CreuSAT/src/solver.rs" 329 41 329 59] formula_2);
    goto BB5
  }
  BB5 {
    goto BB6
  }
  BB6 {
    goto BB7
  }
  BB7 {
    goto BB8
  }
  BB8 {
    goto BB9
  }
  BB9 {
    invariant equi { [#"../CreuSAT/src/solver.rs" 330 26 330 57] Equisat0.equisat ( * old_f_6) ( * formula_2) };
    invariant num_vars { [#"../CreuSAT/src/solver.rs" 331 30 331 66] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * formula_2)) = UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * old_f_6)) };
    invariant maintains_f { [#"../CreuSAT/src/solver.rs" 332 33 332 52] Invariant0.invariant' ( * formula_2) };
    invariant maintains_t { [#"../CreuSAT/src/solver.rs" 333 33 333 58] Invariant2.invariant' trail_4 ( * formula_2) };
    invariant maintains_w { [#"../CreuSAT/src/solver.rs" 334 33 334 60] Invariant3.invariant' watches_5 ( * formula_2) };
    invariant maintains_d { [#"../CreuSAT/src/solver.rs" 335 33 335 71] Invariant1.invariant' decisions_3 (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars ( * formula_2))) };
    invariant proph_f { [#"../CreuSAT/src/solver.rs" 336 29 336 55]  ^ formula_2 =  ^ old_f_6 };
    _11 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _11) };
    _12 <- borrow_mut ( * formula_2);
    formula_2 <- { formula_2 with current = ( ^ _12) };
    _14 <- borrow_mut decisions_3;
    decisions_3 <-  ^ _14;
    _13 <- borrow_mut ( * _14);
    _14 <- { _14 with current = ( ^ _13) };
    _16 <- borrow_mut trail_4;
    trail_4 <-  ^ _16;
    _15 <- borrow_mut ( * _16);
    _16 <- { _16 with current = ( ^ _15) };
    _18 <- borrow_mut watches_5;
    watches_5 <-  ^ _18;
    _17 <- borrow_mut ( * _18);
    _18 <- { _18 with current = ( ^ _17) };
    _10 <- ([#"../CreuSAT/src/solver.rs" 338 18 338 84] OuterLoop0.outer_loop _11 _12 _13 _15 _17);
    goto BB10
  }
  BB10 {
    assume { Resolve0.resolve _14 };
    assume { Resolve1.resolve _16 };
    assume { Resolve2.resolve _18 };
    switch (_10)
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type _ -> goto BB13
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unknown_Type -> goto BB12
      | _ -> goto BB11
      end
  }
  BB11 {
    assume { Resolve3.resolve self_1 };
    assume { Resolve4.resolve formula_2 };
    o_22 <- _10;
    _10 <- any CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
    _0 <- o_22;
    o_22 <- any CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
    goto BB16
  }
  BB12 {
    _9 <- ();
    goto BB15
  }
  BB13 {
    assume { Resolve3.resolve self_1 };
    assume { Resolve4.resolve formula_2 };
    assume { Resolve5.resolve _21 };
    _21 <- CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type_Assignments_0 (CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail_4);
    trail_4 <- (let CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type a b c d e = trail_4 in CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type (let CreuSat_Assignments_Assignments_Type.CreuSat_Assignments_Assignments_Type a = CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments trail_4 in CreuSat_Assignments_Assignments_Type.CreuSat_Assignments_Assignments_Type (any Alloc_Vec_Vec_Type.alloc_vec_vec_type uint8 (Alloc_Alloc_Global_Type.alloc_alloc_global_type))) b c d e);
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type _21;
    goto BB14
  }
  BB14 {
    goto BB17
  }
  BB15 {
    goto BB9
  }
  BB16 {
    goto BB17
  }
  BB17 {
    goto BB18
  }
  BB18 {
    goto BB19
  }
  BB19 {
    goto BB20
  }
  BB20 {
    goto BB21
  }
  BB21 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_New_Interface
  use prelude.Borrow
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Trail_Trail_Type
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  val new [@cfg:stackify] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : CreuSat_Trail_Trail_Type.creusat_trail_trail_type
    requires {[#"../CreuSAT/src/trail.rs" 42 15 42 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 43 15 43 30] Invariant1.invariant' a f}
    ensures { [#"../CreuSAT/src/trail.rs" 44 14 44 34] Invariant2.invariant' result f }
    
end
module CreuSat_Trail_Impl0_New
  use prelude.Borrow
  use mach.int.Int
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model5 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with function Model0.model = Model4.model,
  function Model1.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model5.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model4.model,
  function Model1.model = Model5.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model4.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model4.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model5.model
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant1.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model0.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone Alloc_Vec_Impl0_New_Interface as New1 with type t = usize, function Model0.model = Model3.model
  clone Alloc_Vec_Impl0_New_Interface as New0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  function Model0.model = Model2.model
  clone Alloc_Vec_FromElem_Interface as FromElem0 with type t = usize, function Model0.model = Model3.model
  let rec cfg new [@cfg:stackify] [#"../CreuSAT/src/trail.rs" 45 4 45 52] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (a : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type) : CreuSat_Trail_Trail_Type.creusat_trail_trail_type
    requires {[#"../CreuSAT/src/trail.rs" 42 15 42 28] Invariant0.invariant' f}
    requires {[#"../CreuSAT/src/trail.rs" 43 15 43 30] Invariant1.invariant' a f}
    ensures { [#"../CreuSAT/src/trail.rs" 44 14 44 34] Invariant2.invariant' result f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var f_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var a_2 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _3 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _4 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _5 : usize;
  var _6 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Trail_Step_Type.creusat_trail_step_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _7 : Alloc_Vec_Vec_Type.alloc_vec_vec_type usize (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  {
    f_1 <- f;
    a_2 <- a;
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    _3 <- a_2;
    a_2 <- any CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
    _5 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _4 <- ([#"../CreuSAT/src/trail.rs" 48 26 48 64] FromElem0.from_elem (18446744073709551615 : usize) _5);
    goto BB2
  }
  BB2 {
    _6 <- ([#"../CreuSAT/src/trail.rs" 49 19 49 29] New0.new ());
    goto BB3
  }
  BB3 {
    _7 <- ([#"../CreuSAT/src/trail.rs" 51 23 51 33] New1.new ());
    goto BB4
  }
  BB4 {
    _0 <- CreuSat_Trail_Trail_Type.CreuSat_Trail_Trail_Type _3 _4 _6 (0 : usize) _7;
    goto BB5
  }
  BB5 {
    goto BB6
  }
  BB6 {
    goto BB7
  }
  BB7 {
    goto BB8
  }
  BB8 {
    goto BB9
  }
  BB9 {
    return _0
  }
  
end
module CreuSat_Watches_Impl0_New_Interface
  use prelude.Borrow
  use CreuSat_Watches_Watches_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  val new [@cfg:stackify] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : CreuSat_Watches_Watches_Type.creusat_watches_watches_type
    ensures { [#"../CreuSAT/src/watches.rs" 74 14 74 34] Invariant0.invariant' result f }
    
end
module CreuSat_Watches_Impl0_New
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model1.model,
  function Model1.model = Model2.model, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  use prelude.UIntSize
  clone CreusotContracts_Logic_Resolve_Impl2_Resolve as Resolve2 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  function Model0.model = Model1.model, predicate Resolve0.resolve = Resolve2.resolve
  clone CreusotContracts_Std1_Vec_Impl3_Resolve as Resolve0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  function Model0.model = Model0.model, predicate Resolve0.resolve = Resolve1.resolve
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model
  clone Alloc_Vec_Impl0_New_Interface as New1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  function Model0.model = Model1.model
  clone Alloc_Vec_Impl0_New_Interface as New0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  function Model0.model = Model0.model
  let rec cfg new [@cfg:stackify] [#"../CreuSAT/src/watches.rs" 75 4 75 38] (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : CreuSat_Watches_Watches_Type.creusat_watches_watches_type
    ensures { [#"../CreuSAT/src/watches.rs" 74 14 74 34] Invariant0.invariant' result f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Watches_Watches_Type.creusat_watches_watches_type;
  var f_1 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var i_2 : usize;
  var watches_3 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _4 : ();
  var _5 : ();
  var _6 : bool;
  var _7 : usize;
  var _8 : usize;
  var _9 : ();
  var _10 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _11 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _12 : ();
  var _13 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _14 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _15 : ();
  var _16 : ();
  var _17 : ();
  var _18 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  {
    f_1 <- f;
    goto BB0
  }
  BB0 {
    i_2 <- (0 : usize);
    watches_3 <- ([#"../CreuSAT/src/watches.rs" 77 26 77 36] New0.new ());
    goto BB1
  }
  BB1 {
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    invariant i_less { [#"../CreuSAT/src/watches.rs" 78 28 78 45] UInt64.to_int i_2 <= UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1) };
    invariant maintains_inv { [#"../CreuSAT/src/watches.rs" 79 35 79 79] WatchesInvariantInternal0.watches_invariant_internal (Model0.model watches_3) (UInt64.to_int i_2) f_1 };
    _7 <- i_2;
    _8 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_1;
    _6 <- ([#"../CreuSAT/src/watches.rs" 80 14 80 28] _7 < _8);
    switch (_6)
      | False -> goto BB9
      | _ -> goto BB4
      end
  }
  BB4 {
    _10 <- borrow_mut watches_3;
    watches_3 <-  ^ _10;
    _11 <- ([#"../CreuSAT/src/watches.rs" 81 25 81 35] New1.new ());
    goto BB5
  }
  BB5 {
    _9 <- ([#"../CreuSAT/src/watches.rs" 81 12 81 36] Push0.push _10 _11);
    goto BB6
  }
  BB6 {
    _13 <- borrow_mut watches_3;
    watches_3 <-  ^ _13;
    _14 <- ([#"../CreuSAT/src/watches.rs" 82 25 82 35] New1.new ());
    goto BB7
  }
  BB7 {
    _12 <- ([#"../CreuSAT/src/watches.rs" 82 12 82 36] Push0.push _13 _14);
    goto BB8
  }
  BB8 {
    i_2 <- ([#"../CreuSAT/src/watches.rs" 83 12 83 18] i_2 + (1 : usize));
    _5 <- ();
    goto BB3
  }
  BB9 {
    _4 <- ();
    assume { Resolve0.resolve _18 };
    _18 <- watches_3;
    watches_3 <- any Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
    _0 <- CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type _18;
    goto BB10
  }
  BB10 {
    goto BB11
  }
  BB11 {
    return _0
  }
  
end
module CreuSat_Watches_Impl0_InitWatches_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  val init_watches [@cfg:stackify] (self : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/watches.rs" 132 4 132 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/watches.rs" 133 15 133 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/watches.rs" 134 15 134 28] Invariant1.invariant' f}
    ensures { [#"../CreuSAT/src/watches.rs" 132 4 132 42] Invariant0.invariant' ( ^ self) f }
    
end
module CreuSat_Watches_Impl0_InitWatches
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model4 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model4.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model4.model
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model1 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model3.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model4.model
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model2.model,
  function Model1.model = Model3.model, function Model2.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model1.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy2 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model7 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model4.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model6 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model2.model
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreuSat_Lit_Impl1_ToNegWatchidx_Interface as ToNegWatchidx0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function ToNegWatchidxLogic0.to_neg_watchidx_logic = ToNegWatchidxLogic0.to_neg_watchidx_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model7.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len1 with function Model0.model = Model7.model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with function Model0.model = Model6.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model3.model
  let rec cfg init_watches [@cfg:stackify] [#"../CreuSAT/src/watches.rs" 135 4 135 47] (self : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/watches.rs" 132 4 132 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/watches.rs" 133 15 133 42] UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/watches.rs" 134 15 134 28] Invariant1.invariant' f}
    ensures { [#"../CreuSAT/src/watches.rs" 132 4 132 42] Invariant0.invariant' ( ^ self) f }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var f_2 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  ghost var old_w_3 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _4 : ();
  var i_5 : usize;
  var _6 : ();
  var _7 : bool;
  var _8 : usize;
  var _9 : usize;
  var _10 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var clause_11 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _12 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _13 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _14 : usize;
  var _15 : ();
  var _16 : bool;
  var _17 : usize;
  var _18 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _19 : ();
  var _20 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _21 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _22 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _23 : usize;
  var _24 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _25 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _26 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _27 : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type;
  var _28 : usize;
  var _29 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _30 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _31 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _32 : ();
  var _33 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _34 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _35 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _36 : usize;
  var _37 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _38 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _39 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _40 : CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type;
  var _41 : usize;
  var _42 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _43 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _44 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _45 : ();
  var _46 : ();
  var _47 : ();
  {
    self_1 <- self;
    f_2 <- f;
    goto BB0
  }
  BB0 {
    _4 <- ();
    old_w_3 <- ghost ([#"../CreuSAT/src/watches.rs" 136 41 136 56] self_1);
    goto BB1
  }
  BB1 {
    i_5 <- (0 : usize);
    goto BB2
  }
  BB2 {
    invariant watch_inv { [#"../CreuSAT/src/watches.rs" 138 31 138 49] Invariant0.invariant' ( * self_1) f_2 };
    invariant same_len { [#"../CreuSAT/src/watches.rs" 139 30 139 70] Seq.length (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1))) = 2 * UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_2) };
    invariant proph { [#"../CreuSAT/src/watches.rs" 140 27 140 50]  ^ self_1 =  ^ old_w_3 };
    _8 <- i_5;
    _10 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f_2;
    _9 <- ([#"../CreuSAT/src/watches.rs" 141 18 141 33] Len0.len _10);
    goto BB3
  }
  BB3 {
    _7 <- ([#"../CreuSAT/src/watches.rs" 141 14 141 33] _8 < _9);
    switch (_7)
      | False -> goto BB20
      | _ -> goto BB4
      end
  }
  BB4 {
    _13 <- f_2;
    _14 <- i_5;
    _12 <- ([#"../CreuSAT/src/watches.rs" 142 26 142 30] Index0.index _13 _14);
    goto BB5
  }
  BB5 {
    clause_11 <- _12;
    _18 <- clause_11;
    _17 <- ([#"../CreuSAT/src/watches.rs" 143 15 143 27] Len1.len _18);
    goto BB6
  }
  BB6 {
    _16 <- ([#"../CreuSAT/src/watches.rs" 143 15 143 31] _17 > (1 : usize));
    switch (_16)
      | False -> goto BB18
      | _ -> goto BB7
      end
  }
  BB7 {
    _22 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * self_1 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _22)) };
    _26 <- clause_11;
    _25 <- ([#"../CreuSAT/src/watches.rs" 146 29 146 38] Index1.index _26 (0 : usize));
    goto BB8
  }
  BB8 {
    _24 <- _25;
    _23 <- ([#"../CreuSAT/src/watches.rs" 146 29 146 56] ToNegWatchidx0.to_neg_watchidx _24);
    goto BB9
  }
  BB9 {
    _21 <- ([#"../CreuSAT/src/watches.rs" 146 16 146 57] IndexMut0.index_mut _22 _23);
    goto BB10
  }
  BB10 {
    _20 <- borrow_mut ( * _21);
    _21 <- { _21 with current = ( ^ _20) };
    _28 <- i_5;
    _31 <- clause_11;
    _30 <- ([#"../CreuSAT/src/watches.rs" 146 91 146 100] Index1.index _31 (1 : usize));
    goto BB11
  }
  BB11 {
    _29 <- _30;
    _27 <- CreuSat_Watches_Watcher_Type.CreuSat_Watches_Watcher_Type _28 _29;
    _19 <- ([#"../CreuSAT/src/watches.rs" 146 16 146 103] Push0.push _20 _27);
    goto BB12
  }
  BB12 {
    assume { Resolve0.resolve _21 };
    _35 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * self_1 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _35)) };
    _39 <- clause_11;
    _38 <- ([#"../CreuSAT/src/watches.rs" 147 29 147 38] Index1.index _39 (1 : usize));
    goto BB13
  }
  BB13 {
    _37 <- _38;
    _36 <- ([#"../CreuSAT/src/watches.rs" 147 29 147 56] ToNegWatchidx0.to_neg_watchidx _37);
    goto BB14
  }
  BB14 {
    _34 <- ([#"../CreuSAT/src/watches.rs" 147 16 147 57] IndexMut0.index_mut _35 _36);
    goto BB15
  }
  BB15 {
    _33 <- borrow_mut ( * _34);
    _34 <- { _34 with current = ( ^ _33) };
    _41 <- i_5;
    _44 <- clause_11;
    _43 <- ([#"../CreuSAT/src/watches.rs" 147 91 147 100] Index1.index _44 (0 : usize));
    goto BB16
  }
  BB16 {
    _42 <- _43;
    _40 <- CreuSat_Watches_Watcher_Type.CreuSat_Watches_Watcher_Type _41 _42;
    _32 <- ([#"../CreuSAT/src/watches.rs" 147 16 147 103] Push0.push _33 _40);
    goto BB17
  }
  BB17 {
    assume { Resolve0.resolve _34 };
    _15 <- ();
    goto BB19
  }
  BB18 {
    _15 <- ();
    goto BB19
  }
  BB19 {
    i_5 <- ([#"../CreuSAT/src/watches.rs" 149 12 149 18] i_5 + (1 : usize));
    _6 <- ();
    goto BB2
  }
  BB20 {
    assume { Resolve1.resolve self_1 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Trail_Impl0_LearnUnits_Interface
  use prelude.Borrow
  use mach.int.UInt64
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror_Interface as InvariantMirror0
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  use Core_Option_Option_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  val learn_units [@cfg:stackify] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : Core_Option_Option_Type.core_option_option_type bool
    requires {[#"../CreuSAT/src/trail.rs" 310 4 310 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 311 4 311 48] Invariant1.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 312 15 312 28] Invariant2.invariant' f}
    ensures { [#"../CreuSAT/src/trail.rs" 310 4 310 42] Invariant0.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 311 4 311 48] Invariant1.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 313 14 316 5] match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type (True) -> NotSatisfiable0.not_satisfiable f
      | _ -> true
      end }
    
end
module CreuSat_Trail_Impl0_LearnUnits
  use prelude.Borrow
  use mach.int.UInt64
  use mach.int.Int
  use prelude.UInt8
  use prelude.UIntSize
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model5 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant6 with function Model0.model = Model5.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Reason_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with function Model0.model = Model6.model,
  function Model1.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model4 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model4.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant6.invariant',
  function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model6.model,
  predicate Invariant0.invariant' = Invariant6.invariant', function Model1.model = Model5.model
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model6.model,
  function Model1.model = Model5.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model6.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model2.model
  use CreuSat_Decision_Decisions_Type
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model5.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use Core_Option_Option_Type
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model4.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model0.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model1.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model2.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with function Model0.model = Model5.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with function Model0.model = Model2.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model2.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy_Type as ModelTy2
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset1 with function Model0.model = Model2.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model10 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model9 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model4.model
  use Core_Result_Result_Type
  clone CreuSat_Trail_Impl0_LearnUnit_Interface as LearnUnit0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function Model0.model = Model6.model, function Model1.model = Model5.model,
  predicate Invariant3.invariant' = Invariant6.invariant', function Model2.model = Model0.model,
  function Model3.model = Model2.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate Sat0.sat = Sat0.sat, predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_ConflictAnalysis_ResolveEmptyClause_Interface as ResolveEmptyClause0 with predicate Invariant0.invariant' = Invariant2.invariant',
  predicate Invariant1.invariant' = Invariant0.invariant', function Model0.model = Model6.model,
  predicate Unsat0.unsat = Unsat1.unsat, predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Trail_Trail_Type.creusat_trail_trail_type
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreuSat_Lit_Impl1_LitUnsat_Interface as LitUnsat0 with function Model0.model = Model11.model,
  predicate Invariant0.invariant' = Invariant4.invariant', predicate Unsat0.unsat = Unsat0.unsat
  clone CreuSat_Lit_Impl1_LitSet_Interface as LitSet0 with function Model0.model = Model11.model,
  predicate Invariant0.invariant' = Invariant4.invariant', predicate Unset0.unset = Unset1.unset
  clone CreuSat_Clause_Impl0_Index_Interface as Index1 with function Model0.model = Model10.model
  clone CreuSat_Clause_Impl3_Len_Interface as Len1 with function Model0.model = Model10.model
  clone CreuSat_Formula_Impl0_Index_Interface as Index0 with function Model0.model = Model9.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model6.model
  let rec cfg learn_units [@cfg:stackify] [#"../CreuSAT/src/trail.rs" 317 4 317 81] (self : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type)) (f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) (d : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type)) : Core_Option_Option_Type.core_option_option_type bool
    requires {[#"../CreuSAT/src/trail.rs" 310 4 310 42] Invariant0.invariant' ( * self) f}
    requires {[#"../CreuSAT/src/trail.rs" 311 4 311 48] Invariant1.invariant' ( * d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f))}
    requires {[#"../CreuSAT/src/trail.rs" 312 15 312 28] Invariant2.invariant' f}
    ensures { [#"../CreuSAT/src/trail.rs" 310 4 310 42] Invariant0.invariant' ( ^ self) f }
    ensures { [#"../CreuSAT/src/trail.rs" 311 4 311 48] Invariant1.invariant' ( ^ d) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f)) }
    ensures { [#"../CreuSAT/src/trail.rs" 313 14 316 5] match (result) with
      | Core_Option_Option_Type.Core_Option_Option_Some_Type (True) -> NotSatisfiable0.not_satisfiable f
      | _ -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : Core_Option_Option_Type.core_option_option_type bool;
  var self_1 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var f_2 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var d_3 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _4 : ();
  var i_5 : usize;
  ghost var old_d_6 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _7 : ();
  ghost var old_self_8 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _9 : ();
  var _10 : ();
  var _11 : ();
  var _12 : bool;
  var _13 : usize;
  var _14 : usize;
  var _15 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Clause_Clause_Type.creusat_clause_clause_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var clause_16 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _17 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _18 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _19 : usize;
  var _20 : ();
  var _21 : bool;
  var _22 : usize;
  var _23 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var lit_24 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _25 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _26 : CreuSat_Clause_Clause_Type.creusat_clause_clause_type;
  var _27 : bool;
  var _28 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _29 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _30 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _31 : bool;
  var _32 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _33 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _34 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _35 : ();
  var _36 : bool;
  var _37 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _38 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _39 : usize;
  var _40 : Core_Result_Result_Type.core_result_result_type () ();
  var _41 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _42 : usize;
  var _43 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _44 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _45 : ();
  var _46 : ();
  var _47 : ();
  {
    self_1 <- self;
    f_2 <- f;
    d_3 <- d;
    goto BB0
  }
  BB0 {
    i_5 <- (0 : usize);
    _7 <- ();
    old_d_6 <- ghost ([#"../CreuSAT/src/trail.rs" 319 43 319 55] d_3);
    goto BB1
  }
  BB1 {
    _9 <- ();
    old_self_8 <- ghost ([#"../CreuSAT/src/trail.rs" 320 42 320 57] self_1);
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    invariant self_inv { [#"../CreuSAT/src/trail.rs" 321 30 321 48] Invariant0.invariant' ( * self_1) f_2 };
    invariant proph { [#"../CreuSAT/src/trail.rs" 322 27 322 53]  ^ old_self_8 =  ^ self_1 };
    invariant proph_d { [#"../CreuSAT/src/trail.rs" 323 29 323 49]  ^ old_d_6 =  ^ d_3 };
    invariant d_inv { [#"../CreuSAT/src/trail.rs" 324 27 324 51] Invariant1.invariant' ( * d_3) (UInt64.to_int (CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_num_vars f_2)) };
    _13 <- i_5;
    _15 <- CreuSat_Formula_Formula_Type.creusat_formula_formula_type_Formula_clauses f_2;
    _14 <- ([#"../CreuSAT/src/trail.rs" 325 18 325 33] Len0.len _15);
    goto BB4
  }
  BB4 {
    _12 <- ([#"../CreuSAT/src/trail.rs" 325 14 325 33] _13 < _14);
    switch (_12)
      | False -> goto BB21
      | _ -> goto BB5
      end
  }
  BB5 {
    _18 <- f_2;
    _19 <- i_5;
    _17 <- ([#"../CreuSAT/src/trail.rs" 326 26 326 30] Index0.index _18 _19);
    goto BB6
  }
  BB6 {
    clause_16 <- _17;
    _23 <- clause_16;
    _22 <- ([#"../CreuSAT/src/trail.rs" 327 15 327 27] Len1.len _23);
    goto BB7
  }
  BB7 {
    _21 <- ([#"../CreuSAT/src/trail.rs" 327 15 327 32] _22 = (1 : usize));
    switch (_21)
      | False -> goto BB19
      | _ -> goto BB8
      end
  }
  BB8 {
    _26 <- clause_16;
    _25 <- ([#"../CreuSAT/src/trail.rs" 328 26 328 35] Index1.index _26 (0 : usize));
    goto BB9
  }
  BB9 {
    lit_24 <- _25;
    _28 <- lit_24;
    _30 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1);
    _29 <- _30;
    _27 <- ([#"../CreuSAT/src/trail.rs" 329 19 329 49] LitSet0.lit_set _28 _29);
    goto BB10
  }
  BB10 {
    switch (_27)
      | False -> goto BB16
      | _ -> goto BB11
      end
  }
  BB11 {
    _32 <- lit_24;
    _34 <- CreuSat_Trail_Trail_Type.creusat_trail_trail_type_Trail_assignments ( * self_1);
    _33 <- _34;
    _31 <- ([#"../CreuSAT/src/trail.rs" 330 23 330 55] LitUnsat0.lit_unsat _32 _33);
    goto BB12
  }
  BB12 {
    switch (_31)
      | False -> goto BB15
      | _ -> goto BB13
      end
  }
  BB13 {
    assume { Resolve0.resolve d_3 };
    _37 <- f_2;
    _38 <-  * self_1;
    assume { Resolve1.resolve self_1 };
    _39 <- i_5;
    _36 <- ([#"../CreuSAT/src/trail.rs" 334 36 334 68] ResolveEmptyClause0.resolve_empty_clause _37 _38 _39);
    goto BB14
  }
  BB14 {
    _0 <- Core_Option_Option_Type.Core_Option_Option_Some_Type _36;
    goto BB22
  }
  BB15 {
    _20 <- ();
    goto BB18
  }
  BB16 {
    _41 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _41) };
    _42 <- i_5;
    _43 <- f_2;
    _44 <- borrow_mut ( * d_3);
    d_3 <- { d_3 with current = ( ^ _44) };
    _40 <- ([#"../CreuSAT/src/trail.rs" 337 20 337 44] LearnUnit0.learn_unit _41 _42 _43 _44);
    goto BB17
  }
  BB17 {
    _20 <- ();
    goto BB18
  }
  BB18 {
    goto BB20
  }
  BB19 {
    _20 <- ();
    goto BB20
  }
  BB20 {
    i_5 <- ([#"../CreuSAT/src/trail.rs" 340 12 340 18] i_5 + (1 : usize));
    _11 <- ();
    goto BB3
  }
  BB21 {
    assume { Resolve1.resolve self_1 };
    assume { Resolve0.resolve d_3 };
    _10 <- ();
    _0 <- Core_Option_Option_Type.Core_Option_Option_None_Type;
    goto BB22
  }
  BB22 {
    return _0
  }
  
end
module CreuSat_Solver_Solver_Interface
  use prelude.Borrow
  use mach.int.Int
  use prelude.UInt8
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Clause_Clause_Type
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Interface as FormulaSatInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_Model_Interface as Model0
  use CreuSat_Solver_SatResult_Type
  val solver [@cfg:stackify] (formula : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type
    ensures { [#"../CreuSAT/src/solver.rs" 352 10 356 1] match (result) with
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type assn -> FormulaSatInner0.formula_sat_inner (Model0.model ( ^ formula)) (Model1.model assn) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type -> NotSatisfiable0.not_satisfiable ( ^ formula) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    
end
module CreuSat_Solver_Solver
  use prelude.Borrow
  use mach.int.Int
  use prelude.UInt8
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use Alloc_Alloc_Global_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatComplete as EventuallySatComplete1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete1.eventually_sat_complete
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner2 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model0.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete as EventuallySatComplete0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model3.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = uint8,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Solver_SatResult_Type
  use prelude.IntSize
  use prelude.UIntSize
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  use CreuSat_Watches_Watcher_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model11 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Assignments_Assignments_Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner1.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Trail_Reason_Type
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model2.model,
  function Model1.model = Model3.model
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model11.model,
  function Model1.model = Model2.model, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Decision_Node_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Trail_Step_Type
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model3.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = usize,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = CreuSat_Trail_Step_Type.creusat_trail_step_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_FormulaInvariant as FormulaInvariant0 with predicate Invariant0.invariant' = Invariant5.invariant',
  function Model0.model = Model3.model
  use CreuSat_Watches_Watches_Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant4 with function Model0.model = Model10.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  use CreuSat_Decision_Decisions_Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model6.model
  use CreuSat_Trail_Trail_Type
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant1.invariant',
  function Model0.model = Model7.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model8.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner,
  function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner,
  predicate Sorted0.sorted = Sorted0.sorted, predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantMirror as InvariantMirror0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror,
  function Model0.model = Model0.model,
  predicate FormulaInvariant0.formula_invariant = FormulaInvariant0.formula_invariant, axiom .
  clone CreusotContracts_Logic_Model_Impl0_Model as Model5 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model0.model
  use CreuSat_Solver_Solver_Type
  use Core_Option_Option_Type
  clone CreuSat_Solver_Impl0_Inner_Interface as Inner0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  predicate Invariant3.invariant' = Invariant4.invariant', function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner, predicate Equisat0.equisat = Equisat0.equisat,
  predicate EventuallySatComplete0.eventually_sat_complete = EventuallySatComplete0.eventually_sat_complete,
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Solver_Impl0_New_Interface as New4
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type
  clone CreuSat_Trail_Impl0_LearnUnits_Interface as LearnUnits0 with predicate Invariant0.invariant' = Invariant2.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant', predicate Invariant2.invariant' = Invariant0.invariant',
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Watches_Impl0_InitWatches_Interface as InitWatches0 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant0.invariant',
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Watches_Impl0_New_Interface as New3 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Decision_Impl1_New_Interface as New2 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant',
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Trail_Impl0_New_Interface as New1 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreuSat_Assignments_Impl2_New_Interface as New0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant',
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type
  clone CreuSat_Formula_Impl2_CheckFormulaInvariant_Interface as CheckFormulaInvariant0 with function Model0.model = Model5.model,
  function Model1.model = Model1.model,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner,
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate Invariant0.invariant' = Invariant0.invariant',
  predicate InvariantMirror0.invariant_mirror = InvariantMirror0.invariant_mirror
  let rec cfg solver [@cfg:stackify] [#"../CreuSAT/src/solver.rs" 357 0 357 49] (formula : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type)) : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type
    ensures { [#"../CreuSAT/src/solver.rs" 352 10 356 1] match (result) with
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Sat_Type assn -> FormulaSatInner0.formula_sat_inner (Model0.model ( ^ formula)) (Model1.model assn) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type -> NotSatisfiable0.not_satisfiable ( ^ formula) /\ Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
  var formula_1 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _2 : ();
  var _3 : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
  var _4 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _5 : isize;
  var o_6 : CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
  var _7 : ();
  var trail_8 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _9 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _10 : CreuSat_Assignments_Assignments_Type.creusat_assignments_assignments_type;
  var _11 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var decisions_12 : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type;
  var _13 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var watches_14 : CreuSat_Watches_Watches_Type.creusat_watches_watches_type;
  var _15 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _16 : ();
  var _17 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var _18 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _19 : ();
  var _20 : Core_Option_Option_Type.core_option_option_type bool;
  var _21 : borrowed (CreuSat_Trail_Trail_Type.creusat_trail_trail_type);
  var _22 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _23 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _24 : borrowed (CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type);
  var _25 : isize;
  var _26 : ();
  var _27 : ();
  var solver_28 : CreuSat_Solver_Solver_Type.creusat_solver_solver_type;
  var _29 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var _30 : borrowed (CreuSat_Solver_Solver_Type.creusat_solver_solver_type);
  var _31 : borrowed (CreuSat_Formula_Formula_Type.creusat_formula_formula_type);
  var _32 : CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type;
  var _33 : CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
  var _34 : CreuSat_Watches_Watches_Type.creusat_watches_watches_type;
  {
    formula_1 <- formula;
    goto BB0
  }
  BB0 {
    _4 <-  * formula_1;
    _3 <- ([#"../CreuSAT/src/solver.rs" 358 10 358 43] CheckFormulaInvariant0.check_formula_invariant _4);
    goto BB1
  }
  BB1 {
    switch (_3)
      | CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unknown_Type -> goto BB3
      | _ -> goto BB2
      end
  }
  BB2 {
    assume { Resolve0.resolve formula_1 };
    o_6 <- _3;
    _3 <- any CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
    _0 <- o_6;
    o_6 <- any CreuSat_Solver_SatResult_Type.creusat_solver_satresult_type;
    goto BB26
  }
  BB3 {
    _2 <- ();
    goto BB4
  }
  BB4 {
    _9 <-  * formula_1;
    _11 <-  * formula_1;
    _10 <- ([#"../CreuSAT/src/solver.rs" 362 40 362 65] New0.new _11);
    goto BB5
  }
  BB5 {
    trail_8 <- ([#"../CreuSAT/src/solver.rs" 362 20 362 66] New1.new _9 _10);
    goto BB6
  }
  BB6 {
    _13 <-  * formula_1;
    decisions_12 <- ([#"../CreuSAT/src/solver.rs" 363 24 363 47] New2.new _13);
    goto BB7
  }
  BB7 {
    _15 <-  * formula_1;
    watches_14 <- ([#"../CreuSAT/src/solver.rs" 364 22 364 43] New3.new _15);
    goto BB8
  }
  BB8 {
    _17 <- borrow_mut watches_14;
    watches_14 <-  ^ _17;
    _18 <-  * formula_1;
    _16 <- ([#"../CreuSAT/src/solver.rs" 365 4 365 33] InitWatches0.init_watches _17 _18);
    goto BB9
  }
  BB9 {
    _21 <- borrow_mut trail_8;
    trail_8 <-  ^ _21;
    _22 <-  * formula_1;
    _24 <- borrow_mut decisions_12;
    decisions_12 <-  ^ _24;
    _23 <- borrow_mut ( * _24);
    _24 <- { _24 with current = ( ^ _23) };
    _20 <- ([#"../CreuSAT/src/solver.rs" 366 10 366 52] LearnUnits0.learn_units _21 _22 _23);
    goto BB10
  }
  BB10 {
    assume { Resolve1.resolve _24 };
    switch (_20)
      | Core_Option_Option_Type.Core_Option_Option_None_Type -> goto BB14
      | Core_Option_Option_Type.Core_Option_Option_Some_Type _ -> goto BB11
      end
  }
  BB11 {
    assume { Resolve0.resolve formula_1 };
    switch (Core_Option_Option_Type.core_option_option_type_Some_0 _20)
      | False -> goto BB12
      | _ -> goto BB15
      end
  }
  BB12 {
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Err_Type;
    goto BB22
  }
  BB13 {
    assume { Resolve0.resolve formula_1 };
    absurd
  }
  BB14 {
    _19 <- ();
    _29 <-  * formula_1;
    solver_28 <- ([#"../CreuSAT/src/solver.rs" 371 21 371 41] New4.new _29);
    goto BB16
  }
  BB15 {
    _0 <- CreuSat_Solver_SatResult_Type.CreuSat_Solver_SatResult_Unsat_Type;
    goto BB22
  }
  BB16 {
    _30 <- borrow_mut solver_28;
    solver_28 <-  ^ _30;
    _31 <- borrow_mut ( * formula_1);
    formula_1 <- { formula_1 with current = ( ^ _31) };
    _32 <- decisions_12;
    decisions_12 <- any CreuSat_Decision_Decisions_Type.creusat_decision_decisions_type;
    _33 <- trail_8;
    trail_8 <- any CreuSat_Trail_Trail_Type.creusat_trail_trail_type;
    _34 <- watches_14;
    watches_14 <- any CreuSat_Watches_Watches_Type.creusat_watches_watches_type;
    _0 <- ([#"../CreuSAT/src/solver.rs" 372 4 372 52] Inner0.inner _30 _31 _32 _33 _34);
    goto BB17
  }
  BB17 {
    assume { Resolve0.resolve formula_1 };
    goto BB18
  }
  BB18 {
    goto BB19
  }
  BB19 {
    goto BB20
  }
  BB20 {
    goto BB21
  }
  BB21 {
    goto BB28
  }
  BB22 {
    goto BB23
  }
  BB23 {
    goto BB24
  }
  BB24 {
    goto BB25
  }
  BB25 {
    goto BB28
  }
  BB26 {
    goto BB27
  }
  BB27 {
    goto BB28
  }
  BB28 {
    return _0
  }
  
end
module CreuSat_Watches_Impl0_MoveToEnd_Interface
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use mach.int.UInt64
  use Alloc_Alloc_Global_Type
  use CreuSat_Watches_Watcher_Type
  use Alloc_Vec_Vec_Type
  use CreuSat_Formula_Formula_Type
  use CreuSat_Lit_Lit_Type
  use CreuSat_Watches_Watches_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Interface as ToNegWatchidxLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  val move_to_end [@cfg:stackify] (self : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (old_idx : usize) (old_pos : usize) (new_lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/watches.rs" 118 4 118 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/watches.rs" 119 15 119 52] IndexLogic0.index_logic new_lit < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/watches.rs" 120 15 120 70] ToNegWatchidxLogic0.to_neg_watchidx_logic new_lit < Seq.length (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 121 15 121 47] UInt64.to_int old_idx < Seq.length (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 122 15 122 60] UInt64.to_int old_pos < Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self))) (UInt64.to_int old_idx)))}
    ensures { [#"../CreuSAT/src/watches.rs" 118 4 118 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/watches.rs" 123 14 123 91] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( ^ self))) (UInt64.to_int old_idx))) = Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self))) (UInt64.to_int old_idx))) }
    
end
module CreuSat_Watches_Impl0_MoveToEnd
  use prelude.Borrow
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.Int32
  use seq.Seq
  use mach.int.UInt64
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  use CreuSat_Watches_Watcher_Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model1.model,
  function Model1.model = Model2.model, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  use CreuSat_Watches_Watches_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  use prelude.Slice
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy1 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model5 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model6 with type t = seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model5.model
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy_Type as ModelTy0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Core_Slice_Index_Impl2_Output_Type as Output0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type)
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  function Model0.model = Model6.model, function Model1.model = Model5.model
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model5.model,
  function Model1.model = Model1.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere, type Output0.output = Output0.output
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = CreuSat_Watches_Watches_Type.creusat_watches_watches_type
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model1.model
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type),
  type i = usize, type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  let rec cfg move_to_end [@cfg:stackify] [#"../CreuSAT/src/watches.rs" 124 4 124 93] (self : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type)) (old_idx : usize) (old_pos : usize) (new_lit : CreuSat_Lit_Lit_Type.creusat_lit_lit_type) (_f : CreuSat_Formula_Formula_Type.creusat_formula_formula_type) : ()
    requires {[#"../CreuSAT/src/watches.rs" 118 4 118 43] Invariant0.invariant' ( * self) _f}
    requires {[#"../CreuSAT/src/watches.rs" 119 15 119 52] IndexLogic0.index_logic new_lit < div 18446744073709551615 2}
    requires {[#"../CreuSAT/src/watches.rs" 120 15 120 70] ToNegWatchidxLogic0.to_neg_watchidx_logic new_lit < Seq.length (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 121 15 121 47] UInt64.to_int old_idx < Seq.length (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self)))}
    requires {[#"../CreuSAT/src/watches.rs" 122 15 122 60] UInt64.to_int old_pos < Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self))) (UInt64.to_int old_idx)))}
    ensures { [#"../CreuSAT/src/watches.rs" 118 4 118 43] Invariant0.invariant' ( ^ self) _f }
    ensures { [#"../CreuSAT/src/watches.rs" 123 14 123 91] Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( ^ self))) (UInt64.to_int old_idx))) = Seq.length (Model1.model (Seq.get (Model0.model (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self))) (UInt64.to_int old_idx))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self_1 : borrowed (CreuSat_Watches_Watches_Type.creusat_watches_watches_type);
  var old_idx_2 : usize;
  var old_pos_3 : usize;
  var new_lit_4 : CreuSat_Lit_Lit_Type.creusat_lit_lit_type;
  var _f_5 : CreuSat_Formula_Formula_Type.creusat_formula_formula_type;
  var end'_6 : usize;
  var _7 : usize;
  var _8 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _9 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _10 : Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type);
  var _11 : usize;
  var _12 : ();
  var _13 : borrowed (seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type));
  var _14 : borrowed (seq (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type));
  var _15 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _16 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _17 : borrowed (Alloc_Vec_Vec_Type.alloc_vec_vec_type (Alloc_Vec_Vec_Type.alloc_vec_vec_type (CreuSat_Watches_Watcher_Type.creusat_watches_watcher_type) (Alloc_Alloc_Global_Type.alloc_alloc_global_type)) (Alloc_Alloc_Global_Type.alloc_alloc_global_type));
  var _18 : usize;
  var _19 : usize;
  var _20 : usize;
  {
    self_1 <- self;
    old_idx_2 <- old_idx;
    old_pos_3 <- old_pos;
    new_lit_4 <- new_lit;
    _f_5 <- _f;
    goto BB0
  }
  BB0 {
    _10 <- CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1);
    _11 <- old_idx_2;
    _9 <- ([#"../CreuSAT/src/watches.rs" 125 18 125 39] Index0.index _10 _11);
    goto BB1
  }
  BB1 {
    _8 <- _9;
    _7 <- ([#"../CreuSAT/src/watches.rs" 125 18 125 45] Len0.len _8);
    goto BB2
  }
  BB2 {
    end'_6 <- ([#"../CreuSAT/src/watches.rs" 125 18 125 49] _7 - (1 : usize));
    _17 <- borrow_mut (CreuSat_Watches_Watches_Type.creusat_watches_watches_type_Watches_watches ( * self_1));
    self_1 <- { self_1 with current = (let CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type a =  * self_1 in CreuSat_Watches_Watches_Type.CreuSat_Watches_Watches_Type ( ^ _17)) };
    assume { Resolve0.resolve self_1 };
    _18 <- old_idx_2;
    _16 <- ([#"../CreuSAT/src/watches.rs" 126 8 126 29] IndexMut0.index_mut _17 _18);
    goto BB3
  }
  BB3 {
    _15 <- borrow_mut ( * _16);
    _16 <- { _16 with current = ( ^ _15) };
    assume { Resolve1.resolve _16 };
    _14 <- ([#"../CreuSAT/src/watches.rs" 126 8 126 48] DerefMut0.deref_mut _15);
    goto BB4
  }
  BB4 {
    _13 <- borrow_mut ( * _14);
    _14 <- { _14 with current = ( ^ _13) };
    _19 <- old_pos_3;
    _20 <- end'_6;
    _12 <- ([#"../CreuSAT/src/watches.rs" 126 8 126 48] Swap0.swap _13 _19 _20);
    goto BB5
  }
  BB5 {
    assume { Resolve2.resolve _14 };
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Clause_Impl1
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Lit_Lit_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Clause_Impl0_Output_Type as Output0
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Clause_Clause_Type
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Clause_Impl1_IndexMut_Interface as IndexMut0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone Core_Ops_Index_IndexMut_IndexMut_Interface as IndexMut1 with type self = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type idx = usize, val index_mut = IndexMut0.index_mut, type Output0.output = Output0.output
end
module CreuSat_Formula_Impl1
  use mach.int.Int
  use prelude.UIntSize
  use Alloc_Alloc_Global_Type
  use CreuSat_Clause_Clause_Type
  use Alloc_Vec_Vec_Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = CreuSat_Clause_Clause_Type.creusat_clause_clause_type,
  type a = Alloc_Alloc_Global_Type.alloc_alloc_global_type, axiom .
  clone CreuSat_Formula_Impl0_Output_Type as Output0
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy_Type as ModelTy0
  use CreuSat_Formula_Formula_Type
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Formula_Impl1_IndexMut_Interface as IndexMut0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone Core_Ops_Index_IndexMut_IndexMut_Interface as IndexMut1 with type self = CreuSat_Formula_Formula_Type.creusat_formula_formula_type,
  type idx = usize, val index_mut = IndexMut0.index_mut, type Output0.output = Output0.output
end
module CreuSat_Decision_Impl2
  use CreuSat_Decision_Node_Type
  clone Core_Clone_Clone_CloneFrom_Interface as CloneFrom0 with type self = CreuSat_Decision_Node_Type.creusat_decision_node_type
  clone CreuSat_Decision_Impl2_Clone_Interface as Clone0
  clone Core_Clone_Clone_Clone_Interface as Clone1 with type self = CreuSat_Decision_Node_Type.creusat_decision_node_type,
  val clone' = Clone0.clone'
end
module CreuSat_Lit_Impl4
  use CreuSat_Lit_Lit_Type
  clone Core_Clone_Clone_CloneFrom_Interface as CloneFrom0 with type self = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreuSat_Lit_Impl4_Clone_Interface as Clone0
  clone Core_Clone_Clone_Clone_Interface as Clone1 with type self = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  val clone' = Clone0.clone'
end
module CreuSat_Decision_Impl3
  
end
module CreuSat_Lit_Impl5
  
end
module CreuSat_Lit_Impl0_ModelTy_Type
  use CreuSat_Lit_Lit_Type
  type modelTy  =
    CreuSat_Lit_Lit_Type.creusat_lit_lit_type
end
module CreuSat_Lit_Impl0
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Lit_Impl0_ModelTy_Type as ModelTy0
  clone CreuSat_Lit_Impl0_Model as Model0
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy1 with type self = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type modelTy = ModelTy0.modelTy
end
module Core_Cmp_PartialEq_Ne_Interface
  type self
  type rhs
  use prelude.Borrow
  val ne [@cfg:stackify] (self : self) (other : rhs) : bool
    requires {false}
    
end
module Core_Cmp_PartialEq_Ne
  type self
  type rhs
  use prelude.Borrow
  val ne [@cfg:stackify] (self : self) (other : rhs) : bool
    requires {false}
    
end
module Core_Cmp_PartialEq_Eq_Interface
  type self
  type rhs
  use prelude.Borrow
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = self
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model1 with type t = rhs,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = self,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val eq [@cfg:stackify] (self : self) (other : rhs) : bool
    ensures { result = (Model0.model self = Model1.model other) }
    
end
module Core_Cmp_PartialEq_Eq
  type self
  type rhs
  use prelude.Borrow
  clone CreusotContracts_Logic_Model_Model_ModelTy_Type as ModelTy0 with type self = self
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model1 with type t = rhs,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = self,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val eq [@cfg:stackify] (self : self) (other : rhs) : bool
    ensures { result = (Model0.model self = Model1.model other) }
    
end
module CreuSat_Lit_Impl2
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Lit_Impl0_Model as Model1
  clone CreuSat_Lit_Impl0_ModelTy_Type as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone Core_Cmp_PartialEq_Ne_Interface as Ne0 with type self = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type rhs = CreuSat_Lit_Lit_Type.creusat_lit_lit_type
  clone CreuSat_Lit_Impl2_Eq_Interface as Eq0
  clone Core_Cmp_PartialEq_Eq_Interface as Eq1 with type self = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type rhs = CreuSat_Lit_Lit_Type.creusat_lit_lit_type, val eq = Eq0.eq, function Model0.model = Model0.model,
  function Model1.model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
end
module CreuSat_Lit_Impl3_Output_Type
  use CreuSat_Lit_Lit_Type
  type output  =
    CreuSat_Lit_Lit_Type.creusat_lit_lit_type
end
module Core_Ops_Bit_Not_Output_Type
  type self
  type output
end
module Core_Ops_Bit_Not_Not_Interface
  type self
  clone Core_Ops_Bit_Not_Output_Type as Output0 with type self = self
  val not' [@cfg:stackify] (self : self) : Output0.output
    requires {false}
    
end
module Core_Ops_Bit_Not_Not
  type self
  clone Core_Ops_Bit_Not_Output_Type as Output0 with type self = self
  val not' [@cfg:stackify] (self : self) : Output0.output
    requires {false}
    
end
module CreuSat_Lit_Impl3
  use CreuSat_Lit_Lit_Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Lit_Impl3_Output_Type as Output0
  clone CreuSat_Lit_Impl3_Not_Interface as Not0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone Core_Ops_Bit_Not_Not_Interface as Not1 with type self = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  val not' = Not0.not', type Output0.output = Output0.output
  clone Core_Ops_Bit_Not_Output_Type as Output1 with type self = CreuSat_Lit_Lit_Type.creusat_lit_lit_type,
  type output = Output0.output
end
