<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.12" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Eprover" version="2.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="Scratch.mlcfg"/>
<theory name="Scratch_Clause_Impl3_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="58"/></proof>
 </goal>
</theory>
<theory name="Scratch_Formula_Impl1_Invariant_Impl" proved="true">
 <goal name="invariant&#39;&#39;vc" expl="VC for invariant&#39;" proved="true">
 <proof prover="3"><result status="valid" time="0.02" steps="112"/></proof>
 </goal>
</theory>
<theory name="Scratch_Lit_Impl4_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="36"/></proof>
 </goal>
</theory>
<theory name="Scratch_Scratch_LemmaClausePermutedMaintainsSat_Impl" proved="true">
 <goal name="lemma_clause_permuted_maintains_sat&#39;vc" expl="VC for lemma_clause_permuted_maintains_sat" proved="true">
 <proof prover="3"><result status="valid" time="0.02" steps="89"/></proof>
 </goal>
</theory>
<theory name="Scratch_Scratch_LemmaClausePermutedMaintainsUnsat_Impl" proved="true">
 <goal name="lemma_clause_permuted_maintains_unsat&#39;vc" expl="VC for lemma_clause_permuted_maintains_unsat" proved="true">
 <proof prover="3"><result status="valid" time="0.02" steps="89"/></proof>
 </goal>
</theory>
<theory name="Scratch_Scratch_Swap" proved="true">
 <goal name="swap&#39;vc" expl="VC for swap" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="2247417"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="110507"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="swap&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="65"/></proof>
  </goal>
  <goal name="swap&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="111"/></proof>
  </goal>
  <goal name="swap&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="122"/></proof>
  </goal>
  <goal name="swap&#39;vc.3" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="85"/></proof>
  </goal>
  <goal name="swap&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.40" steps="4814400"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="658775"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="swap&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="289"/></proof>
  </goal>
  <goal name="swap&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="147"/></proof>
  </goal>
  <goal name="swap&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="152"/></proof>
  </goal>
  <goal name="swap&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="11191741"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="814930"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <transf name="inline_goal" proved="true" >
   <goal name="swap&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="swap&#39;vc.8.0.0" expl="VC for swap" proved="true">
    <proof prover="0"><result status="valid" time="0.64" steps="2017466"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="125195"/></proof>
    <proof prover="3"><result status="timeout" time="1.00"/></proof>
    </goal>
    <goal name="swap&#39;vc.8.0.1" expl="VC for swap" proved="true">
    <proof prover="0"><result status="valid" time="0.25" steps="594095"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="124878"/></proof>
    <proof prover="3"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl1_Update" proved="true">
 <goal name="update&#39;vc" expl="VC for update" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="282236"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="732699"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="update&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.21" steps="1465"/></proof>
  </goal>
  <goal name="update&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="303"/></proof>
  </goal>
  <goal name="update&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="304"/></proof>
  </goal>
  <goal name="update&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="509"/></proof>
  </goal>
  <goal name="update&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.13" steps="930"/></proof>
  </goal>
  <goal name="update&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="303360"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="unknown" time="0.25" steps="35056"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="update&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.60" steps="144354"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="unknown" time="0.11" steps="15591"/></proof>
   <proof prover="3"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="update&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.60" steps="145754"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="unknown" time="0.11" steps="16117"/></proof>
   <proof prover="3"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="update&#39;vc.5.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="222834"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="unknown" time="0.20" steps="26775"/></proof>
   <proof prover="3"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="update&#39;vc.5.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="213714"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="618969"/></proof>
    <proof prover="3"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="update&#39;vc.5.2.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.47" steps="3852"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="update&#39;vc.5.2.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="207141"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="619097"/></proof>
    <proof prover="3"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="update&#39;vc.5.2.1.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.43" steps="3868"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl1_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="3"><result status="valid" time="0.09" steps="669"/></proof>
 </goal>
</theory>
<theory name="Scratch_Restart_DivFloatWithTenNTimes" proved="true">
 <goal name="div_float_with_ten_n_times&#39;vc" expl="VC for div_float_with_ten_n_times" proved="true">
 <proof prover="3" obsolete="true"><result status="valid" time="0.05" steps="241"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="div_float_with_ten_n_times&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="247"/></proof>
  </goal>
  <goal name="div_float_with_ten_n_times&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="247"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl3_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="3"><result status="valid" time="0.33" steps="3093"/></proof>
 </goal>
</theory>
<theory name="Scratch_Restart_Powf" proved="true">
 <goal name="powf&#39;vc" expl="VC for powf" proved="true">
 <proof prover="3"><result status="valid" time="0.06" steps="246"/></proof>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl4_TriggerRestart" proved="true">
 <goal name="trigger_restart&#39;vc" expl="VC for trigger_restart" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="322096"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="858206"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="trigger_restart&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="549"/></proof>
  </goal>
  <goal name="trigger_restart&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="414"/></proof>
  </goal>
  <goal name="trigger_restart&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="583"/></proof>
  </goal>
  <goal name="trigger_restart&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="337237"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="711028"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="trigger_restart&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.54" steps="3643"/></proof>
   </goal>
   <goal name="trigger_restart&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="215599"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="765103"/></proof>
   <proof prover="3"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="trigger_restart&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="232374"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="764855"/></proof>
    <proof prover="3"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="trigger_restart&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="299926"/></proof>
     <proof prover="1"><result status="timeout" time="1.00"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="708486"/></proof>
     <proof prover="3"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="trigger_restart&#39;vc.3.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="325667"/></proof>
      <proof prover="1"><result status="timeout" time="1.00"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="708480"/></proof>
      <proof prover="3"><result status="timeout" time="1.00"/></proof>
      <transf name="split_vc" proved="true" >
       <goal name="trigger_restart&#39;vc.3.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="1"><result status="valid" time="0.24"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="708671"/></proof>
       <proof prover="3"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="trigger_restart&#39;vc.3.1.0.0.0.1" expl="postcondition" proved="true">
       <proof prover="3"><result status="valid" time="0.90" steps="6522"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="trigger_restart&#39;vc.3.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="233277"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="765081"/></proof>
    <proof prover="3"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="trigger_restart&#39;vc.3.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="306416"/></proof>
     <proof prover="1"><result status="timeout" time="1.00"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="735975"/></proof>
     <proof prover="3"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="trigger_restart&#39;vc.3.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="308283"/></proof>
      <proof prover="1"><result status="timeout" time="1.00"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="735969"/></proof>
      <proof prover="3"><result status="timeout" time="1.00"/></proof>
      <transf name="split_vc" proved="true" >
       <goal name="trigger_restart&#39;vc.3.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.51" steps="79404"/></proof>
       <proof prover="1"><result status="timeout" time="1.00"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="735798"/></proof>
       <proof prover="3"><result status="timeout" time="1.00"/></proof>
       </goal>
       <goal name="trigger_restart&#39;vc.3.1.1.0.0.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.53" steps="81379"/></proof>
       <proof prover="1"><result status="timeout" time="1.00"/></proof>
       <proof prover="2"><result status="timeout" time="1.00" steps="763231"/></proof>
       <proof prover="3"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl4_Update" proved="true">
 <goal name="update&#39;vc" expl="VC for update" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="289483"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="365087"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="update&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="612"/></proof>
  </goal>
  <goal name="update&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.25" steps="1682"/></proof>
  </goal>
  <goal name="update&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.29" steps="1959"/></proof>
  </goal>
  <goal name="update&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.00" steps="3445"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl4_BlockRestart" proved="true">
 <goal name="block_restart&#39;vc" expl="VC for block_restart" proved="true">
 <proof prover="0"><result status="timeout" time="0.79" steps="277418"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="386765"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="block_restart&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="403"/></proof>
  </goal>
  <goal name="block_restart&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="559"/></proof>
  </goal>
  <goal name="block_restart&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="626"/></proof>
  </goal>
  <goal name="block_restart&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="392102"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="277987"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="block_restart&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.17" steps="1357"/></proof>
   </goal>
   <goal name="block_restart&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="337104"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2"><result status="timeout" time="1.00" steps="243448"/></proof>
   <proof prover="3"><result status="timeout" time="1.00"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="block_restart&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="313438"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="261212"/></proof>
    <proof prover="3"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="block_restart&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.04" steps="231"/></proof>
     </goal>
     <goal name="block_restart&#39;vc.3.1.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="320192"/></proof>
     <proof prover="1"><result status="timeout" time="1.00"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="251125"/></proof>
     <proof prover="3"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="block_restart&#39;vc.3.1.0.1.0" expl="postcondition" proved="true">
      <proof prover="3"><result status="valid" time="0.54" steps="3428"/></proof>
      </goal>
      <goal name="block_restart&#39;vc.3.1.0.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.26" steps="60703"/></proof>
      <proof prover="1"><result status="timeout" time="1.00"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="246511"/></proof>
      <proof prover="3"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="block_restart&#39;vc.3.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="timeout" time="1.00" steps="315030"/></proof>
    <proof prover="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="2"><result status="timeout" time="1.00" steps="335246"/></proof>
    <proof prover="3"><result status="timeout" time="1.00"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="block_restart&#39;vc.3.1.1.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.05" steps="231"/></proof>
     </goal>
     <goal name="block_restart&#39;vc.3.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="317183"/></proof>
     <proof prover="1"><result status="timeout" time="1.00"/></proof>
     <proof prover="2"><result status="timeout" time="1.00" steps="331119"/></proof>
     <proof prover="3"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="block_restart&#39;vc.3.1.1.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.27" steps="71321"/></proof>
      <proof prover="1"><result status="timeout" time="1.00"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="331954"/></proof>
      <proof prover="3"><result status="timeout" time="1.00"/></proof>
      </goal>
      <goal name="block_restart&#39;vc.3.1.1.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.24" steps="62750"/></proof>
      <proof prover="1"><result status="timeout" time="1.00"/></proof>
      <proof prover="2"><result status="timeout" time="1.00" steps="330218"/></proof>
      <proof prover="3"><result status="timeout" time="1.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl6_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="20"/></proof>
 </goal>
</theory>
<theory name="Scratch_Restart_Luby" proved="true">
 <goal name="luby&#39;vc" expl="VC for luby" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="24762"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl7_TriggerRestart" proved="true">
 <goal name="trigger_restart&#39;vc" expl="VC for trigger_restart" proved="true">
 <proof prover="2"><result status="valid" time="0.65" steps="89067"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl9_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="3"><result status="valid" time="0.50" steps="2820"/></proof>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl9_SetRestartMode" proved="true">
 <goal name="set_restart_mode&#39;vc" expl="VC for set_restart_mode" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="8440"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl9_TriggerRestart" proved="true">
 <goal name="trigger_restart&#39;vc" expl="VC for trigger_restart" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="17171"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl9_BlockRestart" proved="true">
 <goal name="block_restart&#39;vc" expl="VC for block_restart" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="13300"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Restart_Impl9_GetNumberOfRestarts" proved="true">
 <goal name="get_number_of_restarts&#39;vc" expl="VC for get_number_of_restarts" proved="true">
 <proof prover="3"><result status="valid" time="0.14" steps="857"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl1_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="3"><result status="valid" time="0.07" steps="231"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Test" proved="true">
 <goal name="test&#39;vc" expl="VC for test" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="18"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_Left" proved="true">
 <goal name="left&#39;vc" expl="VC for left" proved="true">
 <proof prover="3"><result status="valid" time="0.02" steps="185"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_Right" proved="true">
 <goal name="right&#39;vc" expl="VC for right" proved="true">
 <proof prover="3"><result status="valid" time="0.03" steps="215"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_LessThan" proved="true">
 <goal name="less_than&#39;vc" expl="VC for less_than" proved="true">
 <proof prover="3"><result status="valid" time="0.06" steps="233"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_PercolateDown" proved="true">
 <goal name="percolate_down&#39;vc" expl="VC for percolate_down" proved="true">
 <proof prover="0"><result status="valid" time="0.18" steps="251336"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="148354"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_PercolateAll" proved="true">
 <goal name="percolate_all&#39;vc" expl="VC for percolate_all" proved="true">
 <proof prover="2"><result status="valid" time="0.43" steps="64912"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="1578851"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="185646"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="new&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="255"/></proof>
  </goal>
  <goal name="new&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="257"/></proof>
  </goal>
  <goal name="new&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="257"/></proof>
  </goal>
  <goal name="new&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="259"/></proof>
  </goal>
  <goal name="new&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="483"/></proof>
  </goal>
  <goal name="new&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.38" steps="4058"/></proof>
  </goal>
  <goal name="new&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="687"/></proof>
  </goal>
  <goal name="new&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="678"/></proof>
  </goal>
  <goal name="new&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="631"/></proof>
  </goal>
  <goal name="new&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="633"/></proof>
  </goal>
  <goal name="new&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="649"/></proof>
  </goal>
  <goal name="new&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="666"/></proof>
  </goal>
  <goal name="new&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.37" steps="4187"/></proof>
  </goal>
  <goal name="new&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="320"/></proof>
  </goal>
  <goal name="new&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="7434"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_Parent" proved="true">
 <goal name="parent&#39;vc" expl="VC for parent" proved="true">
 <proof prover="3"><result status="valid" time="0.09" steps="818"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_InHeap" proved="true">
 <goal name="in_heap&#39;vc" expl="VC for in_heap" proved="true">
 <proof prover="3"><result status="valid" time="0.64" steps="5771"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_Empty" proved="true">
 <goal name="empty&#39;vc" expl="VC for empty" proved="true">
 <proof prover="3"><result status="valid" time="0.04" steps="244"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_PercolateUp" proved="true">
 <goal name="percolate_up&#39;vc" expl="VC for percolate_up" proved="true">
 <proof prover="2"><result status="valid" time="0.69" steps="119739"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_Decrease" proved="true">
 <goal name="decrease&#39;vc" expl="VC for decrease" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="35035"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_Increase" proved="true">
 <goal name="increase&#39;vc" expl="VC for increase" proved="true">
 <proof prover="2"><result status="valid" time="0.22" steps="35172"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_Insert" proved="true">
 <goal name="insert&#39;vc" expl="VC for insert" proved="true">
 <proof prover="2"><result status="valid" time="0.28" steps="45869"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_RemoveMin" proved="true">
 <goal name="remove_min&#39;vc" expl="VC for remove_min" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.71" steps="992139"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="144946"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="remove_min&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="234"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="452"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="261"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="616"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="630"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="726"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="786"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="401"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.20" steps="472229"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="409585"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="419"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="456720"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="240192"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="remove_min&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="446198"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="239575"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl4_RemoveMin" proved="true">
 <goal name="remove_min&#39;vc" expl="VC for remove_min" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.44" steps="116434"/></proof>
 <proof prover="3"><result status="valid" time="0.75" steps="9765"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl5_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="3"><result status="valid" time="0.05" steps="243"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl5_Rescale" proved="true">
 <goal name="rescale&#39;vc" expl="VC for rescale" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rescale&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="286"/></proof>
  </goal>
  <goal name="rescale&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="286"/></proof>
  </goal>
  <goal name="rescale&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.82" steps="294415"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="rescale&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="632"/></proof>
  </goal>
  <goal name="rescale&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="628"/></proof>
  </goal>
  <goal name="rescale&#39;vc.5" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="595"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl5_BumpVariable" proved="true">
 <goal name="bump_variable&#39;vc" expl="VC for bump_variable" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="494231"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="694420"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="bump_variable&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="582"/></proof>
  </goal>
  <goal name="bump_variable&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="608"/></proof>
  </goal>
  <goal name="bump_variable&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="324715"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="1.08" steps="318694"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="bump_variable&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="649"/></proof>
  </goal>
  <goal name="bump_variable&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="455047"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="199864"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="bump_variable&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="280972"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="1.18" steps="390489"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="bump_variable&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.61" steps="5544"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="bump_variable&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="438422"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00" steps="217060"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="bump_variable&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="350632"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="1.40" steps="442138"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="bump_variable&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="386015"/></proof>
   <proof prover="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="1.44" steps="456657"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl5_Insert" proved="true">
 <goal name="insert&#39;vc" expl="VC for insert" proved="true">
 <proof prover="2"><result status="valid" time="0.67" steps="188879"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl5_TurnOffDecisionForIdx" proved="true">
 <goal name="turn_off_decision_for_idx&#39;vc" expl="VC for turn_off_decision_for_idx" proved="true">
 <proof prover="3"><result status="valid" time="0.12" steps="506"/></proof>
 </goal>
</theory>
<theory name="Scratch_Logic_BoolToAssignedstate_Impl" proved="true">
 <goal name="bool_to_assignedstate&#39;vc" expl="VC for bool_to_assignedstate" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
</theory>
<theory name="Scratch_Clause_Impl3" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
</theory>
<theory name="Scratch_Lit_Impl4" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
</theory>
<theory name="Scratch_Vsids_Impl2_Len">
 <goal name="len&#39;vc" expl="VC for len">
 <proof prover="0"><undone/></proof>
 <proof prover="1"><undone/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="3"><undone/></proof>
 </goal>
</theory>
</file>
</why3session>
