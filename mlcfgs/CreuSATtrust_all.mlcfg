module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
  type creusat_lit_lit  =
    | CreuSat_Lit_Lit usize bool
    
  let function creusat_lit_lit_Lit_idx (self : creusat_lit_lit) : usize =
    match (self) with
      | CreuSat_Lit_Lit a _ -> a
      end
  let function creusat_lit_lit_Lit_polarity (self : creusat_lit_lit) : bool =
    match (self) with
      | CreuSat_Lit_Lit _ a -> a
      end
  type core_ptr_nonnull_nonnull 't =
    | Core_Ptr_NonNull_NonNull opaque_ptr
    
  type core_marker_phantomdata 't =
    | Core_Marker_PhantomData
    
  type core_ptr_unique_unique 't =
    | Core_Ptr_Unique_Unique (core_ptr_nonnull_nonnull 't) (core_marker_phantomdata 't)
    
  type alloc_rawvec_rawvec 't 'a =
    | Alloc_RawVec_RawVec (core_ptr_unique_unique 't) usize 'a
    
  type alloc_vec_vec 't 'a =
    | Alloc_Vec_Vec (alloc_rawvec_rawvec 't 'a) usize
    
  type alloc_alloc_global  =
    | Alloc_Alloc_Global
    
  type creusat_assignments_assignments  =
    | CreuSat_Assignments_Assignments (alloc_vec_vec uint8 (alloc_alloc_global))
    
  let function creusat_assignments_assignments_Assignments_0 (self : creusat_assignments_assignments) : alloc_vec_vec uint8 (alloc_alloc_global)
    
   =
    match (self) with
      | CreuSat_Assignments_Assignments a -> a
      end
  type creusat_trail_reason  =
    | CreuSat_Trail_Reason_Decision
    | CreuSat_Trail_Reason_Unit usize
    | CreuSat_Trail_Reason_Long usize
    
  type creusat_trail_step  =
    | CreuSat_Trail_Step (creusat_lit_lit) usize (creusat_trail_reason)
    
  let function creusat_trail_step_Step_lit (self : creusat_trail_step) : creusat_lit_lit =
    match (self) with
      | CreuSat_Trail_Step a _ _ -> a
      end
  let function creusat_trail_step_Step_reason (self : creusat_trail_step) : creusat_trail_reason =
    match (self) with
      | CreuSat_Trail_Step _ _ a -> a
      end
  type creusat_clause_clause  =
    | CreuSat_Clause_Clause bool (alloc_vec_vec (creusat_lit_lit) (alloc_alloc_global))
    
  let function creusat_clause_clause_Clause_rest (self : creusat_clause_clause) : alloc_vec_vec (creusat_lit_lit) (alloc_alloc_global)
    
   =
    match (self) with
      | CreuSat_Clause_Clause _ a -> a
      end
  type creusat_formula_formula  =
    | CreuSat_Formula_Formula (alloc_vec_vec (creusat_clause_clause) (alloc_alloc_global)) usize
    
  let function creusat_formula_formula_Formula_clauses (self : creusat_formula_formula) : alloc_vec_vec (creusat_clause_clause) (alloc_alloc_global)
    
   =
    match (self) with
      | CreuSat_Formula_Formula a _ -> a
      end
  let function creusat_formula_formula_Formula_num_vars (self : creusat_formula_formula) : usize =
    match (self) with
      | CreuSat_Formula_Formula _ a -> a
      end
  type creusat_trail_trail  =
    | CreuSat_Trail_Trail (creusat_assignments_assignments) (alloc_vec_vec usize (alloc_alloc_global)) (alloc_vec_vec (creusat_trail_step) (alloc_alloc_global)) usize (alloc_vec_vec usize (alloc_alloc_global))
    
  let function creusat_trail_trail_Trail_assignments (self : creusat_trail_trail) : creusat_assignments_assignments =
    match (self) with
      | CreuSat_Trail_Trail a _ _ _ _ -> a
      end
  let function creusat_trail_trail_Trail_trail (self : creusat_trail_trail) : alloc_vec_vec (creusat_trail_step) (alloc_alloc_global)
    
   =
    match (self) with
      | CreuSat_Trail_Trail _ _ a _ _ -> a
      end
  let function creusat_trail_trail_Trail_lit_to_level (self : creusat_trail_trail) : alloc_vec_vec usize (alloc_alloc_global)
    
   =
    match (self) with
      | CreuSat_Trail_Trail _ a _ _ _ -> a
      end
  let function creusat_trail_trail_Trail_decisions (self : creusat_trail_trail) : alloc_vec_vec usize (alloc_alloc_global)
    
   =
    match (self) with
      | CreuSat_Trail_Trail _ _ _ _ a -> a
      end
  type core_option_option 't =
    | Core_Option_Option_None
    | Core_Option_Option_Some 't
    
  let function core_option_option_Some_0 (self : core_option_option 't) : 't =
    match (self) with
      | Core_Option_Option_None -> any 't
      | Core_Option_Option_Some a -> a
      end
  type creusat_conflictanalysis_conflict  =
    | CreuSat_ConflictAnalysis_Conflict_Ground
    | CreuSat_ConflictAnalysis_Conflict_Unit (creusat_clause_clause)
    | CreuSat_ConflictAnalysis_Conflict_Learned usize (creusat_clause_clause)
    | CreuSat_ConflictAnalysis_Conflict_Restart (creusat_clause_clause)
    
  let function creusat_conflictanalysis_conflict_Learned_0 (self : creusat_conflictanalysis_conflict) : usize =
    match (self) with
      | CreuSat_ConflictAnalysis_Conflict_Ground -> any usize
      | CreuSat_ConflictAnalysis_Conflict_Unit _ -> any usize
      | CreuSat_ConflictAnalysis_Conflict_Learned a _ -> a
      | CreuSat_ConflictAnalysis_Conflict_Restart _ -> any usize
      end
  let function creusat_conflictanalysis_conflict_Learned_1 (self : creusat_conflictanalysis_conflict) : creusat_clause_clause
    
   =
    match (self) with
      | CreuSat_ConflictAnalysis_Conflict_Ground -> any creusat_clause_clause
      | CreuSat_ConflictAnalysis_Conflict_Unit _ -> any creusat_clause_clause
      | CreuSat_ConflictAnalysis_Conflict_Learned _ a -> a
      | CreuSat_ConflictAnalysis_Conflict_Restart _ -> any creusat_clause_clause
      end
  let function creusat_conflictanalysis_conflict_Unit_0 (self : creusat_conflictanalysis_conflict) : creusat_clause_clause
    
   =
    match (self) with
      | CreuSat_ConflictAnalysis_Conflict_Ground -> any creusat_clause_clause
      | CreuSat_ConflictAnalysis_Conflict_Unit a -> a
      | CreuSat_ConflictAnalysis_Conflict_Learned _ _ -> any creusat_clause_clause
      | CreuSat_ConflictAnalysis_Conflict_Restart _ -> any creusat_clause_clause
      end
  type creusat_decision_node  =
    | CreuSat_Decision_Node usize usize usize
    
  let function creusat_decision_node_Node_ts (self : creusat_decision_node) : usize =
    match (self) with
      | CreuSat_Decision_Node _ _ a -> a
      end
  let function creusat_decision_node_Node_prev (self : creusat_decision_node) : usize =
    match (self) with
      | CreuSat_Decision_Node _ a _ -> a
      end
  let function creusat_decision_node_Node_next (self : creusat_decision_node) : usize =
    match (self) with
      | CreuSat_Decision_Node a _ _ -> a
      end
  type creusat_decision_decisions  =
    | CreuSat_Decision_Decisions (alloc_vec_vec (creusat_decision_node) (alloc_alloc_global)) usize usize usize
    
  let function creusat_decision_decisions_Decisions_linked_list (self : creusat_decision_decisions) : alloc_vec_vec (creusat_decision_node) (alloc_alloc_global)
    
   =
    match (self) with
      | CreuSat_Decision_Decisions a _ _ _ -> a
      end
  let function creusat_decision_decisions_Decisions_search (self : creusat_decision_decisions) : usize =
    match (self) with
      | CreuSat_Decision_Decisions _ _ _ a -> a
      end
  let function creusat_decision_decisions_Decisions_start (self : creusat_decision_decisions) : usize =
    match (self) with
      | CreuSat_Decision_Decisions _ _ a _ -> a
      end
  let function creusat_decision_decisions_Decisions_timestamp (self : creusat_decision_decisions) : usize =
    match (self) with
      | CreuSat_Decision_Decisions _ a _ _ -> a
      end
  type creusat_solver_satresult  =
    | CreuSat_Solver_SatResult_Sat (alloc_vec_vec uint8 (alloc_alloc_global))
    | CreuSat_Solver_SatResult_Unsat
    | CreuSat_Solver_SatResult_Unknown
    | CreuSat_Solver_SatResult_Err
    
  type creusat_watches_watcher  =
    | CreuSat_Watches_Watcher usize (creusat_lit_lit)
    
  let function creusat_watches_watcher_Watcher_cref (self : creusat_watches_watcher) : usize =
    match (self) with
      | CreuSat_Watches_Watcher a _ -> a
      end
  let function creusat_watches_watcher_Watcher_blocker (self : creusat_watches_watcher) : creusat_lit_lit =
    match (self) with
      | CreuSat_Watches_Watcher _ a -> a
      end
  type creusat_watches_watches  =
    | CreuSat_Watches_Watches (alloc_vec_vec (alloc_vec_vec (creusat_watches_watcher) (alloc_alloc_global)) (alloc_alloc_global))
    
  let function creusat_watches_watches_Watches_watches (self : creusat_watches_watches) : alloc_vec_vec (alloc_vec_vec (creusat_watches_watcher) (alloc_alloc_global)) (alloc_alloc_global)
    
   =
    match (self) with
      | CreuSat_Watches_Watches a -> a
      end
  type creusat_solver_solver  =
    | CreuSat_Solver_Solver usize usize usize usize usize usize usize (alloc_vec_vec usize (alloc_alloc_global))
    
  type core_result_result 't 'e =
    | Core_Result_Result_Ok 't
    | Core_Result_Result_Err 'e
    
  type creusat_solver_conflictresult  =
    | CreuSat_Solver_ConflictResult_Ok
    | CreuSat_Solver_ConflictResult_Err
    | CreuSat_Solver_ConflictResult_Ground
    | CreuSat_Solver_ConflictResult_Continue
    
end
module CreuSat_Lit_Impl1_New_Interface
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use Type
  val new [@cfg:stackify] (idx : usize) (polarity : bool) : Type.creusat_lit_lit
end
module CreuSat_Lit_Impl1_New
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use Type
  let rec cfg new [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 116 4 49] (idx : usize) (polarity : bool) : Type.creusat_lit_lit
    
   =
  var _0 : Type.creusat_lit_lit;
  var idx_1 : usize;
  var polarity_2 : bool;
  var _3 : usize;
  var _4 : bool;
  {
    idx_1 <- idx;
    polarity_2 <- polarity;
    goto BB0
  }
  BB0 {
    _3 <- idx_1;
    _4 <- polarity_2;
    _0 <- Type.CreuSat_Lit_Lit _3 _4;
    return _0
  }
  
end
module CreuSat_Assignments_RandInRange_Interface
  use mach.int.UInt64
  use prelude.UInt8
  use mach.int.Int
  use prelude.Prelude
  val rand_in_range [@cfg:stackify] (l : usize) (u : usize) : uint8
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 23 0 42] UInt64.to_int l <= UInt8.to_int result && UInt8.to_int result < UInt64.to_int u }
    
end
module CreuSat_Assignments_RandInRange
  use mach.int.UInt64
  use prelude.UInt8
  use mach.int.Int
  use prelude.Prelude
  val rand_in_range [@cfg:stackify] (l : usize) (u : usize) : uint8
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 23 0 42] UInt64.to_int l <= UInt8.to_int result && UInt8.to_int result < UInt64.to_int u }
    
end
module CreusotContracts_Logic_Model_Model_ModelTy
  type self
  type modelTy
end
module CreusotContracts_Logic_Model_Model_Model_Interface
  type self
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = self
  function model (self : self) : ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Model_Model
  type self
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = self
  function model (self : self) : ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Impl0_Model_Interface
  type t
  use prelude.Prelude
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  function model (self : t) : ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Impl0_Model
  type t
  use prelude.Prelude
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model0 with type self = t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  function model (self : t) : ModelTy0.modelTy =
    Model0.model self
end
module CreuSat_Logic_LogicAssignments_Impl0_ModelTy
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  type modelTy  =
    Seq.seq uint8
end
module CreusotContracts_Std1_Vec_Impl0_Model_Interface
  type t
  type a
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use Type
  function model (self : Type.alloc_vec_vec t a) : Seq.seq t
end
module CreusotContracts_Std1_Vec_Impl0_Model
  type t
  type a
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use Type
  function model (self : Type.alloc_vec_vec t a) : Seq.seq t
  axiom model_spec : forall self : Type.alloc_vec_vec t a . Seq.length (model self) <= 18446744073709551615
end
module CreuSat_Logic_LogicAssignments_Impl0_Model_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  function model (self : Type.creusat_assignments_assignments) : Seq.seq uint8
end
module CreuSat_Logic_LogicAssignments_Impl0_Model
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = uint8, type a = Type.alloc_alloc_global,
  axiom .
  function model [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 19 4 35] (self : Type.creusat_assignments_assignments) : Seq.seq uint8
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 19 4 35] Model0.model (Type.creusat_assignments_assignments_Assignments_0 self)
end
module CreuSat_Assignments_Impl0_Len_Interface
  use mach.int.UInt64
  use seq.Seq
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val len [@cfg:stackify] (self : Type.creusat_assignments_assignments) : usize
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 34 4 40] UInt64.to_int result = Seq.length (Model0.model self) }
    
end
module CreuSat_Assignments_Impl0_Len
  use mach.int.UInt64
  use seq.Seq
  use prelude.Prelude
  use Type
  use mach.int.Int
  use prelude.UInt8
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  val len [@cfg:stackify] (self : Type.creusat_assignments_assignments) : usize
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 34 4 40] UInt64.to_int result = Seq.length (Model0.model self) }
    
end
module CreusotContracts_Logic_Model_Impl1_Model_Interface
  type t
  use prelude.Prelude
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  function model (self : borrowed t) : ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Impl1_Model
  type t
  use prelude.Prelude
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model0 with type self = t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  function model (self : borrowed t) : ModelTy0.modelTy =
    Model0.model ( * self)
end
module CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface
  use Type
  use mach.int.Int
  function index_logic [@inline:trivial] (self : Type.creusat_lit_lit) : int
end
module CreuSat_Logic_LogicLit_Impl0_IndexLogic
  use Type
  use mach.int.Int
  use mach.int.UInt64
  function index_logic [@inline:trivial] [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 41 4 35] (self : Type.creusat_lit_lit) : int
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 41 4 35] UInt64.to_int (Type.creusat_lit_lit_Lit_idx self)
end
module CreuSat_Logic_LogicClause_Impl0_Model_Interface
  use Type
  use seq.Seq
  function model (self : Type.creusat_clause_clause) : Seq.seq (Type.creusat_lit_lit)
end
module CreuSat_Logic_LogicClause_Impl0_Model
  use Type
  use seq.Seq
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  function model [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 15 4 35] (self : Type.creusat_clause_clause) : Seq.seq (Type.creusat_lit_lit)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 15 4 35] Model0.model (Type.creusat_clause_clause_Clause_rest self)
end
module CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface
  use Type
  function is_positive_logic [@inline:trivial] (self : Type.creusat_lit_lit) : bool
end
module CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic
  use Type
  function is_positive_logic [@inline:trivial] [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 47 4 42] (self : Type.creusat_lit_lit) : bool
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 47 4 42] Type.creusat_lit_lit_Lit_polarity self
end
module CreuSat_Logic_LogicLit_Impl1_SatInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate sat_inner (self : Type.creusat_lit_lit) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicLit_Impl1_SatInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  predicate sat_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 117 4 57] (self : Type.creusat_lit_lit) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 117 4 57] if IsPositiveLogic0.is_positive_logic self then
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 1
    else
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 0
    
end
module CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate unsat_inner (self : Type.creusat_lit_lit) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicLit_Impl1_UnsatInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  predicate unsat_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 127 4 59] (self : Type.creusat_lit_lit) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 127 4 59] if IsPositiveLogic0.is_positive_logic self then
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 0
    else
      UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) = 1
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate clause_post_with_regards_to_inner (c : Type.creusat_clause_clause) (a : Seq.seq uint8) (j : int)
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate clause_post_with_regards_to_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 244 0 90] (c : Type.creusat_clause_clause) (a : Seq.seq uint8) (j : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 244 0 90] IndexLogic0.index_logic (Seq.get (Model0.model c) 0) = j && SatInner0.sat_inner (Seq.get (Model0.model c) 0) a && (forall i : (int) . 1 <= i && i < Seq.length (Model0.model c) -> UnsatInner0.unsat_inner (Seq.get (Model0.model c) i) a)
end
module CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate long_are_post_unit_inner (trail : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula) (a : Seq.seq uint8)
    
end
module CreuSat_Logic_LogicTrail_LongArePostUnitInner
  use seq.Seq
  use Type
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  use mach.int.UInt64
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Interface as ClausePostWithRegardsToInner0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate long_are_post_unit_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 293 0 92] (trail : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 293 0 92] forall j : (int) . 0 <= j && j < Seq.length trail -> match (Type.creusat_trail_step_Step_reason (Seq.get trail j)) with
      | Type.CreuSat_Trail_Reason_Long k -> ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) a (IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit (Seq.get trail j)))
      | _ -> true
      end
end
module CreuSat_Logic_Logic_Unset_Interface
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate unset (v : uint8)
end
module CreuSat_Logic_Logic_Unset
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  predicate unset [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 20 0 38] (v : uint8) =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 20 0 38] if UInt8.to_int v >= 2 then true else false
end
module CreuSat_Logic_LogicLit_Impl1_Invariant_Interface
  use Type
  use mach.int.Int
  predicate invariant' (self : Type.creusat_lit_lit) (n : int)
end
module CreuSat_Logic_LogicLit_Impl1_Invariant
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate invariant' [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 110 4 42] (self : Type.creusat_lit_lit) (n : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 110 4 42] IndexLogic0.index_logic self < n
end
module CreuSat_Logic_LogicTrail_Impl0_Invariant_Interface
  use Type
  predicate invariant' (self : Type.creusat_trail_reason) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_Impl0_Invariant
  use Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use seq.Seq
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate invariant' [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 12 4 46] (self : Type.creusat_trail_reason) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 12 4 46] match (self) with
      | Type.CreuSat_Trail_Reason_Long cref -> 0 <= UInt64.to_int cref && UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) && Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) > 1
      | Type.CreuSat_Trail_Reason_Unit cref -> 0 <= UInt64.to_int cref && UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) && Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) = 1
      | _ -> true
      end
end
module CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface
  use Type
  predicate invariant' (self : Type.creusat_trail_step) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_Impl1_Invariant
  use Type
  use mach.int.UInt64
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  predicate invariant' [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 48 4 46] (self : Type.creusat_trail_step) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 48 4 46] Invariant0.invariant' (Type.creusat_trail_step_Step_lit self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) && Invariant1.invariant' (Type.creusat_trail_step_Step_reason self) f
end
module CreuSat_Logic_LogicTrail_CrefsInRange_Interface
  use seq.Seq
  use Type
  predicate crefs_in_range (trail : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_CrefsInRange
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  predicate crefs_in_range [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 199 0 59] (trail : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 199 0 59] forall i : (int) . 0 <= i && i < Seq.length trail -> Invariant0.invariant' (Seq.get trail i) f
end
module CreuSat_Logic_LogicTrail_TrailInvariant_Interface
  use seq.Seq
  use Type
  predicate trail_invariant (trail : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_TrailInvariant
  use seq.Seq
  use Type
  clone CreuSat_Logic_LogicTrail_CrefsInRange_Interface as CrefsInRange0
  predicate trail_invariant [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 173 0 60] (trail : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 173 0 60] CrefsInRange0.crefs_in_range trail f
end
module CreuSat_Logic_LogicClause_VarsInRangeInner_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  predicate vars_in_range_inner (s : Seq.seq (Type.creusat_lit_lit)) (n : int)
end
module CreuSat_Logic_LogicClause_VarsInRangeInner
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  predicate vars_in_range_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 21 0 55] (s : Seq.seq (Type.creusat_lit_lit)) (n : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 21 0 55] forall i : (int) . 0 <= i && i < Seq.length s -> Invariant0.invariant' (Seq.get s i) n
end
module CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface
  use seq.Seq
  use Type
  predicate no_duplicate_indexes_inner (s : Seq.seq (Type.creusat_lit_lit))
end
module CreuSat_Logic_LogicClause_NoDuplicateIndexesInner
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate no_duplicate_indexes_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 53 0 54] (s : Seq.seq (Type.creusat_lit_lit))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 53 0 54] forall k : (int) . forall j : (int) . 0 <= j && j < Seq.length s && 0 <= k && k < j -> not IndexLogic0.index_logic (Seq.get s k) = IndexLogic0.index_logic (Seq.get s j)
end
module CreuSat_Logic_LogicClause_InvariantInternal_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  predicate invariant_internal (s : Seq.seq (Type.creusat_lit_lit)) (n : int)
end
module CreuSat_Logic_LogicClause_InvariantInternal
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  predicate invariant_internal [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 37 0 54] (s : Seq.seq (Type.creusat_lit_lit)) (n : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 37 0 54] VarsInRangeInner0.vars_in_range_inner s n && NoDuplicateIndexesInner0.no_duplicate_indexes_inner s
end
module CreuSat_Logic_LogicClause_Impl2_Invariant_Interface
  use Type
  use mach.int.Int
  predicate invariant' (self : Type.creusat_clause_clause) (n : int)
end
module CreuSat_Logic_LogicClause_Impl2_Invariant
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicClause_InvariantInternal_Interface as InvariantInternal0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate invariant' [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 262 4 42] (self : Type.creusat_clause_clause) (n : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 262 4 42] InvariantInternal0.invariant_internal (Model0.model self) n
end
module CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface
  use Type
  predicate invariant_old (self : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicFormula_Impl1_InvariantOld
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use mach.int.UInt64
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate invariant_old [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 138 4 38] (self : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 138 4 38] (forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) -> Invariant0.invariant' (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) i) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars self))) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) -> Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) i)) >= 1)
end
module CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  predicate invariant' (self : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicFormula_Impl1_Invariant
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  predicate invariant' [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 153 4 34] (self : Type.creusat_formula_formula)
    
  axiom invariant'_spec : forall self : Type.creusat_formula_formula . [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 152 4 46] invariant' self = InvariantOld0.invariant_old self
end
module CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface
  use Type
  predicate invariant' (self : Type.creusat_assignments_assignments) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicAssignments_Impl1_Invariant
  use Type
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UInt8
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate invariant' [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 57 4 46] (self : Type.creusat_assignments_assignments) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 57 4 46] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) = Seq.length (Model0.model self) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model self) -> UInt8.to_int (Seq.get (Model0.model self) i) <= 3)
end
module CreuSat_Logic_LogicLit_Impl1_Sat_Interface
  use Type
  predicate sat (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicLit_Impl1_Sat
  use Type
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate sat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 144 4 44] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 144 4 44] SatInner0.sat_inner self (Model0.model a)
end
module CreusotContracts_Std1_Vec_Impl0_ModelTy
  type t
  type a
  use seq.Seq
  type modelTy  =
    Seq.seq t
end
module CreuSat_Assignments_Impl0_SetAssignment_Interface
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy1
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy1.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy
  val set_assignment [@cfg:stackify] (self : borrowed (Type.creusat_assignments_assignments)) (lit : Type.creusat_lit_lit) (_f : Type.creusat_formula_formula) (_t : Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global)) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 47 4 58] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model _t) _f (Model1.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 46 4 50] Unset0.unset (Seq.get (Model1.model self) (IndexLogic0.index_logic lit))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 45 4 42] TrailInvariant0.trail_invariant (Model0.model _t) _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 44 4 31] Invariant0.invariant' _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 43 4 44] Invariant1.invariant' lit (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 42 4 43] Invariant2.invariant' ( * self) _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 53 4 30] Sat0.sat lit ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 51 4 71] forall j : (int) . 0 <= j && j < Seq.length (Model1.model self) && j <> IndexLogic0.index_logic lit -> Seq.get (Model2.model ( * self)) j = Seq.get (Model2.model ( ^ self)) j }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 50 4 47] Seq.length (Model2.model ( ^ self)) = Seq.length (Model1.model self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 49 4 51] not Unset0.unset (Seq.get (Model2.model ( ^ self)) (IndexLogic0.index_logic lit)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 48 4 58] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model _t) _f (Model2.model ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 42 4 43] Invariant2.invariant' ( ^ self) _f }
    
end
module CreuSat_Assignments_Impl0_SetAssignment
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant2 with function Model0.model = Model2.model
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant5 with function Model0.model = Model4.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant3 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Invariant1.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model4.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy1
  clone CreusotContracts_Logic_Model_Impl1_Model as Model1 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model2.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model3.model
  val set_assignment [@cfg:stackify] (self : borrowed (Type.creusat_assignments_assignments)) (lit : Type.creusat_lit_lit) (_f : Type.creusat_formula_formula) (_t : Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global)) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 47 4 58] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model _t) _f (Model1.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 46 4 50] Unset0.unset (Seq.get (Model1.model self) (IndexLogic0.index_logic lit))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 45 4 42] TrailInvariant0.trail_invariant (Model0.model _t) _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 44 4 31] Invariant0.invariant' _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 43 4 44] Invariant1.invariant' lit (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 42 4 43] Invariant2.invariant' ( * self) _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 53 4 30] Sat0.sat lit ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 51 4 71] forall j : (int) . 0 <= j && j < Seq.length (Model1.model self) && j <> IndexLogic0.index_logic lit -> Seq.get (Model2.model ( * self)) j = Seq.get (Model2.model ( ^ self)) j }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 50 4 47] Seq.length (Model2.model ( ^ self)) = Seq.length (Model1.model self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 49 4 51] not Unset0.unset (Seq.get (Model2.model ( ^ self)) (IndexLogic0.index_logic lit)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 48 4 58] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model _t) _f (Model2.model ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 42 4 43] Invariant2.invariant' ( ^ self) _f }
    
end
module CreuSat_Assignments_Impl0_New_Interface
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  val new [@cfg:stackify] (f : Type.creusat_formula_formula) : Type.creusat_assignments_assignments
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 69 4 30] Invariant0.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 70 4 36] Invariant1.invariant' result f }
    
end
module CreuSat_Assignments_Impl0_New
  use prelude.Prelude
  use Type
  use mach.int.Int
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model2 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model2.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model0 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model0.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model1.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  val new [@cfg:stackify] (f : Type.creusat_formula_formula) : Type.creusat_assignments_assignments
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 69 4 30] Invariant0.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/assignments.rs" 70 4 36] Invariant1.invariant' result f }
    
end
module CreuSat_Clause_Impl0_Clone_Interface
  use prelude.Prelude
  use Type
  val clone' [@cfg:stackify] (self : Type.creusat_clause_clause) : Type.creusat_clause_clause
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 22 4 31] result = self }
    
end
module CreuSat_Clause_Impl0_Clone
  use prelude.Prelude
  use Type
  val clone' [@cfg:stackify] (self : Type.creusat_clause_clause) : Type.creusat_clause_clause
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 22 4 31] result = self }
    
end
module CreuSat_Clause_Impl1_CheckClauseInvariant_Interface
  use mach.int.UInt64
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  val check_clause_invariant [@cfg:stackify] (self : Type.creusat_clause_clause) (n : usize) : bool
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 30 4 44] result = Invariant0.invariant' self (UInt64.to_int n) }
    
end
module CreuSat_Clause_Impl1_CheckClauseInvariant
  use mach.int.UInt64
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model0 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model0.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  val check_clause_invariant [@cfg:stackify] (self : Type.creusat_clause_clause) (n : usize) : bool
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 30 4 44] result = Invariant0.invariant' self (UInt64.to_int n) }
    
end
module CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes_Interface
  use Type
  predicate no_duplicate_indexes (self : Type.creusat_clause_clause)
end
module CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes
  use Type
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate no_duplicate_indexes [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 255 4 45] (self : Type.creusat_clause_clause)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 255 4 45] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model0.model self)
end
module CreuSat_Clause_Impl1_NoDuplicates_Interface
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes_Interface as NoDuplicateIndexes0
  val no_duplicates [@cfg:stackify] (self : Type.creusat_clause_clause) : bool
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 47 4 53] result = NoDuplicateIndexes0.no_duplicate_indexes self }
    
end
module CreuSat_Clause_Impl1_NoDuplicates
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model0 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes as NoDuplicateIndexes0 with function Model0.model = Model0.model,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  val no_duplicates [@cfg:stackify] (self : Type.creusat_clause_clause) : bool
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 47 4 53] result = NoDuplicateIndexes0.no_duplicate_indexes self }
    
end
module CreuSat_Logic_LogicClause_Impl0_ModelTy
  use seq.Seq
  use Type
  type modelTy  =
    Seq.seq (Type.creusat_lit_lit)
end
module CreuSat_Clause_Impl1_Len_Interface
  use mach.int.UInt64
  use seq.Seq
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val len [@cfg:stackify] (self : Type.creusat_clause_clause) : usize
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 71 4 40] UInt64.to_int result = Seq.length (Model0.model self) }
    
end
module CreuSat_Clause_Impl1_Len
  use mach.int.UInt64
  use seq.Seq
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  val len [@cfg:stackify] (self : Type.creusat_clause_clause) : usize
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 71 4 40] UInt64.to_int result = Seq.length (Model0.model self) }
    
end
module CreuSat_Clause_Impl1_ClauseFromVec_Interface
  use prelude.Prelude
  use seq.Seq
  use Type
  val clause_from_vec [@cfg:stackify] (vec : seq (Type.creusat_lit_lit)) : Type.creusat_clause_clause
end
module CreuSat_Clause_Impl1_ClauseFromVec
  use prelude.Prelude
  use seq.Seq
  use Type
  val clause_from_vec [@cfg:stackify] (vec : seq (Type.creusat_lit_lit)) : Type.creusat_clause_clause
end
module CreuSat_Logic_LogicClause_Impl2_VarsInRange_Interface
  use Type
  use mach.int.Int
  predicate vars_in_range (self : Type.creusat_clause_clause) (n : int)
end
module CreuSat_Logic_LogicClause_Impl2_VarsInRange
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate vars_in_range [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 248 4 46] (self : Type.creusat_clause_clause) (n : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 248 4 46] VarsInRangeInner0.vars_in_range_inner (Model0.model self) n
end
module CreuSat_Logic_LogicClause_Impl2_InvariantUnaryOk_Interface
  use Type
  use mach.int.Int
  predicate invariant_unary_ok (self : Type.creusat_clause_clause) (n : int)
end
module CreuSat_Logic_LogicClause_Impl2_InvariantUnaryOk
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes_Interface as NoDuplicateIndexes0
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange_Interface as VarsInRange0
  predicate invariant_unary_ok [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 269 4 51] (self : Type.creusat_clause_clause) (n : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 269 4 51] VarsInRange0.vars_in_range self n && NoDuplicateIndexes0.no_duplicate_indexes self
end
module CreuSat_Logic_LogicLit_Impl1_LitIn_Interface
  use Type
  predicate lit_in (self : Type.creusat_lit_lit) (c : Type.creusat_clause_clause)
end
module CreuSat_Logic_LogicLit_Impl1_LitIn
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate lit_in [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 83 4 42] (self : Type.creusat_lit_lit) (c : Type.creusat_clause_clause)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 83 4 42] exists i : (int) . 0 <= i && i < Seq.length (Model0.model c) && Seq.get (Model0.model c) i = self
end
module CreuSat_Clause_Impl1_MoveToEnd_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Interface as LitIn0
  clone CreuSat_Logic_LogicClause_Impl2_InvariantUnaryOk_Interface as InvariantUnaryOk0
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val move_to_end [@cfg:stackify] (self : borrowed (Type.creusat_clause_clause)) (idx : usize) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 88 4 37] UInt64.to_int idx < Seq.length (Model0.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 87 4 34] Seq.length (Model0.model self) > 0}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 86 4 61] InvariantUnaryOk0.invariant_unary_ok ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 95 4 38] forall j : (int) . 0 <= j && j < Seq.length (Model0.model self) -> LitIn0.lit_in (Seq.get (Model0.model self) j) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 94 4 49] Seq.length (Model1.model ( ^ self)) = Seq.length (Model0.model self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 93 4 63] Seq.get (Model1.model ( ^ self)) (Seq.length (Model1.model ( ^ self)) - 1) = Seq.get (Model0.model self) (UInt64.to_int idx) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 91 4 88] forall i : (int) . 0 <= i && i < Seq.length (Model0.model self) -> (exists j : (int) . 0 <= j && j < Seq.length (Model1.model ( ^ self)) && Seq.get (Model1.model ( ^ self)) i = Seq.get (Model0.model self) j) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 89 4 85] forall i : (int) . 0 <= i && i < Seq.length (Model1.model ( ^ self)) -> (exists j : (int) . 0 <= j && j < Seq.length (Model0.model self) && Seq.get (Model1.model ( ^ self)) i = Seq.get (Model0.model self) j) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 86 4 61] InvariantUnaryOk0.invariant_unary_ok ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Clause_Impl1_MoveToEnd
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant0.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes as NoDuplicateIndexes0 with function Model0.model = Model1.model,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with function Model0.model = Model1.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreuSat_Logic_LogicClause_Impl2_InvariantUnaryOk as InvariantUnaryOk0 with predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
  predicate NoDuplicateIndexes0.no_duplicate_indexes = NoDuplicateIndexes0.no_duplicate_indexes
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  val move_to_end [@cfg:stackify] (self : borrowed (Type.creusat_clause_clause)) (idx : usize) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 88 4 37] UInt64.to_int idx < Seq.length (Model0.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 87 4 34] Seq.length (Model0.model self) > 0}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 86 4 61] InvariantUnaryOk0.invariant_unary_ok ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 95 4 38] forall j : (int) . 0 <= j && j < Seq.length (Model0.model self) -> LitIn0.lit_in (Seq.get (Model0.model self) j) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 94 4 49] Seq.length (Model1.model ( ^ self)) = Seq.length (Model0.model self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 93 4 63] Seq.get (Model1.model ( ^ self)) (Seq.length (Model1.model ( ^ self)) - 1) = Seq.get (Model0.model self) (UInt64.to_int idx) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 91 4 88] forall i : (int) . 0 <= i && i < Seq.length (Model0.model self) -> (exists j : (int) . 0 <= j && j < Seq.length (Model1.model ( ^ self)) && Seq.get (Model1.model ( ^ self)) i = Seq.get (Model0.model self) j) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 89 4 85] forall i : (int) . 0 <= i && i < Seq.length (Model1.model ( ^ self)) -> (exists j : (int) . 0 <= j && j < Seq.length (Model0.model self) && Seq.get (Model1.model ( ^ self)) i = Seq.get (Model0.model self) j) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 86 4 61] InvariantUnaryOk0.invariant_unary_ok ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Clause_Impl1_RemoveFromClause_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Interface as LitIn0
  clone CreuSat_Logic_LogicClause_Impl2_InvariantUnaryOk_Interface as InvariantUnaryOk0
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val remove_from_clause [@cfg:stackify] (self : borrowed (Type.creusat_clause_clause)) (idx : usize) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 107 4 37] UInt64.to_int idx < Seq.length (Model0.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 106 4 34] Seq.length (Model0.model self) > 0}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 105 4 61] InvariantUnaryOk0.invariant_unary_ok ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 112 4 51] forall j : (int) . 0 <= j && j < Seq.length (Model0.model self) && j <> UInt64.to_int idx -> LitIn0.lit_in (Seq.get (Model0.model self) j) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 111 4 44] not LitIn0.lit_in (Seq.get (Model0.model self) (UInt64.to_int idx)) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 110 4 53] Seq.length (Model1.model ( ^ self)) + 1 = Seq.length (Model0.model self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 108 4 83] forall i : (int) . 0 <= i && i < Seq.length (Model1.model ( ^ self)) -> (exists j : (int) . 0 <= j && j < Seq.length (Model0.model self) && Seq.get (Model1.model ( ^ self)) i = Seq.get (Model0.model self) j) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 105 4 61] InvariantUnaryOk0.invariant_unary_ok ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Clause_Impl1_RemoveFromClause
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant0.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes as NoDuplicateIndexes0 with function Model0.model = Model1.model,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with function Model0.model = Model1.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreuSat_Logic_LogicClause_Impl2_InvariantUnaryOk as InvariantUnaryOk0 with predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
  predicate NoDuplicateIndexes0.no_duplicate_indexes = NoDuplicateIndexes0.no_duplicate_indexes
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  val remove_from_clause [@cfg:stackify] (self : borrowed (Type.creusat_clause_clause)) (idx : usize) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 107 4 37] UInt64.to_int idx < Seq.length (Model0.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 106 4 34] Seq.length (Model0.model self) > 0}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 105 4 61] InvariantUnaryOk0.invariant_unary_ok ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 112 4 51] forall j : (int) . 0 <= j && j < Seq.length (Model0.model self) && j <> UInt64.to_int idx -> LitIn0.lit_in (Seq.get (Model0.model self) j) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 111 4 44] not LitIn0.lit_in (Seq.get (Model0.model self) (UInt64.to_int idx)) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 110 4 53] Seq.length (Model1.model ( ^ self)) + 1 = Seq.length (Model0.model self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 108 4 83] forall i : (int) . 0 <= i && i < Seq.length (Model1.model ( ^ self)) -> (exists j : (int) . 0 <= j && j < Seq.length (Model0.model self) && Seq.get (Model1.model ( ^ self)) i = Seq.get (Model0.model self) j) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 105 4 61] InvariantUnaryOk0.invariant_unary_ok ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Logic_LogicLit_Impl1_UnsetInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate unset_inner (self : Type.creusat_lit_lit) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicLit_Impl1_UnsetInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate unset_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 137 4 59] (self : Type.creusat_lit_lit) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 137 4 59] UInt8.to_int (Seq.get a (IndexLogic0.index_logic self)) >= 2
end
module CreuSat_Logic_LogicLit_Impl1_Unset_Interface
  use Type
  predicate unset (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicLit_Impl1_Unset
  use Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner_Interface as UnsetInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate unset [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 151 4 46] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 151 4 46] UnsetInner0.unset_inner self (Model0.model a)
end
module CreuSat_Logic_LogicClause_Impl2_SatInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate sat_inner (self : Type.creusat_clause_clause) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl2_SatInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate sat_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 228 4 57] (self : Type.creusat_clause_clause) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 228 4 57] exists i : (int) . 0 <= i && i < Seq.length (Model0.model self) && SatInner0.sat_inner (Seq.get (Model0.model self) i) a
end
module CreuSat_Logic_LogicClause_Impl2_UnitInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate unit_inner (self : Type.creusat_clause_clause) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl2_UnitInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner_Interface as UnsetInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange_Interface as VarsInRange0
  predicate unit_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 195 4 58] (self : Type.creusat_clause_clause) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 195 4 58] VarsInRange0.vars_in_range self (Seq.length a) && not SatInner0.sat_inner self a && (exists i : (int) . 0 <= i && i < Seq.length (Model0.model self) && UnsetInner0.unset_inner (Seq.get (Model0.model self) i) a && (forall j : (int) . 0 <= j && j < Seq.length (Model0.model self) && j <> i -> not UnsetInner0.unset_inner (Seq.get (Model0.model self) j) a))
end
module CreuSat_Logic_LogicClause_Impl2_Unit_Interface
  use Type
  predicate unit (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicClause_Impl2_Unit
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner_Interface as UnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate unit [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 206 4 45] (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 206 4 45] UnitInner0.unit_inner self (Model0.model a)
end
module CreuSat_Clause_Impl1_UnitAndUnset_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_Unit_Interface as Unit0
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicClause_InvariantInternal_Interface as InvariantInternal0
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val unit_and_unset [@cfg:stackify] (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments) (_f : Type.creusat_formula_formula) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 125 4 34] Seq.length (Model0.model self) > 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 124 4 33] Invariant0.invariant' a _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 123 4 56] InvariantInternal0.invariant_internal (Model0.model self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 127 4 47] result -> Unset0.unset (Seq.get (Model0.model self) 0) a }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 126 4 40] result -> Unit0.unit self a }
    
end
module CreuSat_Clause_Impl1_UnitAndUnset
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with function Model0.model = Model2.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant0 with function Model0.model = Model2.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with function Model0.model = Model1.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner as UnitInner0 with predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, function Model0.model = Model1.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unit as Unit0 with function Model0.model = Model2.model,
  predicate UnitInner0.unit_inner = UnitInner0.unit_inner
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  val unit_and_unset [@cfg:stackify] (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments) (_f : Type.creusat_formula_formula) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 125 4 34] Seq.length (Model0.model self) > 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 124 4 33] Invariant0.invariant' a _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 123 4 56] InvariantInternal0.invariant_internal (Model0.model self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 127 4 47] result -> Unset0.unset (Seq.get (Model0.model self) 0) a }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 126 4 40] result -> Unit0.unit self a }
    
end
module CreuSat_Logic_LogicFormula_Impl0_Model_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  function model (self : Type.creusat_formula_formula) : (Seq.seq (Type.creusat_clause_clause), int)
end
module CreuSat_Logic_LogicFormula_Impl0_Model
  use Type
  use seq.Seq
  use mach.int.Int
  use mach.int.UInt64
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function model [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 23 4 35] (self : Type.creusat_formula_formula) : (Seq.seq (Type.creusat_clause_clause), int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 23 4 35] (Model0.model (Type.creusat_formula_formula_Formula_clauses self), UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars self))
end
module CreuSat_Logic_LogicAssignments_CompleteInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate complete_inner (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicAssignments_CompleteInner
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  predicate complete_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 33 0 52] (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 33 0 52] forall i : (int) . 0 <= i && i < Seq.length a -> not Unset0.unset (Seq.get a i)
end
module CreuSat_Logic_LogicFormula_FormulaSatInner_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate formula_sat_inner (f : (Seq.seq (Type.creusat_clause_clause), int)) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicFormula_FormulaSatInner
  use seq.Seq
  use Type
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Interface as SatInner0
  predicate formula_sat_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 42 0 78] (f : (Seq.seq (Type.creusat_clause_clause), int)) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 42 0 78] forall i : (int) . 0 <= i && i < Seq.length (let (a, _) = f in a) -> SatInner0.sat_inner (Seq.get (let (a, _) = f in a) i) a
end
module CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  predicate eventually_sat_complete_no_ass (f : (Seq.seq (Type.creusat_clause_clause), int))
end
module CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss
  use seq.Seq
  use Type
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Interface as FormulaSatInner0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  predicate eventually_sat_complete_no_ass [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 50 0 68] (f : (Seq.seq (Type.creusat_clause_clause), int))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 50 0 68] exists a2 : (Seq.seq uint8) . Seq.length a2 = (let (_, a) = f in a) && CompleteInner0.complete_inner a2 && FormulaSatInner0.formula_sat_inner f a2
end
module CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  predicate equisat_extension_inner (c : Type.creusat_clause_clause) (f : (Seq.seq (Type.creusat_clause_clause), int))
end
module CreuSat_Logic_LogicClause_EquisatExtensionInner
  use Type
  use seq.Seq
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  predicate equisat_extension_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 46 0 72] (c : Type.creusat_clause_clause) (f : (Seq.seq (Type.creusat_clause_clause), int))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 46 0 72] EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass f -> EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass (Seq.snoc (let (a, _) = f in a) c, let (_, a) = f in a)
end
module CreuSat_Logic_LogicClause_Impl2_EquisatExtension_Interface
  use Type
  predicate equisat_extension (self : Type.creusat_clause_clause) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicClause_Impl2_EquisatExtension
  use Type
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_Impl0_Model_Interface as Model0
  predicate equisat_extension [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 103 4 54] (self : Type.creusat_clause_clause) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 103 4 54] EquisatExtensionInner0.equisat_extension_inner self (Model0.model f)
end
module CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate unsat_inner (self : Type.creusat_clause_clause) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl2_UnsatInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate unsat_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 213 4 59] (self : Type.creusat_clause_clause) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 213 4 59] forall i : (int) . 0 <= i && i < Seq.length (Model0.model self) -> UnsatInner0.unsat_inner (Seq.get (Model0.model self) i) a
end
module CreuSat_Logic_LogicClause_Impl2_Equisat_Interface
  use Type
  predicate equisat (self : Type.creusat_clause_clause) (o : Type.creusat_clause_clause)
end
module CreuSat_Logic_LogicClause_Impl2_Equisat
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Interface as SatInner0
  predicate equisat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 284 4 43] (self : Type.creusat_clause_clause) (o : Type.creusat_clause_clause)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 284 4 43] (forall a : (Seq.seq uint8) . SatInner0.sat_inner self a = SatInner0.sat_inner o a) && (forall a : (Seq.seq uint8) . UnsatInner0.unsat_inner self a = UnsatInner0.unsat_inner o a)
end
module CreuSat_Logic_LogicClause_Impl2_Equisat2_Interface
  use Type
  predicate equisat2 (self : Type.creusat_clause_clause) (o : Type.creusat_clause_clause) (f : Type.creusat_formula_formula)
    
end
module CreuSat_Logic_LogicClause_Impl2_Equisat2
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.UInt64
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  predicate equisat2 [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 292 4 56] (self : Type.creusat_clause_clause) (o : Type.creusat_clause_clause) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 292 4 56] (forall a : (Seq.seq uint8) . Seq.length a = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) && CompleteInner0.complete_inner a -> SatInner0.sat_inner self a = SatInner0.sat_inner o a) && (forall a : (Seq.seq uint8) . Seq.length a = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) && CompleteInner0.complete_inner a -> UnsatInner0.unsat_inner self a = UnsatInner0.unsat_inner o a)
end
module CreusotContracts_Logic_Model_Impl1_ModelTy
  type t
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  type modelTy  =
    ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Impl1
  type t
  use prelude.Prelude
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy2 with type self = t
  clone CreusotContracts_Logic_Model_Model_Model as Model2 with type self = t, type ModelTy0.modelTy = ModelTy2.modelTy
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = t, type ModelTy0.modelTy = ModelTy2.modelTy,
  function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl1_ModelTy as ModelTy0 with type t = t, type ModelTy0.modelTy = ModelTy2.modelTy
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = borrowed t,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy1 with type self = borrowed t,
  type modelTy = ModelTy0.modelTy
end
module CreuSat_Logic_LogicClause_Impl0
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model0 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = Type.creusat_clause_clause,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy1 with type self = Type.creusat_clause_clause,
  type modelTy = ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Impl0_ModelTy
  type t
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  type modelTy  =
    ModelTy0.modelTy
end
module CreusotContracts_Logic_Model_Impl0
  type t
  use prelude.Prelude
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy2 with type self = t
  clone CreusotContracts_Logic_Model_Model_Model as Model2 with type self = t, type ModelTy0.modelTy = ModelTy2.modelTy
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = t, type ModelTy0.modelTy = ModelTy2.modelTy,
  function Model0.model = Model2.model
  clone CreusotContracts_Logic_Model_Impl0_ModelTy as ModelTy0 with type t = t, type ModelTy0.modelTy = ModelTy2.modelTy
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = t, function model = Model0.model,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy1 with type self = t, type modelTy = ModelTy0.modelTy
end
module CreuSat_Logic_LogicFormula_Impl0_ModelTy
  use seq.Seq
  use Type
  use mach.int.Int
  type modelTy  =
    (Seq.seq (Type.creusat_clause_clause), int)
end
module CreuSat_Logic_LogicFormula_Impl0
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = Type.creusat_formula_formula,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy1 with type self = Type.creusat_formula_formula,
  type modelTy = ModelTy0.modelTy
end
module CreusotContracts_Std1_Vec_Impl0
  type t
  type a
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = t, type a = a, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = t, type a = a
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = Type.alloc_vec_vec t a,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy1 with type self = Type.alloc_vec_vec t a,
  type modelTy = ModelTy0.modelTy
end
module CreusotContracts_Logic_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Prelude
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Logic_Resolve_Impl1_Resolve
  type t
  use prelude.Prelude
  predicate resolve (self : borrowed t) =
     ^ self =  * self
end
module Core_Ops_Deref_Deref_Target
  type self
  type target
end
module Core_Ops_Deref_DerefMut_DerefMut_Interface
  type self
  use prelude.Prelude
  clone Core_Ops_Deref_Deref_Target as Target0 with type self = self
  val deref_mut [@cfg:stackify] (self : borrowed self) : borrowed Target0.target
    requires {false}
    
end
module Core_Ops_Deref_DerefMut_DerefMut
  type self
  use prelude.Prelude
  clone Core_Ops_Deref_Deref_Target as Target0 with type self = self
  val deref_mut [@cfg:stackify] (self : borrowed self) : borrowed Target0.target
    requires {false}
    
end
module CreusotContracts_Std1_Slice_Impl0_Model_Interface
  type t
  use prelude.Prelude
  use seq.Seq
  use mach.int.Int
  use mach.int.UInt64
  function model (self : seq t) : Seq.seq t
end
module CreusotContracts_Std1_Slice_Impl0_Model
  type t
  use prelude.Prelude
  use seq.Seq
  use mach.int.Int
  use mach.int.UInt64
  function model (self : seq t) : Seq.seq t
  axiom model_spec : forall self : seq t . Seq.length (model self) <= 18446744073709551615 && model self = Prelude.id self
end
module Alloc_Vec_Impl11_DerefMut_Interface
  type t
  type a
  use prelude.Prelude
  use Type
  use seq.Seq
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = t, type a = a, axiom .
  clone CreusotContracts_Std1_Slice_Impl0_Model_Interface as Model0 with type t = t, axiom .
  val deref_mut [@cfg:stackify] (self : borrowed (Type.alloc_vec_vec t a)) : borrowed (seq t)
    ensures { Model0.model ( ^ result) = Model1.model ( ^ self) }
    ensures { Model0.model ( * result) = Model1.model ( * self) }
    
end
module Alloc_Vec_Impl11_DerefMut
  type t
  type a
  use prelude.Prelude
  use Type
  use seq.Seq
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = t, type a = a, axiom .
  clone CreusotContracts_Std1_Slice_Impl0_Model_Interface as Model0 with type t = t, axiom .
  val deref_mut [@cfg:stackify] (self : borrowed (Type.alloc_vec_vec t a)) : borrowed (seq t)
    ensures { Model0.model ( ^ result) = Model1.model ( ^ self) }
    ensures { Model0.model ( * result) = Model1.model ( * self) }
    
end
module CreusotContracts_Std1_Slice_Impl0_ModelTy
  type t
  use seq.Seq
  type modelTy  =
    Seq.seq t
end
module Core_Slice_Impl0_Swap_Interface
  type t
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use seq.Permut
  use prelude.Prelude
  clone CreusotContracts_Std1_Slice_Impl0_Model_Interface as Model1 with type t = t, axiom .
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = t
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val swap [@cfg:stackify] (self : borrowed (seq t)) (a : usize) (b : usize) : ()
    requires {UInt64.to_int b < Seq.length (Model0.model self)}
    requires {UInt64.to_int a < Seq.length (Model0.model self)}
    ensures { Permut.exchange (Model1.model ( ^ self)) (Model1.model ( * self)) (UInt64.to_int a) (UInt64.to_int b) }
    
end
module Core_Slice_Impl0_Swap
  type t
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use seq.Permut
  use prelude.Prelude
  clone CreusotContracts_Std1_Slice_Impl0_Model_Interface as Model1 with type t = t, axiom .
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = t
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val swap [@cfg:stackify] (self : borrowed (seq t)) (a : usize) (b : usize) : ()
    requires {UInt64.to_int b < Seq.length (Model0.model self)}
    requires {UInt64.to_int a < Seq.length (Model0.model self)}
    ensures { Permut.exchange (Model1.model ( ^ self)) (Model1.model ( * self)) (UInt64.to_int a) (UInt64.to_int b) }
    
end
module CreusotContracts_Logic_Resolve_Resolve_Resolve_Interface
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Logic_Resolve_Resolve_Resolve
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Logic_Resolve_Impl1
  type t
  use prelude.Prelude
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = t
  clone CreusotContracts_Logic_Resolve_Resolve_Resolve_Interface as Resolve1 with type self = borrowed t,
  predicate resolve = Resolve0.resolve
end
module Alloc_Vec_Impl10_Target
  type t
  type a
  use prelude.Prelude
  use seq.Seq
  type target  =
    seq t
end
module Alloc_Vec_Impl11
  type t
  type a
  use Type
  clone Alloc_Vec_Impl10_Target as Target0 with type t = t, type a = a
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = t, type a = a, axiom .
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model0 with type t = t, axiom .
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = t, type a = a,
  function Model0.model = Model0.model, function Model1.model = Model1.model
  clone Core_Ops_Deref_DerefMut_DerefMut_Interface as DerefMut1 with type self = Type.alloc_vec_vec t a,
  val deref_mut = DerefMut0.deref_mut, type Target0.target = Target0.target
end
module CreusotContracts_Std1_Slice_Impl0
  type t
  use prelude.Prelude
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model0 with type t = t, axiom .
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = t
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = seq t,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy1 with type self = seq t, type modelTy = ModelTy0.modelTy
end
module CreuSat_Clause_Impl1_SwapLitsInClause_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension_Interface as EquisatExtension0
  val swap_lits_in_clause [@cfg:stackify] (self : borrowed (Type.creusat_clause_clause)) (_f : Type.creusat_formula_formula) (j : usize) (k : usize) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 151 4 51] EquisatExtension0.equisat_extension ( * self) _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 150 4 52] Invariant0.invariant' ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 144 4 35] Seq.length (Model0.model self) > UInt64.to_int k}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 143 4 35] Seq.length (Model0.model self) > UInt64.to_int j}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 152 4 49] Seq.length (Model0.model self) = Seq.length (Model1.model ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 151 4 51] EquisatExtension0.equisat_extension ( ^ self) _f }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 150 4 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Clause_Impl1_SwapLitsInClause
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use Type
  use seq.Permut
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model2 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model3.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model1.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model3.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicClause_Impl2_Equisat2 as Equisat20 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Equisat as Equisat0 with predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = seq (Type.creusat_lit_lit)
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy2 with type t = Type.creusat_lit_lit
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model6 with type t = Type.creusat_lit_lit, axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model7 with type t = seq (Type.creusat_lit_lit),
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model6.model
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = Type.creusat_lit_lit,
  function Model0.model = Model7.model, function Model1.model = Model6.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Type.creusat_clause_clause
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, function Model0.model = Model6.model, function Model1.model = Model4.model
  let rec cfg swap_lits_in_clause [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 155 4 75] (self : borrowed (Type.creusat_clause_clause)) (_f : Type.creusat_formula_formula) (j : usize) (k : usize) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 151 4 51] EquisatExtension0.equisat_extension ( * self) _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 150 4 52] Invariant0.invariant' ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 144 4 35] Seq.length (Model0.model self) > UInt64.to_int k}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 143 4 35] Seq.length (Model0.model self) > UInt64.to_int j}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 152 4 49] Seq.length (Model0.model self) = Seq.length (Model1.model ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 151 4 51] EquisatExtension0.equisat_extension ( ^ self) _f }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 150 4 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
   =
  var _0 : ();
  var self_1 : borrowed (Type.creusat_clause_clause);
  var _f_2 : Type.creusat_formula_formula;
  var j_3 : usize;
  var k_4 : usize;
  ghost var old_c_5 : borrowed (Type.creusat_clause_clause);
  var _6 : ();
  var _7 : ();
  var _8 : borrowed (seq (Type.creusat_lit_lit));
  var _9 : borrowed (seq (Type.creusat_lit_lit));
  var _10 : borrowed (Type.alloc_vec_vec (Type.creusat_lit_lit) (Type.alloc_alloc_global));
  var _11 : usize;
  var _12 : usize;
  var _13 : ();
  var _14 : ();
  var _15 : ();
  var _16 : ();
  var _17 : ();
  var _18 : ();
  var _19 : ();
  var _20 : ();
  var _21 : ();
  var _22 : ();
  {
    self_1 <- self;
    _f_2 <- _f;
    j_3 <- j;
    k_4 <- k;
    goto BB0
  }
  BB0 {
    _6 <- ();
    old_c_5 <- ghost ([#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 156 20 35] self_1);
    goto BB1
  }
  BB1 {
    _10 <- borrow_mut (Type.creusat_clause_clause_Clause_rest ( * self_1));
    self_1 <- { self_1 with current = (let Type.CreuSat_Clause_Clause a b =  * self_1 in Type.CreuSat_Clause_Clause a ( ^ _10)) };
    assume { Resolve0.resolve self_1 };
    _9 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 157 8 28] DerefMut0.deref_mut _10);
    goto BB2
  }
  BB2 {
    _8 <- borrow_mut ( * _9);
    _9 <- { _9 with current = ( ^ _8) };
    _11 <- j_3;
    _12 <- k_4;
    _7 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 157 8 28] Swap0.swap _8 _11 _12);
    goto BB3
  }
  BB3 {
    assume { Resolve1.resolve _9 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 158 8 46]  ^ old_c_5 =  ^ self_1 };
    _13 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 159 8 62] EquisatExtension0.equisat_extension ( * old_c_5) _f_2 };
    _14 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 160 8 51] Invariant0.invariant' ( * self_1) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f_2)) };
    _15 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 161 8 63] Permut.exchange (Model0.model self_1) (Model0.model old_c_5) (UInt64.to_int j_3) (UInt64.to_int k_4) };
    _16 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 162 8 71] Permut.permut (Model0.model old_c_5) (Model0.model self_1) 0 (Seq.length (Model0.model self_1)) };
    _17 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 163 8 51] Equisat0.equisat ( * self_1) ( * old_c_5) };
    _18 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 164 8 57] Equisat20.equisat2 ( * self_1) ( * old_c_5) _f_2 };
    _19 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 165 8 46]  ^ old_c_5 =  ^ self_1 };
    _20 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 166 8 82] EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass (Seq.snoc (let (a, _) = Model2.model _f_2 in a) ( * self_1), let (_, a) = Model2.model _f_2 in a) = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass (Seq.snoc (let (a, _) = Model2.model _f_2 in a) ( * old_c_5), let (_, a) = Model2.model _f_2 in a) };
    _21 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/clause.rs" 168 8 50] EquisatExtension0.equisat_extension ( * self_1) _f_2 };
    _22 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_Logic_LogicLit_IdxInLogic2_Interface
  use mach.int.Int
  use seq.Seq
  use Type
  predicate idx_in_logic2 [@inline:trivial] (idx : int) (c : Seq.seq (Type.creusat_lit_lit))
end
module CreuSat_Logic_LogicLit_IdxInLogic2
  use mach.int.Int
  use seq.Seq
  use Type
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate idx_in_logic2 [@inline:trivial] [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 25 0 51] (idx : int) (c : Seq.seq (Type.creusat_lit_lit))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 25 0 51] exists i : (int) . 0 <= i && i < Seq.length c && IndexLogic0.index_logic (Seq.get c i) = idx
end
module CreuSat_ConflictAnalysis_IdxIn_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicLit_IdxInLogic2_Interface as IdxInLogic20
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy1 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model1 with type t = Type.alloc_vec_vec (Type.creusat_lit_lit) (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy1.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = bool, type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.alloc_vec_vec bool (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy
  val idx_in [@cfg:stackify] (c : Type.alloc_vec_vec (Type.creusat_lit_lit) (Type.alloc_alloc_global)) (idx : usize) (seen : Type.alloc_vec_vec bool (Type.alloc_alloc_global)) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 23 0 53] Seq.get (Model0.model seen) (UInt64.to_int idx) = IdxInLogic20.idx_in_logic2 (UInt64.to_int idx) (Model1.model c)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 22 0 33] UInt64.to_int idx < Seq.length (Model0.model seen)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 21 0 51] VarsInRangeInner0.vars_in_range_inner (Model1.model c) (Seq.length (Model0.model seen))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 24 0 96] result = (exists i : (int) . 0 <= i && i < Seq.length (Model1.model c) && IndexLogic0.index_logic (Seq.get (Model1.model c) i) = UInt64.to_int idx) }
    
end
module CreuSat_ConflictAnalysis_IdxIn
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant0.invariant'
  clone CreuSat_Logic_LogicLit_IdxInLogic2 as IdxInLogic20 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy1 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl0_Model as Model1 with type t = Type.alloc_vec_vec (Type.creusat_lit_lit) (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model3.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = bool, type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = bool, type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.alloc_vec_vec bool (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model2.model
  val idx_in [@cfg:stackify] (c : Type.alloc_vec_vec (Type.creusat_lit_lit) (Type.alloc_alloc_global)) (idx : usize) (seen : Type.alloc_vec_vec bool (Type.alloc_alloc_global)) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 23 0 53] Seq.get (Model0.model seen) (UInt64.to_int idx) = IdxInLogic20.idx_in_logic2 (UInt64.to_int idx) (Model1.model c)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 22 0 33] UInt64.to_int idx < Seq.length (Model0.model seen)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 21 0 51] VarsInRangeInner0.vars_in_range_inner (Model1.model c) (Seq.length (Model0.model seen))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 24 0 96] result = (exists i : (int) . 0 <= i && i < Seq.length (Model1.model c) && IndexLogic0.index_logic (Seq.get (Model1.model c) i) = UInt64.to_int idx) }
    
end
module CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate post_unit_inner (self : Type.creusat_clause_clause) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl1_PostUnitInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate post_unit_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 69 4 63] (self : Type.creusat_clause_clause) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 69 4 63] exists i : (int) . 0 <= i && i < Seq.length (Model0.model self) && SatInner0.sat_inner (Seq.get (Model0.model self) i) a && (forall j : (int) . 0 <= j && j < Seq.length (Model0.model self) && j <> i -> UnsatInner0.unsat_inner (Seq.get (Model0.model self) j) a)
end
module CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept_Interface
  use Type
  use mach.int.Int
  predicate same_idx_same_polarity_except (self : Type.creusat_clause_clause) (other : Type.creusat_clause_clause) (exception' : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate same_idx_same_polarity_except [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 125 4 85] (self : Type.creusat_clause_clause) (other : Type.creusat_clause_clause) (exception' : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 125 4 85] forall j : (int) . forall i : (int) . 0 <= i && i < Seq.length (Model0.model self) && 0 <= j && j < Seq.length (Model0.model other) -> IndexLogic0.index_logic (Seq.get (Model0.model self) i) <> exception' && IndexLogic0.index_logic (Seq.get (Model0.model self) i) = IndexLogic0.index_logic (Seq.get (Model0.model other) j) -> IsPositiveLogic0.is_positive_logic (Seq.get (Model0.model self) i) = IsPositiveLogic0.is_positive_logic (Seq.get (Model0.model other) j)
end
module CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface
  use Type
  predicate is_opp (self : Type.creusat_lit_lit) (o : Type.creusat_lit_lit)
end
module CreuSat_Logic_LogicLit_Impl1_IsOpp
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate is_opp [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 67 4 39] (self : Type.creusat_lit_lit) (o : Type.creusat_lit_lit)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 67 4 39] IndexLogic0.index_logic self = IndexLogic0.index_logic o && IsPositiveLogic0.is_positive_logic self <> IsPositiveLogic0.is_positive_logic o
end
module CreuSat_Logic_LogicClause_Impl2_InFormula_Interface
  use Type
  predicate in_formula (self : Type.creusat_clause_clause) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicClause_Impl2_InFormula
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate in_formula [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 179 4 47] (self : Type.creusat_clause_clause) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 179 4 47] exists i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) && Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) i = self
end
module CreuSat_Logic_LogicTrail_LitToLevelInvariant_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use Type
  predicate lit_to_level_invariant (lit_to_level : Seq.seq usize) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_LitToLevelInvariant
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use Type
  predicate lit_to_level_invariant [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 190 0 75] (lit_to_level : Seq.seq usize) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 190 0 75] Seq.length lit_to_level = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)
end
module CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Interface
  use Type
  predicate lit_idx_in (self : Type.creusat_lit_lit) (c : Type.creusat_clause_clause)
end
module CreuSat_Logic_LogicLit_Impl1_LitIdxIn
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate lit_idx_in [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 97 4 46] (self : Type.creusat_lit_lit) (c : Type.creusat_clause_clause)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 97 4 46] exists i : (int) . 0 <= i && i < Seq.length (Model0.model c) && IndexLogic0.index_logic (Seq.get (Model0.model c) i) = IndexLogic0.index_logic self
end
module CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface
  use seq.Seq
  use Type
  predicate lit_not_in_less_inner (t : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_LitNotInLessInner
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Interface as LitIdxIn0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate lit_not_in_less_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 161 0 62] (t : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 161 0 62] forall i : (int) . 0 <= i && i < Seq.length t -> (forall j : (int) . 0 <= j && j < i -> match (Type.creusat_trail_step_Step_reason (Seq.get t j)) with
      | Type.CreuSat_Trail_Reason_Long cref -> not LitIdxIn0.lit_idx_in (Type.creusat_trail_step_Step_lit (Seq.get t i)) (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))
      | _ -> true
      end)
end
module CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface
  use Type
  predicate lit_not_in_less (self : Type.creusat_trail_trail) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_Impl2_LitNotInLess
  use Type
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  predicate lit_not_in_less [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 143 4 52] (self : Type.creusat_trail_trail) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 143 4 52] LitNotInLessInner0.lit_not_in_less_inner (Model0.model (Type.creusat_trail_trail_Trail_trail self)) f
end
module CreuSat_Logic_LogicTrail_LitIsUniqueInner_Interface
  use seq.Seq
  use Type
  predicate lit_is_unique_inner (trail : Seq.seq (Type.creusat_trail_step))
end
module CreuSat_Logic_LogicTrail_LitIsUniqueInner
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate lit_is_unique_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 273 0 52] (trail : Seq.seq (Type.creusat_trail_step))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 273 0 52] forall i : (int) . 0 <= i && i < Seq.length trail -> (forall j : (int) . 0 <= j && j < i -> IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit (Seq.get trail j)) <> IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit (Seq.get trail i)))
end
module CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface
  use Type
  predicate lit_is_unique (self : Type.creusat_trail_trail)
end
module CreuSat_Logic_LogicTrail_Impl2_LitIsUnique
  use Type
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner_Interface as LitIsUniqueInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  predicate lit_is_unique [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 152 4 38] (self : Type.creusat_trail_trail)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 152 4 38] LitIsUniqueInner0.lit_is_unique_inner (Model0.model (Type.creusat_trail_trail_Trail_trail self))
end
module CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate trail_entries_are_assigned_inner (t : Seq.seq (Type.creusat_trail_step)) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner
  use seq.Seq
  use Type
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  predicate trail_entries_are_assigned_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 207 0 84] (t : Seq.seq (Type.creusat_trail_step)) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 207 0 84] forall j : (int) . 0 <= j && j < Seq.length t -> SatInner0.sat_inner (Type.creusat_trail_step_Step_lit (Seq.get t j)) a
end
module CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned_Interface
  use Type
  predicate trail_entries_are_assigned (self : Type.creusat_trail_trail)
end
module CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned
  use Type
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner_Interface as TrailEntriesAreAssignedInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  predicate trail_entries_are_assigned [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 129 4 51] (self : Type.creusat_trail_trail)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 129 4 51] TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner (Model0.model (Type.creusat_trail_trail_Trail_trail self)) (Model1.model (Type.creusat_trail_trail_Trail_assignments self))
end
module CreuSat_Logic_LogicUtil_SortedRange_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate sorted_range (s : Seq.seq usize) (l : int) (u : int)
end
module CreuSat_Logic_LogicUtil_SortedRange
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate sorted_range [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 20 0 58] (s : Seq.seq usize) (l : int) (u : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 20 0 58] forall j : (int) . forall i : (int) . l <= i && i < j && j < u -> Seq.get s i <= Seq.get s j
end
module CreuSat_Logic_LogicUtil_Sorted_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate sorted (s : Seq.seq usize)
end
module CreuSat_Logic_LogicUtil_Sorted
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  clone CreuSat_Logic_LogicUtil_SortedRange_Interface as SortedRange0
  predicate sorted [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 27 0 36] (s : Seq.seq usize) =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 27 0 36] SortedRange0.sorted_range s 0 (Seq.length s)
end
module CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted_Interface
  use Type
  predicate decisions_are_sorted (self : Type.creusat_trail_trail)
end
module CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted
  use Type
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  clone CreuSat_Logic_LogicUtil_Sorted_Interface as Sorted0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize, type a = Type.alloc_alloc_global,
  axiom .
  predicate decisions_are_sorted [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 136 4 45] (self : Type.creusat_trail_trail)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 136 4 45] Sorted0.sorted (Model0.model (Type.creusat_trail_trail_Trail_decisions self))
end
module CreuSat_Logic_LogicTrail_UnitAreSat_Interface
  use seq.Seq
  use Type
  predicate unit_are_sat (trail : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
    
end
module CreuSat_Logic_LogicTrail_UnitAreSat
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate unit_are_sat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 304 0 73] (trail : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 304 0 73] forall j : (int) . 0 <= j && j < Seq.length trail -> match (Type.creusat_trail_step_Step_reason (Seq.get trail j)) with
      | Type.CreuSat_Trail_Reason_Unit k -> Type.creusat_trail_step_Step_lit (Seq.get trail j) = Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k))) 0 && Sat0.sat (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k))) 0) a
      | _ -> true
      end
end
module CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision_Interface
  use Type
  predicate invariant_no_decision (self : Type.creusat_trail_trail) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision
  use Type
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  clone CreuSat_Logic_LogicTrail_UnitAreSat_Interface as UnitAreSat0
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted_Interface as DecisionsAreSorted0
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned_Interface as TrailEntriesAreAssigned0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant_Interface as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = usize, type a = Type.alloc_alloc_global,
  axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant0
  predicate invariant_no_decision [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 101 4 58] (self : Type.creusat_trail_trail) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 101 4 58] Invariant0.invariant' (Type.creusat_trail_trail_Trail_assignments self) f && TrailInvariant0.trail_invariant (Model0.model (Type.creusat_trail_trail_Trail_trail self)) f && LitToLevelInvariant0.lit_to_level_invariant (Model1.model (Type.creusat_trail_trail_Trail_lit_to_level self)) f && LitNotInLess0.lit_not_in_less self f && LitIsUnique0.lit_is_unique self && LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail self)) f (Model2.model (Type.creusat_trail_trail_Trail_assignments self)) && TrailEntriesAreAssigned0.trail_entries_are_assigned self && DecisionsAreSorted0.decisions_are_sorted self && UnitAreSat0.unit_are_sat (Model0.model (Type.creusat_trail_trail_Trail_trail self)) f (Type.creusat_trail_trail_Trail_assignments self)
end
module CreuSat_Logic_LogicTrail_DecisionsInvariant_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use Type
  predicate decisions_invariant (decisions : Seq.seq usize) (trail : Seq.seq (Type.creusat_trail_step))
end
module CreuSat_Logic_LogicTrail_DecisionsInvariant
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use Type
  use mach.int.Int32
  predicate decisions_invariant [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 181 0 75] (decisions : Seq.seq usize) (trail : Seq.seq (Type.creusat_trail_step))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 181 0 75] forall i : (int) . 0 <= i && i < Seq.length decisions -> UInt64.to_int (Seq.get decisions i) <= Seq.length trail
end
module CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface
  use Type
  predicate invariant' (self : Type.creusat_trail_trail) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_Impl2_Invariant
  use Type
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant_Interface as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize, type a = Type.alloc_alloc_global,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision_Interface as InvariantNoDecision0
  predicate invariant' [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 70 4 46] (self : Type.creusat_trail_trail) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 70 4 46] InvariantNoDecision0.invariant_no_decision self f && DecisionsInvariant0.decisions_invariant (Model0.model (Type.creusat_trail_trail_Trail_decisions self)) (Model1.model (Type.creusat_trail_trail_Trail_trail self))
end
module CreusotContracts_Logic_Int_Impl18_ModelTy
  use mach.int.Int
  type modelTy  =
    int
end
module CreusotContracts_Logic_Int_Impl18_Model_Interface
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  function model (self : usize) : int
end
module CreusotContracts_Logic_Int_Impl18_Model
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  function model (self : usize) : int =
    UInt64.to_int self
end
module CreuSat_ConflictAnalysis_Resolve_Interface
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model7
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model6 with type t = bool, type a = Type.alloc_alloc_global,
  axiom .
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange_Interface as VarsInRange0
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes_Interface as NoDuplicateIndexes0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy3
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model5 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy3.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_InFormula_Interface as InFormula0
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Logic_Int_Impl18_ModelTy as ModelTy2
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model4 with type t = usize,
  type ModelTy0.modelTy = ModelTy2.modelTy
  clone CreuSat_Logic_LogicLit_IdxInLogic2_Interface as IdxInLogic20
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy1 with type t = bool, type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model2 with type t = Type.alloc_vec_vec bool (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy1.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept_Interface as SameIdxSamePolarityExcept0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner1
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model3 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  val resolve [@cfg:stackify] (_f : Type.creusat_formula_formula) (c : borrowed (Type.creusat_clause_clause)) (o : Type.creusat_clause_clause) (idx : usize) (c_idx : usize) (trail : Type.creusat_trail_trail) (seen : borrowed (Type.alloc_vec_vec bool (Type.alloc_alloc_global))) (path_c : borrowed usize) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 56 0 38] Invariant0.invariant' o (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 55 0 38] Invariant0.invariant' ( * c) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 54 0 46] UnsatInner0.unsat_inner ( * c) (Model0.model (Type.creusat_trail_trail_Trail_assignments trail))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 53 0 96] forall j : (int) . 1 <= j && j < Seq.length (Model1.model o) -> UnsatInner1.unsat_inner (Seq.get (Model1.model o) j) (Model0.model (Type.creusat_trail_trail_Trail_assignments trail))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 52 0 50] SatInner0.sat_inner (Seq.get (Model1.model o) 0) (Model0.model (Type.creusat_trail_trail_Trail_assignments trail))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 51 0 50] PostUnitInner0.post_unit_inner o (Model0.model (Type.creusat_trail_trail_Trail_assignments trail))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 50 0 32] UInt64.to_int idx < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 49 0 54] SameIdxSamePolarityExcept0.same_idx_same_polarity_except ( * c) o (UInt64.to_int idx)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 47 0 42] Seq.length (Model2.model seen) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 43 0 46] forall idx : (int) . 0 <= idx && idx < Seq.length (Model2.model seen) -> Seq.get (Model2.model seen) idx = IdxInLogic20.idx_in_logic2 idx (Model3.model c)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 41 0 49] Model4.model path_c > 0 && Model4.model path_c <= Seq.length (Model3.model c)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 39 0 79] forall k : (int) . forall j : (int) . 0 <= j && j < Seq.length (Model1.model o) && 0 <= k && k < Seq.length (Model3.model c) && k <> UInt64.to_int c_idx && IndexLogic0.index_logic (Seq.get (Model1.model o) j) <> UInt64.to_int idx -> not IsOpp0.is_opp (Seq.get (Model3.model c) k) (Seq.get (Model1.model o) j)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 35 0 2] UInt64.to_int c_idx < Seq.length (Model3.model c) && IndexLogic0.index_logic (Seq.get (Model3.model c) (UInt64.to_int c_idx)) = UInt64.to_int idx && IsOpp0.is_opp (Seq.get (Model1.model o) 0) (Seq.get (Model3.model c) (UInt64.to_int c_idx))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 34 0 30] InFormula0.in_formula o _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 33 0 45] EquisatExtensionInner0.equisat_extension_inner ( * c) (Model5.model _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 32 0 33] Invariant1.invariant' trail _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 31 0 27] Invariant2.invariant' _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 61 0 44] EquisatExtensionInner0.equisat_extension_inner ( ^ c) (Model5.model _f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 60 0 40] Invariant0.invariant' ( ^ c) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 59 0 39] NoDuplicateIndexes0.no_duplicate_indexes ( ^ c) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 58 0 44] VarsInRange0.vars_in_range ( ^ c) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 57 0 48] UnsatInner0.unsat_inner ( ^ c) (Model0.model (Type.creusat_trail_trail_Trail_assignments trail)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 48 0 42] Seq.length (Model6.model ( ^ seen)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 45 0 48] forall idx : (int) . 0 <= idx && idx < Seq.length (Model6.model ( ^ seen)) -> Seq.get (Model6.model ( ^ seen)) idx = IdxInLogic20.idx_in_logic2 idx (Model7.model ( ^ c)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 42 0 35] UInt64.to_int ( ^ path_c) <= Seq.length (Model7.model ( ^ c)) }
    
end
module CreuSat_ConflictAnalysis_Resolve
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model14 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model7 with function Model0.model = Model14.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model13 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model12 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model12.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy3
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model10.model,
  function Model1.model = Model7.model
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model11 with function Model0.model = Model10.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model5 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy3.modelTy, function Model0.model = Model11.model
  clone CreuSat_Logic_LogicClause_Impl2_InFormula as InFormula0 with function Model0.model = Model10.model
  clone CreusotContracts_Logic_Int_Impl18_Model as Model9
  clone CreusotContracts_Logic_Int_Impl18_ModelTy as ModelTy2
  clone CreusotContracts_Logic_Model_Impl1_Model as Model4 with type t = usize,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model9.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = bool, type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy1 with type t = bool, type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl1_Model as Model2 with type t = Type.alloc_vec_vec bool (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model6.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model10.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model13.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model13.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant4.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with function Model0.model = Model7.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model7.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model10.model,
  predicate Invariant0.invariant' = Invariant0.invariant', function Model1.model = Model7.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicClause_Impl2_NoDuplicateIndexes as NoDuplicateIndexes0 with function Model0.model = Model7.model,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_IdxInLogic2 as IdxInLogic20 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept as SameIdxSamePolarityExcept0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model10.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner as PostUnitInner0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model3 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model7.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model1 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model7.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model0 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model10.model,
  function Model1.model = Model7.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model13.model,
  function Model1.model = Model0.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model13.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model12.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model0.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model12.model, function Model1.model = Model13.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  val resolve [@cfg:stackify] (_f : Type.creusat_formula_formula) (c : borrowed (Type.creusat_clause_clause)) (o : Type.creusat_clause_clause) (idx : usize) (c_idx : usize) (trail : Type.creusat_trail_trail) (seen : borrowed (Type.alloc_vec_vec bool (Type.alloc_alloc_global))) (path_c : borrowed usize) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 56 0 38] Invariant0.invariant' o (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 55 0 38] Invariant0.invariant' ( * c) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 54 0 46] UnsatInner0.unsat_inner ( * c) (Model0.model (Type.creusat_trail_trail_Trail_assignments trail))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 53 0 96] forall j : (int) . 1 <= j && j < Seq.length (Model1.model o) -> UnsatInner1.unsat_inner (Seq.get (Model1.model o) j) (Model0.model (Type.creusat_trail_trail_Trail_assignments trail))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 52 0 50] SatInner0.sat_inner (Seq.get (Model1.model o) 0) (Model0.model (Type.creusat_trail_trail_Trail_assignments trail))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 51 0 50] PostUnitInner0.post_unit_inner o (Model0.model (Type.creusat_trail_trail_Trail_assignments trail))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 50 0 32] UInt64.to_int idx < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 49 0 54] SameIdxSamePolarityExcept0.same_idx_same_polarity_except ( * c) o (UInt64.to_int idx)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 47 0 42] Seq.length (Model2.model seen) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 43 0 46] forall idx : (int) . 0 <= idx && idx < Seq.length (Model2.model seen) -> Seq.get (Model2.model seen) idx = IdxInLogic20.idx_in_logic2 idx (Model3.model c)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 41 0 49] Model4.model path_c > 0 && Model4.model path_c <= Seq.length (Model3.model c)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 39 0 79] forall k : (int) . forall j : (int) . 0 <= j && j < Seq.length (Model1.model o) && 0 <= k && k < Seq.length (Model3.model c) && k <> UInt64.to_int c_idx && IndexLogic0.index_logic (Seq.get (Model1.model o) j) <> UInt64.to_int idx -> not IsOpp0.is_opp (Seq.get (Model3.model c) k) (Seq.get (Model1.model o) j)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 35 0 2] UInt64.to_int c_idx < Seq.length (Model3.model c) && IndexLogic0.index_logic (Seq.get (Model3.model c) (UInt64.to_int c_idx)) = UInt64.to_int idx && IsOpp0.is_opp (Seq.get (Model1.model o) 0) (Seq.get (Model3.model c) (UInt64.to_int c_idx))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 34 0 30] InFormula0.in_formula o _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 33 0 45] EquisatExtensionInner0.equisat_extension_inner ( * c) (Model5.model _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 32 0 33] Invariant1.invariant' trail _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 31 0 27] Invariant2.invariant' _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 61 0 44] EquisatExtensionInner0.equisat_extension_inner ( ^ c) (Model5.model _f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 60 0 40] Invariant0.invariant' ( ^ c) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 59 0 39] NoDuplicateIndexes0.no_duplicate_indexes ( ^ c) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 58 0 44] VarsInRange0.vars_in_range ( ^ c) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 57 0 48] UnsatInner0.unsat_inner ( ^ c) (Model0.model (Type.creusat_trail_trail_Trail_assignments trail)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 48 0 42] Seq.length (Model6.model ( ^ seen)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 45 0 48] forall idx : (int) . 0 <= idx && idx < Seq.length (Model6.model ( ^ seen)) -> Seq.get (Model6.model ( ^ seen)) idx = IdxInLogic20.idx_in_logic2 idx (Model7.model ( ^ c)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 42 0 35] UInt64.to_int ( ^ path_c) <= Seq.length (Model7.model ( ^ c)) }
    
end
module CreuSat_Logic_LogicClause_Impl2_Unsat_Interface
  use Type
  predicate unsat (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicClause_Impl2_Unsat
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate unsat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 221 4 46] (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 221 4 46] UnsatInner0.unsat_inner self (Model0.model a)
end
module CreuSat_ConflictAnalysis_ChooseLiteral_Interface
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use Type
  use prelude.Prelude
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy2
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model3 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy2.modelTy
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Logic_Int_Impl18_ModelTy as ModelTy1
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = usize,
  type ModelTy0.modelTy = ModelTy1.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = bool, type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.alloc_vec_vec bool (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy
  val choose_literal [@cfg:stackify] (c : Type.creusat_clause_clause) (trail : Type.creusat_trail_trail) (i : borrowed usize) (_f : Type.creusat_formula_formula) (seen : Type.alloc_vec_vec bool (Type.alloc_alloc_global)) : Type.core_option_option usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 142 0 42] Seq.length (Model0.model seen) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 141 0 39] Model1.model i <= Seq.length (Model2.model (Type.creusat_trail_trail_Trail_trail trail))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 140 0 39] Unsat0.unsat c (Type.creusat_trail_trail_Trail_assignments trail)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 139 0 33] Invariant0.invariant' trail _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 143 0 3] match (result) with
      | Type.Core_Option_Option_Some r -> UInt64.to_int r < Seq.length (Model3.model c) && IsOpp0.is_opp (Seq.get (Model3.model c) (UInt64.to_int r)) (Type.creusat_trail_step_Step_lit (Seq.get (Model2.model (Type.creusat_trail_trail_Trail_trail trail)) (UInt64.to_int ( ^ i)))) && IndexLogic0.index_logic (Seq.get (Model3.model c) (UInt64.to_int r)) = IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit (Seq.get (Model2.model (Type.creusat_trail_trail_Trail_trail trail)) (UInt64.to_int ( ^ i)))) && UInt64.to_int ( ^ i) < Seq.length (Model2.model (Type.creusat_trail_trail_Trail_trail trail))
      | Type.Core_Option_Option_None -> UInt64.to_int ( ^ i) = 0
      end }
    
end
module CreuSat_ConflictAnalysis_ChooseLiteral
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use Type
  use prelude.Prelude
  use mach.int.Int32
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model11 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model8 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant4 with function Model0.model = Model11.model,
  function Model1.model = Model8.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant2 with predicate Invariant0.invariant' = Invariant3.invariant',
  predicate Invariant1.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant2.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model11.model,
  function Model1.model = Model8.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model8.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model11.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model8.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model11.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model8.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp as IsOpp0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy2
  clone CreusotContracts_Logic_Model_Impl0_Model as Model3 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model8.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model7.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model2.model,
  function Model1.model = Model6.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model2.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model2.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant1.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model7.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant0 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model7.model, function Model1.model = Model2.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreusotContracts_Logic_Int_Impl18_Model as Model5
  clone CreusotContracts_Logic_Int_Impl18_ModelTy as ModelTy1
  clone CreusotContracts_Logic_Model_Impl1_Model as Model1 with type t = usize,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model5.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = bool, type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = bool, type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.alloc_vec_vec bool (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model4.model
  val choose_literal [@cfg:stackify] (c : Type.creusat_clause_clause) (trail : Type.creusat_trail_trail) (i : borrowed usize) (_f : Type.creusat_formula_formula) (seen : Type.alloc_vec_vec bool (Type.alloc_alloc_global)) : Type.core_option_option usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 142 0 42] Seq.length (Model0.model seen) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 141 0 39] Model1.model i <= Seq.length (Model2.model (Type.creusat_trail_trail_Trail_trail trail))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 140 0 39] Unsat0.unsat c (Type.creusat_trail_trail_Trail_assignments trail)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 139 0 33] Invariant0.invariant' trail _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 143 0 3] match (result) with
      | Type.Core_Option_Option_Some r -> UInt64.to_int r < Seq.length (Model3.model c) && IsOpp0.is_opp (Seq.get (Model3.model c) (UInt64.to_int r)) (Type.creusat_trail_step_Step_lit (Seq.get (Model2.model (Type.creusat_trail_trail_Trail_trail trail)) (UInt64.to_int ( ^ i)))) && IndexLogic0.index_logic (Seq.get (Model3.model c) (UInt64.to_int r)) = IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit (Seq.get (Model2.model (Type.creusat_trail_trail_Trail_trail trail)) (UInt64.to_int ( ^ i)))) && UInt64.to_int ( ^ i) < Seq.length (Model2.model (Type.creusat_trail_trail_Trail_trail trail))
      | Type.Core_Option_Option_None -> UInt64.to_int ( ^ i) = 0
      end }
    
end
module CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface
  use Type
  predicate not_satisfiable (self : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable
  use Type
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension_Interface as EquisatExtension0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate not_satisfiable [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 219 4 40] (self : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 219 4 40] exists c : (Type.creusat_clause_clause) . Seq.length (Model0.model c) = 0 && EquisatExtension0.equisat_extension c self
end
module CreuSat_ConflictAnalysis_AnalyzeConflict_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use Type
  use mach.int.Int32
  use prelude.Prelude
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model2 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  val analyze_conflict [@cfg:stackify] (f : Type.creusat_formula_formula) (trail : Type.creusat_trail_trail) (cref : usize) : Type.creusat_conflictanalysis_conflict
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 178 0 57] Unsat0.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref)) (Type.creusat_trail_trail_Trail_assignments trail)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 177 0 39] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 176 0 32] Invariant0.invariant' trail f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 175 0 26] Invariant1.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 179 0 3] match (result) with
      | Type.CreuSat_ConflictAnalysis_Conflict_Ground -> NotSatisfiable0.not_satisfiable f
      | Type.CreuSat_ConflictAnalysis_Conflict_Unit clause -> Invariant2.invariant' clause (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) && Seq.length (Model1.model clause) = 1 && VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) && NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause) && EquisatExtensionInner0.equisat_extension_inner clause (Model2.model f)
      | Type.CreuSat_ConflictAnalysis_Conflict_Learned s_idx clause -> Invariant2.invariant' clause (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) && Seq.length (Model1.model clause) > 1 && VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) && NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause) && EquisatExtensionInner0.equisat_extension_inner clause (Model2.model f) && UInt64.to_int s_idx < Seq.length (Model1.model clause)
      | _ -> true
      end }
    
end
module CreuSat_ConflictAnalysis_AnalyzeConflict
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use Type
  use mach.int.Int32
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model3 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner1.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model1.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with function Model0.model = Model3.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model5.model,
  function Model1.model = Model3.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model5.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model4.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant3.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model5.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model5.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant0 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model4.model, function Model1.model = Model5.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model7 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model7.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model1.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreusotContracts_Logic_Model_Impl0_Model as Model2 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model7.model
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  val analyze_conflict [@cfg:stackify] (f : Type.creusat_formula_formula) (trail : Type.creusat_trail_trail) (cref : usize) : Type.creusat_conflictanalysis_conflict
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 178 0 57] Unsat0.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref)) (Type.creusat_trail_trail_Trail_assignments trail)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 177 0 39] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 176 0 32] Invariant0.invariant' trail f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 175 0 26] Invariant1.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/conflict_analysis.rs" 179 0 3] match (result) with
      | Type.CreuSat_ConflictAnalysis_Conflict_Ground -> NotSatisfiable0.not_satisfiable f
      | Type.CreuSat_ConflictAnalysis_Conflict_Unit clause -> Invariant2.invariant' clause (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) && Seq.length (Model1.model clause) = 1 && VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) && NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause) && EquisatExtensionInner0.equisat_extension_inner clause (Model2.model f)
      | Type.CreuSat_ConflictAnalysis_Conflict_Learned s_idx clause -> Invariant2.invariant' clause (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) && Seq.length (Model1.model clause) > 1 && VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) && NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause) && EquisatExtensionInner0.equisat_extension_inner clause (Model2.model f) && UInt64.to_int s_idx < Seq.length (Model1.model clause)
      | _ -> true
      end }
    
end
module CreuSat_Decision_Impl2_Clone_Interface
  use prelude.Prelude
  use Type
  val clone' [@cfg:stackify] (self : Type.creusat_decision_node) : Type.creusat_decision_node
end
module CreuSat_Decision_Impl2_Clone
  use prelude.Prelude
  use Type
  let rec cfg clone' [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 11 9 14] (self : Type.creusat_decision_node) : Type.creusat_decision_node
    
   =
  var _0 : Type.creusat_decision_node;
  var self_1 : Type.creusat_decision_node;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _0 <- self_1;
    return _0
  }
  
end
module CreuSat_Decision_Impl0_Default_Interface
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  val default [@cfg:stackify] (_ : ()) : Type.creusat_decision_node
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 23 4 33] UInt64.to_int (Type.creusat_decision_node_Node_ts result) = 0 }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 22 4 43] UInt64.to_int (Type.creusat_decision_node_Node_prev result) = 18446744073709551615 }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 21 4 43] UInt64.to_int (Type.creusat_decision_node_Node_next result) = 18446744073709551615 }
    
end
module CreuSat_Decision_Impl0_Default
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  let rec cfg default [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 24 4 24] (_ : ()) : Type.creusat_decision_node
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 23 4 33] UInt64.to_int (Type.creusat_decision_node_Node_ts result) = 0 }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 22 4 43] UInt64.to_int (Type.creusat_decision_node_Node_prev result) = 18446744073709551615 }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 21 4 43] UInt64.to_int (Type.creusat_decision_node_Node_next result) = 18446744073709551615 }
    
   =
  var _0 : Type.creusat_decision_node;
  {
    goto BB0
  }
  BB0 {
    _0 <- Type.CreuSat_Decision_Node (18446744073709551615 : usize) (18446744073709551615 : usize) (0 : usize);
    return _0
  }
  
end
module CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface
  use Type
  use mach.int.Int
  predicate invariant' (self : Type.creusat_decision_decisions) (n : int)
end
module CreuSat_Logic_LogicDecision_Impl0_Invariant
  use Type
  use mach.int.Int
  use seq.Seq
  use mach.int.UInt64
  use prelude.Prelude
  use mach.int.Int32
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  predicate invariant' [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_decision.rs" 9 4 42] (self : Type.creusat_decision_decisions) (n : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_decision.rs" 9 4 42] Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list self)) = n && (UInt64.to_int (Type.creusat_decision_decisions_Decisions_search self) < Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list self)) || UInt64.to_int (Type.creusat_decision_decisions_Decisions_search self) = 18446744073709551615) && UInt64.to_int (Type.creusat_decision_decisions_Decisions_start self) < Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list self)) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list self)) -> (UInt64.to_int (Type.creusat_decision_node_Node_next (Seq.get (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list self)) i)) = 18446744073709551615 || UInt64.to_int (Type.creusat_decision_node_Node_next (Seq.get (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list self)) i)) < n) && (UInt64.to_int (Type.creusat_decision_node_Node_prev (Seq.get (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list self)) i)) = 18446744073709551615 || UInt64.to_int (Type.creusat_decision_node_Node_prev (Seq.get (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list self)) i)) < n))
end
module CreuSat_Decision_Impl1_MakeLinkedList_Interface
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize, type a = Type.alloc_alloc_global,
  axiom .
  val make_linked_list [@cfg:stackify] (f : Type.creusat_formula_formula) (lit_order : Type.alloc_vec_vec usize (Type.alloc_alloc_global)) : Type.creusat_decision_decisions
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 42 4 48] Seq.length (Model0.model lit_order) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model lit_order) -> UInt64.to_int (Seq.get (Model0.model lit_order) i) < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 41 4 63] 0 < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) && UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 40 4 30] Invariant0.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 45 4 45] Invariant1.invariant' result (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl1_MakeLinkedList
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model1.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  val make_linked_list [@cfg:stackify] (f : Type.creusat_formula_formula) (lit_order : Type.alloc_vec_vec usize (Type.alloc_alloc_global)) : Type.creusat_decision_decisions
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 42 4 48] Seq.length (Model0.model lit_order) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model lit_order) -> UInt64.to_int (Seq.get (Model0.model lit_order) i) < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 41 4 63] 0 < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) && UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 40 4 30] Invariant0.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 45 4 45] Invariant1.invariant' result (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl1_New_Interface
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  val new [@cfg:stackify] (f : Type.creusat_formula_formula) : Type.creusat_decision_decisions
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 81 4 63] 0 < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) && UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 80 4 30] Invariant0.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 82 4 45] Invariant1.invariant' result (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl1_New
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model2 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model2.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model1.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model0.model
  val new [@cfg:stackify] (f : Type.creusat_formula_formula) : Type.creusat_decision_decisions
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 81 4 63] 0 < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) && UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 80 4 30] Invariant0.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 82 4 45] Invariant1.invariant' result (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl1_Rescore_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  val rescore [@cfg:stackify] (self : borrowed (Type.creusat_decision_decisions)) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 132 4 56] Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list ( * self))) < 18446744073709551615}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 131 4 52] Invariant0.invariant' ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 134 4 73] Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list ( ^ self))) = Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 133 4 67] UInt64.to_int (Type.creusat_decision_decisions_Decisions_timestamp ( ^ self)) = Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list ( * self))) + 1 }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 131 4 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Decision_Impl1_Rescore
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model
  val rescore [@cfg:stackify] (self : borrowed (Type.creusat_decision_decisions)) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 132 4 56] Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list ( * self))) < 18446744073709551615}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 131 4 52] Invariant0.invariant' ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 134 4 73] Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list ( ^ self))) = Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 133 4 67] UInt64.to_int (Type.creusat_decision_decisions_Decisions_timestamp ( ^ self)) = Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list ( * self))) + 1 }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 131 4 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Decision_Impl1_MoveToFront_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  val move_to_front [@cfg:stackify] (self : borrowed (Type.creusat_decision_decisions)) (tomove : usize) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 163 4 52] Invariant0.invariant' ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 162 4 52] UInt64.to_int tomove < Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 161 4 43] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f) < 18446744073709551615}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 163 4 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Decision_Impl1_MoveToFront
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model
  val move_to_front [@cfg:stackify] (self : borrowed (Type.creusat_decision_decisions)) (tomove : usize) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 163 4 52] Invariant0.invariant' ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 162 4 52] UInt64.to_int tomove < Seq.length (Model0.model (Type.creusat_decision_decisions_Decisions_linked_list ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 161 4 43] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f) < 18446744073709551615}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 163 4 52] Invariant0.invariant' ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Decision_Impl1_IncrementAndMove_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  val increment_and_move [@cfg:stackify] (self : borrowed (Type.creusat_decision_decisions)) (f : Type.creusat_formula_formula) (cref : usize) (a : Type.creusat_assignments_assignments) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 204 4 51] Invariant0.invariant' ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 203 4 43] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 202 4 32] Invariant1.invariant' a f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 201 4 30] Invariant2.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 200 4 42] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < 18446744073709551615}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 204 4 51] Invariant0.invariant' ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    
end
module CreuSat_Decision_Impl1_IncrementAndMove
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant4 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model4 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model4.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model2 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model2.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model4.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model1.model
  val increment_and_move [@cfg:stackify] (self : borrowed (Type.creusat_decision_decisions)) (f : Type.creusat_formula_formula) (cref : usize) (a : Type.creusat_assignments_assignments) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 204 4 51] Invariant0.invariant' ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 203 4 43] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 202 4 32] Invariant1.invariant' a f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 201 4 30] Invariant2.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 200 4 42] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < 18446744073709551615}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 204 4 51] Invariant0.invariant' ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    
end
module CreuSat_Logic_LogicAssignments_Impl1_Complete_Interface
  use Type
  predicate complete (self : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicAssignments_Impl1_Complete
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate complete [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 72 4 33] (self : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 72 4 33] forall i : (int) . 0 <= i && i < Seq.length (Model0.model self) -> not Unset0.unset (Seq.get (Model0.model self) i)
end
module CreuSat_Decision_Impl1_GetNext_Interface
  use mach.int.UInt64
  use Type
  use mach.int.Int
  use prelude.Prelude
  use seq.Seq
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete_Interface as Complete0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant0
  val get_next [@cfg:stackify] (self : borrowed (Type.creusat_decision_decisions)) (a : Type.creusat_assignments_assignments) (_f : Type.creusat_formula_formula) : Type.core_option_option usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 236 4 33] Invariant0.invariant' a _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 235 4 52] Invariant1.invariant' ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 237 4 7] match (result) with
      | Type.Core_Option_Option_Some k -> UInt64.to_int k < Seq.length (Model0.model a) && Unset0.unset (Seq.get (Model0.model a) (UInt64.to_int k))
      | Type.Core_Option_Option_None -> Complete0.complete a
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 235 4 52] Invariant1.invariant' ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Decision_Impl1_GetNext
  use mach.int.UInt64
  use Type
  use mach.int.Int
  use prelude.Prelude
  use seq.Seq
  use prelude.UInt8
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant0 with function Model0.model = Model1.model
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete as Complete0 with function Model0.model = Model1.model,
  predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model2.model
  val get_next [@cfg:stackify] (self : borrowed (Type.creusat_decision_decisions)) (a : Type.creusat_assignments_assignments) (_f : Type.creusat_formula_formula) : Type.core_option_option usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 236 4 33] Invariant0.invariant' a _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 235 4 52] Invariant1.invariant' ( * self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 237 4 7] match (result) with
      | Type.Core_Option_Option_Some k -> UInt64.to_int k < Seq.length (Model0.model a) && Unset0.unset (Seq.get (Model0.model a) (UInt64.to_int k))
      | Type.Core_Option_Option_None -> Complete0.complete a
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/decision.rs" 235 4 52] Invariant1.invariant' ( ^ self) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)) }
    
end
module CreuSat_Formula_Impl0_CheckFormulaInvariant_Interface
  use Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Interface as FormulaSatInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = uint8, type a = Type.alloc_alloc_global,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val check_formula_invariant [@cfg:stackify] (self : Type.creusat_formula_formula) : Type.creusat_solver_satresult
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 26 4 7] match (result) with
      | Type.CreuSat_Solver_SatResult_Sat assn -> FormulaSatInner0.formula_sat_inner (Model0.model self) (Model1.model assn)
      | Type.CreuSat_Solver_SatResult_Unsat -> NotSatisfiable0.not_satisfiable self
      | Type.CreuSat_Solver_SatResult_Unknown -> Invariant0.invariant' self && 0 < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars self) && UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars self) < div 18446744073709551615 2
      | Type.CreuSat_Solver_SatResult_Err -> true
      end }
    
end
module CreuSat_Formula_Impl0_CheckFormulaInvariant
  use Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant2.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant1 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model4.model,
  predicate Invariant0.invariant' = Invariant1.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model2.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model3.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model2.model
  val check_formula_invariant [@cfg:stackify] (self : Type.creusat_formula_formula) : Type.creusat_solver_satresult
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 26 4 7] match (result) with
      | Type.CreuSat_Solver_SatResult_Sat assn -> FormulaSatInner0.formula_sat_inner (Model0.model self) (Model1.model assn)
      | Type.CreuSat_Solver_SatResult_Unsat -> NotSatisfiable0.not_satisfiable self
      | Type.CreuSat_Solver_SatResult_Unknown -> Invariant0.invariant' self && 0 < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars self) && UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars self) < div 18446744073709551615 2
      | Type.CreuSat_Solver_SatResult_Err -> true
      end }
    
end
module CreuSat_Logic_LogicClause_Impl2_Sat_Interface
  use Type
  predicate sat (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicClause_Impl2_Sat
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate sat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 236 4 44] (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 236 4 44] SatInner0.sat_inner self (Model0.model a)
end
module CreuSat_Formula_Impl0_IsClauseSat_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  val is_clause_sat [@cfg:stackify] (self : Type.creusat_formula_formula) (idx : usize) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 60 4 45] UInt64.to_int idx < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses self))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 59 4 35] Invariant0.invariant' a self}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 58 4 33] Invariant1.invariant' self}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 61 4 55] result = Sat0.sat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) (UInt64.to_int idx)) a }
    
end
module CreuSat_Formula_Impl0_IsClauseSat
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl2_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant0 with function Model0.model = Model1.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  val is_clause_sat [@cfg:stackify] (self : Type.creusat_formula_formula) (idx : usize) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 60 4 45] UInt64.to_int idx < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses self))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 59 4 35] Invariant0.invariant' a self}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 58 4 33] Invariant1.invariant' self}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 61 4 55] result = Sat0.sat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) (UInt64.to_int idx)) a }
    
end
module CreuSat_Logic_LogicWatches_WatchesInvariantInternal_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  predicate watches_invariant_internal (w : Seq.seq (Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global))) (n : int) (f : Type.creusat_formula_formula)
    
end
module CreuSat_Logic_LogicWatches_WatchesInvariantInternal
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model2
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  predicate watches_invariant_internal [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 11 0 83] (w : Seq.seq (Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global))) (n : int) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 11 0 83] 2 * n = Seq.length w && (forall i : (int) . 0 <= i && i < Seq.length w -> (forall j : (int) . 0 <= j && j < Seq.length (Model0.model (Seq.get w i)) -> UInt64.to_int (Type.creusat_watches_watcher_Watcher_cref (Seq.get (Model0.model (Seq.get w i)) j)) < Seq.length (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) && Seq.length (Model2.model (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int (Type.creusat_watches_watcher_Watcher_cref (Seq.get (Model0.model (Seq.get w i)) j))))) > 1 && IndexLogic0.index_logic (Type.creusat_watches_watcher_Watcher_blocker (Seq.get (Model0.model (Seq.get w i)) j)) < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)))
end
module CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface
  use Type
  predicate invariant' (self : Type.creusat_watches_watches) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicWatches_Impl0_Invariant
  use Type
  use mach.int.UInt64
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal_Interface as WatchesInvariantInternal0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  predicate invariant' [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 55 4 46] (self : Type.creusat_watches_watches) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 55 4 46] WatchesInvariantInternal0.watches_invariant_internal (Model0.model (Type.creusat_watches_watches_Watches_watches self)) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) f
end
module CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate sat_inner (self : Type.creusat_formula_formula) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicFormula_Impl1_SatInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicClause_Impl2_SatInner_Interface as SatInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate sat_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 186 4 57] (self : Type.creusat_formula_formula) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 186 4 57] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) -> SatInner0.sat_inner (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) i) a
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss_Interface
  use Type
  predicate eventually_sat_complete_no_ass (self : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.UInt64
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  predicate eventually_sat_complete_no_ass [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 94 4 55] (self : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 94 4 55] exists a2 : (Seq.seq uint8) . Seq.length a2 = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars self) && CompleteInner0.complete_inner a2 && SatInner0.sat_inner self a2
end
module CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface
  use Type
  predicate equisat (self : Type.creusat_formula_formula) (o : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicFormula_Impl1_Equisat
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  predicate equisat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 100 4 44] (self : Type.creusat_formula_formula) (o : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 100 4 44] EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass self = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass o
end
module CreuSat_Formula_Impl0_AddClause_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use seq.Seq
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val add_clause [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (clause : Type.creusat_clause_clause) (watches : borrowed (Type.creusat_watches_watches)) (_t : Type.creusat_trail_trail) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 130 4 55] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 129 4 52] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 128 4 61] VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 127 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 126 4 37] Seq.length (Model1.model clause) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 125 4 51] Invariant0.invariant' ( * watches) ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 124 4 40] Invariant1.invariant' _t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 123 4 40] Invariant2.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 136 4 69] Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 135 4 53] Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) (UInt64.to_int result) = clause }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 134 4 48] UInt64.to_int result = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 133 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 131 4 51] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 125 4 51] Invariant0.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 124 4 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 123 4 40] Invariant2.invariant' ( ^ self) }
    
end
module CreuSat_Formula_Impl0_AddClause
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use seq.Seq
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model9 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model9.model
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model6.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model9.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model7.model,
  function Model1.model = Model9.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model7.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model2.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant6 with predicate Invariant0.invariant' = Invariant3.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model7.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model7.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model6.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model9.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model6.model, function Model1.model = Model7.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model8.model,
  function Model1.model = Model2.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model5.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model3.model
  val add_clause [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (clause : Type.creusat_clause_clause) (watches : borrowed (Type.creusat_watches_watches)) (_t : Type.creusat_trail_trail) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 130 4 55] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 129 4 52] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 128 4 61] VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 127 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 126 4 37] Seq.length (Model1.model clause) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 125 4 51] Invariant0.invariant' ( * watches) ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 124 4 40] Invariant1.invariant' _t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 123 4 40] Invariant2.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 136 4 69] Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 135 4 53] Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) (UInt64.to_int result) = clause }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 134 4 48] UInt64.to_int result = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 133 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 131 4 51] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 125 4 51] Invariant0.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 124 4 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 123 4 40] Invariant2.invariant' ( ^ self) }
    
end
module CreuSat_Formula_Impl0_AddUnwatchedClause_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use seq.Seq
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val add_unwatched_clause [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (clause : Type.creusat_clause_clause) (watches : borrowed (Type.creusat_watches_watches)) (_t : Type.creusat_trail_trail) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 166 4 55] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 165 4 52] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 164 4 61] VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 163 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 162 4 37] Seq.length (Model1.model clause) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 161 4 51] Invariant0.invariant' ( * watches) ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 160 4 40] Invariant1.invariant' _t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 159 4 40] Invariant2.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 172 4 69] Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 171 4 53] Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) (UInt64.to_int result) = clause }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 170 4 48] UInt64.to_int result = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 169 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 167 4 51] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 161 4 51] Invariant0.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 160 4 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 159 4 40] Invariant2.invariant' ( ^ self) }
    
end
module CreuSat_Formula_Impl0_AddUnwatchedClause
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use seq.Seq
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model9 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model9.model
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model6.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model9.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model7.model,
  function Model1.model = Model9.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model7.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model2.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant6 with predicate Invariant0.invariant' = Invariant3.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model7.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model7.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model6.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model9.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model6.model, function Model1.model = Model7.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model8.model,
  function Model1.model = Model2.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model5.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model3.model
  val add_unwatched_clause [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (clause : Type.creusat_clause_clause) (watches : borrowed (Type.creusat_watches_watches)) (_t : Type.creusat_trail_trail) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 166 4 55] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 165 4 52] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 164 4 61] VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 163 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 162 4 37] Seq.length (Model1.model clause) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 161 4 51] Invariant0.invariant' ( * watches) ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 160 4 40] Invariant1.invariant' _t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 159 4 40] Invariant2.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 172 4 69] Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 171 4 53] Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) (UInt64.to_int result) = clause }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 170 4 48] UInt64.to_int result = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 169 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 167 4 51] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 161 4 51] Invariant0.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 160 4 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 159 4 40] Invariant2.invariant' ( ^ self) }
    
end
module CreuSat_Logic_LogicClause_Impl2_Equals_Interface
  use Type
  predicate equals (self : Type.creusat_clause_clause) (o : Type.creusat_clause_clause)
end
module CreuSat_Logic_LogicClause_Impl2_Equals
  use Type
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate equals [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 275 4 42] (self : Type.creusat_clause_clause) (o : Type.creusat_clause_clause)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 275 4 42] Seq.length (Model0.model self) = Seq.length (Model0.model o) && (forall j : (int) . 0 <= j && j < Seq.length (Model0.model self) -> Seq.get (Model0.model self) j = Seq.get (Model0.model o) j)
end
module CreuSat_Logic_LogicFormula_Compatible_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  predicate compatible (f : (Seq.seq (Type.creusat_clause_clause), int)) (o : (Seq.seq (Type.creusat_clause_clause), int))
    
end
module CreuSat_Logic_LogicFormula_Compatible
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Interface as Equals0
  predicate compatible [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 64 0 71] (f : (Seq.seq (Type.creusat_clause_clause), int)) (o : (Seq.seq (Type.creusat_clause_clause), int))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 64 0 71] (let (_, a) = f in a) = (let (_, a) = o in a) && Seq.length (let (a, _) = o in a) >= Seq.length (let (a, _) = f in a) && (forall i : (int) . 0 <= i && i < Seq.length (let (a, _) = f in a) -> Equals0.equals (Seq.get (let (a, _) = f in a) i) (Seq.get (let (a, _) = o in a) i))
end
module CreuSat_Logic_LogicFormula_Equisat_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  predicate equisat (f : (Seq.seq (Type.creusat_clause_clause), int)) (o : (Seq.seq (Type.creusat_clause_clause), int))
end
module CreuSat_Logic_LogicFormula_Equisat
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  predicate equisat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 57 0 68] (f : (Seq.seq (Type.creusat_clause_clause), int)) (o : (Seq.seq (Type.creusat_clause_clause), int))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 57 0 68] EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass f = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass o
end
module CreuSat_Logic_LogicFormula_EquisatCompatibleInner_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  predicate equisat_compatible_inner (f : (Seq.seq (Type.creusat_clause_clause), int)) (o : (Seq.seq (Type.creusat_clause_clause), int))
    
end
module CreuSat_Logic_LogicFormula_EquisatCompatibleInner
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Compatible_Interface as Compatible0
  predicate equisat_compatible_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 84 0 85] (f : (Seq.seq (Type.creusat_clause_clause), int)) (o : (Seq.seq (Type.creusat_clause_clause), int))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 84 0 85] Compatible0.compatible f o && Equisat0.equisat f o
end
module CreuSat_Logic_LogicFormula_Impl1_EquisatCompatible_Interface
  use Type
  predicate equisat_compatible (self : Type.creusat_formula_formula) (o : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicFormula_Impl1_EquisatCompatible
  use Type
  clone CreuSat_Logic_LogicFormula_EquisatCompatibleInner_Interface as EquisatCompatibleInner0
  clone CreuSat_Logic_LogicFormula_Impl0_Model_Interface as Model0
  predicate equisat_compatible [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 127 4 55] (self : Type.creusat_formula_formula) (o : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 127 4 55] EquisatCompatibleInner0.equisat_compatible_inner (Model0.model self) (Model0.model o)
end
module CreuSat_Formula_Impl0_AddUnit_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use seq.Seq
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_EquisatCompatible_Interface as EquisatCompatible0
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val add_unit [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (clause : Type.creusat_clause_clause) (_t : Type.creusat_trail_trail) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 244 4 55] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 243 4 52] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 242 4 61] VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 241 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 240 4 49] Invariant0.invariant' clause (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 239 4 37] Seq.length (Model1.model clause) = 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 238 4 40] Invariant1.invariant' _t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 237 4 40] Invariant2.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 250 4 69] Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 249 4 57] Seq.length (Model1.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) (UInt64.to_int result))) = 1 }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 248 4 48] UInt64.to_int result = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 247 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 246 4 46] EquisatCompatible0.equisat_compatible ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 245 4 51] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 238 4 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 237 4 40] Invariant2.invariant' ( ^ self) }
    
end
module CreuSat_Formula_Impl0_AddUnit
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use seq.Seq
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model7 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model7.model
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model5.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model6.model,
  function Model1.model = Model7.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model6.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model2.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant3.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model6.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicClause_Impl2_Equals as Equals0 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Compatible as Compatible0 with predicate Equals0.equals = Equals0.equals
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicFormula_Equisat as Equisat1 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicFormula_EquisatCompatibleInner as EquisatCompatibleInner0 with predicate Compatible0.compatible = Compatible0.compatible,
  predicate Equisat0.equisat = Equisat1.equisat
  clone CreuSat_Logic_LogicFormula_Impl1_EquisatCompatible as EquisatCompatible0 with function Model0.model = Model3.model,
  predicate EquisatCompatibleInner0.equisat_compatible_inner = EquisatCompatibleInner0.equisat_compatible_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model6.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model7.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model5.model, function Model1.model = Model6.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant0.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model3.model
  val add_unit [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (clause : Type.creusat_clause_clause) (_t : Type.creusat_trail_trail) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 244 4 55] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 243 4 52] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 242 4 61] VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 241 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 240 4 49] Invariant0.invariant' clause (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 239 4 37] Seq.length (Model1.model clause) = 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 238 4 40] Invariant1.invariant' _t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 237 4 40] Invariant2.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 250 4 69] Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) + 1 = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 249 4 57] Seq.length (Model1.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ self))) (UInt64.to_int result))) = 1 }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 248 4 48] UInt64.to_int result = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 247 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 246 4 46] EquisatCompatible0.equisat_compatible ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 245 4 51] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 238 4 40] Invariant1.invariant' _t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 237 4 40] Invariant2.invariant' ( ^ self) }
    
end
module CreuSat_Logic_LogicFormula_Impl1_Sat_Interface
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate sat (self : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicFormula_Impl1_Sat
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate sat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 196 4 44] (self : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
    
  axiom sat_spec : forall self : Type.creusat_formula_formula, a : Type.creusat_assignments_assignments . [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 195 4 44] sat self a = SatInner0.sat_inner self (Model0.model a)
end
module CreuSat_Formula_Impl0_IsSat_Interface
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicFormula_Impl1_Sat_Interface as Sat0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant0
  val is_sat [@cfg:stackify] (self : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 262 4 35] Invariant0.invariant' a self}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 261 4 33] Invariant1.invariant' self}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 263 4 38] result = Sat0.sat self a }
    
end
module CreuSat_Formula_Impl0_IsSat
  use prelude.Prelude
  use Type
  use mach.int.Int
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model0 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Sat as Sat0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant0 with function Model0.model = Model0.model
  val is_sat [@cfg:stackify] (self : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 262 4 35] Invariant0.invariant' a self}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 261 4 33] Invariant1.invariant' self}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 263 4 38] result = Sat0.sat self a }
    
end
module CreuSat_Formula_Impl0_DeleteClause_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  val delete_clause [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (cref : usize) (watches : borrowed (Type.creusat_watches_watches)) (t : Type.creusat_trail_trail) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 282 4 46] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 281 4 52] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * self))) (UInt64.to_int cref))) > 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 280 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 279 4 42] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 278 4 40] Invariant1.invariant' ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 277 4 51] Invariant2.invariant' ( * watches) ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 284 4 49] Type.creusat_formula_formula_Formula_num_vars ( * self) = Type.creusat_formula_formula_Formula_num_vars ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 283 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 279 4 42] Invariant0.invariant' t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 278 4 40] Invariant1.invariant' ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 277 4 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    
end
module CreuSat_Formula_Impl0_DeleteClause
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model4.model,
  function Model1.model = Model6.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model4.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model3.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant0 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model3.model, function Model1.model = Model4.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model7.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model5.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  val delete_clause [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (cref : usize) (watches : borrowed (Type.creusat_watches_watches)) (t : Type.creusat_trail_trail) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 282 4 46] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 281 4 52] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * self))) (UInt64.to_int cref))) > 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 280 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 279 4 42] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 278 4 40] Invariant1.invariant' ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 277 4 51] Invariant2.invariant' ( * watches) ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 284 4 49] Type.creusat_formula_formula_Formula_num_vars ( * self) = Type.creusat_formula_formula_Formula_num_vars ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 283 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 279 4 42] Invariant0.invariant' t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 278 4 40] Invariant1.invariant' ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 277 4 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    
end
module CreuSat_Formula_Impl0_DeleteClauses_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  val delete_clauses [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (watches : borrowed (Type.creusat_watches_watches)) (t : Type.creusat_trail_trail) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 302 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 301 4 35] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 300 4 42] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 299 4 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 298 4 40] Invariant2.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 304 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 303 4 49] Type.creusat_formula_formula_Formula_num_vars ( * self) = Type.creusat_formula_formula_Formula_num_vars ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 300 4 42] Invariant0.invariant' t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 299 4 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 298 4 40] Invariant2.invariant' ( ^ self) }
    
end
module CreuSat_Formula_Impl0_DeleteClauses
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model8.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model5.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model5.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model5.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model4.model,
  function Model1.model = Model5.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model2.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model1.model,
  function Model1.model = Model3.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model1.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model1.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model0.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model1.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model0.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant0 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model0.model, function Model1.model = Model1.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  val delete_clauses [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (watches : borrowed (Type.creusat_watches_watches)) (t : Type.creusat_trail_trail) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 302 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 301 4 35] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 300 4 42] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 299 4 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 298 4 40] Invariant2.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 304 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 303 4 49] Type.creusat_formula_formula_Formula_num_vars ( * self) = Type.creusat_formula_formula_Formula_num_vars ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 300 4 42] Invariant0.invariant' t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 299 4 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 298 4 40] Invariant2.invariant' ( ^ self) }
    
end
module CreuSat_Formula_Impl0_SimplifyFormula_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  val simplify_formula [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (watches : borrowed (Type.creusat_watches_watches)) (t : Type.creusat_trail_trail) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 334 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 333 4 42] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 332 4 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 331 4 40] Invariant2.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 336 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 335 4 49] Type.creusat_formula_formula_Formula_num_vars ( * self) = Type.creusat_formula_formula_Formula_num_vars ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 333 4 42] Invariant0.invariant' t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 332 4 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 331 4 40] Invariant2.invariant' ( ^ self) }
    
end
module CreuSat_Formula_Impl0_SimplifyFormula
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model8.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model5.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model5.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model5.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model4.model,
  function Model1.model = Model5.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model2.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model1.model,
  function Model1.model = Model3.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model1.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model1.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model0.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model1.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model0.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant0 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model0.model, function Model1.model = Model1.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  val simplify_formula [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (watches : borrowed (Type.creusat_watches_watches)) (t : Type.creusat_trail_trail) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 334 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 333 4 42] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 332 4 51] Invariant1.invariant' ( * watches) ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 331 4 40] Invariant2.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 336 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 335 4 49] Type.creusat_formula_formula_Formula_num_vars ( * self) = Type.creusat_formula_formula_Formula_num_vars ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 333 4 42] Invariant0.invariant' t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 332 4 51] Invariant1.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 331 4 40] Invariant2.invariant' ( ^ self) }
    
end
module CreuSat_Formula_Impl0_ReduceDb_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  val reduceDB [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (watches : borrowed (Type.creusat_watches_watches)) (t : Type.creusat_trail_trail) (s : borrowed (Type.creusat_solver_solver)) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 349 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 348 4 35] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 347 4 33] Invariant1.invariant' ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 346 4 42] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 345 4 51] Invariant2.invariant' ( * watches) ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 344 4 40] Invariant1.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 351 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 350 4 49] Type.creusat_formula_formula_Formula_num_vars ( * self) = Type.creusat_formula_formula_Formula_num_vars ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 346 4 42] Invariant0.invariant' t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 345 4 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 344 4 40] Invariant1.invariant' ( ^ self) }
    
end
module CreuSat_Formula_Impl0_ReduceDb
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model5 with function Model0.model = Model8.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model5.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model4.model,
  function Model1.model = Model5.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model4.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model4.model,
  function Model1.model = Model5.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model6.model,
  function Model1.model = Model4.model, function Model2.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model4.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model2.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model1.model,
  function Model1.model = Model3.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model1.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model1.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model0.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model1.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model0.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant0 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model0.model, function Model1.model = Model1.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  val reduceDB [@cfg:stackify] (self : borrowed (Type.creusat_formula_formula)) (watches : borrowed (Type.creusat_watches_watches)) (t : Type.creusat_trail_trail) (s : borrowed (Type.creusat_solver_solver)) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 349 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * self)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 348 4 35] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 347 4 33] Invariant1.invariant' ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 346 4 42] Invariant0.invariant' t ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 345 4 51] Invariant2.invariant' ( * watches) ( * self)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 344 4 40] Invariant1.invariant' ( * self)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 351 4 35] Equisat0.equisat ( * self) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 350 4 49] Type.creusat_formula_formula_Formula_num_vars ( * self) = Type.creusat_formula_formula_Formula_num_vars ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 346 4 42] Invariant0.invariant' t ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 345 4 51] Invariant2.invariant' ( ^ watches) ( ^ self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/formula.rs" 344 4 40] Invariant1.invariant' ( ^ self) }
    
end
module CreuSat_Lit_Impl4_Clone_Interface
  use prelude.Prelude
  use Type
  val clone' [@cfg:stackify] (self : Type.creusat_lit_lit) : Type.creusat_lit_lit
end
module CreuSat_Lit_Impl4_Clone
  use prelude.Prelude
  use Type
  let rec cfg clone' [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 11 9 14] (self : Type.creusat_lit_lit) : Type.creusat_lit_lit
    
   =
  var _0 : Type.creusat_lit_lit;
  var self_1 : Type.creusat_lit_lit;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _0 <- self_1;
    return _0
  }
  
end
module CreuSat_Lit_Impl0_Model_Interface
  use Type
  function model (self : Type.creusat_lit_lit) : Type.creusat_lit_lit
end
module CreuSat_Lit_Impl0_Model
  use Type
  function model [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 22 4 26] (self : Type.creusat_lit_lit) : Type.creusat_lit_lit
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 22 4 26] self
end
module CreuSat_Lit_Impl1_Index_Interface
  use mach.int.UInt64
  use Type
  use mach.int.Int
  use prelude.Prelude
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  val index [@cfg:stackify] (self : Type.creusat_lit_lit) : usize
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 30 4 45] UInt64.to_int result = IndexLogic0.index_logic self }
    
end
module CreuSat_Lit_Impl1_Index
  use mach.int.UInt64
  use Type
  use mach.int.Int
  use prelude.Prelude
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  val index [@cfg:stackify] (self : Type.creusat_lit_lit) : usize
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 30 4 45] UInt64.to_int result = IndexLogic0.index_logic self }
    
end
module CreuSat_Lit_Impl1_IsPositive_Interface
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  val is_positive [@cfg:stackify] (self : Type.creusat_lit_lit) : bool
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 37 4 50] result = IsPositiveLogic0.is_positive_logic self }
    
end
module CreuSat_Lit_Impl1_IsPositive
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  val is_positive [@cfg:stackify] (self : Type.creusat_lit_lit) : bool
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 37 4 50] result = IsPositiveLogic0.is_positive_logic self }
    
end
module CreuSat_Lit_Impl1_CheckLitInvariant_Interface
  use mach.int.UInt64
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  val check_lit_invariant [@cfg:stackify] (self : Type.creusat_lit_lit) (n : usize) : bool
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 44 4 44] result = Invariant0.invariant' self (UInt64.to_int n) }
    
end
module CreuSat_Lit_Impl1_CheckLitInvariant
  use mach.int.UInt64
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  val check_lit_invariant [@cfg:stackify] (self : Type.creusat_lit_lit) (n : usize) : bool
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 44 4 44] result = Invariant0.invariant' self (UInt64.to_int n) }
    
end
module CreuSat_Lit_Impl1_LitSat_Interface
  use seq.Seq
  use Type
  use prelude.Prelude
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val lit_sat [@cfg:stackify] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 51 4 43] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 52 4 38] result = Sat0.sat self a }
    
end
module CreuSat_Lit_Impl1_LitSat
  use seq.Seq
  use Type
  use prelude.Prelude
  use mach.int.Int
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  val lit_sat [@cfg:stackify] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 51 4 43] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 52 4 38] result = Sat0.sat self a }
    
end
module CreuSat_Logic_LogicLit_Impl1_Unsat_Interface
  use Type
  predicate unsat (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicLit_Impl1_Unsat
  use Type
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate unsat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 158 4 46] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 158 4 46] UnsatInner0.unsat_inner self (Model0.model a)
end
module CreuSat_Lit_Impl1_LitUnsat_Interface
  use seq.Seq
  use Type
  use prelude.Prelude
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val lit_unsat [@cfg:stackify] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 62 4 43] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 63 4 40] result = Unsat0.unsat self a }
    
end
module CreuSat_Lit_Impl1_LitUnsat
  use seq.Seq
  use Type
  use prelude.Prelude
  use mach.int.Int
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model1.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  val lit_unsat [@cfg:stackify] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 62 4 43] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 63 4 40] result = Unsat0.unsat self a }
    
end
module CreuSat_Lit_Impl1_LitUnset_Interface
  use seq.Seq
  use Type
  use prelude.Prelude
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val lit_unset [@cfg:stackify] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 73 4 43] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 74 4 40] result = Unset0.unset self a }
    
end
module CreuSat_Lit_Impl1_LitUnset
  use seq.Seq
  use Type
  use prelude.Prelude
  use mach.int.Int
  use prelude.UInt8
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with function Model0.model = Model1.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  val lit_unset [@cfg:stackify] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 73 4 43] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 74 4 40] result = Unset0.unset self a }
    
end
module CreuSat_Lit_Impl1_LitSet_Interface
  use seq.Seq
  use Type
  use prelude.Prelude
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val lit_set [@cfg:stackify] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 81 4 43] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 82 4 41] result = (not Unset0.unset self a) }
    
end
module CreuSat_Lit_Impl1_LitSet
  use seq.Seq
  use Type
  use prelude.Prelude
  use mach.int.Int
  use prelude.UInt8
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with function Model0.model = Model1.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  val lit_set [@cfg:stackify] (self : Type.creusat_lit_lit) (a : Type.creusat_assignments_assignments) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 81 4 43] Invariant0.invariant' self (Seq.length (Model0.model a))}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 82 4 41] result = (not Unset0.unset self a) }
    
end
module CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface
  use Type
  use mach.int.Int
  function to_watchidx_logic [@inline:trivial] (self : Type.creusat_lit_lit) : int
end
module CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic
  use Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  function to_watchidx_logic [@inline:trivial] [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 53 4 41] (self : Type.creusat_lit_lit) : int
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 53 4 41] IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      0
    else
      1
    )
end
module CreuSat_Lit_Impl1_ToWatchidx_Interface
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface as ToWatchidxLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  val to_watchidx [@cfg:stackify] (self : Type.creusat_lit_lit) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 89 4 51] IndexLogic0.index_logic self < div 18446744073709551615 2}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 91 4 96] UInt64.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      0
    else
      1
    ) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 90 4 51] UInt64.to_int result = ToWatchidxLogic0.to_watchidx_logic self }
    
end
module CreuSat_Lit_Impl1_ToWatchidx
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  val to_watchidx [@cfg:stackify] (self : Type.creusat_lit_lit) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 89 4 51] IndexLogic0.index_logic self < div 18446744073709551615 2}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 91 4 96] UInt64.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      0
    else
      1
    ) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 90 4 51] UInt64.to_int result = ToWatchidxLogic0.to_watchidx_logic self }
    
end
module CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Interface
  use Type
  use mach.int.Int
  function to_neg_watchidx_logic [@inline:trivial] (self : Type.creusat_lit_lit) : int
end
module CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic
  use Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  function to_neg_watchidx_logic [@inline:trivial] [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 59 4 45] (self : Type.creusat_lit_lit) : int
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 59 4 45] IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      1
    else
      0
    )
end
module CreuSat_Lit_Impl1_ToNegWatchidx_Interface
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Interface as ToNegWatchidxLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  val to_neg_watchidx [@cfg:stackify] (self : Type.creusat_lit_lit) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 97 4 51] IndexLogic0.index_logic self < div 18446744073709551615 2}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 99 4 96] UInt64.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      1
    else
      0
    ) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 98 4 55] UInt64.to_int result = ToNegWatchidxLogic0.to_neg_watchidx_logic self }
    
end
module CreuSat_Lit_Impl1_ToNegWatchidx
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  val to_neg_watchidx [@cfg:stackify] (self : Type.creusat_lit_lit) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 97 4 51] IndexLogic0.index_logic self < div 18446744073709551615 2}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 99 4 96] UInt64.to_int result = IndexLogic0.index_logic self * 2 + (if IsPositiveLogic0.is_positive_logic self then
      1
    else
      0
    ) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 98 4 55] UInt64.to_int result = ToNegWatchidxLogic0.to_neg_watchidx_logic self }
    
end
module CreuSat_Lit_Impl1_PhaseSaved_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val phase_saved [@cfg:stackify] (idx : usize) (assignments : Type.creusat_assignments_assignments) : Type.creusat_lit_lit
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 105 4 44] UInt64.to_int idx < Seq.length (Model0.model assignments)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 107 4 74] IsPositiveLogic0.is_positive_logic result = (UInt8.to_int (Seq.get (Model0.model assignments) (UInt64.to_int idx)) = 1) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 106 4 44] IndexLogic0.index_logic result = UInt64.to_int idx }
    
end
module CreuSat_Lit_Impl1_PhaseSaved
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.UInt8
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  val phase_saved [@cfg:stackify] (idx : usize) (assignments : Type.creusat_assignments_assignments) : Type.creusat_lit_lit
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 105 4 44] UInt64.to_int idx < Seq.length (Model0.model assignments)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 107 4 74] IsPositiveLogic0.is_positive_logic result = (UInt8.to_int (Seq.get (Model0.model assignments) (UInt64.to_int idx)) = 1) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 106 4 44] IndexLogic0.index_logic result = UInt64.to_int idx }
    
end
module CreuSat_Lit_Impl2_Eq_Interface
  use prelude.Prelude
  use Type
  val eq [@cfg:stackify] (self : Type.creusat_lit_lit) (other : Type.creusat_lit_lit) : bool
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 126 4 41] result = (self = other) }
    
end
module CreuSat_Lit_Impl2_Eq
  use prelude.Prelude
  use Type
  val eq [@cfg:stackify] (self : Type.creusat_lit_lit) (other : Type.creusat_lit_lit) : bool
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 126 4 41] result = (self = other) }
    
end
module CreuSat_Lit_Impl3_Not_Interface
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  val not' [@cfg:stackify] (self : Type.creusat_lit_lit) : Type.creusat_lit_lit
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 139 4 71] IsPositiveLogic0.is_positive_logic result = (not IsPositiveLogic0.is_positive_logic self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 138 4 58] IndexLogic0.index_logic result = IndexLogic0.index_logic self }
    
end
module CreuSat_Lit_Impl3_Not
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  val not' [@cfg:stackify] (self : Type.creusat_lit_lit) : Type.creusat_lit_lit
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 139 4 71] IsPositiveLogic0.is_positive_logic result = (not IsPositiveLogic0.is_positive_logic self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/lit.rs" 138 4 58] IndexLogic0.index_logic result = IndexLogic0.index_logic self }
    
end
module CreuSat_Logic_Logic_Pos_Interface
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  function pos (_ : ()) : uint8
end
module CreuSat_Logic_Logic_Pos
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  function pos [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 10 0 25] (_ : ()) : uint8 =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 10 0 25] (1 : uint8)
end
module CreuSat_Logic_Logic_Neg_Interface
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  function neg (_ : ()) : uint8
end
module CreuSat_Logic_Logic_Neg
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  function neg [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 15 0 25] (_ : ()) : uint8 =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 15 0 25] (0 : uint8)
end
module CreuSat_Logic_Logic_LemmaPermutClauseOk_Interface
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  function lemma_permut_clause_ok (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments) : ()
    
end
module CreuSat_Logic_Logic_LemmaPermutClauseOk
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  function lemma_permut_clause_ok [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 36 0 68] (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments) : ()
    
  axiom lemma_permut_clause_ok_spec : forall c : Type.creusat_clause_clause, c2 : Type.creusat_clause_clause, a : Type.creusat_assignments_assignments . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 34 0 44] Permut.permut (Model0.model c2) (Model0.model c) 0 (Seq.length (Model0.model c))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 33 0 21] Sat0.sat c a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 35 0 21] Sat0.sat c2 a)
end
module CreuSat_Logic_Logic_LemmaPermutClauseOk2_Interface
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  function lemma_permut_clause_ok2 (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments) : ()
    
end
module CreuSat_Logic_Logic_LemmaPermutClauseOk2
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  function lemma_permut_clause_ok2 [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 43 0 69] (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments) : ()
    
  axiom lemma_permut_clause_ok2_spec : forall c : Type.creusat_clause_clause, c2 : Type.creusat_clause_clause, a : Type.creusat_assignments_assignments . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 41 0 44] Permut.permut (Model0.model c2) (Model0.model c) 0 (Seq.length (Model0.model c))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 40 0 23] Unsat0.unsat c a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 42 0 23] Unsat0.unsat c2 a)
end
module CreuSat_Logic_Logic_LemmaSwapClauseNoDups_Interface
  use seq.Permut
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  function lemma_swap_clause_no_dups (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (a : int) (b : int) : ()
    
end
module CreuSat_Logic_Logic_LemmaSwapClauseNoDups
  use seq.Permut
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  function lemma_swap_clause_no_dups [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 52 0 71] (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (a : int) (b : int) : ()
    
  axiom lemma_swap_clause_no_dups_spec : forall c : Type.creusat_clause_clause, c2 : Type.creusat_clause_clause, a : int, b : int . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 50 0 43] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model0.model c)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 49 0 37] Permut.exchange (Model0.model c2) (Model0.model c) a b) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 48 0 38] Seq.length (Model0.model c2) = Seq.length (Model0.model c)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 47 0 28] Seq.length (Model0.model c) >= 2) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 51 0 43] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model0.model c2))
end
module CreuSat_Logic_LogicClause_Impl1_PostUnit_Interface
  use Type
  predicate post_unit (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicClause_Impl1_PostUnit
  use Type
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate post_unit [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 86 4 50] (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 86 4 50] PostUnitInner0.post_unit_inner self (Model0.model a)
end
module CreuSat_Logic_Logic_LemmaSwapMaintainsPostUnit_Interface
  use seq.Permut
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnit_Interface as PostUnit0
  function lemma_swap_maintains_post_unit (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (a : int) (b : int) (ass : Type.creusat_assignments_assignments) : ()
    
end
module CreuSat_Logic_Logic_LemmaSwapMaintainsPostUnit
  use seq.Permut
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnit_Interface as PostUnit0
  function lemma_swap_maintains_post_unit [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 61 0 94] (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (a : int) (b : int) (ass : Type.creusat_assignments_assignments) : ()
    
  axiom lemma_swap_maintains_post_unit_spec : forall c : Type.creusat_clause_clause, c2 : Type.creusat_clause_clause, a : int, b : int, ass : Type.creusat_assignments_assignments . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 59 0 29] PostUnit0.post_unit c ass) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 58 0 37] Permut.exchange (Model0.model c2) (Model0.model c) a b) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 57 0 38] Seq.length (Model0.model c2) = Seq.length (Model0.model c)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 56 0 28] Seq.length (Model0.model c) >= 2) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 60 0 29] PostUnit0.post_unit c2 ass)
end
module CreuSat_Logic_Logic_LemmaPermutFormulaOk_Interface
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicFormula_Impl1_Sat_Interface as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_permut_formula_ok (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) : ()
    
end
module CreuSat_Logic_Logic_LemmaPermutFormulaOk
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicFormula_Impl1_Sat_Interface as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_permut_formula_ok [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 86 0 71] (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) : ()
    
  axiom lemma_permut_formula_ok_spec : forall f : Type.creusat_formula_formula, f2 : Type.creusat_formula_formula, a : Type.creusat_assignments_assignments . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 84 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f2) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 83 0 68] Permut.permut (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) 0 (Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 82 0 21] Sat0.sat f a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 85 0 21] Sat0.sat f2 a)
end
module CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate unsat_inner (self : Type.creusat_formula_formula) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicFormula_Impl1_UnsatInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate unsat_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 204 4 59] (self : Type.creusat_formula_formula) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 204 4 59] exists i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) && UnsatInner0.unsat_inner (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) i) a
end
module CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface
  use Type
  predicate unsat (self : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicFormula_Impl1_Unsat
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate unsat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 212 4 46] (self : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 212 4 46] UnsatInner0.unsat_inner self (Model0.model a)
end
module CreuSat_Logic_Logic_LemmaPermutFormulaOk2_Interface
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_permut_formula_ok2 (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) : ()
    
end
module CreuSat_Logic_Logic_LemmaPermutFormulaOk2
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_permut_formula_ok2 [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 94 0 72] (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) : ()
    
  axiom lemma_permut_formula_ok2_spec : forall f : Type.creusat_formula_formula, f2 : Type.creusat_formula_formula, a : Type.creusat_assignments_assignments . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 92 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f2) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 91 0 68] Permut.permut (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) 0 (Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 90 0 23] Unsat0.unsat f a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 93 0 23] Unsat0.unsat f2 a)
end
module CreuSat_Logic_Logic_LemmaPermutFormulaOkNoAss_Interface
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_permut_formula_ok_no_ass (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) : ()
end
module CreuSat_Logic_Logic_LemmaPermutFormulaOkNoAss
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_permut_formula_ok_no_ass [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 102 0 62] (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) : ()
    
  axiom lemma_permut_formula_ok_no_ass_spec : forall f : Type.creusat_formula_formula, f2 : Type.creusat_formula_formula . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 100 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f2) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 99 0 68] Permut.permut (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) 0 (Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 98 0 47] EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 101 0 47] EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass f2)
end
module CreuSat_Logic_Logic_LemmaPermutClauseInFormulaMaintainsSat_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_permut_clause_in_formula_maintains_sat (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) (cref : int) : ()
    
end
module CreuSat_Logic_Logic_LemmaPermutClauseInFormulaMaintainsSat
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_permut_clause_in_formula_maintains_sat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 113 0 87] (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) (cref : int) : ()
    
  axiom lemma_permut_clause_in_formula_maintains_sat_spec : forall f : Type.creusat_formula_formula, f2 : Type.creusat_formula_formula, cref : int . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 111 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f2) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 110 0 97] Permut.permut (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) cref)) (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) cref)) 0 (Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) cref)))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 108 0 47] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) && i <> cref -> Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) i) = Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) i)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 107 0 54] Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) = Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 106 0 47] EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 112 0 47] EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass f2)
end
module CreuSat_Logic_Logic_LemmaPermutClauseInFormulaMaintainsUnsat_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_permut_clause_in_formula_maintains_unsat (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) (cref : int) : ()
    
end
module CreuSat_Logic_Logic_LemmaPermutClauseInFormulaMaintainsUnsat
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq.Permut
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_permut_clause_in_formula_maintains_unsat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 124 0 89] (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) (cref : int) : ()
    
  axiom lemma_permut_clause_in_formula_maintains_unsat_spec : forall f : Type.creusat_formula_formula, f2 : Type.creusat_formula_formula, cref : int . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 122 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f2) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 121 0 97] Permut.permut (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) cref)) (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) cref)) 0 (Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) cref)))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 119 0 47] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) && i <> cref -> Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) i) = Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) i)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 118 0 54] Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) = Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 117 0 48] not EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 123 0 48] not EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass f2)
end
module CreuSat_Logic_Logic_LemmaSamePol_Interface
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept_Interface as SameIdxSamePolarityExcept0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  function lemma_same_pol (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (a : Seq.seq uint8) (idx : int) : ()
    
end
module CreuSat_Logic_Logic_LemmaSamePol
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicClause_Impl2_SameIdxSamePolarityExcept_Interface as SameIdxSamePolarityExcept0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  function lemma_same_pol [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 135 0 77] (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (a : Seq.seq uint8) (idx : int) : ()
    
  axiom lemma_same_pol_spec : forall c : Type.creusat_clause_clause, c2 : Type.creusat_clause_clause, a : Seq.seq uint8, idx : int . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 133 0 30] UnsatInner0.unsat_inner c2 a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 131 0 86] exists i : (int) . 0 <= i && i < Seq.length (Model0.model c) && IndexLogic0.index_logic (Seq.get (Model0.model c) i) = idx && SatInner0.sat_inner (Seq.get (Model0.model c) i) a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 130 0 34] Invariant0.invariant' c2 (Seq.length a)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 129 0 33] Invariant0.invariant' c (Seq.length a)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 128 0 33] PostUnitInner0.post_unit_inner c a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 134 0 52] SameIdxSamePolarityExcept0.same_idx_same_polarity_except c2 c idx)
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface
  use Type
  use mach.int.Int
  predicate resolvent_of (self : Type.creusat_clause_clause) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (k : int) (m : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOf
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Interface as LitIn0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate resolvent_of [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 141 4 76] (self : Type.creusat_clause_clause) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (k : int) (m : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 141 4 76] (forall i : (int) . 0 <= i && i < Seq.length (Model0.model c) && i <> m -> LitIn0.lit_in (Seq.get (Model0.model c) i) self) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model c2) && i <> k -> LitIn0.lit_in (Seq.get (Model0.model c2) i) self) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model self) -> LitIn0.lit_in (Seq.get (Model0.model self) i) c || LitIn0.lit_in (Seq.get (Model0.model self) i) c2) && not LitIn0.lit_in (Seq.get (Model0.model c) m) self && not LitIn0.lit_in (Seq.get (Model0.model c2) k) self && IsOpp0.is_opp (Seq.get (Model0.model c2) k) (Seq.get (Model0.model c) m)
end
module CreuSat_Logic_Logic_LemmaResolvedPostAndUnsatIsUnsat_Interface
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface as ResolventOf0
  function lemma_resolved_post_and_unsat_is_unsat (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (c3 : Type.creusat_clause_clause) (a : Seq.seq uint8) (c_idx : int) (c2_idx : int) : ()
    
end
module CreuSat_Logic_Logic_LemmaResolvedPostAndUnsatIsUnsat
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface as ResolventOf0
  function lemma_resolved_post_and_unsat_is_unsat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 148 0 1] (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (c3 : Type.creusat_clause_clause) (a : Seq.seq uint8) (c_idx : int) (c2_idx : int) : ()
    
  axiom lemma_resolved_post_and_unsat_is_unsat_spec : forall c : Type.creusat_clause_clause, c2 : Type.creusat_clause_clause, c3 : Type.creusat_clause_clause, a : Seq.seq uint8, c_idx : int, c2_idx : int . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 146 0 50] ResolventOf0.resolvent_of c3 c c2 c2_idx c_idx) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 145 0 48] 0 <= c2_idx && c2_idx < Seq.length (Model0.model c2)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 144 0 45] 0 <= c_idx && c_idx < Seq.length (Model0.model c)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 143 0 30] UnsatInner0.unsat_inner c2 a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 142 0 37] SatInner0.sat_inner (Seq.get (Model0.model c) c_idx) a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 141 0 34] Invariant0.invariant' c2 (Seq.length a)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 140 0 33] Invariant0.invariant' c (Seq.length a)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 139 0 33] PostUnitInner0.post_unit_inner c a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 147 0 29] UnsatInner0.unsat_inner c3 a)
end
module CreuSat_Logic_LogicFormula_FormulaInvariant_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  predicate formula_invariant (f : (Seq.seq (Type.creusat_clause_clause), int))
end
module CreuSat_Logic_LogicFormula_FormulaInvariant
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  predicate formula_invariant [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 29 0 55] (f : (Seq.seq (Type.creusat_clause_clause), int))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 29 0 55] (forall i : (int) . 0 <= i && i < Seq.length (let (a, _) = f in a) -> Invariant0.invariant' (Seq.get (let (a, _) = f in a) i) (let (_, a) = f in a)) && (forall i : (int) . 0 <= i && i < Seq.length (let (a, _) = f in a) -> Seq.length (Model0.model (Seq.get (let (a, _) = f in a) i)) > 0)
end
module CreuSat_Logic_Logic_LemmaEqFormulas_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Interface as Equals0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  function lemma_eq_formulas (f : (Seq.seq (Type.creusat_clause_clause), int)) (f2 : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) : ()
    
end
module CreuSat_Logic_Logic_LemmaEqFormulas
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Interface as Equals0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  function lemma_eq_formulas [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 162 0 82] (f : (Seq.seq (Type.creusat_clause_clause), int)) (f2 : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) : ()
    
  axiom lemma_eq_formulas_spec : forall f : (Seq.seq (Type.creusat_clause_clause), int), f2 : (Seq.seq (Type.creusat_clause_clause), int), c : Type.creusat_clause_clause . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 158 0 33] FormulaInvariant0.formula_invariant f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 157 0 32] (let (a, _) = f2 in a) = Seq.snoc (let (a, _) = f in a) c) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 159 0 43] Seq.length (let (a, _) = f in a) + 1 = Seq.length (let (a, _) = f2 in a)) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 160 0 85] forall i : (int) . 0 <= i && i < Seq.length (let (a, _) = f in a) -> Equals0.equals (Seq.get (let (a, _) = f in a) i) (Seq.get (let (a, _) = f2 in a) i)) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 161 0 41] Model0.model (Seq.get (let (a, _) = f2 in a) (Seq.length (let (a, _) = f2 in a) - 1)) = Model0.model c)
end
module CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  predicate in_formula_inner (self : Type.creusat_clause_clause) (f : (Seq.seq (Type.creusat_clause_clause), int))
end
module CreuSat_Logic_LogicClause_Impl2_InFormulaInner
  use Type
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  predicate in_formula_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 187 4 64] (self : Type.creusat_clause_clause) (f : (Seq.seq (Type.creusat_clause_clause), int))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 187 4 64] exists i : (int) . 0 <= i && i < Seq.length (let (a, _) = f in a) && Seq.get (let (a, _) = f in a) i = self
end
module CreuSat_Logic_Logic_LemmaSatGivesSat_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface as InFormulaInner0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface as ResolventOf0
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  function lemma_sat_gives_sat (f : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (c3 : Type.creusat_clause_clause) (k : int) (m : int) : ()
    
end
module CreuSat_Logic_Logic_LemmaSatGivesSat
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface as InFormulaInner0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface as ResolventOf0
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  function lemma_sat_gives_sat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 172 0 100] (f : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (c3 : Type.creusat_clause_clause) (k : int) (m : int) : ()
    
  axiom lemma_sat_gives_sat_spec : forall f : (Seq.seq (Type.creusat_clause_clause), int), c : Type.creusat_clause_clause, c2 : Type.creusat_clause_clause, c3 : Type.creusat_clause_clause, k : int, m : int . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 170 0 46] EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 169 0 41] ResolventOf0.resolvent_of c3 c c2 k m) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 168 0 43] EquisatExtensionInner0.equisat_extension_inner c2 f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 167 0 34] InFormulaInner0.in_formula_inner c f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 166 0 33] FormulaInvariant0.formula_invariant f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 171 0 65] EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass (Seq.snoc (let (a, _) = f in a) c3, let (_, a) = f in a))
end
module CreuSat_Logic_Logic_LemmaNotSatGivesNotSat_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  function lemma_not_sat_gives_not_sat (f : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (c3 : Type.creusat_clause_clause) : ()
    
end
module CreuSat_Logic_Logic_LemmaNotSatGivesNotSat
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  function lemma_not_sat_gives_not_sat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 181 0 92] (f : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (c3 : Type.creusat_clause_clause) : ()
    
  axiom lemma_not_sat_gives_not_sat_spec : forall f : (Seq.seq (Type.creusat_clause_clause), int), c : Type.creusat_clause_clause, c2 : Type.creusat_clause_clause, c3 : Type.creusat_clause_clause . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 179 0 47] not EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 178 0 33] FormulaInvariant0.formula_invariant f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 180 0 66] not EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass (Seq.snoc (let (a, _) = f in a) c3, let (_, a) = f in a))
end
module CreuSat_Logic_Logic_LemmaExtendedFormulaIsEquisatCompatible_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface as InFormulaInner0
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface as ResolventOf0
  function lemma_extended_formula_is_equisat_compatible (f : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (c3 : Type.creusat_clause_clause) (k : int) (m : int) : ()
    
end
module CreuSat_Logic_Logic_LemmaExtendedFormulaIsEquisatCompatible
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface as InFormulaInner0
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface as ResolventOf0
  function lemma_extended_formula_is_equisat_compatible [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 193 0 1] (f : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (c3 : Type.creusat_clause_clause) (k : int) (m : int) : ()
    
  axiom lemma_extended_formula_is_equisat_compatible_spec : forall f : (Seq.seq (Type.creusat_clause_clause), int), c : Type.creusat_clause_clause, c2 : Type.creusat_clause_clause, c3 : Type.creusat_clause_clause, k : int, m : int . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 190 0 41] ResolventOf0.resolvent_of c3 c c2 k m) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 189 0 35] InFormulaInner0.in_formula_inner c2 f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 188 0 34] InFormulaInner0.in_formula_inner c f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 187 0 33] FormulaInvariant0.formula_invariant f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 192 0 42] EquisatExtensionInner0.equisat_extension_inner c3 f)
end
module CreuSat_Logic_Logic_LemmaResolventOfEquisatExtensionIsEquisat_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface as InFormulaInner0
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface as ResolventOf0
  function lemma_resolvent_of_equisat_extension_is_equisat (f : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (c3 : Type.creusat_clause_clause) (k : int) (m : int) : ()
    
end
module CreuSat_Logic_Logic_LemmaResolventOfEquisatExtensionIsEquisat
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicClause_Impl2_InFormulaInner_Interface as InFormulaInner0
  clone CreuSat_Logic_LogicClause_Impl2_ResolventOf_Interface as ResolventOf0
  function lemma_resolvent_of_equisat_extension_is_equisat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 208 0 1] (f : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (c3 : Type.creusat_clause_clause) (k : int) (m : int) : ()
    
  axiom lemma_resolvent_of_equisat_extension_is_equisat_spec : forall f : (Seq.seq (Type.creusat_clause_clause), int), c : Type.creusat_clause_clause, c2 : Type.creusat_clause_clause, c3 : Type.creusat_clause_clause, k : int, m : int . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 206 0 41] ResolventOf0.resolvent_of c3 c c2 k m) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 205 0 35] InFormulaInner0.in_formula_inner c2 f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 204 0 42] EquisatExtensionInner0.equisat_extension_inner c f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 203 0 33] FormulaInvariant0.formula_invariant f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 207 0 42] EquisatExtensionInner0.equisat_extension_inner c3 f)
end
module CreuSat_Logic_Logic_LemmaExtendingWithEquiExtIsEquiCompat_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_EquisatCompatibleInner_Interface as EquisatCompatibleInner0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  function lemma_extending_with_equi_ext_is_equi_compat (f : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) : ()
    
end
module CreuSat_Logic_Logic_LemmaExtendingWithEquiExtIsEquiCompat
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_EquisatCompatibleInner_Interface as EquisatCompatibleInner0
  clone CreuSat_Logic_LogicFormula_FormulaInvariant_Interface as FormulaInvariant0
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  function lemma_extending_with_equi_ext_is_equi_compat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 223 0 85] (f : (Seq.seq (Type.creusat_clause_clause), int)) (c : Type.creusat_clause_clause) : ()
    
  axiom lemma_extending_with_equi_ext_is_equi_compat_spec : forall f : (Seq.seq (Type.creusat_clause_clause), int), c : Type.creusat_clause_clause . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 221 0 42] EquisatExtensionInner0.equisat_extension_inner c f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 220 0 33] FormulaInvariant0.formula_invariant f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 222 0 59] EquisatCompatibleInner0.equisat_compatible_inner f (Seq.snoc (let (a, _) = f in a) c, let (_, a) = f in a))
end
module CreuSat_Logic_Logic_LemmaEquisatIsTrans_Interface
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_EquisatCompatible_Interface as EquisatCompatible0
  function lemma_equisat_is_trans (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) (f3 : Type.creusat_formula_formula) : ()
    
end
module CreuSat_Logic_Logic_LemmaEquisatIsTrans
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_EquisatCompatible_Interface as EquisatCompatible0
  function lemma_equisat_is_trans [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 233 0 67] (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula) (f3 : Type.creusat_formula_formula) : ()
    
  axiom lemma_equisat_is_trans_spec : forall f : Type.creusat_formula_formula, f2 : Type.creusat_formula_formula, f3 : Type.creusat_formula_formula . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 231 0 38] EquisatCompatible0.equisat_compatible f2 f3) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 230 0 37] EquisatCompatible0.equisat_compatible f f2) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 229 0 27] Invariant0.invariant' f3) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 228 0 27] Invariant0.invariant' f2) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 227 0 26] Invariant0.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 232 0 36] EquisatCompatible0.equisat_compatible f f3)
end
module CreuSat_Logic_Logic_BoolToAssignedstate_Interface
  use prelude.UInt8
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  function bool_to_assignedstate (b : bool) : uint8
end
module CreuSat_Logic_Logic_BoolToAssignedstate
  use prelude.UInt8
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  function bool_to_assignedstate [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 240 0 54] (b : bool) : uint8
    
  axiom bool_to_assignedstate_spec : forall b : bool . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 238 0 30] b -> UInt8.to_int (bool_to_assignedstate b) = 1) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 239 0 31] not b -> UInt8.to_int (bool_to_assignedstate b) = 0)
end
module CreuSat_Logic_Logic_FlipV_Interface
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  function flip_v (v : uint8) : uint8
end
module CreuSat_Logic_Logic_FlipV
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  function flip_v [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 249 0 44] (v : uint8) : uint8 =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 249 0 44] if UInt8.to_int v = 0 then
      (1 : uint8)
    else
      if UInt8.to_int v = 1 then (0 : uint8) else v
    
end
module CreuSat_Logic_LogicAssignments_AssignmentsInvariant_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use Type
  predicate assignments_invariant (a : Seq.seq uint8) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicAssignments_AssignmentsInvariant
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use Type
  use mach.int.UInt64
  use mach.int.Int32
  predicate assignments_invariant [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 47 0 71] (a : Seq.seq uint8) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 47 0 71] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) = Seq.length a && (forall i : (int) . 0 <= i && i < Seq.length a -> UInt8.to_int (Seq.get a i) <= 3)
end
module CreuSat_Logic_Logic_LemmaCompleteImpliesSatOrUnsat_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicAssignments_AssignmentsInvariant_Interface as AssignmentsInvariant0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  function lemma_complete_implies_sat_or_unsat (f : Type.creusat_formula_formula) (a : Seq.seq uint8) : ()
end
module CreuSat_Logic_Logic_LemmaCompleteImpliesSatOrUnsat
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicAssignments_AssignmentsInvariant_Interface as AssignmentsInvariant0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  function lemma_complete_implies_sat_or_unsat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 268 0 77] (f : Type.creusat_formula_formula) (a : Seq.seq uint8) : ()
    
  axiom lemma_complete_implies_sat_or_unsat_spec : forall f : Type.creusat_formula_formula, a : Seq.seq uint8 . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 266 0 30] CompleteInner0.complete_inner a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 265 0 40] AssignmentsInvariant0.assignments_invariant a f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 264 0 26] Invariant0.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 267 0 46] UnsatInner0.unsat_inner f a || SatInner0.sat_inner f a)
end
module CreuSat_Logic_Logic_LemmaCompleteAndNotSatImpliesUnsat_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicAssignments_AssignmentsInvariant_Interface as AssignmentsInvariant0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  function lemma_complete_and_not_sat_implies_unsat (f : Type.creusat_formula_formula) (a : Seq.seq uint8) : ()
end
module CreuSat_Logic_Logic_LemmaCompleteAndNotSatImpliesUnsat
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicAssignments_AssignmentsInvariant_Interface as AssignmentsInvariant0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  function lemma_complete_and_not_sat_implies_unsat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 277 0 82] (f : Type.creusat_formula_formula) (a : Seq.seq uint8) : ()
    
  axiom lemma_complete_and_not_sat_implies_unsat_spec : forall f : Type.creusat_formula_formula, a : Seq.seq uint8 . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 275 0 28] not SatInner0.sat_inner f a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 274 0 30] CompleteInner0.complete_inner a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 273 0 40] AssignmentsInvariant0.assignments_invariant a f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 272 0 26] Invariant0.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 276 0 28] UnsatInner0.unsat_inner f a)
end
module CreuSat_Logic_Logic_LemmaCompleteAndNotUnsatImpliesSat_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicAssignments_AssignmentsInvariant_Interface as AssignmentsInvariant0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface as UnsatInner0
  function lemma_complete_and_not_unsat_implies_sat (f : Type.creusat_formula_formula) (a : Seq.seq uint8) : ()
end
module CreuSat_Logic_Logic_LemmaCompleteAndNotUnsatImpliesSat
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicAssignments_AssignmentsInvariant_Interface as AssignmentsInvariant0
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner_Interface as UnsatInner0
  function lemma_complete_and_not_unsat_implies_sat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 288 0 82] (f : Type.creusat_formula_formula) (a : Seq.seq uint8) : ()
    
  axiom lemma_complete_and_not_unsat_implies_sat_spec : forall f : Type.creusat_formula_formula, a : Seq.seq uint8 . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 286 0 30] not UnsatInner0.unsat_inner f a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 285 0 30] CompleteInner0.complete_inner a) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 284 0 40] AssignmentsInvariant0.assignments_invariant a f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 283 0 26] Invariant0.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic.rs" 287 0 26] SatInner0.sat_inner f a)
end
module CreuSat_Logic_LogicAssignments_CompatibleInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate compatible_inner (a : Seq.seq uint8) (a2 : Seq.seq uint8)
end
module CreuSat_Logic_LogicAssignments_CompatibleInner
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  predicate compatible_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 25 0 78] (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 25 0 78] Seq.length a = Seq.length a2 && (forall i : (int) . 0 <= i && i < Seq.length a -> Unset0.unset (Seq.get a i) || Seq.get a i = Seq.get a2 i)
end
module CreuSat_Logic_LogicAssignments_CompatibleCompleteInner_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate compatible_complete_inner (a : Seq.seq uint8) (a2 : Seq.seq uint8)
end
module CreuSat_Logic_LogicAssignments_CompatibleCompleteInner
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicAssignments_CompleteInner_Interface as CompleteInner0
  clone CreuSat_Logic_LogicAssignments_CompatibleInner_Interface as CompatibleInner0
  predicate compatible_complete_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 40 0 87] (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 40 0 87] CompatibleInner0.compatible_inner a a2 && CompleteInner0.complete_inner a2
end
module CreuSat_Logic_LogicAssignments_Impl1_Compatible_Interface
  use Type
  predicate compatible (self : Type.creusat_assignments_assignments) (a2 : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicAssignments_Impl1_Compatible
  use Type
  clone CreuSat_Logic_LogicAssignments_CompatibleInner_Interface as CompatibleInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate compatible [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 67 4 52] (self : Type.creusat_assignments_assignments) (a2 : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 67 4 52] CompatibleInner0.compatible_inner (Model0.model self) (Model0.model a2)
end
module CreuSat_Logic_LogicAssignments_Impl1_CompatibleComplete_Interface
  use Type
  predicate compatible_complete (self : Type.creusat_assignments_assignments) (a2 : Type.creusat_assignments_assignments)
    
end
module CreuSat_Logic_LogicAssignments_Impl1_CompatibleComplete
  use Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete_Interface as Complete0
  clone CreuSat_Logic_LogicAssignments_Impl1_Compatible_Interface as Compatible0
  predicate compatible_complete [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 79 4 61] (self : Type.creusat_assignments_assignments) (a2 : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_assignments.rs" 79 4 61] Compatible0.compatible self a2 && Complete0.complete a2
end
module CreuSat_Logic_LogicClause_InvariantUnaryOkInternal_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  predicate invariant_unary_ok_internal (s : Seq.seq (Type.creusat_lit_lit)) (n : int)
end
module CreuSat_Logic_LogicClause_InvariantUnaryOkInternal
  use seq.Seq
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  predicate invariant_unary_ok_internal [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 29 0 63] (s : Seq.seq (Type.creusat_lit_lit)) (n : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 29 0 63] VarsInRangeInner0.vars_in_range_inner s n && NoDuplicateIndexesInner0.no_duplicate_indexes_inner s
end
module CreuSat_Logic_LogicClause_Impl1_NoUnsetInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate no_unset_inner (self : Type.creusat_clause_clause) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl1_NoUnsetInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner_Interface as UnsetInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate no_unset_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 78 4 62] (self : Type.creusat_clause_clause) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 78 4 62] forall j : (int) . 0 <= j && j < Seq.length (Model0.model self) -> not UnsetInner0.unset_inner (Seq.get (Model0.model self) j) a
end
module CreuSat_Logic_LogicClause_Impl1_EqAssnInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate eq_assn_inner (self : Type.creusat_clause_clause) (a : Seq.seq uint8) (a2 : Seq.seq uint8)
end
module CreuSat_Logic_LogicClause_Impl1_EqAssnInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate eq_assn_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 93 4 85] (self : Type.creusat_clause_clause) (a : Seq.seq uint8) (a2 : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 93 4 85] forall i : (int) . 0 <= i && i < Seq.length (Model0.model self) -> Seq.get a (IndexLogic0.index_logic (Seq.get (Model0.model self) i)) = Seq.get a2 (IndexLogic0.index_logic (Seq.get (Model0.model self) i))
end
module CreuSat_Logic_LogicClause_Impl2_EquisatExtensionDouble_Interface
  use Type
  predicate equisat_extension_double (self : Type.creusat_clause_clause) (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula)
    
end
module CreuSat_Logic_LogicClause_Impl2_EquisatExtensionDouble
  use Type
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicFormula_Impl1_EquisatCompatible_Interface as EquisatCompatible0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Interface as Equals0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  predicate equisat_extension_double [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 111 4 74] (self : Type.creusat_clause_clause) (f : Type.creusat_formula_formula) (f2 : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 111 4 74] Invariant0.invariant' f && Invariant0.invariant' f2 && UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f2) && Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) + 1 = Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) -> Equals0.equals (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) i) (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) i)) && Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) (Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f2)) - 1)) = Model1.model self && EquisatCompatible0.equisat_compatible f f2
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOfIdx_Interface
  use Type
  use mach.int.Int
  predicate resolvent_of_idx (self : Type.creusat_clause_clause) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (idx : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOfIdx
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Interface as LitIn0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate resolvent_of_idx [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 153 4 74] (self : Type.creusat_clause_clause) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (idx : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 153 4 74] (forall i : (int) . 0 <= i && i < Seq.length (Model0.model c) && IndexLogic0.index_logic (Seq.get (Model0.model c) i) <> idx -> LitIn0.lit_in (Seq.get (Model0.model c) i) self) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model c2) && IndexLogic0.index_logic (Seq.get (Model0.model c2) i) <> idx -> LitIn0.lit_in (Seq.get (Model0.model c2) i) self) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model self) -> LitIn0.lit_in (Seq.get (Model0.model self) i) c || LitIn0.lit_in (Seq.get (Model0.model self) i) c2) && (exists m : (int) . exists k : (int) . 0 <= k && k < Seq.length (Model0.model c2) && 0 <= m && m < Seq.length (Model0.model c) && IndexLogic0.index_logic (Seq.get (Model0.model c) m) = idx && IndexLogic0.index_logic (Seq.get (Model0.model c2) k) = idx && IsOpp0.is_opp (Seq.get (Model0.model c2) k) (Seq.get (Model0.model c) m))
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOfIdx2_Interface
  use Type
  use mach.int.Int
  predicate resolvent_of_idx2 (self : Type.creusat_clause_clause) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (idx : int) (c_idx : int)
    
end
module CreuSat_Logic_LogicClause_Impl2_ResolventOfIdx2
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Interface as LitIn0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate resolvent_of_idx2 [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 165 4 87] (self : Type.creusat_clause_clause) (c : Type.creusat_clause_clause) (c2 : Type.creusat_clause_clause) (idx : int) (c_idx : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 165 4 87] (forall i : (int) . 0 <= i && i < Seq.length (Model0.model c) && IndexLogic0.index_logic (Seq.get (Model0.model c) i) <> idx -> LitIn0.lit_in (Seq.get (Model0.model c) i) self) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model c2) && IndexLogic0.index_logic (Seq.get (Model0.model c2) i) <> idx -> LitIn0.lit_in (Seq.get (Model0.model c2) i) self) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model self) -> LitIn0.lit_in (Seq.get (Model0.model self) i) c || LitIn0.lit_in (Seq.get (Model0.model self) i) c2) && 0 <= c_idx && c_idx < Seq.length (Model0.model c) && IndexLogic0.index_logic (Seq.get (Model0.model c) c_idx) = idx && (exists k : (int) . 0 <= k && k < Seq.length (Model0.model c2) && IsOpp0.is_opp (Seq.get (Model0.model c2) k) (Seq.get (Model0.model c) c_idx))
end
module CreuSat_Logic_LogicClause_Impl2_Unknown_Interface
  use Type
  predicate unknown (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicClause_Impl2_Unknown
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicClause_Impl2_Sat_Interface as Sat0
  predicate unknown [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 243 4 48] (self : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_clause.rs" 243 4 48] not Sat0.sat self a && not Unsat0.unsat self a
end
module CreuSat_Logic_LogicLit_Impl1_LitInInternal_Interface
  use Type
  use seq.Seq
  predicate lit_in_internal (self : Type.creusat_lit_lit) (c : Seq.seq (Type.creusat_lit_lit))
end
module CreuSat_Logic_LogicLit_Impl1_LitInInternal
  use Type
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  predicate lit_in_internal [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 74 4 53] (self : Type.creusat_lit_lit) (c : Seq.seq (Type.creusat_lit_lit))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 74 4 53] exists i : (int) . 0 <= i && i < Seq.length c && Seq.get c i = self
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaIdx_Interface
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use mach.int.UInt64
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreuSat_Logic_LogicClause_InvariantInternal_Interface as InvariantInternal0
  clone CreuSat_Logic_LogicLit_Impl1_LitInInternal_Interface as LitInInternal0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  function lemma_idx (c : Seq.seq (Type.creusat_lit_lit)) (o : Seq.seq (Type.creusat_lit_lit)) (new : Seq.seq (Type.creusat_lit_lit)) (i : int) (idx : int) (c_idx : int) (_f : Type.creusat_formula_formula) : ()
    
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaIdx
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use mach.int.UInt64
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreuSat_Logic_LogicClause_InvariantInternal_Interface as InvariantInternal0
  clone CreuSat_Logic_LogicLit_Impl1_LitInInternal_Interface as LitInInternal0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  function lemma_idx [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 28 0 100] (c : Seq.seq (Type.creusat_lit_lit)) (o : Seq.seq (Type.creusat_lit_lit)) (new : Seq.seq (Type.creusat_lit_lit)) (i : int) (idx : int) (c_idx : int) (_f : Type.creusat_formula_formula) : ()
    
  axiom lemma_idx_spec : forall c : Seq.seq (Type.creusat_lit_lit), o : Seq.seq (Type.creusat_lit_lit), new : Seq.seq (Type.creusat_lit_lit), i : int, idx : int, c_idx : int, _f : Type.creusat_formula_formula . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 24 0 99] exists k : (int) . 0 <= k && k < Seq.length new && IndexLogic0.index_logic (Seq.get o i) = IndexLogic0.index_logic (Seq.get new k)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 23 0 114] forall j : (int) . 0 <= j && j < Seq.length new -> LitInInternal0.lit_in_internal (Seq.get new j) c || LitInInternal0.lit_in_internal (Seq.get new j) o) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 22 0 108] forall j : (int) . 0 <= j && j < Seq.length c && IndexLogic0.index_logic (Seq.get c j) <> idx -> LitInInternal0.lit_in_internal (Seq.get c j) new) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 21 0 48] InvariantInternal0.invariant_internal c (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 20 0 48] InvariantInternal0.invariant_internal o (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 19 0 63] 0 <= i && i < Seq.length o && IndexLogic0.index_logic (Seq.get o i) <> idx) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 17 0 70] forall k : (int) . forall j : (int) . 0 <= j && j < Seq.length o && 0 <= k && k < Seq.length c && k <> c_idx && IndexLogic0.index_logic (Seq.get o j) <> idx -> not IsOpp0.is_opp (Seq.get c k) (Seq.get o j)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 13 0 2] 0 <= c_idx && c_idx < Seq.length c && IndexLogic0.index_logic (Seq.get c c_idx) = idx && (exists k : (int) . 0 <= k && k < Seq.length o && k <> i && IsOpp0.is_opp (Seq.get o k) (Seq.get c c_idx))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 25 0 123] exists k : (int) . 0 <= k && k < Seq.length c && IndexLogic0.index_logic (Seq.get o i) = IndexLogic0.index_logic (Seq.get c k) || LitInInternal0.lit_in_internal (Seq.get o i) new) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 26 0 179] exists k : (int) . 0 <= k && k < Seq.length c && IndexLogic0.index_logic (Seq.get o i) = IndexLogic0.index_logic (Seq.get c k) && IsPositiveLogic0.is_positive_logic (Seq.get o i) = IsPositiveLogic0.is_positive_logic (Seq.get c k) || LitInInternal0.lit_in_internal (Seq.get o i) new)
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaIdx2_Interface
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use mach.int.UInt64
  use Type
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreuSat_Logic_LogicClause_InvariantInternal_Interface as InvariantInternal0
  clone CreuSat_Logic_LogicLit_Impl1_LitInInternal_Interface as LitInInternal0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  function lemma_idx2 (c : Seq.seq (Type.creusat_lit_lit)) (o : Seq.seq (Type.creusat_lit_lit)) (new : Seq.seq (Type.creusat_lit_lit)) (i : int) (idx : int) (c_idx : int) (_f : Type.creusat_formula_formula) : ()
    
end
module CreuSat_Logic_LogicConflictAnalysis_LemmaIdx2
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use mach.int.UInt64
  use Type
  clone CreuSat_Logic_LogicLit_Impl1_IsOpp_Interface as IsOpp0
  clone CreuSat_Logic_LogicClause_InvariantInternal_Interface as InvariantInternal0
  clone CreuSat_Logic_LogicLit_Impl1_LitInInternal_Interface as LitInInternal0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  function lemma_idx2 [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 47 0 101] (c : Seq.seq (Type.creusat_lit_lit)) (o : Seq.seq (Type.creusat_lit_lit)) (new : Seq.seq (Type.creusat_lit_lit)) (i : int) (idx : int) (c_idx : int) (_f : Type.creusat_formula_formula) : ()
    
  axiom lemma_idx2_spec : forall c : Seq.seq (Type.creusat_lit_lit), o : Seq.seq (Type.creusat_lit_lit), new : Seq.seq (Type.creusat_lit_lit), i : int, idx : int, c_idx : int, _f : Type.creusat_formula_formula . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 45 0 97] exists k : (int) . 0 <= k && k < Seq.length new && IndexLogic0.index_logic (Seq.get o i) = IndexLogic0.index_logic (Seq.get new k)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 44 0 114] forall j : (int) . 0 <= j && j < Seq.length new -> LitInInternal0.lit_in_internal (Seq.get new j) c || LitInInternal0.lit_in_internal (Seq.get new j) o) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 43 0 108] forall j : (int) . 0 <= j && j < Seq.length c && IndexLogic0.index_logic (Seq.get c j) <> idx -> LitInInternal0.lit_in_internal (Seq.get c j) new) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 42 0 48] InvariantInternal0.invariant_internal c (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 41 0 48] InvariantInternal0.invariant_internal o (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 40 0 63] 0 <= i && i < Seq.length o && IndexLogic0.index_logic (Seq.get o i) <> idx) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 38 0 70] forall k : (int) . forall j : (int) . 0 <= j && j < Seq.length o && 0 <= k && k < Seq.length c && k <> c_idx && IndexLogic0.index_logic (Seq.get o j) <> idx -> not IsOpp0.is_opp (Seq.get c k) (Seq.get o j)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 34 0 2] 0 <= c_idx && c_idx < Seq.length c && IndexLogic0.index_logic (Seq.get c c_idx) = idx && (exists k : (int) . 0 <= k && k < Seq.length o && k <> i && IsOpp0.is_opp (Seq.get o k) (Seq.get c c_idx))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_conflict_analysis.rs" 46 0 41] LitInInternal0.lit_in_internal (Seq.get o i) new)
end
module CreuSat_Logic_LogicFormula_Impl1_Compatible_Interface
  use Type
  predicate compatible (self : Type.creusat_formula_formula) (o : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicFormula_Impl1_Compatible
  use Type
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicClause_Impl2_Equals_Interface as Equals0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate compatible [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 107 4 47] (self : Type.creusat_formula_formula) (o : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 107 4 47] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars self) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars o) && Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses o)) >= Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) && (forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) -> Equals0.equals (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses self)) i) (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses o)) i))
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate eventually_sat_inner (self : Type.creusat_formula_formula) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.UInt64
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_CompatibleInner_Interface as CompatibleInner0
  predicate eventually_sat_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 162 4 68] (self : Type.creusat_formula_formula) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 162 4 68] exists a2 : (Seq.seq uint8) . Seq.length a2 = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars self) && CompatibleInner0.compatible_inner a a2 && SatInner0.sat_inner self a2
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteInner_Interface
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate eventually_sat_complete_inner (self : Type.creusat_formula_formula) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteInner
  use Type
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.UInt64
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_CompatibleCompleteInner_Interface as CompatibleCompleteInner0
  predicate eventually_sat_complete_inner [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 169 4 77] (self : Type.creusat_formula_formula) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 169 4 77] exists a2 : (Seq.seq uint8) . Seq.length a2 = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars self) && CompatibleCompleteInner0.compatible_complete_inner a a2 && SatInner0.sat_inner self a2
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete_Interface
  use Type
  predicate eventually_sat_complete (self : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySatComplete
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteInner_Interface as EventuallySatCompleteInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate eventually_sat_complete [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 176 4 64] (self : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 176 4 64] EventuallySatCompleteInner0.eventually_sat_complete_inner self (Model0.model a)
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySat_Interface
  use Type
  predicate eventually_sat (self : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
end
module CreuSat_Logic_LogicFormula_Impl1_EventuallySat
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatInner_Interface as EventuallySatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate eventually_sat [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 181 4 55] (self : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_formula.rs" 181 4 55] EventuallySatInner0.eventually_sat_inner self (Model0.model a)
end
module CreuSat_Logic_LogicLit_IdxInLogic_Interface
  use mach.int.Int
  use Type
  predicate idx_in_logic [@inline:trivial] (idx : int) (c : Type.creusat_clause_clause)
end
module CreuSat_Logic_LogicLit_IdxInLogic
  use mach.int.Int
  use Type
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  predicate idx_in_logic [@inline:trivial] [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 10 0 48] (idx : int) (c : Type.creusat_clause_clause)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 10 0 48] exists i : (int) . 0 <= i && i < Seq.length (Model0.model c) && IndexLogic0.index_logic (Seq.get (Model0.model c) i) = idx
end
module CreuSat_Logic_LogicLit_Impl1_IdxInTrail_Interface
  use Type
  predicate idx_in_trail (self : Type.creusat_lit_lit) (t : Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global))
    
end
module CreuSat_Logic_LogicLit_Impl1_IdxInTrail
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  predicate idx_in_trail [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 165 4 51] (self : Type.creusat_lit_lit) (t : Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_lit.rs" 165 4 51] exists i : (int) . 0 <= i && i < Seq.length (Model0.model t) && IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit (Seq.get (Model0.model t) i)) = IndexLogic0.index_logic self
end
module CreuSat_Logic_LogicTrail_Impl0_InvariantReasonNew_Interface
  use Type
  predicate invariant_reason_new (self : Type.creusat_trail_reason) (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
    
end
module CreuSat_Logic_LogicTrail_Impl0_InvariantReasonNew
  use Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use seq.Seq
  clone CreuSat_Logic_LogicLit_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner_Interface as UnsatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate invariant_reason_new [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 27 4 73] (self : Type.creusat_trail_reason) (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 27 4 73] match (self) with
      | Type.CreuSat_Trail_Reason_Long cref -> 0 <= UInt64.to_int cref && UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) && Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) > 1 && (forall i : (int) . 1 <= i && i < Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) -> UnsatInner0.unsat_inner (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) i) (Model2.model a)) && SatInner0.sat_inner (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) 0) (Model2.model a)
      | Type.CreuSat_Trail_Reason_Unit cref -> 0 <= UInt64.to_int cref && UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) && Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) = 1 && SatInner0.sat_inner (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) 0) (Model2.model a)
      | _ -> true
      end
end
module CreuSat_Logic_LogicTrail_Impl2_NewPostUnit_Interface
  use Type
  predicate new_post_unit (self : Type.creusat_trail_trail) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_Impl2_NewPostUnit
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  clone CreuSat_Logic_LogicTrail_Impl0_InvariantReasonNew_Interface as InvariantReasonNew0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  predicate new_post_unit [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 121 4 50] (self : Type.creusat_trail_trail) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 121 4 50] forall j : (int) . 0 <= j && j < Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail self)) -> InvariantReasonNew0.invariant_reason_new (Type.creusat_trail_step_Step_reason (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail self)) j)) f (Type.creusat_trail_trail_Trail_assignments self)
end
module CreuSat_Logic_LogicTrail_AssignmentsAreInTrail_Interface
  use seq.Seq
  use Type
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  predicate assignments_are_in_trail (t : Seq.seq (Type.creusat_trail_step)) (a : Seq.seq uint8)
end
module CreuSat_Logic_LogicTrail_AssignmentsAreInTrail
  use seq.Seq
  use Type
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.Int32
  clone CreuSat_Logic_Logic_BoolToAssignedstate_Interface as BoolToAssignedstate0 with axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic_Interface as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  predicate assignments_are_in_trail [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 216 0 76] (t : Seq.seq (Type.creusat_trail_step)) (a : Seq.seq uint8)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 216 0 76] forall j : (int) . 0 <= j && j < Seq.length a -> (exists i : (int) . 0 <= i && i < Seq.length t && IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit (Seq.get t i)) = j && BoolToAssignedstate0.bool_to_assignedstate (IsPositiveLogic0.is_positive_logic (Type.creusat_trail_step_Step_lit (Seq.get t i))) = Seq.get a j)
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsTo_Interface
  use Type
  use mach.int.Int
  predicate clause_post_with_regards_to (c : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments) (j : int)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsTo
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Interface as ClausePostWithRegardsToInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate clause_post_with_regards_to [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 226 0 77] (c : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments) (j : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 226 0 77] ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner c (Model0.model a) j
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit_Interface
  use Type
  predicate clause_post_with_regards_to_lit (c : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments) (lit : Type.creusat_lit_lit)
    
end
module CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit
  use Type
  use mach.int.UInt64
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner_Interface as ClausePostWithRegardsToInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  predicate clause_post_with_regards_to_lit [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 259 0 83] (c : Type.creusat_clause_clause) (a : Type.creusat_assignments_assignments) (lit : Type.creusat_lit_lit)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 259 0 83] ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner c (Model0.model a) (UInt64.to_int (Type.creusat_lit_lit_Lit_idx lit))
end
module CreuSat_Logic_LogicTrail_LongArePostUnit_Interface
  use Type
  predicate long_are_post_unit (trail : Type.creusat_trail_trail) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicTrail_LongArePostUnit
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use mach.int.UInt64
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsTo_Interface as ClausePostWithRegardsTo0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  predicate long_are_post_unit [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 282 0 59] (trail : Type.creusat_trail_trail) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 282 0 59] forall j : (int) . 0 <= j && j < Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail trail)) -> match (Type.creusat_trail_step_Step_reason (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail trail)) j)) with
      | Type.CreuSat_Trail_Reason_Long k -> ClausePostWithRegardsTo0.clause_post_with_regards_to (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Type.creusat_trail_trail_Trail_assignments trail) (IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail trail)) j)))
      | _ -> true
      end
end
module CreuSat_Logic_LogicTrail_LemmaTrailPost_Interface
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Interface as LitIdxIn0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  function lemma_trail_post (f : Type.creusat_formula_formula) (lit : Type.creusat_lit_lit) (t : Type.creusat_trail_trail) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaTrailPost
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Interface as LitIdxIn0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  function lemma_trail_post [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 336 0 51] (f : Type.creusat_formula_formula) (lit : Type.creusat_lit_lit) (t : Type.creusat_trail_trail) : ()
    
  axiom lemma_trail_post_spec : forall f : Type.creusat_formula_formula, lit : Type.creusat_lit_lit, t : Type.creusat_trail_trail . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 321 0 27] Invariant0.invariant' t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 320 0 39] Invariant1.invariant' lit (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 319 0 26] Invariant2.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 322 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) -> match (Type.creusat_trail_step_Step_reason (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) i)) with
    | Type.CreuSat_Trail_Reason_Long k -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Model2.model (Type.creusat_trail_trail_Trail_assignments t)) && not LitIdxIn0.lit_idx_in lit (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Seq.set (Model2.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic lit) (3 : uint8))
    | _ -> true
    end) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 329 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) -> match (Type.creusat_trail_step_Step_reason (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) i)) with
    | Type.CreuSat_Trail_Reason_Long k -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Model2.model (Type.creusat_trail_trail_Trail_assignments t)) && not LitIdxIn0.lit_idx_in lit (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Seq.set (Model2.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic lit) (2 : uint8))
    | _ -> true
    end)
end
module CreuSat_Logic_LogicTrail_LemmaTrailOnlyLast_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use Type
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Interface as LitIdxIn0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_trail_only_last (f : Type.creusat_formula_formula) (lit : Type.creusat_lit_lit) (t : Type.creusat_trail_trail) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaTrailOnlyLast
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use Type
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn_Interface as LitIdxIn0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_trail_only_last [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 353 0 56] (f : Type.creusat_formula_formula) (lit : Type.creusat_lit_lit) (t : Type.creusat_trail_trail) : ()
    
  axiom lemma_trail_only_last_spec : forall f : Type.creusat_formula_formula, lit : Type.creusat_lit_lit, t : Type.creusat_trail_trail . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 346 0 56] lit = Type.creusat_trail_step_Step_lit (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) (Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 345 0 33] Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) > 0) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 344 0 39] Invariant0.invariant' lit (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 343 0 30] LitIsUnique0.lit_is_unique t) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 342 0 33] LitNotInLess0.lit_not_in_less t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 341 0 26] Invariant1.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 340 0 27] Invariant2.invariant' t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 347 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1 -> match (Type.creusat_trail_step_Step_reason (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) i)) with
    | Type.CreuSat_Trail_Reason_Long k -> not LitIdxIn0.lit_idx_in lit (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k))
    | _ -> true
    end)
end
module CreuSat_Logic_LogicTrail_LemmaTrailFin_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use Type
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_trail_fin (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (lit : Type.creusat_lit_lit) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaTrailFin
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use Type
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model2
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_trail_fin [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 381 0 50] (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (lit : Type.creusat_lit_lit) : ()
    
  axiom lemma_trail_fin_spec : forall t : Type.creusat_trail_trail, f : Type.creusat_formula_formula, lit : Type.creusat_lit_lit . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 366 0 56] lit = Type.creusat_trail_step_Step_lit (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) (Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 365 0 27] Invariant0.invariant' t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 364 0 33] Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) > 0) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 363 0 39] Invariant1.invariant' lit (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 362 0 30] LitIsUnique0.lit_is_unique t) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 361 0 33] LitNotInLess0.lit_not_in_less t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 360 0 26] Invariant2.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 367 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1 -> match (Type.creusat_trail_step_Step_reason (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) i)) with
    | Type.CreuSat_Trail_Reason_Long k -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Model2.model (Type.creusat_trail_trail_Trail_assignments t)) -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Seq.set (Model2.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic lit) (3 : uint8))
    | _ -> true
    end) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 374 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1 -> match (Type.creusat_trail_step_Step_reason (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) i)) with
    | Type.CreuSat_Trail_Reason_Long k -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Model2.model (Type.creusat_trail_trail_Trail_assignments t)) -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Seq.set (Model2.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic lit) (2 : uint8))
    | _ -> true
    end)
end
module CreuSat_Logic_LogicUtil_Pop_Interface
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq_ext.SeqExt
  function pop (s : Seq.seq t) : Seq.seq t
end
module CreuSat_Logic_LogicUtil_Pop
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq_ext.SeqExt
  function pop [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 63 0 34] (s : Seq.seq t) : Seq.seq t
  axiom pop_spec : forall s : Seq.seq t . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 59 0 24] Seq.length s > 0) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 60 0 51] pop s = SeqExt.subsequence s 0 (Seq.length s - 1)) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 61 0 39] Seq.length (pop s) = Seq.length s - 1) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 62 0 75] forall i : (int) . 0 <= i && i < Seq.length (pop s) -> Seq.get (pop s) i = Seq.get s i)
end
module CreuSat_Logic_LogicTrail_LemmaTrailFin2_Interface
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  use mach.int.UInt64
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = Type.creusat_trail_step, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_trail_fin2 (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (lit : Type.creusat_lit_lit) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaTrailFin2
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  use mach.int.UInt64
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = Type.creusat_trail_step, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_trail_fin2 [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 413 0 51] (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (lit : Type.creusat_lit_lit) : ()
    
  axiom lemma_trail_fin2_spec : forall t : Type.creusat_trail_trail, f : Type.creusat_formula_formula, lit : Type.creusat_lit_lit . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 410 0 66] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail t)) f (Model1.model (Type.creusat_trail_trail_Trail_assignments t))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 403 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1 -> match (Type.creusat_trail_step_Step_reason (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) i)) with
    | Type.CreuSat_Trail_Reason_Long k -> PostUnitInner0.post_unit_inner (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) -> PostUnitInner0.post_unit_inner (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Seq.set (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic lit) (2 : uint8))
    | _ -> true
    end) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 396 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1 -> match (Type.creusat_trail_step_Step_reason (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) i)) with
    | Type.CreuSat_Trail_Reason_Long k -> PostUnitInner0.post_unit_inner (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) -> PostUnitInner0.post_unit_inner (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int k)) (Seq.set (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic lit) (3 : uint8))
    | _ -> true
    end) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 395 0 56] lit = Type.creusat_trail_step_Step_lit (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) (Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 394 0 33] Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) > 0) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 393 0 39] Invariant0.invariant' lit (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 392 0 30] LitIsUnique0.lit_is_unique t) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 391 0 33] LitNotInLess0.lit_not_in_less t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 390 0 27] Invariant1.invariant' t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 389 0 26] Invariant2.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 411 0 100] LongArePostUnitInner0.long_are_post_unit_inner (Pop0.pop (Model0.model (Type.creusat_trail_trail_Trail_trail t))) f (Seq.set (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic lit) (2 : uint8))) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 412 0 100] LongArePostUnitInner0.long_are_post_unit_inner (Pop0.pop (Model0.model (Type.creusat_trail_trail_Trail_trail t))) f (Seq.set (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic lit) (3 : uint8)))
end
module CreuSat_Logic_LogicTrail_LemmaTrailFin3_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = Type.creusat_trail_step, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_trail_fin3 (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (lit : Type.creusat_lit_lit) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaTrailFin3
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = Type.creusat_trail_step, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_trail_fin3 [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 430 0 51] (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (lit : Type.creusat_lit_lit) : ()
    
  axiom lemma_trail_fin3_spec : forall t : Type.creusat_trail_trail, f : Type.creusat_formula_formula, lit : Type.creusat_lit_lit . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 427 0 66] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail t)) f (Model1.model (Type.creusat_trail_trail_Trail_assignments t))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 426 0 56] lit = Type.creusat_trail_step_Step_lit (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) (Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 425 0 33] Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) > 0) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 424 0 39] Invariant0.invariant' lit (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 423 0 30] LitIsUnique0.lit_is_unique t) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 422 0 33] LitNotInLess0.lit_not_in_less t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 421 0 27] Invariant1.invariant' t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 420 0 26] Invariant2.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 428 0 100] LongArePostUnitInner0.long_are_post_unit_inner (Pop0.pop (Model0.model (Type.creusat_trail_trail_Trail_trail t))) f (Seq.set (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic lit) (3 : uint8))) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 429 0 100] LongArePostUnitInner0.long_are_post_unit_inner (Pop0.pop (Model0.model (Type.creusat_trail_trail_Trail_trail t))) f (Seq.set (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic lit) (2 : uint8)))
end
module CreuSat_Logic_LogicTrail_LemmaPopNoUnassIsOk_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = Type.creusat_trail_step, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_pop_no_unass_is_ok (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (l : Type.creusat_lit_lit) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaPopNoUnassIsOk
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = Type.creusat_trail_step, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_pop_no_unass_is_ok [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 448 0 57] (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (l : Type.creusat_lit_lit) : ()
    
  axiom lemma_pop_no_unass_is_ok_spec : forall t : Type.creusat_trail_trail, f : Type.creusat_formula_formula, l : Type.creusat_lit_lit . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 446 0 66] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail t)) f (Model1.model (Type.creusat_trail_trail_Trail_assignments t))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 445 0 54] l = Type.creusat_trail_step_Step_lit (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) (Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 444 0 33] Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) > 0) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 443 0 30] LitIsUnique0.lit_is_unique t) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 442 0 33] LitNotInLess0.lit_not_in_less t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 441 0 27] Invariant0.invariant' t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 447 0 70] LongArePostUnitInner0.long_are_post_unit_inner (Pop0.pop (Model0.model (Type.creusat_trail_trail_Trail_trail t))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments t)))
end
module CreuSat_Logic_LogicTrail_LemmaBacktrackOk_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = Type.creusat_trail_step, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_backtrack_ok (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (l : Type.creusat_lit_lit) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaBacktrackOk
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = Type.creusat_trail_step, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess_Interface as LitNotInLess0
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique_Interface as LitIsUnique0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_backtrack_ok [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 463 0 55] (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (l : Type.creusat_lit_lit) : ()
    
  axiom lemma_backtrack_ok_spec : forall t : Type.creusat_trail_trail, f : Type.creusat_formula_formula, l : Type.creusat_lit_lit . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 460 0 66] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail t)) f (Model1.model (Type.creusat_trail_trail_Trail_assignments t))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 459 0 54] l = Type.creusat_trail_step_Step_lit (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) (Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) - 1))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 458 0 37] Invariant0.invariant' l (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 457 0 33] Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) > 0) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 456 0 30] LitIsUnique0.lit_is_unique t) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 455 0 33] LitNotInLess0.lit_not_in_less t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 454 0 27] Invariant1.invariant' t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 453 0 26] Invariant2.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 461 0 98] LongArePostUnitInner0.long_are_post_unit_inner (Pop0.pop (Model0.model (Type.creusat_trail_trail_Trail_trail t))) f (Seq.set (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic l) (3 : uint8))) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 462 0 98] LongArePostUnitInner0.long_are_post_unit_inner (Pop0.pop (Model0.model (Type.creusat_trail_trail_Trail_trail t))) f (Seq.set (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic l) (2 : uint8)))
end
module CreuSat_Logic_LogicTrail_LemmaAssignMaintainsPostForEach_Interface
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  function lemma_assign_maintains_post_for_each (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) (lit : Type.creusat_lit_lit) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaAssignMaintainsPostForEach
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  function lemma_assign_maintains_post_for_each [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 487 0 77] (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) (lit : Type.creusat_lit_lit) : ()
    
  axiom lemma_assign_maintains_post_for_each_spec : forall f : Type.creusat_formula_formula, a : Type.creusat_assignments_assignments, lit : Type.creusat_lit_lit . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 478 0 43] Unset0.unset (Seq.get (Model0.model a) (IndexLogic0.index_logic lit))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 477 0 39] Invariant0.invariant' lit (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 476 0 26] Invariant1.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 475 0 27] Invariant2.invariant' a f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 479 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) i) (Model0.model a) -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) i) (Seq.set (Model0.model a) (IndexLogic0.index_logic lit) (1 : uint8))) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 483 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) i) (Model0.model a) -> PostUnitInner0.post_unit_inner (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) i) (Seq.set (Model0.model a) (IndexLogic0.index_logic lit) (0 : uint8)))
end
module CreuSat_Logic_LogicTrail_LemmaAssignMaintainsForEachToPost_Interface
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.UInt64
  use Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreuSat_Logic_LogicTrail_CrefsInRange_Interface as CrefsInRange0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_assign_maintains_for_each_to_post (v : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) (lit : Type.creusat_lit_lit) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaAssignMaintainsForEachToPost
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use prelude.Prelude
  use prelude.UInt8
  use mach.int.UInt64
  use Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreuSat_Logic_LogicTrail_CrefsInRange_Interface as CrefsInRange0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner_Interface as PostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_assign_maintains_for_each_to_post [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 508 0 94] (v : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) (lit : Type.creusat_lit_lit) : ()
    
  axiom lemma_assign_maintains_for_each_to_post_spec : forall v : Seq.seq (Type.creusat_trail_step), f : Type.creusat_formula_formula, a : Type.creusat_assignments_assignments, lit : Type.creusat_lit_lit . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 502 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) -> PostUnitInner0.post_unit_inner (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) i) (Model1.model a) -> PostUnitInner0.post_unit_inner (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) i) (Seq.set (Model1.model a) (IndexLogic0.index_logic lit) (0 : uint8))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 498 0 2] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) -> PostUnitInner0.post_unit_inner (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) i) (Model1.model a) -> PostUnitInner0.post_unit_inner (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) i) (Seq.set (Model1.model a) (IndexLogic0.index_logic lit) (1 : uint8))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 497 0 47] LongArePostUnitInner0.long_are_post_unit_inner v f (Model1.model a)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 496 0 43] Unset0.unset (Seq.get (Model1.model a) (IndexLogic0.index_logic lit))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 495 0 39] Invariant0.invariant' lit (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 494 0 33] CrefsInRange0.crefs_in_range v f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 493 0 34] TrailInvariant0.trail_invariant v f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 492 0 26] Invariant1.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 491 0 27] Invariant2.invariant' a f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 506 0 76] LongArePostUnitInner0.long_are_post_unit_inner v f (Seq.set (Model1.model a) (IndexLogic0.index_logic lit) (1 : uint8))) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 507 0 76] LongArePostUnitInner0.long_are_post_unit_inner v f (Seq.set (Model1.model a) (IndexLogic0.index_logic lit) (0 : uint8)))
end
module CreuSat_Logic_LogicTrail_LemmaAssignMaintainsLongArePostUnit_Interface
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreuSat_Logic_LogicTrail_CrefsInRange_Interface as CrefsInRange0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  function lemma_assign_maintains_long_are_post_unit (v : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) (lit : Type.creusat_lit_lit) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaAssignMaintainsLongArePostUnit
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreuSat_Logic_LogicTrail_CrefsInRange_Interface as CrefsInRange0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  function lemma_assign_maintains_long_are_post_unit [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 521 0 100] (v : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) (lit : Type.creusat_lit_lit) : ()
    
  axiom lemma_assign_maintains_long_are_post_unit_spec : forall v : Seq.seq (Type.creusat_trail_step), f : Type.creusat_formula_formula, a : Type.creusat_assignments_assignments, lit : Type.creusat_lit_lit . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 518 0 47] LongArePostUnitInner0.long_are_post_unit_inner v f (Model0.model a)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 517 0 43] Unset0.unset (Seq.get (Model0.model a) (IndexLogic0.index_logic lit))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 516 0 39] Invariant0.invariant' lit (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 515 0 33] CrefsInRange0.crefs_in_range v f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 514 0 34] TrailInvariant0.trail_invariant v f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 513 0 26] Invariant1.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 512 0 27] Invariant2.invariant' a f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 519 0 76] LongArePostUnitInner0.long_are_post_unit_inner v f (Seq.set (Model0.model a) (IndexLogic0.index_logic lit) (1 : uint8))) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 520 0 76] LongArePostUnitInner0.long_are_post_unit_inner v f (Seq.set (Model0.model a) (IndexLogic0.index_logic lit) (0 : uint8)))
end
module CreuSat_Logic_LogicTrail_LemmaAssignMaintainsLongArePostUnit2_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreuSat_Logic_LogicTrail_CrefsInRange_Interface as CrefsInRange0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  function lemma_assign_maintains_long_are_post_unit2 (v : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) (idx : usize) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaAssignMaintainsLongArePostUnit2
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_TrailInvariant_Interface as TrailInvariant0
  clone CreuSat_Logic_LogicTrail_CrefsInRange_Interface as CrefsInRange0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  function lemma_assign_maintains_long_are_post_unit2 [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 538 0 103] (v : Seq.seq (Type.creusat_trail_step)) (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) (idx : usize) : ()
    
  axiom lemma_assign_maintains_long_are_post_unit2_spec : forall v : Seq.seq (Type.creusat_trail_step), f : Type.creusat_formula_formula, a : Type.creusat_assignments_assignments, idx : usize . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 535 0 47] LongArePostUnitInner0.long_are_post_unit_inner v f (Model0.model a)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 534 0 30] Unset0.unset (Seq.get (Model0.model a) (UInt64.to_int idx))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 533 0 31] UInt64.to_int idx < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 532 0 33] CrefsInRange0.crefs_in_range v f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 531 0 34] TrailInvariant0.trail_invariant v f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 530 0 26] Invariant0.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 529 0 27] Invariant1.invariant' a f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 536 0 63] LongArePostUnitInner0.long_are_post_unit_inner v f (Seq.set (Model0.model a) (UInt64.to_int idx) (1 : uint8))) && ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 537 0 63] LongArePostUnitInner0.long_are_post_unit_inner v f (Seq.set (Model0.model a) (UInt64.to_int idx) (0 : uint8)))
end
module CreuSat_Logic_LogicTrail_LemmaPostUnitNoUnset_Interface
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnit_Interface as PostUnit0
  function lemma_post_unit_no_unset (c : Type.creusat_clause_clause) (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaPostUnitNoUnset
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  clone CreuSat_Logic_LogicLit_Impl1_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnit_Interface as PostUnit0
  function lemma_post_unit_no_unset [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 548 0 60] (c : Type.creusat_clause_clause) (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) : ()
    
  axiom lemma_post_unit_no_unset_spec : forall c : Type.creusat_clause_clause, t : Type.creusat_trail_trail, f : Type.creusat_formula_formula . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 546 0 39] PostUnit0.post_unit c (Type.creusat_trail_trail_Trail_assignments t)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 545 0 37] Invariant0.invariant' c (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 547 0 85] forall i : (int) . 0 <= i && i < Seq.length (Model0.model c) -> not Unset0.unset (Seq.get (Model0.model c) i) (Type.creusat_trail_trail_Trail_assignments t))
end
module CreuSat_Logic_LogicTrail_LemmaIdxNotInPostUnit_Interface
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnit_Interface as PostUnit0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  function lemma_idx_not_in_post_unit (c : Type.creusat_clause_clause) (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (idx : int) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaIdxNotInPostUnit
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl1_PostUnit_Interface as PostUnit0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  function lemma_idx_not_in_post_unit [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 557 0 72] (c : Type.creusat_clause_clause) (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (idx : int) : ()
    
  axiom lemma_idx_not_in_post_unit_spec : forall c : Type.creusat_clause_clause, t : Type.creusat_trail_trail, f : Type.creusat_formula_formula, idx : int . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 555 0 41] Unset0.unset (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_assignments t)) idx)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 554 0 30] idx < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 553 0 39] PostUnit0.post_unit c (Type.creusat_trail_trail_Trail_assignments t)) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 552 0 37] Invariant0.invariant' c (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 556 0 84] forall i : (int) . 0 <= i && i < Seq.length (Model1.model c) -> IndexLogic0.index_logic (Seq.get (Model1.model c) i) <> idx)
end
module CreuSat_Logic_LogicTrail_LemmaUnsetToForall_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  use mach.int.UInt64
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model3
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  function lemma_unset_to_forall (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (step : Type.creusat_trail_step) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaUnsetToForall
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  use mach.int.UInt64
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model3
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  function lemma_unset_to_forall [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 572 0 58] (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (step : Type.creusat_trail_step) : ()
    
  axiom lemma_unset_to_forall_spec : forall t : Type.creusat_trail_trail, f : Type.creusat_formula_formula, step : Type.creusat_trail_step . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 564 0 60] Unset0.unset (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit step)))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 563 0 30] Invariant0.invariant' step f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 562 0 27] Invariant1.invariant' t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 565 0 3] forall i : (int) . 0 <= i && i < Seq.length (Model1.model (Type.creusat_trail_trail_Trail_trail t)) -> match (Type.creusat_trail_step_Step_reason (Seq.get (Model1.model (Type.creusat_trail_trail_Trail_trail t)) i)) with
    | Type.CreuSat_Trail_Reason_Long cref -> forall k : (int) . 0 <= k && k < Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) -> IndexLogic0.index_logic (Seq.get (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) k) <> IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit step)
    | _ -> true
    end)
end
module CreuSat_Logic_LogicTrail_LemmaForallToUnsetPush_Interface
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  use mach.int.UInt64
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface as LitNotInLessInner0
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model3
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model2
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_forall_to_unset_push (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (step : Type.creusat_trail_step) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaForallToUnsetPush
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use Type
  use mach.int.UInt64
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface as LitNotInLessInner0
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model3
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model2
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_forall_to_unset_push [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 588 0 63] (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (step : Type.creusat_trail_step) : ()
    
  axiom lemma_forall_to_unset_push_spec : forall t : Type.creusat_trail_trail, f : Type.creusat_formula_formula, step : Type.creusat_trail_step . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 580 0 3] forall i : (int) . 0 <= i && i < Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail t)) -> match (Type.creusat_trail_step_Step_reason (Seq.get (Model0.model (Type.creusat_trail_trail_Trail_trail t)) i)) with
    | Type.CreuSat_Trail_Reason_Long cref -> forall k : (int) . 0 <= k && k < Seq.length (Model2.model (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) -> IndexLogic0.index_logic (Seq.get (Model2.model (Seq.get (Model1.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) k) <> IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit step)
    | _ -> true
    end) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 579 0 30] Invariant0.invariant' step f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 578 0 60] Unset0.unset (Seq.get (Model3.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit step)))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 577 0 27] Invariant1.invariant' t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 587 0 59] LitNotInLessInner0.lit_not_in_less_inner (Seq.snoc (Model0.model (Type.creusat_trail_trail_Trail_trail t)) step) f)
end
module CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess_Interface
  use seq.Seq
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_push_maintains_lit_not_in_less (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (step : Type.creusat_trail_step) : ()
    
end
module CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess
  use seq.Seq
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner_Interface as LitNotInLessInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_push_maintains_lit_not_in_less [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 598 0 77] (t : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) (step : Type.creusat_trail_step) : ()
    
  axiom lemma_push_maintains_lit_not_in_less_spec : forall t : Type.creusat_trail_trail, f : Type.creusat_formula_formula, step : Type.creusat_trail_step . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 596 0 47] LitNotInLessInner0.lit_not_in_less_inner (Model0.model (Type.creusat_trail_trail_Trail_trail t)) f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 595 0 30] Invariant0.invariant' step f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 594 0 60] Unset0.unset (Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments t)) (IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit step)))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 593 0 27] Invariant1.invariant' t f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 592 0 26] Invariant2.invariant' f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_trail.rs" 597 0 59] LitNotInLessInner0.lit_not_in_less_inner (Seq.snoc (Model0.model (Type.creusat_trail_trail_Trail_trail t)) step) f)
end
module CreuSat_Logic_LogicUtil_SortedRangeRev_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate sorted_range_rev (s : Seq.seq (usize, usize)) (l : int) (u : int)
end
module CreuSat_Logic_LogicUtil_SortedRangeRev
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate sorted_range_rev [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 6 0 71] (s : Seq.seq (usize, usize)) (l : int) (u : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 6 0 71] forall j : (int) . forall i : (int) . l <= i && i < j && j < u -> (let (a, _) = Seq.get s i in a) >= (let (a, _) = Seq.get s j in a)
end
module CreuSat_Logic_LogicUtil_SortedRev_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate sorted_rev (s : Seq.seq (usize, usize))
end
module CreuSat_Logic_LogicUtil_SortedRev
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  clone CreuSat_Logic_LogicUtil_SortedRangeRev_Interface as SortedRangeRev0
  predicate sorted_rev [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 13 0 49] (s : Seq.seq (usize, usize))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 13 0 49] SortedRangeRev0.sorted_range_rev s 0 (Seq.length s)
end
module CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate sorted_range_tuple_zeroth (s : Seq.seq (usize, usize)) (l : int) (u : int)
end
module CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate sorted_range_tuple_zeroth [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 34 0 80] (s : Seq.seq (usize, usize)) (l : int) (u : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 34 0 80] forall j : (int) . forall i : (int) . l <= i && i < j && j < u -> (let (a, _) = Seq.get s i in a) <= (let (a, _) = Seq.get s j in a)
end
module CreuSat_Logic_LogicUtil_SortedTupleZeroth_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate sorted_tuple_zeroth (s : Seq.seq (usize, usize))
end
module CreuSat_Logic_LogicUtil_SortedTupleZeroth
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  clone CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth_Interface as SortedRangeTupleZeroth0
  predicate sorted_tuple_zeroth [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 41 0 58] (s : Seq.seq (usize, usize))
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 41 0 58] SortedRangeTupleZeroth0.sorted_range_tuple_zeroth s 0 (Seq.length s)
end
module CreuSat_Logic_LogicUtil_Partition_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate partition (v : Seq.seq (usize, usize)) (i : int)
end
module CreuSat_Logic_LogicUtil_Partition
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  predicate partition [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 48 0 56] (v : Seq.seq (usize, usize)) (i : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 48 0 56] forall k2 : (int) . forall k1 : (int) . 0 <= k1 && k1 < i && i <= k2 && k2 < Seq.length v -> (let (a, _) = Seq.get v k1 in a) <= (let (a, _) = Seq.get v k2 in a)
end
module CreuSat_Logic_LogicUtil_PartitionRev_Interface
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  predicate partition_rev (v : Seq.seq (usize, usize)) (i : int)
end
module CreuSat_Logic_LogicUtil_PartitionRev
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use mach.int.Int32
  predicate partition_rev [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 53 0 60] (v : Seq.seq (usize, usize)) (i : int)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 53 0 60] forall k2 : (int) . forall k1 : (int) . 0 <= k1 && k1 < i && i <= k2 && k2 < Seq.length v -> (let (a, _) = Seq.get v k1 in a) >= (let (a, _) = Seq.get v k2 in a)
end
module CreuSat_Logic_LogicUtil_LastIdx_Interface
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  function last_idx (s : Seq.seq t) : int
end
module CreuSat_Logic_LogicUtil_LastIdx
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  function last_idx [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 72 0 36] (s : Seq.seq t) : int
  axiom last_idx_spec : forall s : Seq.seq t . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 71 0 24] Seq.length s > 0) -> true
end
module CreuSat_Logic_LogicUtil_LastElem_Interface
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  function last_elem (s : Seq.seq t) : t
end
module CreuSat_Logic_LogicUtil_LastElem
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  function last_elem [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 79 0 35] (s : Seq.seq t) : t
  axiom last_elem_spec : forall s : Seq.seq t . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 78 0 24] Seq.length s > 0) -> true
end
module CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use mach.int.UInt64
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = usize, axiom .
  clone CreuSat_Logic_LogicUtil_Sorted_Interface as Sorted0
  function lemma_pop_maintains_sorted (s : Seq.seq usize) : ()
end
module CreuSat_Logic_LogicUtil_LemmaPopMaintainsSorted
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use mach.int.UInt64
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = usize, axiom .
  clone CreuSat_Logic_LogicUtil_Sorted_Interface as Sorted0
  function lemma_pop_maintains_sorted [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 88 0 48] (s : Seq.seq usize) : ()
    
  axiom lemma_pop_maintains_sorted_spec : forall s : Seq.seq usize . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 86 0 22] Sorted0.sorted s) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 85 0 24] Seq.length s > 0) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_util.rs" 87 0 26] Sorted0.sorted (Pop0.pop s))
end
module CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface
  use seq.Seq
  use Type
  predicate watcher_crefs_in_range (w : Seq.seq (Type.creusat_watches_watcher)) (f : Type.creusat_formula_formula)
end
module CreuSat_Logic_LogicWatches_WatcherCrefsInRange
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  predicate watcher_crefs_in_range [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 23 0 66] (w : Seq.seq (Type.creusat_watches_watcher)) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 23 0 66] forall j : (int) . 0 <= j && j < Seq.length w -> UInt64.to_int (Type.creusat_watches_watcher_Watcher_cref (Seq.get w j)) < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f))
end
module CreuSat_Logic_LogicWatches_WatchesCrefsInRange_Interface
  use seq.Seq
  use Type
  predicate watches_crefs_in_range (w : Seq.seq (Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global))) (f : Type.creusat_formula_formula)
    
end
module CreuSat_Logic_LogicWatches_WatchesCrefsInRange
  use seq.Seq
  use Type
  use mach.int.Int
  use mach.int.Int32
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface as WatcherCrefsInRange0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  predicate watches_crefs_in_range [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 31 0 71] (w : Seq.seq (Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global))) (f : Type.creusat_formula_formula)
    
   =
    [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 31 0 71] forall i : (int) . 0 <= i && i < Seq.length w -> WatcherCrefsInRange0.watcher_crefs_in_range (Model0.model (Seq.get w i)) f
end
module CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant_Interface
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = Type.creusat_watches_watcher, axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface as WatcherCrefsInRange0
  function lemma_pop_watch_maintains_watcher_invariant (w : Seq.seq (Type.creusat_watches_watcher)) (f : Type.creusat_formula_formula) : ()
    
end
module CreuSat_Logic_LogicWatches_LemmaPopWatchMaintainsWatcherInvariant
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicUtil_Pop_Interface as Pop0 with type t = Type.creusat_watches_watcher, axiom .
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface as WatcherCrefsInRange0
  function lemma_pop_watch_maintains_watcher_invariant [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 43 0 79] (w : Seq.seq (Type.creusat_watches_watcher)) (f : Type.creusat_formula_formula) : ()
    
  axiom lemma_pop_watch_maintains_watcher_invariant_spec : forall w : Seq.seq (Type.creusat_watches_watcher), f : Type.creusat_formula_formula . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 41 0 41] WatcherCrefsInRange0.watcher_crefs_in_range w f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 40 0 24] Seq.length w > 0) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 42 0 45] WatcherCrefsInRange0.watcher_crefs_in_range (Pop0.pop w) f)
end
module CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use Type
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface as WatcherCrefsInRange0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_push_maintains_watcher_invariant (w : Seq.seq (Type.creusat_watches_watcher)) (f : Type.creusat_formula_formula) (o : Type.creusat_watches_watcher) : ()
    
end
module CreuSat_Logic_LogicWatches_LemmaPushMaintainsWatcherInvariant
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use Type
  clone CreuSat_Logic_LogicWatches_WatcherCrefsInRange_Interface as WatcherCrefsInRange0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  function lemma_push_maintains_watcher_invariant [#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 50 0 86] (w : Seq.seq (Type.creusat_watches_watcher)) (f : Type.creusat_formula_formula) (o : Type.creusat_watches_watcher) : ()
    
  axiom lemma_push_maintains_watcher_invariant_spec : forall w : Seq.seq (Type.creusat_watches_watcher), f : Type.creusat_formula_formula, o : Type.creusat_watches_watcher . ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 48 0 41] UInt64.to_int (Type.creusat_watches_watcher_Watcher_cref o) < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f))) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 47 0 41] WatcherCrefsInRange0.watcher_crefs_in_range w f) -> ([#"/home/sarek/master/sat-mirror/CreuSAT/src/logic/logic_watches.rs" 49 0 48] WatcherCrefsInRange0.watcher_crefs_in_range (Seq.snoc w o) f)
end
module CreuSat_Solver_GetAssertingLevel_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model1 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy1.modelTy
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val get_asserting_level [@cfg:stackify] (clause : Type.creusat_clause_clause) (trail : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) : (usize, usize)
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 68 0 48] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model0.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 67 0 54] VarsInRangeInner0.vars_in_range_inner (Model0.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 66 0 32] Seq.length (Model0.model clause) > 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 65 0 42] Invariant0.invariant' clause (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 64 0 49] EquisatExtensionInner0.equisat_extension_inner clause (Model1.model f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 63 0 32] Invariant1.invariant' trail f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 62 0 26] Invariant2.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 69 0 39] UInt64.to_int (let (a, _) = result in a) < Seq.length (Model0.model clause) }
    
end
module CreuSat_Solver_GetAssertingLevel
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model8 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model8.model
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model3 with function Model0.model = Model7.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model2 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model7.model,
  function Model1.model = Model2.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model4.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy1
  clone CreusotContracts_Logic_Model_Impl0_Model as Model1 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model3.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model7.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model5.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model8.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model7.model,
  function Model1.model = Model2.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model5.model,
  function Model1.model = Model8.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner1.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model5.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant3.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model5.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model8.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model4.model, function Model1.model = Model5.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model2.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model7.model,
  predicate Invariant0.invariant' = Invariant0.invariant', function Model1.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicClause_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model2.model
  val get_asserting_level [@cfg:stackify] (clause : Type.creusat_clause_clause) (trail : Type.creusat_trail_trail) (f : Type.creusat_formula_formula) : (usize, usize)
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 68 0 48] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model0.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 67 0 54] VarsInRangeInner0.vars_in_range_inner (Model0.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 66 0 32] Seq.length (Model0.model clause) > 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 65 0 42] Invariant0.invariant' clause (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 64 0 49] EquisatExtensionInner0.equisat_extension_inner clause (Model1.model f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 63 0 32] Invariant1.invariant' trail f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 62 0 26] Invariant2.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 69 0 39] UInt64.to_int (let (a, _) = result in a) < Seq.length (Model0.model clause) }
    
end
module CreuSat_Solver_Impl0_New_Interface
  use prelude.Prelude
  use Type
  val new [@cfg:stackify] (f : Type.creusat_formula_formula) : Type.creusat_solver_solver
end
module CreuSat_Solver_Impl0_New
  use prelude.Prelude
  use Type
  val new [@cfg:stackify] (f : Type.creusat_formula_formula) : Type.creusat_solver_solver
end
module CreuSat_Solver_Impl0_IncreaseNumConflicts_Interface
  use prelude.Prelude
  use Type
  val increase_num_conflicts [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) : ()
end
module CreuSat_Solver_Impl0_IncreaseNumConflicts
  use prelude.Prelude
  use Type
  val increase_num_conflicts [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) : ()
end
module CreuSat_Solver_Impl0_IncreaseNumLemmas_Interface
  use prelude.Prelude
  use Type
  val increase_num_lemmas [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) : ()
end
module CreuSat_Solver_Impl0_IncreaseNumLemmas
  use prelude.Prelude
  use Type
  val increase_num_lemmas [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) : ()
end
module CreuSat_Solver_Impl0_HandleLongClause_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant4 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_VarsInRangeInner_Interface as VarsInRangeInner0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner_Interface as NoDuplicateIndexesInner0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner_Interface as EquisatExtensionInner0
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model0 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val handle_long_clause [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (f : borrowed (Type.creusat_formula_formula)) (t : borrowed (Type.creusat_trail_trail)) (w : borrowed (Type.creusat_watches_watches)) (d : borrowed (Type.creusat_decision_decisions)) (clause : Type.creusat_clause_clause) (s_idx : usize) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 146 4 52] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 145 4 52] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 144 4 58] VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 143 4 41] UInt64.to_int s_idx < Seq.length (Model1.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 142 4 36] Seq.length (Model1.model clause) > 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 141 4 46] Invariant0.invariant' clause (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 140 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 139 4 48] Invariant1.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 138 4 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 137 4 42] Invariant3.invariant' ( * t) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 136 4 37] Invariant4.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 148 4 29] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 147 4 45] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 139 4 48] Invariant1.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 138 4 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 137 4 42] Invariant3.invariant' ( ^ t) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 136 4 37] Invariant4.invariant' ( ^ f) }
    
end
module CreuSat_Solver_Impl0_HandleLongClause
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model11 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model10 with function Model0.model = Model11.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant6 with function Model0.model = Model10.model
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model2 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model6.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model10.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model7.model,
  function Model1.model = Model10.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model7.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant8 with function Model0.model = Model8.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant7 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant8.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model8.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model7.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model8.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model8.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model8.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant6.invariant',
  function Model0.model = Model7.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model6.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model10.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant3 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model6.model, function Model1.model = Model7.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model9.model,
  function Model1.model = Model8.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model5.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model8.model,
  predicate Invariant0.invariant' = Invariant0.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant4 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl1_Model as Model0 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model2.model
  val handle_long_clause [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (f : borrowed (Type.creusat_formula_formula)) (t : borrowed (Type.creusat_trail_trail)) (w : borrowed (Type.creusat_watches_watches)) (d : borrowed (Type.creusat_decision_decisions)) (clause : Type.creusat_clause_clause) (s_idx : usize) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 146 4 52] EquisatExtensionInner0.equisat_extension_inner clause (Model0.model f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 145 4 52] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 144 4 58] VarsInRangeInner0.vars_in_range_inner (Model1.model clause) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 143 4 41] UInt64.to_int s_idx < Seq.length (Model1.model clause)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 142 4 36] Seq.length (Model1.model clause) > 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 141 4 46] Invariant0.invariant' clause (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 140 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 139 4 48] Invariant1.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 138 4 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 137 4 42] Invariant3.invariant' ( * t) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 136 4 37] Invariant4.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 148 4 29] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 147 4 45] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 139 4 48] Invariant1.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 138 4 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 137 4 42] Invariant3.invariant' ( ^ t) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 136 4 37] Invariant4.invariant' ( ^ f) }
    
end
module CreuSat_Logic_LogicAssignments_Impl0
  use mach.int.Int
  use prelude.Prelude
  use prelude.UInt8
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model0 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = Type.creusat_assignments_assignments,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy1 with type self = Type.creusat_assignments_assignments,
  type modelTy = ModelTy0.modelTy
end
module CreuSat_Trail_Impl0_LearnUnit_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  use prelude.Prelude
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model3
  clone CreuSat_Logic_LogicClause_Impl2_Invariant_Interface as Invariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  val learn_unit [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (cref : usize) (f : Type.creusat_formula_formula) (d : borrowed (Type.creusat_decision_decisions)) : Type.core_result_result () ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 313 4 77] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 307 4 59] Invariant0.invariant' (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref)) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 306 4 50] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) = 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 305 4 43] UInt64.to_int cref < Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 304 4 30] Invariant1.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 303 4 48] Invariant2.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 302 4 42] Invariant3.invariant' ( * self) f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 314 4 86] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 310 4 70] match (result) with
      | Type.Core_Result_Result_Err _ -> true
      | Type.Core_Result_Result_Ok _ -> Sat0.sat (Seq.get (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) 0) (Type.creusat_trail_trail_Trail_assignments ( ^ self))
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 303 4 48] Invariant2.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 302 4 42] Invariant3.invariant' ( ^ self) f }
    
end
module CreuSat_Trail_Impl0_LearnUnit
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use Type
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model7.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant2 with function Model0.model = Model6.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant0 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model2.model,
  function Model1.model = Model3.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant6 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant0.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model3.model, predicate Sat0.sat = Sat0.sat
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model0.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model0.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model0.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model7.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant3 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model7.model, function Model1.model = Model0.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  val learn_unit [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (cref : usize) (f : Type.creusat_formula_formula) (d : borrowed (Type.creusat_decision_decisions)) : Type.core_result_result () ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 313 4 77] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 307 4 59] Invariant0.invariant' (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref)) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 306 4 50] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) = 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 305 4 43] UInt64.to_int cref < Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 304 4 30] Invariant1.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 303 4 48] Invariant2.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 302 4 42] Invariant3.invariant' ( * self) f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 314 4 86] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 310 4 70] match (result) with
      | Type.Core_Result_Result_Err _ -> true
      | Type.Core_Result_Result_Ok _ -> Sat0.sat (Seq.get (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) 0) (Type.creusat_trail_trail_Trail_assignments ( ^ self))
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 303 4 48] Invariant2.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 302 4 42] Invariant3.invariant' ( ^ self) f }
    
end
module CreuSat_Solver_Impl0_HandleConflict_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant3 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  val handle_conflict [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (f : borrowed (Type.creusat_formula_formula)) (t : borrowed (Type.creusat_trail_trail)) (cref : usize) (w : borrowed (Type.creusat_watches_watches)) (d : borrowed (Type.creusat_decision_decisions)) : Type.core_option_option bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 194 4 57] Unsat0.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref)) (Type.creusat_trail_trail_Trail_assignments ( * t))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 193 4 43] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 192 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 191 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 190 4 42] Invariant1.invariant' ( * w) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 189 4 42] Invariant2.invariant' ( * t) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 188 4 37] Invariant3.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 197 4 7] match (result) with
      | Type.Core_Option_Option_Some (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Type.Core_Option_Option_Some (True) -> true
      | Type.Core_Option_Option_None -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 196 4 29] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 195 4 45] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 191 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 190 4 42] Invariant1.invariant' ( ^ w) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 189 4 42] Invariant2.invariant' ( ^ t) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 188 4 37] Invariant3.invariant' ( ^ f) }
    
end
module CreuSat_Solver_Impl0_HandleConflict
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant7 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with function Model0.model = Model1.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model5.model,
  function Model1.model = Model1.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model5.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model4.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model2.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant8 with function Model0.model = Model0.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant6 with predicate Invariant0.invariant' = Invariant7.invariant',
  predicate Invariant1.invariant' = Invariant8.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model5.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model10 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model10.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model6.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model5.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant2 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model4.model, function Model1.model = Model5.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant3 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model8.model,
  function Model1.model = Model0.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model3.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  use mach.int.Int64
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve4 with type t = Type.creusat_decision_decisions
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve3 with type t = Type.creusat_watches_watches
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = Type.creusat_trail_trail
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = Type.creusat_formula_formula
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Type.creusat_solver_solver
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreuSat_Logic_LogicClause_Impl2_Equals as Equals0 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Compatible as Compatible0 with predicate Equals0.equals = Equals0.equals
  clone CreuSat_Logic_LogicFormula_Equisat as Equisat1 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicFormula_EquisatCompatibleInner as EquisatCompatibleInner0 with predicate Compatible0.compatible = Compatible0.compatible,
  predicate Equisat0.equisat = Equisat1.equisat
  clone CreuSat_Logic_LogicFormula_Impl1_EquisatCompatible as EquisatCompatible0 with function Model0.model = Model10.model,
  predicate EquisatCompatibleInner0.equisat_compatible_inner = EquisatCompatibleInner0.equisat_compatible_inner
  clone CreusotContracts_Logic_Model_Impl1_Model as Model12 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model10.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model11 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model10.model
  clone CreuSat_Trail_Impl0_LearnUnit_Interface as LearnUnit0 with function Model0.model = Model5.model,
  function Model1.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  function Model2.model = Model0.model, predicate Invariant0.invariant' = Invariant5.invariant',
  function Model3.model = Model6.model, predicate Invariant1.invariant' = Invariant3.invariant',
  predicate Invariant2.invariant' = Invariant0.invariant', predicate Invariant3.invariant' = Invariant2.invariant',
  predicate Sat0.sat = Sat0.sat, predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_Formula_Impl0_AddUnit_Interface as AddUnit0 with function Model0.model = Model12.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  function Model1.model = Model6.model,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate Invariant0.invariant' = Invariant5.invariant', predicate Invariant1.invariant' = Invariant2.invariant',
  predicate Invariant2.invariant' = Invariant3.invariant', function Model2.model = Model0.model,
  predicate Equisat0.equisat = Equisat0.equisat,
  predicate EquisatCompatible0.equisat_compatible = EquisatCompatible0.equisat_compatible,
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_ConflictAnalysis_AnalyzeConflict_Interface as AnalyzeConflict0 with function Model0.model = Model0.model,
  predicate Unsat0.unsat = Unsat0.unsat, predicate Invariant0.invariant' = Invariant2.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant',
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate Invariant2.invariant' = Invariant5.invariant', function Model1.model = Model6.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner,
  function Model2.model = Model11.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_Formula_Impl0_SimplifyFormula_Interface as SimplifyFormula0 with predicate Invariant0.invariant' = Invariant2.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant', predicate Invariant2.invariant' = Invariant3.invariant',
  predicate Equisat0.equisat = Equisat0.equisat, predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_Formula_Impl0_ReduceDb_Interface as ReduceDb0 with predicate Invariant0.invariant' = Invariant2.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant', predicate Invariant2.invariant' = Invariant1.invariant',
  predicate Equisat0.equisat = Equisat0.equisat, predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_Solver_Impl0_HandleLongClause_Interface as HandleLongClause0 with function Model0.model = Model12.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner,
  function Model1.model = Model6.model,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate Invariant0.invariant' = Invariant5.invariant', predicate Invariant1.invariant' = Invariant0.invariant',
  predicate Invariant2.invariant' = Invariant1.invariant', predicate Invariant3.invariant' = Invariant2.invariant',
  predicate Invariant4.invariant' = Invariant3.invariant', predicate Equisat0.equisat = Equisat0.equisat,
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  let rec cfg handle_conflict [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 202 4 21] (self : borrowed (Type.creusat_solver_solver)) (f : borrowed (Type.creusat_formula_formula)) (t : borrowed (Type.creusat_trail_trail)) (cref : usize) (w : borrowed (Type.creusat_watches_watches)) (d : borrowed (Type.creusat_decision_decisions)) : Type.core_option_option bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 194 4 57] Unsat0.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref)) (Type.creusat_trail_trail_Trail_assignments ( * t))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 193 4 43] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 192 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 191 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 190 4 42] Invariant1.invariant' ( * w) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 189 4 42] Invariant2.invariant' ( * t) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 188 4 37] Invariant3.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 197 4 7] match (result) with
      | Type.Core_Option_Option_Some (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Type.Core_Option_Option_Some (True) -> true
      | Type.Core_Option_Option_None -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 196 4 29] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 195 4 45] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 191 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 190 4 42] Invariant1.invariant' ( ^ w) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 189 4 42] Invariant2.invariant' ( ^ t) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 188 4 37] Invariant3.invariant' ( ^ f) }
    
   =
  var _0 : Type.core_option_option bool;
  var self_1 : borrowed (Type.creusat_solver_solver);
  var f_2 : borrowed (Type.creusat_formula_formula);
  var t_3 : borrowed (Type.creusat_trail_trail);
  var cref_4 : usize;
  var w_5 : borrowed (Type.creusat_watches_watches);
  var d_6 : borrowed (Type.creusat_decision_decisions);
  var res_7 : Type.creusat_conflictanalysis_conflict;
  var _8 : Type.creusat_formula_formula;
  var _9 : Type.creusat_trail_trail;
  var _10 : usize;
  var _11 : ();
  var _12 : isize;
  var _13 : ();
  var clause_14 : Type.creusat_clause_clause;
  var cref_15 : usize;
  var _16 : borrowed (Type.creusat_formula_formula);
  var _17 : Type.creusat_clause_clause;
  var _18 : Type.creusat_trail_trail;
  var _19 : ();
  var _20 : Type.core_result_result () ();
  var _21 : borrowed (Type.creusat_trail_trail);
  var _22 : usize;
  var _23 : Type.creusat_formula_formula;
  var _24 : borrowed (Type.creusat_decision_decisions);
  var _25 : isize;
  var _26 : ();
  var _27 : ();
  var _28 : borrowed (Type.creusat_formula_formula);
  var _29 : borrowed (Type.creusat_watches_watches);
  var _30 : Type.creusat_trail_trail;
  var _31 : borrowed (Type.creusat_solver_solver);
  var _32 : ();
  var _33 : borrowed (Type.creusat_formula_formula);
  var _34 : borrowed (Type.creusat_watches_watches);
  var _35 : Type.creusat_trail_trail;
  var s_idx_36 : usize;
  var clause_37 : Type.creusat_clause_clause;
  var _38 : ();
  var _39 : borrowed (Type.creusat_solver_solver);
  var _40 : borrowed (Type.creusat_formula_formula);
  var _41 : borrowed (Type.creusat_trail_trail);
  var _42 : borrowed (Type.creusat_watches_watches);
  var _43 : borrowed (Type.creusat_decision_decisions);
  var _44 : Type.creusat_clause_clause;
  var _45 : usize;
  var _46 : ();
  var _47 : ();
  {
    self_1 <- self;
    f_2 <- f;
    t_3 <- t;
    cref_4 <- cref;
    w_5 <- w;
    d_6 <- d;
    goto BB0
  }
  BB0 {
    _8 <-  * f_2;
    _9 <-  * t_3;
    _10 <- cref_4;
    res_7 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 205 18 46] AnalyzeConflict0.analyze_conflict _8 _9 _10);
    goto BB1
  }
  BB1 {
    switch (res_7)
      | Type.CreuSat_ConflictAnalysis_Conflict_Ground -> goto BB3
      | Type.CreuSat_ConflictAnalysis_Conflict_Unit _ -> goto BB4
      | Type.CreuSat_ConflictAnalysis_Conflict_Learned _ _ -> goto BB13
      | _ -> goto BB2
      end
  }
  BB2 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    assume { Resolve4.resolve d_6 };
    absurd
  }
  BB3 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    assume { Resolve4.resolve d_6 };
    _0 <- Type.Core_Option_Option_Some false;
    goto BB19
  }
  BB4 {
    clause_14 <- Type.creusat_conflictanalysis_conflict_Unit_0 res_7;
    _16 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _16) };
    _17 <- clause_14;
    _18 <-  * t_3;
    cref_15 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 214 27 48] AddUnit0.add_unit _16 _17 _18);
    goto BB5
  }
  BB5 {
    _21 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _21) };
    _22 <- cref_15;
    _23 <-  * f_2;
    _24 <- borrow_mut ( * d_6);
    d_6 <- { d_6 with current = ( ^ _24) };
    _20 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 215 22 46] LearnUnit0.learn_unit _21 _22 _23 _24);
    goto BB6
  }
  BB6 {
    assume { Resolve4.resolve d_6 };
    switch (_20)
      | Type.Core_Result_Result_Ok _ -> goto BB7
      | Type.Core_Result_Result_Err _ -> goto BB9
      end
  }
  BB7 {
    _19 <- ();
    _28 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _28) };
    _29 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _29) };
    _30 <-  * t_3;
    _31 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _31) };
    _27 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 219 16 38] ReduceDb0.reduceDB _28 _29 _30 _31);
    goto BB10
  }
  BB8 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    absurd
  }
  BB9 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    _0 <- Type.Core_Option_Option_Some true;
    goto BB18
  }
  BB10 {
    assume { Resolve0.resolve self_1 };
    _33 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _33) };
    _34 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _34) };
    _35 <-  * t_3;
    assume { Resolve2.resolve t_3 };
    _32 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 220 16 40] SimplifyFormula0.simplify_formula _33 _34 _35);
    goto BB11
  }
  BB11 {
    assume { Resolve1.resolve f_2 };
    assume { Resolve3.resolve w_5 };
    _11 <- ();
    goto BB12
  }
  BB12 {
    goto BB16
  }
  BB13 {
    s_idx_36 <- Type.creusat_conflictanalysis_conflict_Learned_0 res_7;
    clause_37 <- Type.creusat_conflictanalysis_conflict_Learned_1 res_7;
    _39 <- borrow_mut ( * self_1);
    self_1 <- { self_1 with current = ( ^ _39) };
    _40 <- borrow_mut ( * f_2);
    f_2 <- { f_2 with current = ( ^ _40) };
    _41 <- borrow_mut ( * t_3);
    t_3 <- { t_3 with current = ( ^ _41) };
    _42 <- borrow_mut ( * w_5);
    w_5 <- { w_5 with current = ( ^ _42) };
    _43 <- borrow_mut ( * d_6);
    d_6 <- { d_6 with current = ( ^ _43) };
    _44 <- clause_37;
    _45 <- s_idx_36;
    _38 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 223 16 66] HandleLongClause0.handle_long_clause _39 _40 _41 _42 _43 _44 _45);
    goto BB14
  }
  BB14 {
    assume { Resolve0.resolve self_1 };
    assume { Resolve1.resolve f_2 };
    assume { Resolve2.resolve t_3 };
    assume { Resolve3.resolve w_5 };
    assume { Resolve4.resolve d_6 };
    _11 <- ();
    goto BB15
  }
  BB15 {
    goto BB16
  }
  BB16 {
    _0 <- Type.Core_Option_Option_None;
    goto BB17
  }
  BB17 {
    goto BB21
  }
  BB18 {
    goto BB19
  }
  BB19 {
    goto BB20
  }
  BB20 {
    goto BB21
  }
  BB21 {
    return _0
  }
  
end
module CreuSat_Solver_Impl0_UnitPropStep_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant3 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  val unit_prop_step [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (f : borrowed (Type.creusat_formula_formula)) (d : borrowed (Type.creusat_decision_decisions)) (t : borrowed (Type.creusat_trail_trail)) (w : borrowed (Type.creusat_watches_watches)) : Type.creusat_solver_conflictresult
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 238 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 237 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 236 4 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 235 4 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 234 4 37] Invariant3.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 241 4 7] match (result) with
      | Type.CreuSat_Solver_ConflictResult_Ground -> NotSatisfiable0.not_satisfiable ( ^ f)
      | _ -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 240 4 29] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 239 4 45] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 237 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 236 4 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 235 4 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 234 4 37] Invariant3.invariant' ( ^ f) }
    
end
module CreuSat_Solver_Impl0_UnitPropStep
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model5 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model5.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model4 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant7 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model4.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant8 with function Model0.model = Model7.model,
  function Model1.model = Model4.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant6 with predicate Invariant0.invariant' = Invariant7.invariant',
  predicate Invariant1.invariant' = Invariant8.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model7.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model9 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model9.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model4.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model7.model,
  function Model1.model = Model4.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model7.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model4.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant3 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model6.model,
  function Model1.model = Model7.model, function Model2.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model3.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model2.model,
  function Model1.model = Model5.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model2.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model2.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model1.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model1.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model5.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model1.model, function Model1.model = Model2.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model
  val unit_prop_step [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (f : borrowed (Type.creusat_formula_formula)) (d : borrowed (Type.creusat_decision_decisions)) (t : borrowed (Type.creusat_trail_trail)) (w : borrowed (Type.creusat_watches_watches)) : Type.creusat_solver_conflictresult
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 238 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 237 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 236 4 42] Invariant1.invariant' ( * t) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 235 4 42] Invariant2.invariant' ( * w) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 234 4 37] Invariant3.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 241 4 7] match (result) with
      | Type.CreuSat_Solver_ConflictResult_Ground -> NotSatisfiable0.not_satisfiable ( ^ f)
      | _ -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 240 4 29] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 239 4 45] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 237 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 236 4 42] Invariant1.invariant' ( ^ t) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 235 4 42] Invariant2.invariant' ( ^ w) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 234 4 37] Invariant3.invariant' ( ^ f) }
    
end
module CreuSat_Solver_Impl0_UnitPropLoop_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant3 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  val unit_prop_loop [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (f : borrowed (Type.creusat_formula_formula)) (d : borrowed (Type.creusat_decision_decisions)) (t : borrowed (Type.creusat_trail_trail)) (w : borrowed (Type.creusat_watches_watches)) : Type.core_option_option bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 262 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 261 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 260 4 42] Invariant1.invariant' ( * w) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 259 4 42] Invariant2.invariant' ( * t) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 258 4 37] Invariant3.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 269 4 29] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 268 4 45] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 263 4 7] match (result) with
      | Type.Core_Option_Option_Some (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Type.Core_Option_Option_Some (True) -> true
      | Type.Core_Option_Option_None -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 261 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 260 4 42] Invariant1.invariant' ( ^ w) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 259 4 42] Invariant2.invariant' ( ^ t) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 258 4 37] Invariant3.invariant' ( ^ f) }
    
end
module CreuSat_Solver_Impl0_UnitPropLoop
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model7 with function Model0.model = Model10.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model7.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model4 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant7 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model4.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant8 with function Model0.model = Model6.model,
  function Model1.model = Model4.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant6 with predicate Invariant0.invariant' = Invariant7.invariant',
  predicate Invariant1.invariant' = Invariant8.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model6.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model9 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model9.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model4.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model6.model,
  function Model1.model = Model4.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model6.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model4.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant3 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model5.model,
  function Model1.model = Model6.model, function Model2.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model3.model,
  function Model1.model = Model7.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model3.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model2.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model3.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model2.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model7.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant2 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model2.model, function Model1.model = Model3.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model
  val unit_prop_loop [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (f : borrowed (Type.creusat_formula_formula)) (d : borrowed (Type.creusat_decision_decisions)) (t : borrowed (Type.creusat_trail_trail)) (w : borrowed (Type.creusat_watches_watches)) : Type.core_option_option bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 262 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 261 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 260 4 42] Invariant1.invariant' ( * w) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 259 4 42] Invariant2.invariant' ( * t) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 258 4 37] Invariant3.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 269 4 29] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 268 4 45] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 263 4 7] match (result) with
      | Type.Core_Option_Option_Some (False) -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Type.Core_Option_Option_Some (True) -> true
      | Type.Core_Option_Option_None -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 261 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 260 4 42] Invariant1.invariant' ( ^ w) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 259 4 42] Invariant2.invariant' ( ^ t) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 258 4 37] Invariant3.invariant' ( ^ f) }
    
end
module CreuSat_Solver_Impl0_OuterLoop_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete_Interface as Complete0
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model0
  clone CreuSat_Logic_LogicFormula_Impl1_Sat_Interface as Sat0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant3 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  val outer_loop [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (f : borrowed (Type.creusat_formula_formula)) (d : borrowed (Type.creusat_decision_decisions)) (trail : borrowed (Type.creusat_trail_trail)) (w : borrowed (Type.creusat_watches_watches)) : Type.creusat_solver_satresult
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 308 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 307 4 41] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 306 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 305 4 42] Invariant1.invariant' ( * w) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 304 4 46] Invariant2.invariant' ( * trail) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 303 4 37] Invariant3.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 311 4 7] match (result) with
      | Type.CreuSat_Solver_SatResult_Sat _ -> Sat0.sat ( ^ f) (Type.creusat_trail_trail_Trail_assignments ( ^ trail)) && Complete0.complete (Type.creusat_trail_trail_Trail_assignments ( ^ trail))
      | Type.CreuSat_Solver_SatResult_Unsat -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Type.CreuSat_Solver_SatResult_Unknown -> true
      | Type.CreuSat_Solver_SatResult_Err -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 310 4 29] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 309 4 45] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 306 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 305 4 42] Invariant1.invariant' ( ^ w) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 304 4 46] Invariant2.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 303 4 37] Invariant3.invariant' ( ^ f) }
    
end
module CreuSat_Solver_Impl0_OuterLoop
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model5 with function Model0.model = Model9.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model4 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant7 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model5.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat1 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant8 with function Model0.model = Model7.model,
  function Model1.model = Model5.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant6 with predicate Invariant0.invariant' = Invariant7.invariant',
  predicate Invariant1.invariant' = Invariant8.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model7.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model10 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model7.model,
  function Model1.model = Model5.model, predicate Sat0.sat = Sat1.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model7.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Sat as Sat0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model7.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant3 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model6.model,
  function Model1.model = Model7.model, function Model2.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model10.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model5.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicAssignments_Impl1_Complete as Complete0 with function Model0.model = Model4.model,
  predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model3.model,
  function Model1.model = Model4.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model3.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model2.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model3.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model2.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant2 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model2.model, function Model1.model = Model3.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model
  val outer_loop [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (f : borrowed (Type.creusat_formula_formula)) (d : borrowed (Type.creusat_decision_decisions)) (trail : borrowed (Type.creusat_trail_trail)) (w : borrowed (Type.creusat_watches_watches)) : Type.creusat_solver_satresult
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 308 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 307 4 41] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 306 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 305 4 42] Invariant1.invariant' ( * w) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 304 4 46] Invariant2.invariant' ( * trail) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 303 4 37] Invariant3.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 311 4 7] match (result) with
      | Type.CreuSat_Solver_SatResult_Sat _ -> Sat0.sat ( ^ f) (Type.creusat_trail_trail_Trail_assignments ( ^ trail)) && Complete0.complete (Type.creusat_trail_trail_Trail_assignments ( ^ trail))
      | Type.CreuSat_Solver_SatResult_Unsat -> NotSatisfiable0.not_satisfiable ( ^ f)
      | Type.CreuSat_Solver_SatResult_Unknown -> true
      | Type.CreuSat_Solver_SatResult_Err -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 310 4 29] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 309 4 45] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 306 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 305 4 42] Invariant1.invariant' ( ^ w) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 304 4 46] Invariant2.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 303 4 37] Invariant3.invariant' ( ^ f) }
    
end
module CreuSat_Solver_Impl0_Inner_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss_Interface as EventuallySatCompleteNoAss0
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner_Interface as SatInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = uint8, type a = Type.alloc_alloc_global,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant3 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  val inner [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (formula : borrowed (Type.creusat_formula_formula)) (decisions : Type.creusat_decision_decisions) (trail : Type.creusat_trail_trail) (watches : Type.creusat_watches_watches) : Type.creusat_solver_satresult
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 363 4 55] Invariant0.invariant' decisions (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * formula)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 362 4 44] Invariant1.invariant' watches ( * formula)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 361 4 42] Invariant2.invariant' trail ( * formula)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 360 4 55] Invariant0.invariant' decisions (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * formula)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 359 4 36] Invariant3.invariant' ( * formula)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 358 4 50] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * formula)) < div 18446744073709551615 2}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 369 4 41] Equisat0.equisat ( * formula) ( ^ formula) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 364 4 7] match (result) with
      | Type.CreuSat_Solver_SatResult_Sat v -> SatInner0.sat_inner ( ^ formula) (Model0.model v) && Equisat0.equisat ( * formula) ( ^ formula) && EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass ( * formula)
      | Type.CreuSat_Solver_SatResult_Unsat -> NotSatisfiable0.not_satisfiable ( ^ formula) && Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    
end
module CreuSat_Solver_Impl0_Inner
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model9.model
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant7 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant8 with function Model0.model = Model5.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant6 with predicate Invariant0.invariant' = Invariant7.invariant',
  predicate Invariant1.invariant' = Invariant8.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model5.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model10 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model10.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model6.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model5.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant3 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model7.model,
  function Model1.model = Model5.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model5.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model8 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model8.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model5.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model4.model,
  function Model1.model = Model8.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model4.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model3.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model8.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant2 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model3.model, function Model1.model = Model4.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model2.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model1.model
  val inner [@cfg:stackify] (self : borrowed (Type.creusat_solver_solver)) (formula : borrowed (Type.creusat_formula_formula)) (decisions : Type.creusat_decision_decisions) (trail : Type.creusat_trail_trail) (watches : Type.creusat_watches_watches) : Type.creusat_solver_satresult
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 363 4 55] Invariant0.invariant' decisions (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * formula)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 362 4 44] Invariant1.invariant' watches ( * formula)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 361 4 42] Invariant2.invariant' trail ( * formula)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 360 4 55] Invariant0.invariant' decisions (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * formula)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 359 4 36] Invariant3.invariant' ( * formula)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 358 4 50] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * formula)) < div 18446744073709551615 2}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 369 4 41] Equisat0.equisat ( * formula) ( ^ formula) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 364 4 7] match (result) with
      | Type.CreuSat_Solver_SatResult_Sat v -> SatInner0.sat_inner ( ^ formula) (Model0.model v) && Equisat0.equisat ( * formula) ( ^ formula) && EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass ( * formula)
      | Type.CreuSat_Solver_SatResult_Unsat -> NotSatisfiable0.not_satisfiable ( ^ formula) && Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    
end
module CreuSat_Trail_Impl0_New_Interface
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant_Interface as Invariant0
  val new [@cfg:stackify] (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) : Type.creusat_trail_trail
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 43 4 32] Invariant0.invariant' a f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 42 4 30] Invariant1.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 44 4 36] Invariant2.invariant' result f }
    
end
module CreuSat_Trail_Impl0_New
  use prelude.Prelude
  use Type
  use mach.int.Int
  use prelude.UInt8
  use mach.int.UInt64
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model5 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model5.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model4.model,
  function Model1.model = Model5.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant4 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model4.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model4.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model0 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model4.model,
  function Model1.model = Model5.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant0 with function Model0.model = Model0.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model2.model,
  function Model1.model = Model0.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model2.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model2.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model1.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant0.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model1.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model0.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant2 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model1.model, function Model1.model = Model2.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  val new [@cfg:stackify] (f : Type.creusat_formula_formula) (a : Type.creusat_assignments_assignments) : Type.creusat_trail_trail
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 43 4 32] Invariant0.invariant' a f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 42 4 30] Invariant1.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 44 4 36] Invariant2.invariant' result f }
    
end
module CreuSat_Watches_Impl0_New_Interface
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  val new [@cfg:stackify] (f : Type.creusat_formula_formula) : Type.creusat_watches_watches
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 74 4 36] Invariant0.invariant' result f }
    
end
module CreuSat_Watches_Impl0_New
  use prelude.Prelude
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model1.model,
  function Model1.model = Model2.model, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  val new [@cfg:stackify] (f : Type.creusat_formula_formula) : Type.creusat_watches_watches
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 74 4 36] Invariant0.invariant' result f }
    
end
module CreuSat_Watches_Impl0_InitWatches_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  val init_watches [@cfg:stackify] (self : borrowed (Type.creusat_watches_watches)) (f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 134 4 30] Invariant0.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 133 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 132 4 42] Invariant1.invariant' ( * self) f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 132 4 42] Invariant1.invariant' ( ^ self) f }
    
end
module CreuSat_Watches_Impl0_InitWatches
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model2 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant2 with function Model0.model = Model2.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model3.model,
  function Model1.model = Model1.model, function Model2.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model1.model,
  predicate Invariant0.invariant' = Invariant2.invariant', function Model1.model = Model2.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant1 with function Model0.model = Model0.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  val init_watches [@cfg:stackify] (self : borrowed (Type.creusat_watches_watches)) (f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 134 4 30] Invariant0.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 133 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 132 4 42] Invariant1.invariant' ( * self) f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 132 4 42] Invariant1.invariant' ( ^ self) f }
    
end
module CreuSat_Trail_Impl0_LearnUnits_Interface
  use mach.int.UInt64
  use Type
  use mach.int.Int
  use prelude.Prelude
  use seq.Seq
  use mach.int.Int32
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Interface as Unsat1
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  val learn_units [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (f : Type.creusat_formula_formula) (d : borrowed (Type.creusat_decision_decisions)) : Type.core_option_option usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 331 4 30] Invariant0.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 330 4 48] Invariant1.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 329 4 42] Invariant2.invariant' ( * self) f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 332 4 7] match (result) with
      | Type.Core_Option_Option_Some cref -> UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) && Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) = 1 && Unsat0.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref)) (Type.creusat_trail_trail_Trail_assignments ( ^ self)) && Unsat1.unsat (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) 0) (Type.creusat_trail_trail_Trail_assignments ( ^ self))
      | _ -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 330 4 48] Invariant1.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 329 4 42] Invariant2.invariant' ( ^ self) f }
    
end
module CreuSat_Trail_Impl0_LearnUnits
  use mach.int.UInt64
  use Type
  use mach.int.Int
  use prelude.Prelude
  use seq.Seq
  use mach.int.Int32
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant4 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat1 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model1.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model4.model,
  function Model1.model = Model6.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model4.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model3.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant4.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant2 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model3.model, function Model1.model = Model4.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant1 with function Model0.model = Model2.model
  val learn_units [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (f : Type.creusat_formula_formula) (d : borrowed (Type.creusat_decision_decisions)) : Type.core_option_option usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 331 4 30] Invariant0.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 330 4 48] Invariant1.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 329 4 42] Invariant2.invariant' ( * self) f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 332 4 7] match (result) with
      | Type.Core_Option_Option_Some cref -> UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) && Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) = 1 && Unsat0.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref)) (Type.creusat_trail_trail_Trail_assignments ( ^ self)) && Unsat1.unsat (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) 0) (Type.creusat_trail_trail_Trail_assignments ( ^ self))
      | _ -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 330 4 48] Invariant1.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 329 4 42] Invariant2.invariant' ( ^ self) f }
    
end
module CreuSat_Solver_Solver_Interface
  use Type
  use prelude.Prelude
  use mach.int.Int
  use prelude.UInt8
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable_Interface as NotSatisfiable0
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_FormulaSatInner_Interface as FormulaSatInner0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = uint8, type a = Type.alloc_alloc_global,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl0_Model_Interface as Model0
  val solver [@cfg:stackify] (formula : borrowed (Type.creusat_formula_formula)) : Type.creusat_solver_satresult
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 396 0 3] match (result) with
      | Type.CreuSat_Solver_SatResult_Sat assn -> FormulaSatInner0.formula_sat_inner (Model0.model ( ^ formula)) (Model1.model assn) && Equisat0.equisat ( * formula) ( ^ formula)
      | Type.CreuSat_Solver_SatResult_Unsat -> NotSatisfiable0.not_satisfiable ( ^ formula) && Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    
end
module CreuSat_Solver_Solver
  use Type
  use prelude.Prelude
  use mach.int.Int
  use prelude.UInt8
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_FormulaSatInner as FormulaSatInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss1 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner
  clone CreuSat_Logic_LogicClause_EquisatExtensionInner as EquisatExtensionInner0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss1.eventually_sat_complete_no_ass
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner2 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicFormula_Impl0_Model as Model0 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicClause_Impl2_EquisatExtension as EquisatExtension0 with function Model0.model = Model0.model,
  predicate EquisatExtensionInner0.equisat_extension_inner = EquisatExtensionInner0.equisat_extension_inner
  clone CreuSat_Logic_LogicFormula_Impl1_NotSatisfiable as NotSatisfiable0 with function Model0.model = Model3.model,
  predicate EquisatExtension0.equisat_extension = EquisatExtension0.equisat_extension
  use mach.int.Int64
  use mach.int.UInt64
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model11 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model10 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model9 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant3 with function Model0.model = Model9.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model7.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Solver_Impl0_New_Interface as New4
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = Type.creusat_decision_decisions
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Type.creusat_formula_formula
  clone CreuSat_Logic_LogicFormula_Impl0_ModelTy as ModelTy0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model8.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner1.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner0 with function Model0.model = Model3.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model8.model,
  function Model1.model = Model6.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat1 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat0 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant8 with function Model0.model = Model2.model,
  function Model1.model = Model3.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant7 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant8.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model8.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model3.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant1.invariant',
  function Model0.model = Model8.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model7.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant2 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model7.model, function Model1.model = Model8.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model11.model,
  function Model1.model = Model2.model, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant4 with function Model0.model = Model10.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Watches_Impl0_New_Interface as New3 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Trail_Impl0_LearnUnits_Interface as LearnUnits0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  function Model0.model = Model2.model, function Model1.model = Model3.model, predicate Unsat0.unsat = Unsat0.unsat,
  predicate Unsat1.unsat = Unsat1.unsat, predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_Watches_Impl0_InitWatches_Interface as InitWatches0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant4.invariant',
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_Decision_Impl1_New_Interface as New2 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant3.invariant',
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_Trail_Impl0_New_Interface as New1 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Invariant1.invariant' = Invariant0.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_Assignments_Impl0_New_Interface as New0 with predicate Invariant0.invariant' = Invariant0.invariant',
  predicate Invariant1.invariant' = Invariant1.invariant',
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreusotContracts_Logic_Model_Impl0_Model as Model5 with type t = Type.creusat_formula_formula,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model0.model
  clone CreuSat_Solver_Impl0_Inner_Interface as Inner0 with predicate Invariant0.invariant' = Invariant3.invariant',
  predicate Invariant1.invariant' = Invariant4.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  predicate Invariant3.invariant' = Invariant0.invariant', predicate Equisat0.equisat = Equisat0.equisat,
  function Model0.model = Model1.model, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass,
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_Formula_Impl0_CheckFormulaInvariant_Interface as CheckFormulaInvariant0 with function Model0.model = Model5.model,
  function Model1.model = Model1.model,
  predicate FormulaSatInner0.formula_sat_inner = FormulaSatInner0.formula_sat_inner,
  predicate NotSatisfiable0.not_satisfiable = NotSatisfiable0.not_satisfiable,
  predicate Invariant0.invariant' = Invariant0.invariant',
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  let rec cfg solver [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 401 0 49] (formula : borrowed (Type.creusat_formula_formula)) : Type.creusat_solver_satresult
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 396 0 3] match (result) with
      | Type.CreuSat_Solver_SatResult_Sat assn -> FormulaSatInner0.formula_sat_inner (Model0.model ( ^ formula)) (Model1.model assn) && Equisat0.equisat ( * formula) ( ^ formula)
      | Type.CreuSat_Solver_SatResult_Unsat -> NotSatisfiable0.not_satisfiable ( ^ formula) && Equisat0.equisat ( * formula) ( ^ formula)
      | _ -> true
      end }
    
   =
  var _0 : Type.creusat_solver_satresult;
  var formula_1 : borrowed (Type.creusat_formula_formula);
  var _2 : ();
  var _3 : Type.creusat_solver_satresult;
  var _4 : Type.creusat_formula_formula;
  var _5 : isize;
  var o_6 : Type.creusat_solver_satresult;
  var _7 : ();
  var trail_8 : Type.creusat_trail_trail;
  var _9 : Type.creusat_formula_formula;
  var _10 : Type.creusat_assignments_assignments;
  var _11 : Type.creusat_formula_formula;
  var decisions_12 : Type.creusat_decision_decisions;
  var _13 : Type.creusat_formula_formula;
  var watches_14 : Type.creusat_watches_watches;
  var _15 : Type.creusat_formula_formula;
  var _16 : ();
  var _17 : borrowed (Type.creusat_watches_watches);
  var _18 : Type.creusat_formula_formula;
  var _19 : ();
  var _20 : Type.core_option_option usize;
  var _21 : borrowed (Type.creusat_trail_trail);
  var _22 : Type.creusat_formula_formula;
  var _23 : borrowed (Type.creusat_decision_decisions);
  var _24 : borrowed (Type.creusat_decision_decisions);
  var _25 : isize;
  var cref_26 : usize;
  var _27 : ();
  var _28 : ();
  var solver_29 : Type.creusat_solver_solver;
  var _30 : Type.creusat_formula_formula;
  var _31 : borrowed (Type.creusat_solver_solver);
  var _32 : borrowed (Type.creusat_formula_formula);
  var _33 : Type.creusat_decision_decisions;
  var _34 : Type.creusat_trail_trail;
  var _35 : Type.creusat_watches_watches;
  {
    formula_1 <- formula;
    goto BB0
  }
  BB0 {
    _4 <-  * formula_1;
    _3 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 402 10 43] CheckFormulaInvariant0.check_formula_invariant _4);
    goto BB1
  }
  BB1 {
    switch (_3)
      | Type.CreuSat_Solver_SatResult_Unknown -> goto BB3
      | _ -> goto BB2
      end
  }
  BB2 {
    assume { Resolve0.resolve formula_1 };
    o_6 <- _3;
    _0 <- o_6;
    goto BB20
  }
  BB3 {
    _2 <- ();
    goto BB4
  }
  BB4 {
    _9 <-  * formula_1;
    _11 <-  * formula_1;
    _10 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 406 40 65] New0.new _11);
    goto BB5
  }
  BB5 {
    trail_8 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 406 20 66] New1.new _9 _10);
    goto BB6
  }
  BB6 {
    _13 <-  * formula_1;
    decisions_12 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 407 24 47] New2.new _13);
    goto BB7
  }
  BB7 {
    _15 <-  * formula_1;
    watches_14 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 408 22 43] New3.new _15);
    goto BB8
  }
  BB8 {
    _17 <- borrow_mut watches_14;
    watches_14 <-  ^ _17;
    _18 <-  * formula_1;
    _16 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 409 4 33] InitWatches0.init_watches _17 _18);
    goto BB9
  }
  BB9 {
    _21 <- borrow_mut trail_8;
    trail_8 <-  ^ _21;
    _22 <-  * formula_1;
    _24 <- borrow_mut decisions_12;
    decisions_12 <-  ^ _24;
    _23 <- borrow_mut ( * _24);
    _24 <- { _24 with current = ( ^ _23) };
    _20 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 410 10 52] LearnUnits0.learn_units _21 _22 _23);
    goto BB10
  }
  BB10 {
    assume { Resolve1.resolve _24 };
    switch (_20)
      | Type.Core_Option_Option_None -> goto BB11
      | Type.Core_Option_Option_Some _ -> goto BB13
      end
  }
  BB11 {
    _19 <- ();
    _30 <-  * formula_1;
    solver_29 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 424 21 41] New4.new _30);
    goto BB14
  }
  BB12 {
    assume { Resolve0.resolve formula_1 };
    absurd
  }
  BB13 {
    assume { Resolve0.resolve formula_1 };
    cref_26 <- Type.core_option_option_Some_0 _20;
    absurd
  }
  BB14 {
    _31 <- borrow_mut solver_29;
    solver_29 <-  ^ _31;
    _32 <- borrow_mut ( * formula_1);
    formula_1 <- { formula_1 with current = ( ^ _32) };
    _33 <- decisions_12;
    _34 <- trail_8;
    _35 <- watches_14;
    _0 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/solver.rs" 425 4 52] Inner0.inner _31 _32 _33 _34 _35);
    goto BB15
  }
  BB15 {
    assume { Resolve0.resolve formula_1 };
    goto BB16
  }
  BB16 {
    goto BB17
  }
  BB17 {
    goto BB18
  }
  BB18 {
    goto BB19
  }
  BB19 {
    goto BB22
  }
  BB20 {
    goto BB21
  }
  BB21 {
    goto BB22
  }
  BB22 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_DecisionLevel_Interface
  use mach.int.UInt64
  use seq.Seq
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = usize, type a = Type.alloc_alloc_global,
  axiom .
  val decision_level [@cfg:stackify] (self : Type.creusat_trail_trail) : usize
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 36 4 50] UInt64.to_int result = Seq.length (Model0.model (Type.creusat_trail_trail_Trail_decisions self)) }
    
end
module CreuSat_Trail_Impl0_DecisionLevel
  use mach.int.UInt64
  use seq.Seq
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  val decision_level [@cfg:stackify] (self : Type.creusat_trail_trail) : usize
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 36 4 50] UInt64.to_int result = Seq.length (Model0.model (Type.creusat_trail_trail_Trail_decisions self)) }
    
end
module Alloc_Vec_Impl1_Pop_Interface
  type t
  type a
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq_ext.SeqExt
  use prelude.Prelude
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = t, type a = a
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = Type.alloc_vec_vec t a,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val pop [@cfg:stackify] (self : borrowed (Type.alloc_vec_vec t a)) : Type.core_option_option t
    ensures { match (result) with
      | Type.Core_Option_Option_Some t -> Model0.model ( ^ self) = SeqExt.subsequence (Model0.model ( * self)) 0 (Seq.length (Model0.model ( * self)) - 1) && Model1.model self = Seq.snoc (Model0.model ( ^ self)) t
      | Type.Core_Option_Option_None -> Seq.length (Model1.model self) = Seq.length (Model0.model ( ^ self)) && Seq.length (Model0.model ( * self)) = 0
      end }
    
end
module Alloc_Vec_Impl1_Pop
  type t
  type a
  use Type
  use mach.int.Int
  use mach.int.Int32
  use seq.Seq
  use seq_ext.SeqExt
  use prelude.Prelude
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = t, type a = a
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = Type.alloc_vec_vec t a,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val pop [@cfg:stackify] (self : borrowed (Type.alloc_vec_vec t a)) : Type.core_option_option t
    ensures { match (result) with
      | Type.Core_Option_Option_Some t -> Model0.model ( ^ self) = SeqExt.subsequence (Model0.model ( * self)) 0 (Seq.length (Model0.model ( * self)) - 1) && Model1.model self = Seq.snoc (Model0.model ( ^ self)) t
      | Type.Core_Option_Option_None -> Seq.length (Model1.model self) = Seq.length (Model0.model ( ^ self)) && Seq.length (Model0.model ( * self)) = 0
      end }
    
end
module Core_Ops_Index_Index_Output
  type self
  type idx
  type output
end
module Core_Ops_Index_IndexMut_IndexMut_Interface
  type self
  type idx
  use prelude.Prelude
  clone Core_Ops_Index_Index_Output as Output0 with type self = self, type idx = idx
  val index_mut [@cfg:stackify] (self : borrowed self) (index : idx) : borrowed Output0.output
    requires {false}
    
end
module Core_Ops_Index_IndexMut_IndexMut
  type self
  type idx
  use prelude.Prelude
  clone Core_Ops_Index_Index_Output as Output0 with type self = self, type idx = idx
  val index_mut [@cfg:stackify] (self : borrowed self) (index : idx) : borrowed Output0.output
    requires {false}
    
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface
  type self
  type t
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  predicate in_bounds (self : self) (seq : ModelTy0.modelTy)
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds
  type self
  type t
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  predicate in_bounds (self : self) (seq : ModelTy0.modelTy)
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_ResolveElswhere_Interface
  type self
  type t
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  predicate resolve_elswhere (self : self) (old' : ModelTy0.modelTy) (fin : ModelTy0.modelTy)
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_ResolveElswhere
  type self
  type t
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  predicate resolve_elswhere (self : self) (old' : ModelTy0.modelTy) (fin : ModelTy0.modelTy)
end
module Core_Slice_Index_SliceIndex_Output
  type self
  type t
  type output
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface
  type self
  type t
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = self, type t = t
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  predicate has_value (self : self) (seq : ModelTy0.modelTy) (out : Output0.output)
end
module CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue
  type self
  type t
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = self, type t = t
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = t
  predicate has_value (self : self) (seq : ModelTy0.modelTy) (out : Output0.output)
end
module Alloc_Vec_Impl17_IndexMut_Interface
  type t
  type i
  type a
  use seq.Seq
  use prelude.Prelude
  use Type
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = i, type t = seq t
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = t
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface as HasValue0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy, type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_ResolveElswhere_Interface as ResolveElswhere0 with type self = i,
  type t = seq t, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface as InBounds0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val index_mut [@cfg:stackify] (self : borrowed (Type.alloc_vec_vec t a)) (index : i) : borrowed Output0.output
    requires {InBounds0.in_bounds index (Model0.model ( * self))}
    ensures { Seq.length (Model0.model ( ^ self)) = Seq.length (Model0.model ( * self)) }
    ensures { ResolveElswhere0.resolve_elswhere index (Model0.model ( * self)) (Model0.model ( ^ self)) }
    ensures { HasValue0.has_value index (Model0.model ( ^ self)) ( ^ result) }
    ensures { HasValue0.has_value index (Model0.model ( * self)) ( * result) }
    
end
module Alloc_Vec_Impl17_IndexMut
  type t
  type i
  type a
  use seq.Seq
  use prelude.Prelude
  use Type
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = i, type t = seq t
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = t
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface as HasValue0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy, type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_ResolveElswhere_Interface as ResolveElswhere0 with type self = i,
  type t = seq t, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface as InBounds0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val index_mut [@cfg:stackify] (self : borrowed (Type.alloc_vec_vec t a)) (index : i) : borrowed Output0.output
    requires {InBounds0.in_bounds index (Model0.model ( * self))}
    ensures { Seq.length (Model0.model ( ^ self)) = Seq.length (Model0.model ( * self)) }
    ensures { ResolveElswhere0.resolve_elswhere index (Model0.model ( * self)) (Model0.model ( ^ self)) }
    ensures { HasValue0.has_value index (Model0.model ( ^ self)) ( ^ result) }
    ensures { HasValue0.has_value index (Model0.model ( * self)) ( * result) }
    
end
module Alloc_Vec_Impl16_Output
  type t
  type i
  type a
  use prelude.Prelude
  use seq.Seq
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = i, type t = seq t
  type output  =
    Output0.output
end
module Alloc_Vec_Impl17
  type t
  type i
  type a
  use prelude.Prelude
  use seq.Seq
  use Type
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = t
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_ResolveElswhere as ResolveElswhere0 with type self = i,
  type t = seq t, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds as InBounds0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = i, type t = seq t
  clone Alloc_Vec_Impl16_Output as Output1 with type t = t, type i = i, type a = a, type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue as HasValue0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy, type Output0.output = Output0.output
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = t, type a = a, axiom .
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = t, type i = i, type a = a,
  function Model0.model = Model0.model, predicate InBounds0.in_bounds = InBounds0.in_bounds,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
  predicate HasValue0.has_value = HasValue0.has_value, type Output0.output = Output0.output
  clone Core_Ops_Index_IndexMut_IndexMut_Interface as IndexMut1 with type self = Type.alloc_vec_vec t a, type idx = i,
  val index_mut = IndexMut0.index_mut, type Output0.output = Output1.output
end
module CreusotContracts_Std1_Slice_Impl3_InBounds_Interface
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  predicate in_bounds [@inline:trivial] (self : usize) (seq : Seq.seq t)
end
module CreusotContracts_Std1_Slice_Impl3_InBounds
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  predicate in_bounds [@inline:trivial] (self : usize) (seq : Seq.seq t) =
    UInt64.to_int self < Seq.length seq
end
module CreusotContracts_Std1_Slice_Impl3_HasValue_Interface
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  predicate has_value [@inline:trivial] (self : usize) (seq : Seq.seq t) (out : t)
end
module CreusotContracts_Std1_Slice_Impl3_HasValue
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  predicate has_value [@inline:trivial] (self : usize) (seq : Seq.seq t) (out : t) =
    Seq.get seq (UInt64.to_int self) = out
end
module CreusotContracts_Std1_Slice_Impl3_ResolveElswhere_Interface
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  predicate resolve_elswhere [@inline:trivial] (self : usize) (old' : Seq.seq t) (fin : Seq.seq t)
end
module CreusotContracts_Std1_Slice_Impl3_ResolveElswhere
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int32
  predicate resolve_elswhere [@inline:trivial] (self : usize) (old' : Seq.seq t) (fin : Seq.seq t) =
    forall i : (int) . 0 <= i && i <> UInt64.to_int self && i < Seq.length old' -> Seq.get old' i = Seq.get fin i
end
module Core_Slice_Index_Impl2_Output
  type t
  type output  =
    t
end
module CreusotContracts_Std1_Slice_Impl3
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = t
  clone Core_Slice_Index_Impl2_Output as Output0 with type t = t
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = t
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = t
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_ResolveElswhere_Interface as ResolveElswhere1 with type self = usize,
  type t = seq t, predicate resolve_elswhere = ResolveElswhere0.resolve_elswhere,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface as HasValue1 with type self = usize,
  type t = seq t, predicate has_value = HasValue0.has_value, type ModelTy0.modelTy = ModelTy0.modelTy,
  type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = t
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface as InBounds1 with type self = usize,
  type t = seq t, predicate in_bounds = InBounds0.in_bounds, type ModelTy0.modelTy = ModelTy0.modelTy
end
module Core_Slice_Index_SliceIndex_Get_Interface
  type self
  type t
  use prelude.Prelude
  use Type
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = self, type t = t
  val get [@cfg:stackify] (self : self) (slice : t) : Type.core_option_option Output0.output
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_Get
  type self
  type t
  use prelude.Prelude
  use Type
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = self, type t = t
  val get [@cfg:stackify] (self : self) (slice : t) : Type.core_option_option Output0.output
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_GetMut_Interface
  type self
  type t
  use prelude.Prelude
  use Type
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = self, type t = t
  val get_mut [@cfg:stackify] (self : self) (slice : borrowed t) : Type.core_option_option (borrowed Output0.output)
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_GetMut
  type self
  type t
  use prelude.Prelude
  use Type
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = self, type t = t
  val get_mut [@cfg:stackify] (self : self) (slice : borrowed t) : Type.core_option_option (borrowed Output0.output)
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_GetUnchecked_Interface
  type self
  type t
  use prelude.Prelude
  val get_unchecked [@cfg:stackify] (self : self) (slice : opaque_ptr) : opaque_ptr
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_GetUnchecked
  type self
  type t
  use prelude.Prelude
  val get_unchecked [@cfg:stackify] (self : self) (slice : opaque_ptr) : opaque_ptr
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_GetUncheckedMut_Interface
  type self
  type t
  use prelude.Prelude
  val get_unchecked_mut [@cfg:stackify] (self : self) (slice : opaque_ptr) : opaque_ptr
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_GetUncheckedMut
  type self
  type t
  use prelude.Prelude
  val get_unchecked_mut [@cfg:stackify] (self : self) (slice : opaque_ptr) : opaque_ptr
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_Index_Interface
  type self
  type t
  use prelude.Prelude
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = self, type t = t
  val index [@cfg:stackify] (self : self) (slice : t) : Output0.output
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_Index
  type self
  type t
  use prelude.Prelude
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = self, type t = t
  val index [@cfg:stackify] (self : self) (slice : t) : Output0.output
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_IndexMut_Interface
  type self
  type t
  use prelude.Prelude
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = self, type t = t
  val index_mut [@cfg:stackify] (self : self) (slice : borrowed t) : borrowed Output0.output
    requires {false}
    
end
module Core_Slice_Index_SliceIndex_IndexMut
  type self
  type t
  use prelude.Prelude
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = self, type t = t
  val index_mut [@cfg:stackify] (self : self) (slice : borrowed t) : borrowed Output0.output
    requires {false}
    
end
module Core_Slice_Index_Impl2_Get_Interface
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  use Type
  val get [@cfg:stackify] (self : usize) (slice : seq t) : Type.core_option_option t
    requires {false}
    
end
module Core_Slice_Index_Impl2_Get
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  use Type
  val get [@cfg:stackify] (self : usize) (slice : seq t) : Type.core_option_option t
    requires {false}
    
end
module Core_Slice_Index_Impl2_GetMut_Interface
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  use Type
  val get_mut [@cfg:stackify] (self : usize) (slice : borrowed (seq t)) : Type.core_option_option (borrowed t)
    requires {false}
    
end
module Core_Slice_Index_Impl2_GetMut
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  use Type
  val get_mut [@cfg:stackify] (self : usize) (slice : borrowed (seq t)) : Type.core_option_option (borrowed t)
    requires {false}
    
end
module Core_Slice_Index_Impl2_GetUnchecked_Interface
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  val get_unchecked [@cfg:stackify] (self : usize) (slice : opaque_ptr) : opaque_ptr
    requires {false}
    
end
module Core_Slice_Index_Impl2_GetUnchecked
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  val get_unchecked [@cfg:stackify] (self : usize) (slice : opaque_ptr) : opaque_ptr
    requires {false}
    
end
module Core_Slice_Index_Impl2_GetUncheckedMut_Interface
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  val get_unchecked_mut [@cfg:stackify] (self : usize) (slice : opaque_ptr) : opaque_ptr
    requires {false}
    
end
module Core_Slice_Index_Impl2_GetUncheckedMut
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  val get_unchecked_mut [@cfg:stackify] (self : usize) (slice : opaque_ptr) : opaque_ptr
    requires {false}
    
end
module Core_Slice_Index_Impl2_Index_Interface
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  val index [@cfg:stackify] (self : usize) (slice : seq t) : t
    requires {false}
    
end
module Core_Slice_Index_Impl2_Index
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  val index [@cfg:stackify] (self : usize) (slice : seq t) : t
    requires {false}
    
end
module Core_Slice_Index_Impl2_IndexMut_Interface
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  val index_mut [@cfg:stackify] (self : usize) (slice : borrowed (seq t)) : borrowed t
    requires {false}
    
end
module Core_Slice_Index_Impl2_IndexMut
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  val index_mut [@cfg:stackify] (self : usize) (slice : borrowed (seq t)) : borrowed t
    requires {false}
    
end
module Core_Slice_Index_Impl2
  type t
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  use seq.Seq
  clone Core_Slice_Index_Impl2_IndexMut_Interface as IndexMut0 with type t = t
  clone Core_Slice_Index_Impl2_Index_Interface as Index0 with type t = t
  clone Core_Slice_Index_Impl2_GetUncheckedMut_Interface as GetUncheckedMut0 with type t = t
  clone Core_Slice_Index_SliceIndex_GetUncheckedMut_Interface as GetUncheckedMut1 with type self = usize,
  type t = seq t, val get_unchecked_mut = GetUncheckedMut0.get_unchecked_mut
  clone Core_Slice_Index_Impl2_GetUnchecked_Interface as GetUnchecked0 with type t = t
  clone Core_Slice_Index_SliceIndex_GetUnchecked_Interface as GetUnchecked1 with type self = usize, type t = seq t,
  val get_unchecked = GetUnchecked0.get_unchecked
  clone Core_Slice_Index_Impl2_GetMut_Interface as GetMut0 with type t = t
  clone Core_Slice_Index_Impl2_Get_Interface as Get0 with type t = t
  clone Core_Slice_Index_Impl2_Output as Output0 with type t = t
  clone Core_Slice_Index_SliceIndex_IndexMut_Interface as IndexMut1 with type self = usize, type t = seq t,
  val index_mut = IndexMut0.index_mut, type Output0.output = Output0.output
  clone Core_Slice_Index_SliceIndex_Index_Interface as Index1 with type self = usize, type t = seq t,
  val index = Index0.index, type Output0.output = Output0.output
  clone Core_Slice_Index_SliceIndex_GetMut_Interface as GetMut1 with type self = usize, type t = seq t,
  val get_mut = GetMut0.get_mut, type Output0.output = Output0.output
  clone Core_Slice_Index_SliceIndex_Get_Interface as Get1 with type self = usize, type t = seq t, val get = Get0.get,
  type Output0.output = Output0.output
  clone Core_Slice_Index_SliceIndex_Output as Output1 with type self = usize, type t = seq t,
  type output = Output0.output
end
module CreuSat_Trail_Impl0_Backstep_Interface
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision_Interface as InvariantNoDecision0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  val backstep [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (f : Type.creusat_formula_formula) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 62 4 77] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 60 4 47] InvariantNoDecision0.invariant_no_decision ( * self) f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 59 4 32] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) > 0}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 58 4 30] Invariant0.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 64 4 37] UInt64.to_int result < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 63 4 86] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 61 4 49] InvariantNoDecision0.invariant_no_decision ( ^ self) f }
    
end
module CreuSat_Trail_Impl0_Backstep
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model5 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreuSat_Logic_LogicUtil_Pop as Pop0 with type t = Type.creusat_trail_step, axiom .
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model2.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant2 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant2.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model5.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model4.model,
  function Model1.model = Model5.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant2.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model4.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model4.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant0 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model4.model,
  function Model1.model = Model5.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant1 with function Model0.model = Model1.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model0.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model0.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant1.invariant',
  function Model0.model = Model0.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model2.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant3 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model2.model, function Model1.model = Model0.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicTrail_LemmaBacktrackOk as LemmaBacktrackOk0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate Invariant0.invariant' = Invariant2.invariant',
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate Invariant1.invariant' = Invariant3.invariant', predicate Invariant2.invariant' = Invariant0.invariant',
  function Pop0.pop = Pop0.pop, function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old, axiom .
  use mach.int.Int64
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy2 with type t = usize
  clone Core_Slice_Index_Impl2_Output as Output1 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere1 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = usize
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy1 with type t = uint8
  clone Core_Slice_Index_Impl2_Output as Output0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = uint8
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Type.creusat_trail_trail
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut1 with type t = usize, type i = usize,
  type a = Type.alloc_alloc_global, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere1.resolve_elswhere,
  predicate HasValue0.has_value = HasValue1.has_value, type Output0.output = Output1.output
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = uint8, type i = usize,
  type a = Type.alloc_alloc_global, function Model0.model = Model3.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
  predicate HasValue0.has_value = HasValue0.has_value, type Output0.output = Output0.output
  clone CreusotContracts_Logic_Model_Impl1_Model as Model7 with type t = Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model0.model
  clone Alloc_Vec_Impl1_Pop_Interface as Pop1 with type t = Type.creusat_trail_step, type a = Type.alloc_alloc_global,
  function Model0.model = Model0.model, function Model1.model = Model7.model
  let rec cfg backstep [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 66 4 48] (self : borrowed (Type.creusat_trail_trail)) (f : Type.creusat_formula_formula) : usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 62 4 77] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 60 4 47] InvariantNoDecision0.invariant_no_decision ( * self) f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 59 4 32] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) > 0}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 58 4 30] Invariant0.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 64 4 37] UInt64.to_int result < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 63 4 86] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 61 4 49] InvariantNoDecision0.invariant_no_decision ( ^ self) f }
    
   =
  var _0 : usize;
  var self_1 : borrowed (Type.creusat_trail_trail);
  var f_2 : Type.creusat_formula_formula;
  var _3 : ();
  ghost var old_t_4 : borrowed (Type.creusat_trail_trail);
  var _5 : ();
  var last_6 : Type.core_option_option (Type.creusat_trail_step);
  var _7 : borrowed (Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global));
  var _8 : ();
  var _9 : isize;
  var step_10 : Type.creusat_trail_step;
  var _11 : ();
  var _12 : borrowed uint8;
  var _13 : borrowed (Type.alloc_vec_vec uint8 (Type.alloc_alloc_global));
  var _14 : usize;
  var _15 : Type.creusat_lit_lit;
  var _16 : ();
  var _17 : ();
  var _18 : ();
  var _19 : borrowed usize;
  var _20 : borrowed (Type.alloc_vec_vec usize (Type.alloc_alloc_global));
  var _21 : usize;
  var _22 : Type.creusat_lit_lit;
  var _23 : ();
  var _24 : Type.creusat_lit_lit;
  var _25 : ();
  var _26 : ();
  var _27 : ();
  var _28 : ();
  var _29 : ();
  var _30 : ();
  var _31 : ();
  var _32 : ();
  {
    self_1 <- self;
    f_2 <- f;
    goto BB0
  }
  BB0 {
    _5 <- ();
    old_t_4 <- ghost ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 67 20 35] self_1);
    goto BB1
  }
  BB1 {
    _7 <- borrow_mut (Type.creusat_trail_trail_Trail_trail ( * self_1));
    self_1 <- { self_1 with current = (let Type.CreuSat_Trail_Trail a b c d e =  * self_1 in Type.CreuSat_Trail_Trail a b ( ^ _7) d e) };
    last_6 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 69 19 35] Pop1.pop _7);
    goto BB2
  }
  BB2 {
    switch (last_6)
      | Type.Core_Option_Option_None -> goto BB3
      | Type.Core_Option_Option_Some _ -> goto BB5
      end
  }
  BB3 {
    assume { Resolve0.resolve self_1 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 90 16 91] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self_1))) f_2 (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self_1))) };
    _25 <- ();
    _8 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 93 8 53] Invariant1.invariant' (Type.creusat_trail_trail_Trail_assignments ( * self_1)) f_2 };
    _26 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 94 8 55] TrailInvariant0.trail_invariant (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self_1))) f_2 };
    _27 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 95 8 69] LitToLevelInvariant0.lit_to_level_invariant (Model2.model (Type.creusat_trail_trail_Trail_lit_to_level ( * self_1))) f_2 };
    _28 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 97 8 47] LitNotInLess0.lit_not_in_less ( * self_1) f_2 };
    _29 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 98 8 43] LitIsUnique0.lit_is_unique ( * self_1) };
    _30 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 99 8 83] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self_1))) f_2 (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self_1))) };
    _31 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 100 8 56] TrailEntriesAreAssigned0.trail_entries_are_assigned ( * self_1) };
    _32 <- ();
    _0 <- (0 : usize);
    goto BB11
  }
  BB4 {
    assume { Resolve0.resolve self_1 };
    absurd
  }
  BB5 {
    step_10 <- Type.core_option_option_Some_0 last_6;
    _13 <- borrow_mut (Type.creusat_assignments_assignments_Assignments_0 (Type.creusat_trail_trail_Trail_assignments ( * self_1)));
    self_1 <- { self_1 with current = (let Type.CreuSat_Trail_Trail a b c d e =  * self_1 in Type.CreuSat_Trail_Trail (let Type.CreuSat_Assignments_Assignments a = Type.creusat_trail_trail_Trail_assignments ( * self_1) in Type.CreuSat_Assignments_Assignments ( ^ _13)) b c d e) };
    _15 <- Type.creusat_trail_step_Step_lit step_10;
    _14 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 73 35 51] Index0.index _15);
    goto BB6
  }
  BB6 {
    _12 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 73 16 52] IndexMut0.index_mut _13 _14);
    goto BB7
  }
  BB7 {
    _12 <- { _12 with current = ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 73 16 57]  * _12 + (2 : uint8)) };
    assume { Resolve1.resolve _12 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 80 16 73] Model0.model (Type.creusat_trail_trail_Trail_trail ( * self_1)) = Pop0.pop (Model0.model (Type.creusat_trail_trail_Trail_trail ( * old_t_4))) };
    _16 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 81 16 54]  ^ old_t_4 =  ^ self_1 };
    _17 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 82 16 78] let _ = LemmaBacktrackOk0.lemma_backtrack_ok ( * self_1) f_2 (Type.creusat_trail_step_Step_lit step_10) in true };
    _18 <- ();
    _20 <- borrow_mut (Type.creusat_trail_trail_Trail_lit_to_level ( * self_1));
    self_1 <- { self_1 with current = (let Type.CreuSat_Trail_Trail a b c d e =  * self_1 in Type.CreuSat_Trail_Trail a ( ^ _20) c d e) };
    assume { Resolve0.resolve self_1 };
    _22 <- Type.creusat_trail_step_Step_lit step_10;
    _21 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 83 34 50] Index0.index _22);
    goto BB8
  }
  BB8 {
    _19 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 83 16 51] IndexMut1.index_mut _20 _21);
    goto BB9
  }
  BB9 {
    _19 <- { _19 with current = (18446744073709551615 : usize) };
    assume { Resolve2.resolve _19 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 84 16 91] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self_1))) f_2 (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self_1))) };
    _23 <- ();
    _24 <- Type.creusat_trail_step_Step_lit step_10;
    _0 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 85 23 39] Index0.index _24);
    goto BB10
  }
  BB10 {
    goto BB11
  }
  BB11 {
    return _0
  }
  
end
module CreuSat_Trail_Impl0_BacktrackSafe_Interface
  use mach.int.UInt64
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  val backtrack_safe [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (level : usize) (f : Type.creusat_formula_formula) (d : borrowed (Type.creusat_decision_decisions)) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 109 4 77] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 108 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 107 4 42] Invariant1.invariant' ( * self) f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 106 4 30] Invariant2.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 110 4 86] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 108 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 107 4 42] Invariant1.invariant' ( ^ self) f }
    
end
module CreuSat_Trail_Impl0_BacktrackSafe
  use mach.int.UInt64
  use prelude.Prelude
  use Type
  use mach.int.Int
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model5.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model3.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model3.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model3.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model3.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model1.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model0.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model0.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model0.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model5.model, function Model1.model = Model0.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  val backtrack_safe [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (level : usize) (f : Type.creusat_formula_formula) (d : borrowed (Type.creusat_decision_decisions)) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 109 4 77] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 108 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 107 4 42] Invariant1.invariant' ( * self) f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 106 4 30] Invariant2.invariant' f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 110 4 86] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 108 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 107 4 42] Invariant1.invariant' ( ^ self) f }
    
end
module CreuSat_Trail_Impl0_BacktrackTo_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = usize, type a = Type.alloc_alloc_global,
  axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  val backtrack_to [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (level : usize) (f : Type.creusat_formula_formula) (d : borrowed (Type.creusat_decision_decisions)) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 123 4 77] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 121 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 120 4 42] Invariant1.invariant' ( * self) f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 119 4 30] Invariant2.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 118 4 49] Seq.length (Model2.model (Type.creusat_trail_trail_Trail_decisions ( * self))) > UInt64.to_int level}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 124 4 86] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 121 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 120 4 42] Invariant1.invariant' ( ^ self) f }
    
end
module CreuSat_Trail_Impl0_BacktrackTo
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model2.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_decision_node,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicDecision_Impl0_Invariant as Invariant0 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model4.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model4.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model4.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model4.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model1.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model0.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model0.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model0.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model2.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model2.model, function Model1.model = Model0.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  val backtrack_to [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (level : usize) (f : Type.creusat_formula_formula) (d : borrowed (Type.creusat_decision_decisions)) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 123 4 77] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 121 4 48] Invariant0.invariant' ( * d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 120 4 42] Invariant1.invariant' ( * self) f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 119 4 30] Invariant2.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 118 4 49] Seq.length (Model2.model (Type.creusat_trail_trail_Trail_decisions ( * self))) > UInt64.to_int level}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 124 4 86] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 121 4 48] Invariant0.invariant' ( ^ d) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 120 4 42] Invariant1.invariant' ( ^ self) f }
    
end
module Alloc_Vec_Impl1_Push_Interface
  type t
  type a
  use seq.Seq
  use prelude.Prelude
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val push [@cfg:stackify] (self : borrowed (Type.alloc_vec_vec t a)) (value : t) : ()
    ensures { Model0.model ( ^ self) = Seq.snoc (Model0.model ( * self)) value }
    
end
module Alloc_Vec_Impl1_Push
  type t
  type a
  use seq.Seq
  use prelude.Prelude
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val push [@cfg:stackify] (self : borrowed (Type.alloc_vec_vec t a)) (value : t) : ()
    ensures { Model0.model ( ^ self) = Seq.snoc (Model0.model ( * self)) value }
    
end
module CreuSat_Trail_Impl0_EnqAssignment_Interface
  use seq.Seq
  use Type
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  clone CreuSat_Logic_LogicLit_Impl1_Sat_Interface as Sat0
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit_Interface as ClausePostWithRegardsToLit0
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant3
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl1_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model3
  clone CreuSat_Logic_LogicLit_Impl1_LitIn_Interface as LitIn0
  clone CreuSat_Logic_LogicClause_Impl2_Unit_Interface as Unit0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail_Interface as IdxInTrail0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  val enq_assignment [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (step : Type.creusat_trail_step) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 230 4 78] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) _f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 229 4 67] Unset0.unset (Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) (IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit step)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 228 4 51] not IdxInTrail0.idx_in_trail (Type.creusat_trail_step_Step_lit step) (Type.creusat_trail_trail_Trail_trail ( * self))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 220 4 7] match (Type.creusat_trail_step_Step_reason step) with
      | Type.CreuSat_Trail_Reason_Long cref -> UInt64.to_int cref < Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) && Unit0.unit (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) (UInt64.to_int cref)) (Type.creusat_trail_trail_Trail_assignments ( * self)) && LitIn0.lit_in (Type.creusat_trail_step_Step_lit step) (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) (UInt64.to_int cref))
      | Type.CreuSat_Trail_Reason_Unit cref -> UInt64.to_int cref < Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) && Type.creusat_trail_step_Step_lit step = Seq.get (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) (UInt64.to_int cref))) 0
      | _ -> true
      end}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 219 4 36] Invariant0.invariant' step _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 218 4 49] Invariant1.invariant' (Type.creusat_trail_step_Step_lit step) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 217 4 31] Invariant2.invariant' _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 216 4 43] Invariant3.invariant' ( * self) _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 240 4 51] Type.creusat_trail_trail_Trail_decisions ( ^ self) = Type.creusat_trail_trail_Trail_decisions ( * self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 239 4 65] Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) = 1 + Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 235 4 7] match (Type.creusat_trail_step_Step_reason step) with
      | Type.CreuSat_Trail_Reason_Long k -> ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) (UInt64.to_int k)) (Type.creusat_trail_trail_Trail_assignments ( ^ self)) (Type.creusat_trail_step_Step_lit step)
      | _ -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 234 4 87] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) _f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 233 4 49] Sat0.sat (Type.creusat_trail_step_Step_lit step) (Type.creusat_trail_trail_Trail_assignments ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 231 4 94] forall j : (int) . 0 <= j && j < Seq.length (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) && j <> IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit step) -> Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) j = Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) j }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 216 4 43] Invariant3.invariant' ( ^ self) _f }
    
end
module CreuSat_Trail_Impl0_EnqAssignment
  use seq.Seq
  use Type
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model6.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with function Model0.model = Model3.model
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant1 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant1.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant5 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with function Model0.model = Model3.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner as UnitInner0 with predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
  predicate SatInner0.sat_inner = SatInner1.sat_inner, function Model0.model = Model3.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant5.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant4 with function Model0.model = Model2.model,
  function Model1.model = Model3.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant0 with predicate Invariant0.invariant' = Invariant1.invariant',
  predicate Invariant1.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant0.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant6 with function Model0.model = Model1.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model3.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit as ClausePostWithRegardsToLit0 with function Model0.model = Model1.model,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unit as Unit0 with function Model0.model = Model1.model,
  predicate UnitInner0.unit_inner = UnitInner0.unit_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model0.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model0.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant6.invariant',
  function Model0.model = Model0.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model6.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant3 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model6.model, function Model1.model = Model0.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicTrail_LemmaPushMaintainsLitNotInLess as LemmaPushMaintainsLitNotInLess0 with function Model0.model = Model0.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner,
  predicate Invariant0.invariant' = Invariant0.invariant', function Model1.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate Unset0.unset = Unset0.unset,
  predicate Invariant1.invariant' = Invariant3.invariant', predicate Invariant2.invariant' = Invariant2.invariant',
  predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old, axiom .
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail as IdxInTrail0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = Type.creusat_trail_trail
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy2
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy1 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = usize
  clone Core_Slice_Index_Impl2_Output as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = usize, type i = usize,
  type a = Type.alloc_alloc_global, function Model0.model = Model6.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
  predicate HasValue0.has_value = HasValue0.has_value, type Output0.output = Output0.output
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with function Model0.model = Model6.model
  clone CreuSat_Lit_Impl1_Index_Interface as Index0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Logic_Model_Impl1_Model as Model8 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model1.model
  clone CreusotContracts_Logic_Model_Impl0_Model as Model7 with type t = Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model0.model
  clone CreuSat_Assignments_Impl0_SetAssignment_Interface as SetAssignment0 with function Model0.model = Model7.model,
  function Model1.model = Model8.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate Unset0.unset = Unset0.unset,
  predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  predicate Invariant0.invariant' = Invariant2.invariant', predicate Invariant1.invariant' = Invariant1.invariant',
  predicate Invariant2.invariant' = Invariant6.invariant', predicate Sat0.sat = Sat0.sat,
  function Model2.model = Model1.model, predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = Type.creusat_trail_step, type a = Type.alloc_alloc_global,
  function Model0.model = Model0.model
  let rec cfg enq_assignment [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 241 4 62] (self : borrowed (Type.creusat_trail_trail)) (step : Type.creusat_trail_step) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 230 4 78] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) _f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 229 4 67] Unset0.unset (Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) (IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit step)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 228 4 51] not IdxInTrail0.idx_in_trail (Type.creusat_trail_step_Step_lit step) (Type.creusat_trail_trail_Trail_trail ( * self))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 220 4 7] match (Type.creusat_trail_step_Step_reason step) with
      | Type.CreuSat_Trail_Reason_Long cref -> UInt64.to_int cref < Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) && Unit0.unit (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) (UInt64.to_int cref)) (Type.creusat_trail_trail_Trail_assignments ( * self)) && LitIn0.lit_in (Type.creusat_trail_step_Step_lit step) (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) (UInt64.to_int cref))
      | Type.CreuSat_Trail_Reason_Unit cref -> UInt64.to_int cref < Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) && Type.creusat_trail_step_Step_lit step = Seq.get (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) (UInt64.to_int cref))) 0
      | _ -> true
      end}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 219 4 36] Invariant0.invariant' step _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 218 4 49] Invariant1.invariant' (Type.creusat_trail_step_Step_lit step) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 217 4 31] Invariant2.invariant' _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 216 4 43] Invariant3.invariant' ( * self) _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 240 4 51] Type.creusat_trail_trail_Trail_decisions ( ^ self) = Type.creusat_trail_trail_Trail_decisions ( * self) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 239 4 65] Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) = 1 + Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 235 4 7] match (Type.creusat_trail_step_Step_reason step) with
      | Type.CreuSat_Trail_Reason_Long k -> ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses _f)) (UInt64.to_int k)) (Type.creusat_trail_trail_Trail_assignments ( ^ self)) (Type.creusat_trail_step_Step_lit step)
      | _ -> true
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 234 4 87] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) _f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 233 4 49] Sat0.sat (Type.creusat_trail_step_Step_lit step) (Type.creusat_trail_trail_Trail_assignments ( ^ self)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 231 4 94] forall j : (int) . 0 <= j && j < Seq.length (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) && j <> IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit step) -> Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) j = Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) j }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 216 4 43] Invariant3.invariant' ( ^ self) _f }
    
   =
  var _0 : ();
  var self_1 : borrowed (Type.creusat_trail_trail);
  var step_2 : Type.creusat_trail_step;
  var _f_3 : Type.creusat_formula_formula;
  var _4 : usize;
  var _5 : Type.creusat_trail_trail;
  var _6 : borrowed usize;
  var _7 : borrowed (Type.alloc_vec_vec usize (Type.alloc_alloc_global));
  var _8 : usize;
  var _9 : Type.creusat_lit_lit;
  var trail_10 : Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global);
  var _11 : ();
  var _12 : borrowed (Type.creusat_assignments_assignments);
  var _13 : Type.creusat_lit_lit;
  var _14 : Type.creusat_formula_formula;
  var _15 : Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global);
  var _16 : ();
  var _17 : ();
  var _18 : ();
  var _19 : ();
  var _20 : borrowed (Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global));
  var _21 : Type.creusat_trail_step;
  var _22 : ();
  var _23 : ();
  var _24 : ();
  var _25 : ();
  {
    self_1 <- self;
    step_2 <- step;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    _5 <-  * self_1;
    _4 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 242 46 67] DecisionLevel0.decision_level _5);
    goto BB1
  }
  BB1 {
    _7 <- borrow_mut (Type.creusat_trail_trail_Trail_lit_to_level ( * self_1));
    self_1 <- { self_1 with current = (let Type.CreuSat_Trail_Trail a b c d e =  * self_1 in Type.CreuSat_Trail_Trail a ( ^ _7) c d e) };
    _9 <- Type.creusat_trail_step_Step_lit step_2;
    _8 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 242 26 42] Index0.index _9);
    goto BB2
  }
  BB2 {
    _6 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 242 8 43] IndexMut0.index_mut _7 _8);
    goto BB3
  }
  BB3 {
    _6 <- { _6 with current = _4 };
    assume { Resolve0.resolve _6 };
    trail_10 <- Type.creusat_trail_trail_Trail_trail ( * self_1);
    _12 <- borrow_mut (Type.creusat_trail_trail_Trail_assignments ( * self_1));
    self_1 <- { self_1 with current = (let Type.CreuSat_Trail_Trail a b c d e =  * self_1 in Type.CreuSat_Trail_Trail ( ^ _12) b c d e) };
    _13 <- Type.creusat_trail_step_Step_lit step_2;
    _14 <- _f_3;
    _15 <- trail_10;
    _11 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 245 8 60] SetAssignment0.set_assignment _12 _13 _14 _15);
    goto BB4
  }
  BB4 {
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 247 8 62] LitNotInLessInner0.lit_not_in_less_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self_1))) _f_3 };
    _16 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 248 8 42] Invariant0.invariant' step_2 _f_3 };
    _17 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 249 8 83] let _ = LemmaPushMaintainsLitNotInLess0.lemma_push_maintains_lit_not_in_less ( * self_1) _f_3 step_2 in true };
    _18 <- ();
    _20 <- borrow_mut (Type.creusat_trail_trail_Trail_trail ( * self_1));
    self_1 <- { self_1 with current = (let Type.CreuSat_Trail_Trail a b c d e =  * self_1 in Type.CreuSat_Trail_Trail a b ( ^ _20) d e) };
    _21 <- step_2;
    _19 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 250 8 29] Push0.push _20 _21);
    goto BB5
  }
  BB5 {
    assume { Resolve1.resolve self_1 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 251 8 9] match (Type.creusat_trail_step_Step_reason step_2) with
      | Type.CreuSat_Trail_Reason_Long k -> ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses _f_3)) (UInt64.to_int k)) (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self_1))) (IndexLogic0.index_logic (Type.creusat_trail_step_Step_lit step_2))
      | _ -> true
      end };
    _22 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 258 8 43] LitIsUnique0.lit_is_unique ( * self_1) };
    _23 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 259 8 48] LitNotInLess0.lit_not_in_less ( * self_1) _f_3 };
    _24 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 261 8 84] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self_1))) _f_3 (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self_1))) };
    _25 <- ();
    _0 <- ();
    return _0
  }
  
end
module Alloc_Vec_Impl1_Len_Interface
  type t
  type a
  use mach.int.UInt64
  use seq.Seq
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val len [@cfg:stackify] (self : Type.alloc_vec_vec t a) : usize
    ensures { UInt64.to_int result = Seq.length (Model0.model self) }
    
end
module Alloc_Vec_Impl1_Len
  type t
  type a
  use mach.int.UInt64
  use seq.Seq
  use prelude.Prelude
  use Type
  use mach.int.Int
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val len [@cfg:stackify] (self : Type.alloc_vec_vec t a) : usize
    ensures { UInt64.to_int result = Seq.length (Model0.model self) }
    
end
module CreuSat_Trail_Impl0_EnqDecision_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UInt8
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_Logic_Unset_Interface as Unset0
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner_Interface as LongArePostUnitInner0
  clone CreuSat_Logic_LogicAssignments_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  val enq_decision [@cfg:stackify] (self : borrowed (Type.creusat_trail_trail)) (idx : usize) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 275 4 78] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) _f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 271 4 49] Unset0.unset (Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) (UInt64.to_int idx))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 269 4 36] UInt64.to_int idx < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 268 4 43] Invariant0.invariant' ( * self) _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 267 4 31] Invariant1.invariant' _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 277 4 65] Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) = 1 + Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 276 4 87] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) _f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 274 4 88] UInt8.to_int (Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) (UInt64.to_int idx)) = 1 || UInt8.to_int (Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) (UInt64.to_int idx)) = 0 }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 272 4 76] forall j : (int) . 0 <= j && j < Seq.length (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) && j <> UInt64.to_int idx -> Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) j = Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) j }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 268 4 43] Invariant0.invariant' ( ^ self) _f }
    
end
module CreuSat_Trail_Impl0_EnqDecision
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.UInt8
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model5 with function Model0.model = Model6.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model4.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant5 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant3 with function Model0.model = Model5.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model5.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant6 with function Model0.model = Model3.model,
  function Model1.model = Model5.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant4 with predicate Invariant0.invariant' = Invariant5.invariant',
  predicate Invariant1.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant4.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model3.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model3.model,
  predicate Invariant0.invariant' = Invariant3.invariant', function Model1.model = Model5.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model3.model,
  function Model1.model = Model5.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant2 with function Model0.model = Model1.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model0.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model0.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant2.invariant',
  function Model0.model = Model0.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model4.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model1.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant0 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model4.model, function Model1.model = Model0.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = Type.creusat_trail_trail
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy2
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy1 with type t = uint8
  clone Core_Slice_Index_Impl2_Output as Output1 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere1 with type t = uint8
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = uint8
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = usize
  clone Core_Slice_Index_Impl2_Output as Output0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = usize
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = usize
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = usize, type i = usize,
  type a = Type.alloc_alloc_global, function Model0.model = Model4.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
  predicate HasValue0.has_value = HasValue0.has_value, type Output0.output = Output0.output
  clone Alloc_Vec_Impl1_Len_Interface as Len1 with type t = usize, type a = Type.alloc_alloc_global,
  function Model0.model = Model4.model
  clone Alloc_Vec_Impl1_Push_Interface as Push0 with type t = usize, type a = Type.alloc_alloc_global,
  function Model0.model = Model4.model
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut1 with type t = uint8, type i = usize,
  type a = Type.alloc_alloc_global, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere1.resolve_elswhere,
  predicate HasValue0.has_value = HasValue1.has_value, type Output0.output = Output1.output
  clone CreusotContracts_Logic_Model_Impl0_Model as Model7 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model1.model
  clone CreuSat_Lit_Impl1_PhaseSaved_Interface as PhaseSaved0 with function Model0.model = Model7.model,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone Alloc_Vec_Impl1_Push_Interface as Push1 with type t = Type.creusat_trail_step, type a = Type.alloc_alloc_global,
  function Model0.model = Model0.model
  clone Alloc_Vec_Impl1_Len_Interface as Len0 with type t = Type.creusat_trail_step, type a = Type.alloc_alloc_global,
  function Model0.model = Model0.model
  let rec cfg enq_decision [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 278 4 60] (self : borrowed (Type.creusat_trail_trail)) (idx : usize) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 275 4 78] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) _f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 271 4 49] Unset0.unset (Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) (UInt64.to_int idx))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 269 4 36] UInt64.to_int idx < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 268 4 43] Invariant0.invariant' ( * self) _f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 267 4 31] Invariant1.invariant' _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 277 4 65] Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) = 1 + Seq.length (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 276 4 87] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( ^ self))) _f (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 274 4 88] UInt8.to_int (Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) (UInt64.to_int idx)) = 1 || UInt8.to_int (Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) (UInt64.to_int idx)) = 0 }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 272 4 76] forall j : (int) . 0 <= j && j < Seq.length (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) && j <> UInt64.to_int idx -> Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self))) j = Seq.get (Model1.model (Type.creusat_trail_trail_Trail_assignments ( ^ self))) j }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 268 4 43] Invariant0.invariant' ( ^ self) _f }
    
   =
  var _0 : ();
  var self_1 : borrowed (Type.creusat_trail_trail);
  var idx_2 : usize;
  var _f_3 : Type.creusat_formula_formula;
  var trail_len_4 : usize;
  var _5 : Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global);
  var _6 : ();
  var _7 : borrowed (Type.alloc_vec_vec usize (Type.alloc_alloc_global));
  var _8 : usize;
  var dlevel_9 : usize;
  var _10 : Type.alloc_vec_vec usize (Type.alloc_alloc_global);
  var _11 : usize;
  var _12 : borrowed usize;
  var _13 : borrowed (Type.alloc_vec_vec usize (Type.alloc_alloc_global));
  var _14 : usize;
  var _15 : borrowed uint8;
  var _16 : borrowed (Type.alloc_vec_vec uint8 (Type.alloc_alloc_global));
  var _17 : usize;
  var lit_18 : Type.creusat_lit_lit;
  var _19 : usize;
  var _20 : Type.creusat_assignments_assignments;
  var _21 : Type.creusat_assignments_assignments;
  var step_22 : Type.creusat_trail_step;
  var _23 : Type.creusat_lit_lit;
  var _24 : usize;
  var _25 : Type.creusat_trail_reason;
  var _26 : ();
  var _27 : borrowed (Type.alloc_vec_vec (Type.creusat_trail_step) (Type.alloc_alloc_global));
  var _28 : Type.creusat_trail_step;
  var _29 : ();
  var _30 : ();
  var _31 : ();
  var _32 : ();
  var _33 : ();
  {
    self_1 <- self;
    idx_2 <- idx;
    _f_3 <- _f;
    goto BB0
  }
  BB0 {
    _5 <- Type.creusat_trail_trail_Trail_trail ( * self_1);
    trail_len_4 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 279 24 40] Len0.len _5);
    goto BB1
  }
  BB1 {
    _7 <- borrow_mut (Type.creusat_trail_trail_Trail_decisions ( * self_1));
    self_1 <- { self_1 with current = (let Type.CreuSat_Trail_Trail a b c d e =  * self_1 in Type.CreuSat_Trail_Trail a b c d ( ^ _7)) };
    _8 <- trail_len_4;
    _6 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 280 8 38] Push0.push _7 _8);
    goto BB2
  }
  BB2 {
    _10 <- Type.creusat_trail_trail_Trail_decisions ( * self_1);
    dlevel_9 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 281 21 41] Len1.len _10);
    goto BB3
  }
  BB3 {
    _11 <- dlevel_9;
    _13 <- borrow_mut (Type.creusat_trail_trail_Trail_lit_to_level ( * self_1));
    self_1 <- { self_1 with current = (let Type.CreuSat_Trail_Trail a b c d e =  * self_1 in Type.CreuSat_Trail_Trail a ( ^ _13) c d e) };
    _14 <- idx_2;
    _12 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 282 8 30] IndexMut0.index_mut _13 _14);
    goto BB4
  }
  BB4 {
    _12 <- { _12 with current = _11 };
    assume { Resolve0.resolve _12 };
    _16 <- borrow_mut (Type.creusat_assignments_assignments_Assignments_0 (Type.creusat_trail_trail_Trail_assignments ( * self_1)));
    self_1 <- { self_1 with current = (let Type.CreuSat_Trail_Trail a b c d e =  * self_1 in Type.CreuSat_Trail_Trail (let Type.CreuSat_Assignments_Assignments a = Type.creusat_trail_trail_Trail_assignments ( * self_1) in Type.CreuSat_Assignments_Assignments ( ^ _16)) b c d e) };
    _17 <- idx_2;
    _15 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 283 8 31] IndexMut1.index_mut _16 _17);
    goto BB5
  }
  BB5 {
    _15 <- { _15 with current = ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 283 8 36]  * _15 - (2 : uint8)) };
    assume { Resolve1.resolve _15 };
    _19 <- idx_2;
    _21 <- Type.creusat_trail_trail_Trail_assignments ( * self_1);
    _20 <- _21;
    lit_18 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 284 18 58] PhaseSaved0.phase_saved _19 _20);
    goto BB6
  }
  BB6 {
    _23 <- lit_18;
    _24 <- dlevel_9;
    _25 <- Type.CreuSat_Trail_Reason_Decision;
    step_22 <- Type.CreuSat_Trail_Step _23 _24 _25;
    _27 <- borrow_mut (Type.creusat_trail_trail_Trail_trail ( * self_1));
    self_1 <- { self_1 with current = (let Type.CreuSat_Trail_Trail a b c d e =  * self_1 in Type.CreuSat_Trail_Trail a b ( ^ _27) d e) };
    _28 <- step_22;
    _26 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 288 8 29] Push1.push _27 _28);
    goto BB7
  }
  BB7 {
    assume { Resolve2.resolve self_1 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 289 8 48] LitNotInLess0.lit_not_in_less ( * self_1) _f_3 };
    _29 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 292 8 84] LongArePostUnitInner0.long_are_post_unit_inner (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self_1))) _f_3 (Model1.model (Type.creusat_trail_trail_Trail_assignments ( * self_1))) };
    _30 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 294 8 56] TrailInvariant0.trail_invariant (Model0.model (Type.creusat_trail_trail_Trail_trail ( * self_1))) _f_3 };
    _31 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 296 8 43] LitIsUnique0.lit_is_unique ( * self_1) };
    _32 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/trail.rs" 297 8 56] TrailEntriesAreAssigned0.trail_entries_are_assigned ( * self_1) };
    _33 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_UnitProp_CheckAndMoveWatch_Interface
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model3
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface as ToWatchidxLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  val check_and_move_watch [@cfg:stackify] (f : borrowed (Type.creusat_formula_formula)) (trail : Type.creusat_trail_trail) (watches : borrowed (Type.creusat_watches_watches)) (cref : usize) (j : usize) (k : usize) (lit : Type.creusat_lit_lit) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 25 0 70] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_watches_watches_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 24 0 45] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) > 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 23 0 57] 2 <= UInt64.to_int k && UInt64.to_int k < Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 22 0 39] UInt64.to_int cref < Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 20 0 44] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 19 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 18 0 44] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 17 0 36] Invariant1.invariant' trail ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 16 0 33] Invariant2.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 30 0 75] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int cref))) = Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 29 0 114] not result -> Unsat0.unsat (Seq.get (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int cref))) (UInt64.to_int k)) (Type.creusat_trail_trail_Trail_assignments trail) &&  ^ f =  * f &&  * watches =  ^ watches }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 28 0 55] Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * f))) = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 27 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 26 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 18 0 44] Invariant0.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 17 0 36] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 16 0 33] Invariant2.invariant' ( ^ f) }
    
end
module CreuSat_UnitProp_CheckAndMoveWatch
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model7 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model5.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model2.model,
  function Model1.model = Model3.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model2.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model3.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model6.model,
  function Model1.model = Model7.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model6.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model6.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model6.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model7.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model5.model, function Model1.model = Model6.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model1.model,
  function Model1.model = Model2.model, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  val check_and_move_watch [@cfg:stackify] (f : borrowed (Type.creusat_formula_formula)) (trail : Type.creusat_trail_trail) (watches : borrowed (Type.creusat_watches_watches)) (cref : usize) (j : usize) (k : usize) (lit : Type.creusat_lit_lit) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 25 0 70] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_watches_watches_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 24 0 45] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) > 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 23 0 57] 2 <= UInt64.to_int k && UInt64.to_int k < Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 22 0 39] UInt64.to_int cref < Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 20 0 44] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 19 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 18 0 44] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 17 0 36] Invariant1.invariant' trail ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 16 0 33] Invariant2.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 30 0 75] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int cref))) = Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 29 0 114] not result -> Unsat0.unsat (Seq.get (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int cref))) (UInt64.to_int k)) (Type.creusat_trail_trail_Trail_assignments trail) &&  ^ f =  * f &&  * watches =  ^ watches }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 28 0 55] Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( * f))) = Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 27 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 26 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 18 0 44] Invariant0.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 17 0 36] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 16 0 33] Invariant2.invariant' ( ^ f) }
    
end
module CreuSat_UnitProp_Swap_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  val swap [@cfg:stackify] (f : borrowed (Type.creusat_formula_formula)) (trail : Type.creusat_trail_trail) (watches : Type.creusat_watches_watches) (cref : usize) (j : usize) (k : usize) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 59 0 39] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 58 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 57 0 46] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) > UInt64.to_int k}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 56 0 46] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) > UInt64.to_int j}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 55 0 46] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 54 0 41] Invariant0.invariant' watches ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 53 0 33] Invariant1.invariant' ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 52 0 39] Invariant2.invariant' trail ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 63 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 62 0 75] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) = Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int cref))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 61 0 55] Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) = Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 60 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 54 0 41] Invariant0.invariant' watches ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 53 0 33] Invariant1.invariant' ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 52 0 39] Invariant2.invariant' trail ( ^ f) }
    
end
module CreuSat_UnitProp_Swap
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant5 with function Model0.model = Model3.model
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner1 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model3.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant3 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant3.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model2.model,
  function Model1.model = Model3.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model2.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model6.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner2 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner as PostUnitInner0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner, predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl1_PostUnit as PostUnit0 with function Model0.model = Model3.model,
  predicate PostUnitInner0.post_unit_inner = PostUnitInner0.post_unit_inner
  clone CreuSat_Logic_Logic_LemmaSwapMaintainsPostUnit as LemmaSwapMaintainsPostUnit0 with predicate PostUnit0.post_unit = PostUnit0.post_unit,
  function Model0.model = Model1.model, axiom .
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner1.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant6 with predicate Invariant0.invariant' = Invariant3.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model2.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model8.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model5.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant5.invariant',
  function Model0.model = Model2.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model6.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model3.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant2 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model6.model, function Model1.model = Model2.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = seq (Type.creusat_lit_lit)
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy1 with type t = Type.creusat_lit_lit
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model9 with type t = Type.creusat_lit_lit, axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model10 with type t = seq (Type.creusat_lit_lit),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model9.model
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = Type.creusat_lit_lit,
  function Model0.model = Model10.model, function Model1.model = Model9.model
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = Type.creusat_clause_clause
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = Type.creusat_clause_clause
  clone Core_Slice_Index_Impl2_Output as Output0 with type t = Type.creusat_clause_clause
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = Type.creusat_clause_clause
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = Type.creusat_clause_clause
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = Type.creusat_clause_clause
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Type.creusat_formula_formula
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, function Model0.model = Model9.model, function Model1.model = Model4.model
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = Type.creusat_clause_clause, type i = usize,
  type a = Type.alloc_alloc_global, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
  predicate HasValue0.has_value = HasValue0.has_value, type Output0.output = Output0.output
  let rec cfg swap [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 64 0 91] (f : borrowed (Type.creusat_formula_formula)) (trail : Type.creusat_trail_trail) (watches : Type.creusat_watches_watches) (cref : usize) (j : usize) (k : usize) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 59 0 39] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 58 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 57 0 46] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) > UInt64.to_int k}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 56 0 46] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) > UInt64.to_int j}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 55 0 46] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 54 0 41] Invariant0.invariant' watches ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 53 0 33] Invariant1.invariant' ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 52 0 39] Invariant2.invariant' trail ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 63 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 62 0 75] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) = Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int cref))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 61 0 55] Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) = Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 60 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 54 0 41] Invariant0.invariant' watches ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 53 0 33] Invariant1.invariant' ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 52 0 39] Invariant2.invariant' trail ( ^ f) }
    
   =
  var _0 : ();
  var f_1 : borrowed (Type.creusat_formula_formula);
  var trail_2 : Type.creusat_trail_trail;
  var watches_3 : Type.creusat_watches_watches;
  var cref_4 : usize;
  var j_5 : usize;
  var k_6 : usize;
  ghost var old_f_7 : borrowed (Type.creusat_formula_formula);
  var _8 : ();
  var _9 : ();
  var _10 : ();
  var _11 : ();
  var _12 : borrowed (seq (Type.creusat_lit_lit));
  var _13 : borrowed (seq (Type.creusat_lit_lit));
  var _14 : borrowed (Type.alloc_vec_vec (Type.creusat_lit_lit) (Type.alloc_alloc_global));
  var _15 : borrowed (Type.creusat_clause_clause);
  var _16 : borrowed (Type.alloc_vec_vec (Type.creusat_clause_clause) (Type.alloc_alloc_global));
  var _17 : usize;
  var _18 : usize;
  var _19 : usize;
  var _20 : ();
  var _21 : ();
  var _22 : ();
  var _23 : ();
  var _24 : ();
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    j_5 <- j;
    k_6 <- k;
    goto BB0
  }
  BB0 {
    _8 <- ();
    old_f_7 <- ghost ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 65 16 28] f_1);
    goto BB1
  }
  BB1 {
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 66 4 67] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) };
    _9 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 67 4 89] LongArePostUnitInner0.long_are_post_unit_inner (Model2.model (Type.creusat_trail_trail_Trail_trail trail_2)) ( * f_1) (Model3.model (Type.creusat_trail_trail_Trail_assignments trail_2)) && true };
    _10 <- ();
    _16 <- borrow_mut (Type.creusat_formula_formula_Formula_clauses ( * f_1));
    f_1 <- { f_1 with current = (let Type.CreuSat_Formula_Formula a b =  * f_1 in Type.CreuSat_Formula_Formula ( ^ _16) b) };
    assume { Resolve0.resolve f_1 };
    _17 <- cref_4;
    _15 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 68 4 19] IndexMut0.index_mut _16 _17);
    goto BB2
  }
  BB2 {
    _14 <- borrow_mut (Type.creusat_clause_clause_Clause_rest ( * _15));
    _15 <- { _15 with current = (let Type.CreuSat_Clause_Clause a b =  * _15 in Type.CreuSat_Clause_Clause a ( ^ _14)) };
    assume { Resolve1.resolve _15 };
    _13 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 68 4 35] DerefMut0.deref_mut _14);
    goto BB3
  }
  BB3 {
    _12 <- borrow_mut ( * _13);
    _13 <- { _13 with current = ( ^ _12) };
    _18 <- j_5;
    _19 <- k_6;
    _11 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 68 4 35] Swap0.swap _12 _18 _19);
    goto BB4
  }
  BB4 {
    assume { Resolve2.resolve _13 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 69 4 142] let _ = LemmaSwapMaintainsPostUnit0.lemma_swap_maintains_post_unit (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * old_f_7))) (UInt64.to_int cref_4)) (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (UInt64.to_int j_5) (UInt64.to_int k_6) (Type.creusat_trail_trail_Trail_assignments trail_2) in true };
    _20 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 70 4 73] VarsInRangeInner0.vars_in_range_inner (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) (UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f_1))) };
    _21 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 71 4 67] NoDuplicateIndexesInner0.no_duplicate_indexes_inner (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) };
    _22 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 72 4 81] LongArePostUnitInner0.long_are_post_unit_inner (Model2.model (Type.creusat_trail_trail_Trail_trail trail_2)) ( * f_1) (Model3.model (Type.creusat_trail_trail_Trail_assignments trail_2)) };
    _23 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 73 4 39]  ^ old_f_7 =  ^ f_1 };
    _24 <- ();
    _0 <- ();
    return _0
  }
  
end
module CreuSat_UnitProp_ExistsNewWatchableLit_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicLit_Impl1_Unsat_Interface as Unsat0
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model3 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface as ToWatchidxLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  val exists_new_watchable_lit [@cfg:stackify] (f : borrowed (Type.creusat_formula_formula)) (trail : Type.creusat_trail_trail) (watches : borrowed (Type.creusat_watches_watches)) (cref : usize) (j : usize) (lit : Type.creusat_lit_lit) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 112 0 46] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 111 0 39] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 110 0 34] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 109 0 44] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 108 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 107 0 70] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_watches_watches_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 106 0 63] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (Model2.model (Type.creusat_watches_watches_Watches_watches ( * watches)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 105 0 44] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 104 0 38] Invariant1.invariant' trail ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 103 0 33] Invariant2.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 117 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 116 0 55] Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) = Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 115 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 114 0 75] not result -> Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref)) = Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int cref)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 113 0 136] not result -> (forall m : (int) . 2 <= m && m < Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) -> Unsat0.unsat (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) m) (Type.creusat_trail_trail_Trail_assignments trail)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 105 0 44] Invariant0.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 104 0 38] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 103 0 33] Invariant2.invariant' ( ^ f) }
    
end
module CreuSat_UnitProp_ExistsNewWatchableLit
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model7 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model5.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model6.model,
  function Model1.model = Model7.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model6.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat0 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model6.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model6.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model7.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model5.model, function Model1.model = Model6.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model3.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model2.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  val exists_new_watchable_lit [@cfg:stackify] (f : borrowed (Type.creusat_formula_formula)) (trail : Type.creusat_trail_trail) (watches : borrowed (Type.creusat_watches_watches)) (cref : usize) (j : usize) (lit : Type.creusat_lit_lit) : bool
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 112 0 46] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 111 0 39] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 110 0 34] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 109 0 44] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 108 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 107 0 70] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_watches_watches_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 106 0 63] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (Model2.model (Type.creusat_watches_watches_Watches_watches ( * watches)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 105 0 44] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 104 0 38] Invariant1.invariant' trail ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 103 0 33] Invariant2.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 117 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 116 0 55] Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) = Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 115 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 114 0 75] not result -> Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref)) = Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int cref)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 113 0 136] not result -> (forall m : (int) . 2 <= m && m < Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) -> Unsat0.unsat (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) m) (Type.creusat_trail_trail_Trail_assignments trail)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 105 0 44] Invariant0.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 104 0 38] Invariant1.invariant' trail ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 103 0 33] Invariant2.invariant' ( ^ f) }
    
end
module Core_Ops_Index_Index_Index_Interface
  type self
  type idx
  use prelude.Prelude
  clone Core_Ops_Index_Index_Output as Output0 with type self = self, type idx = idx
  val index [@cfg:stackify] (self : self) (index : idx) : Output0.output
    requires {false}
    
end
module Core_Ops_Index_Index_Index
  type self
  type idx
  use prelude.Prelude
  clone Core_Ops_Index_Index_Output as Output0 with type self = self, type idx = idx
  val index [@cfg:stackify] (self : self) (index : idx) : Output0.output
    requires {false}
    
end
module Alloc_Vec_Impl16_Index_Interface
  type t
  type i
  type a
  use prelude.Prelude
  use Type
  use seq.Seq
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = i, type t = seq t
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = t
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface as HasValue0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy, type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface as InBounds0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val index [@cfg:stackify] (self : Type.alloc_vec_vec t a) (index : i) : Output0.output
    requires {InBounds0.in_bounds index (Model0.model self)}
    ensures { HasValue0.has_value index (Model0.model self) result }
    
end
module Alloc_Vec_Impl16_Index
  type t
  type i
  type a
  use prelude.Prelude
  use Type
  use seq.Seq
  clone Core_Slice_Index_SliceIndex_Output as Output0 with type self = i, type t = seq t
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = t
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue_Interface as HasValue0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy, type Output0.output = Output0.output
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds_Interface as InBounds0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = t, type a = a, axiom .
  val index [@cfg:stackify] (self : Type.alloc_vec_vec t a) (index : i) : Output0.output
    requires {InBounds0.in_bounds index (Model0.model self)}
    ensures { HasValue0.has_value index (Model0.model self) result }
    
end
module Alloc_Vec_Impl16
  type t
  type i
  type a
  use prelude.Prelude
  use seq.Seq
  use Type
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = t
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_InBounds as InBounds0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = t, type a = a, axiom .
  clone Core_Slice_Index_SliceIndex_Output as Output2 with type self = i, type t = seq t
  clone CreusotContracts_Std1_Slice_SliceIndexSpec_HasValue as HasValue0 with type self = i, type t = seq t,
  type ModelTy0.modelTy = ModelTy0.modelTy, type Output0.output = Output2.output
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = t, type i = i, type a = a,
  function Model0.model = Model0.model, predicate InBounds0.in_bounds = InBounds0.in_bounds,
  predicate HasValue0.has_value = HasValue0.has_value, type Output0.output = Output2.output
  clone Alloc_Vec_Impl16_Output as Output0 with type t = t, type i = i, type a = a, type Output0.output = Output2.output
  clone Core_Ops_Index_Index_Index_Interface as Index1 with type self = Type.alloc_vec_vec t a, type idx = i,
  val index = Index0.index, type Output0.output = Output0.output
  clone Core_Ops_Index_Index_Output as Output1 with type self = Type.alloc_vec_vec t a, type idx = i,
  type output = Output0.output
end
module CreuSat_UnitProp_PropagateLitWithRegardToClause_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat1
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model4 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model3 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface as ToWatchidxLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  val propagate_lit_with_regard_to_clause [@cfg:stackify] (f : borrowed (Type.creusat_formula_formula)) (trail : borrowed (Type.creusat_trail_trail)) (watches : borrowed (Type.creusat_watches_watches)) (cref : usize) (lit : Type.creusat_lit_lit) (j : usize) : Type.core_result_result bool usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 150 0 46] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 149 0 39] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 148 0 34] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 147 0 44] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 146 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 145 0 70] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_watches_watches_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 144 0 63] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (Model2.model (Type.creusat_watches_watches_Watches_watches ( * watches)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 143 0 44] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 142 0 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 141 0 33] Invariant2.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 158 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 157 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 152 0 3] match (result) with
      | Type.Core_Result_Result_Ok (True) -> true
      | Type.Core_Result_Result_Ok (False) -> Seq.length (Model4.model (Type.creusat_trail_trail_Trail_trail ( ^ trail))) = Seq.length (Model4.model (Type.creusat_trail_trail_Trail_trail ( * trail)))
      | Type.Core_Result_Result_Err n -> UInt64.to_int n < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) && Unsat0.unsat ( ^ f) (Type.creusat_trail_trail_Trail_assignments ( ^ trail)) && Unsat1.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int n)) (Type.creusat_trail_trail_Trail_assignments ( ^ trail))
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 151 0 49] Type.creusat_trail_trail_Trail_decisions ( ^ trail) = Type.creusat_trail_trail_Trail_decisions ( * trail) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 143 0 44] Invariant0.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 142 0 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 141 0 33] Invariant2.invariant' ( ^ f) }
    
end
module CreuSat_UnitProp_PropagateLitWithRegardToClause
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_Logic_Unset as Unset1
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset1.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model7 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model6.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model4.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model4.model,
  function Model1.model = Model7.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsetInner as UnsetInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Unset as Unset0 with function Model0.model = Model7.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model5.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicClause_Impl2_VarsInRange as VarsInRange0 with function Model0.model = Model1.model,
  predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnitInner as UnitInner0 with predicate VarsInRange0.vars_in_range = VarsInRange0.vars_in_range,
  predicate SatInner0.sat_inner = SatInner1.sat_inner, function Model0.model = Model1.model,
  predicate UnsetInner0.unset_inner = UnsetInner0.unset_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unit as Unit0 with function Model0.model = Model7.model,
  predicate UnitInner0.unit_inner = UnitInner0.unit_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToLit as ClausePostWithRegardsToLit0 with function Model0.model = Model7.model,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicClause_Impl1_PostUnitInner as PostUnitInner0 with function Model0.model = Model1.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner, predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl1_PostUnit as PostUnit0 with function Model0.model = Model7.model,
  predicate PostUnitInner0.post_unit_inner = PostUnitInner0.post_unit_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with function Model0.model = Model1.model,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model6.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model7.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model6.model, function Model1.model = Model4.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner0 with function Model0.model = Model0.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model3.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model2.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve6 with type t = seq (Type.creusat_lit_lit)
  clone CreusotContracts_Std1_Slice_Impl0_Model as Model10 with type t = Type.creusat_lit_lit, axiom .
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve5 with type t = Type.creusat_clause_clause
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere2 with type t = Type.creusat_clause_clause
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve4 with type t = Type.creusat_watches_watcher
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy4 with type t = Type.creusat_watches_watcher
  clone Core_Slice_Index_Impl2_Output as Output3 with type t = Type.creusat_watches_watcher
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue3 with type t = Type.creusat_watches_watcher
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere1 with type t = Type.creusat_watches_watcher
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds3 with type t = Type.creusat_watches_watcher
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve3 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global)
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy3 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global)
  clone Core_Slice_Index_Impl2_Output as Output2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global)
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global)
  clone CreusotContracts_Std1_Slice_Impl3_ResolveElswhere as ResolveElswhere0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global)
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global)
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve2 with type t = Type.creusat_watches_watches
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = Type.creusat_trail_trail
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Type.creusat_formula_formula
  clone CreuSat_Logic_LogicAssignments_Impl0_ModelTy as ModelTy2
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy1 with type t = Type.creusat_lit_lit
  clone CreusotContracts_Logic_Model_Impl1_Model as Model11 with type t = seq (Type.creusat_lit_lit),
  type ModelTy0.modelTy = ModelTy1.modelTy, function Model0.model = Model10.model
  clone Core_Slice_Impl0_Swap_Interface as Swap0 with type t = Type.creusat_lit_lit,
  function Model0.model = Model11.model, function Model1.model = Model10.model
  clone Core_Slice_Index_Impl2_Output as Output1 with type t = Type.creusat_lit_lit
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue1 with type t = Type.creusat_lit_lit
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds1 with type t = Type.creusat_lit_lit
  clone CreusotContracts_Std1_Slice_Impl0_ModelTy as ModelTy0 with type t = Type.creusat_clause_clause
  clone Core_Slice_Index_Impl2_Output as Output0 with type t = Type.creusat_clause_clause
  clone CreusotContracts_Std1_Slice_Impl3_HasValue as HasValue0 with type t = Type.creusat_clause_clause
  clone CreusotContracts_Std1_Slice_Impl3_InBounds as InBounds0 with type t = Type.creusat_clause_clause
  clone CreusotContracts_Logic_Model_Impl0_Model as Model9 with type t = Type.creusat_assignments_assignments,
  type ModelTy0.modelTy = ModelTy2.modelTy, function Model0.model = Model7.model
  clone CreuSat_Trail_Impl0_DecisionLevel_Interface as DecisionLevel0 with function Model0.model = Model6.model
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut1 with type t = Type.creusat_watches_watcher, type i = usize,
  type a = Type.alloc_alloc_global, function Model0.model = Model3.model,
  predicate InBounds0.in_bounds = InBounds3.in_bounds,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere1.resolve_elswhere,
  predicate HasValue0.has_value = HasValue3.has_value, type Output0.output = Output3.output
  clone CreuSat_Logic_LogicLit_Impl1_IdxInTrail as IdxInTrail0 with function Model0.model = Model4.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Lit_Impl1_LitSat_Interface as LitSat0 with function Model0.model = Model9.model,
  predicate Invariant0.invariant' = Invariant6.invariant', predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicLit_Impl1_Unsat as Unsat2 with function Model0.model = Model7.model,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Lit_Impl1_LitUnset_Interface as LitUnset0 with function Model0.model = Model9.model,
  predicate Invariant0.invariant' = Invariant6.invariant', predicate Unset0.unset = Unset0.unset
  clone CreuSat_Lit_Impl1_ToWatchidx_Interface as ToWatchidx0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type i = usize, type a = Type.alloc_alloc_global, function Model0.model = Model2.model,
  predicate InBounds0.in_bounds = InBounds2.in_bounds,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere0.resolve_elswhere,
  predicate HasValue0.has_value = HasValue2.has_value, type Output0.output = Output2.output
  clone Alloc_Vec_Impl11_DerefMut_Interface as DerefMut0 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, function Model0.model = Model10.model, function Model1.model = Model5.model
  clone Alloc_Vec_Impl16_Index_Interface as Index1 with type t = Type.creusat_lit_lit, type i = usize,
  type a = Type.alloc_alloc_global, function Model0.model = Model5.model,
  predicate InBounds0.in_bounds = InBounds1.in_bounds, predicate HasValue0.has_value = HasValue1.has_value,
  type Output0.output = Output1.output
  clone CreuSat_Logic_LogicLit_Impl1_LitIn as LitIn0 with function Model0.model = Model1.model
  clone Alloc_Vec_Impl17_IndexMut_Interface as IndexMut2 with type t = Type.creusat_clause_clause, type i = usize,
  type a = Type.alloc_alloc_global, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds,
  predicate ResolveElswhere0.resolve_elswhere = ResolveElswhere2.resolve_elswhere,
  predicate HasValue0.has_value = HasValue0.has_value, type Output0.output = Output0.output
  clone Alloc_Vec_Impl16_Index_Interface as Index0 with type t = Type.creusat_clause_clause, type i = usize,
  type a = Type.alloc_alloc_global, function Model0.model = Model0.model,
  predicate InBounds0.in_bounds = InBounds0.in_bounds, predicate HasValue0.has_value = HasValue0.has_value,
  type Output0.output = Output0.output
  clone CreuSat_Trail_Impl0_EnqAssignment_Interface as EnqAssignment0 with function Model0.model = Model4.model,
  function Model1.model = Model7.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate Unset0.unset = Unset1.unset,
  predicate IdxInTrail0.idx_in_trail = IdxInTrail0.idx_in_trail, function Model2.model = Model0.model,
  predicate Unit0.unit = Unit0.unit, predicate LitIn0.lit_in = LitIn0.lit_in, function Model3.model = Model1.model,
  predicate Invariant0.invariant' = Invariant5.invariant', predicate Invariant1.invariant' = Invariant6.invariant',
  predicate Invariant2.invariant' = Invariant2.invariant', predicate Invariant3.invariant' = Invariant1.invariant',
  predicate ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit = ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit,
  predicate Sat0.sat = Sat0.sat, predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  clone CreuSat_UnitProp_ExistsNewWatchableLit_Interface as ExistsNewWatchableLit0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Invariant0.invariant' = Invariant0.invariant',
  function IndexLogic0.index_logic = IndexLogic0.index_logic, function Model2.model = Model2.model,
  function ToWatchidxLogic0.to_watchidx_logic = ToWatchidxLogic0.to_watchidx_logic,
  function Model3.model = Model3.model, predicate Invariant1.invariant' = Invariant1.invariant',
  predicate Invariant2.invariant' = Invariant2.invariant', predicate Equisat0.equisat = Equisat0.equisat,
  predicate Unsat0.unsat = Unsat2.unsat, predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old
  let rec cfg propagate_lit_with_regard_to_clause [@cfg:stackify] [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 159 0 24] (f : borrowed (Type.creusat_formula_formula)) (trail : borrowed (Type.creusat_trail_trail)) (watches : borrowed (Type.creusat_watches_watches)) (cref : usize) (lit : Type.creusat_lit_lit) (j : usize) : Type.core_result_result bool usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 150 0 46] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f))) (UInt64.to_int cref))) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 149 0 39] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 148 0 34] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 147 0 44] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 146 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 145 0 70] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_watches_watches_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 144 0 63] ToWatchidxLogic0.to_watchidx_logic lit < Seq.length (Model2.model (Type.creusat_watches_watches_Watches_watches ( * watches)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 143 0 44] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 142 0 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 141 0 33] Invariant2.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 158 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 157 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 152 0 3] match (result) with
      | Type.Core_Result_Result_Ok (True) -> true
      | Type.Core_Result_Result_Ok (False) -> Seq.length (Model4.model (Type.creusat_trail_trail_Trail_trail ( ^ trail))) = Seq.length (Model4.model (Type.creusat_trail_trail_Trail_trail ( * trail)))
      | Type.Core_Result_Result_Err n -> UInt64.to_int n < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) && Unsat0.unsat ( ^ f) (Type.creusat_trail_trail_Trail_assignments ( ^ trail)) && Unsat1.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int n)) (Type.creusat_trail_trail_Trail_assignments ( ^ trail))
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 151 0 49] Type.creusat_trail_trail_Trail_decisions ( ^ trail) = Type.creusat_trail_trail_Trail_decisions ( * trail) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 143 0 44] Invariant0.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 142 0 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 141 0 33] Invariant2.invariant' ( ^ f) }
    
   =
  var _0 : Type.core_result_result bool usize;
  var f_1 : borrowed (Type.creusat_formula_formula);
  var trail_2 : borrowed (Type.creusat_trail_trail);
  var watches_3 : borrowed (Type.creusat_watches_watches);
  var cref_4 : usize;
  var lit_5 : Type.creusat_lit_lit;
  var j_6 : usize;
  ghost var old_w_7 : borrowed (Type.creusat_watches_watches);
  var _8 : ();
  var clause_9 : Type.creusat_clause_clause;
  var _10 : Type.creusat_clause_clause;
  var _11 : Type.alloc_vec_vec (Type.creusat_clause_clause) (Type.alloc_alloc_global);
  var _12 : usize;
  var first_lit_13 : Type.creusat_lit_lit;
  var _14 : Type.creusat_lit_lit;
  var _15 : Type.alloc_vec_vec (Type.creusat_lit_lit) (Type.alloc_alloc_global);
  var _16 : ();
  var _17 : bool;
  var _18 : Type.creusat_lit_lit;
  var _19 : Type.creusat_assignments_assignments;
  var _20 : Type.creusat_assignments_assignments;
  var _21 : ();
  var _22 : ();
  var _23 : ();
  var _24 : Type.creusat_lit_lit;
  var _25 : borrowed (Type.creusat_watches_watcher);
  var _26 : borrowed (Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global));
  var _27 : borrowed (Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global));
  var _28 : borrowed (Type.alloc_vec_vec (Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global)) (Type.alloc_alloc_global));
  var _29 : usize;
  var _30 : Type.creusat_lit_lit;
  var _31 : usize;
  var second_lit_32 : Type.creusat_lit_lit;
  var _33 : Type.creusat_lit_lit;
  var _34 : Type.alloc_vec_vec (Type.creusat_lit_lit) (Type.alloc_alloc_global);
  var _35 : ();
  var _36 : bool;
  var _37 : Type.creusat_lit_lit;
  var _38 : Type.creusat_assignments_assignments;
  var _39 : Type.creusat_assignments_assignments;
  var _40 : ();
  var _41 : ();
  var _42 : ();
  var _43 : Type.creusat_lit_lit;
  var _44 : borrowed (Type.creusat_watches_watcher);
  var _45 : borrowed (Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global));
  var _46 : borrowed (Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global));
  var _47 : borrowed (Type.alloc_vec_vec (Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global)) (Type.alloc_alloc_global));
  var _48 : usize;
  var _49 : Type.creusat_lit_lit;
  var _50 : usize;
  var _51 : ();
  var _52 : bool;
  var _53 : borrowed (Type.creusat_formula_formula);
  var _54 : Type.creusat_trail_trail;
  var _55 : borrowed (Type.creusat_watches_watches);
  var _56 : usize;
  var _57 : usize;
  var _58 : Type.creusat_lit_lit;
  var _59 : ();
  var _60 : ();
  var _61 : bool;
  var _62 : Type.creusat_lit_lit;
  var _63 : Type.creusat_assignments_assignments;
  var _64 : Type.creusat_assignments_assignments;
  var _65 : ();
  var _66 : ();
  var _67 : bool;
  var _68 : Type.creusat_lit_lit;
  var _69 : Type.creusat_assignments_assignments;
  var _70 : Type.creusat_assignments_assignments;
  var _71 : ();
  var _72 : ();
  var _73 : ();
  var _74 : ();
  var step_75 : Type.creusat_trail_step;
  var _76 : Type.creusat_lit_lit;
  var _77 : usize;
  var _78 : Type.creusat_trail_trail;
  var _79 : Type.creusat_trail_reason;
  var _80 : usize;
  var _81 : ();
  var _82 : borrowed (Type.creusat_trail_trail);
  var _83 : Type.creusat_trail_step;
  var _84 : Type.creusat_formula_formula;
  var _85 : ();
  var _86 : ();
  var _87 : bool;
  var _88 : Type.creusat_lit_lit;
  var _89 : Type.creusat_assignments_assignments;
  var _90 : Type.creusat_assignments_assignments;
  var _91 : ();
  var step_92 : Type.creusat_trail_step;
  var _93 : Type.creusat_lit_lit;
  var _94 : usize;
  var _95 : Type.creusat_trail_trail;
  var _96 : Type.creusat_trail_reason;
  var _97 : usize;
  var _98 : ();
  var _99 : borrowed (seq (Type.creusat_lit_lit));
  var _100 : borrowed (seq (Type.creusat_lit_lit));
  var _101 : borrowed (Type.alloc_vec_vec (Type.creusat_lit_lit) (Type.alloc_alloc_global));
  var _102 : borrowed (Type.creusat_clause_clause);
  var _103 : borrowed (Type.alloc_vec_vec (Type.creusat_clause_clause) (Type.alloc_alloc_global));
  var _104 : usize;
  var _105 : ();
  var _106 : ();
  var _107 : borrowed (Type.creusat_trail_trail);
  var _108 : Type.creusat_trail_step;
  var _109 : Type.creusat_formula_formula;
  var _110 : ();
  var _111 : ();
  var _112 : ();
  var _113 : usize;
  {
    f_1 <- f;
    trail_2 <- trail;
    watches_3 <- watches;
    cref_4 <- cref;
    lit_5 <- lit;
    j_6 <- j;
    goto BB0
  }
  BB0 {
    _8 <- ();
    old_w_7 <- ghost ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 162 16 34] watches_3);
    goto BB1
  }
  BB1 {
    _11 <- Type.creusat_formula_formula_Formula_clauses ( * f_1);
    _12 <- cref_4;
    _10 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 163 18 33] Index0.index _11 _12);
    goto BB2
  }
  BB2 {
    clause_9 <- _10;
    _15 <- Type.creusat_clause_clause_Clause_rest clause_9;
    _14 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 164 20 34] Index1.index _15 (0 : usize));
    goto BB3
  }
  BB3 {
    first_lit_13 <- _14;
    _18 <- first_lit_13;
    _20 <- Type.creusat_trail_trail_Trail_assignments ( * trail_2);
    _19 <- _20;
    _17 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 165 7 44] LitSat0.lit_sat _18 _19);
    goto BB4
  }
  BB4 {
    switch (_17)
      | False -> goto BB9
      | _ -> goto BB5
      end
  }
  BB5 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 167 8 49]  ^ watches_3 =  ^ old_w_7 };
    _22 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 168 8 60] IndexLogic0.index_logic first_lit_13 < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f_1)) };
    _23 <- ();
    _24 <- first_lit_13;
    _28 <- borrow_mut (Type.creusat_watches_watches_Watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let Type.CreuSat_Watches_Watches a =  * watches_3 in Type.CreuSat_Watches_Watches ( ^ _28)) };
    assume { Resolve2.resolve watches_3 };
    _30 <- lit_5;
    _29 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 169 24 41] ToWatchidx0.to_watchidx _30);
    goto BB6
  }
  BB6 {
    _27 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 169 8 42] IndexMut0.index_mut _28 _29);
    goto BB7
  }
  BB7 {
    _26 <- borrow_mut ( * _27);
    _27 <- { _27 with current = ( ^ _26) };
    assume { Resolve3.resolve _27 };
    _31 <- j_6;
    _25 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 169 8 45] IndexMut1.index_mut _26 _31);
    goto BB8
  }
  BB8 {
    _25 <- { _25 with current = (let Type.CreuSat_Watches_Watcher a b =  * _25 in Type.CreuSat_Watches_Watcher a _24) };
    assume { Resolve4.resolve _25 };
    _0 <- Type.Core_Result_Result_Ok true;
    goto BB39
  }
  BB9 {
    _16 <- ();
    _34 <- Type.creusat_clause_clause_Clause_rest clause_9;
    _33 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 172 21 35] Index1.index _34 (1 : usize));
    goto BB10
  }
  BB10 {
    second_lit_32 <- _33;
    _37 <- second_lit_32;
    _39 <- Type.creusat_trail_trail_Trail_assignments ( * trail_2);
    _38 <- _39;
    _36 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 173 7 45] LitSat0.lit_sat _37 _38);
    goto BB11
  }
  BB11 {
    switch (_36)
      | False -> goto BB16
      | _ -> goto BB12
      end
  }
  BB12 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 178 8 49]  ^ watches_3 =  ^ old_w_7 };
    _41 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 179 8 61] IndexLogic0.index_logic second_lit_32 < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f_1)) };
    _42 <- ();
    _43 <- second_lit_32;
    _47 <- borrow_mut (Type.creusat_watches_watches_Watches_watches ( * watches_3));
    watches_3 <- { watches_3 with current = (let Type.CreuSat_Watches_Watches a =  * watches_3 in Type.CreuSat_Watches_Watches ( ^ _47)) };
    assume { Resolve2.resolve watches_3 };
    _49 <- lit_5;
    _48 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 180 24 41] ToWatchidx0.to_watchidx _49);
    goto BB13
  }
  BB13 {
    _46 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 180 8 42] IndexMut0.index_mut _47 _48);
    goto BB14
  }
  BB14 {
    _45 <- borrow_mut ( * _46);
    _46 <- { _46 with current = ( ^ _45) };
    assume { Resolve3.resolve _46 };
    _50 <- j_6;
    _44 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 180 8 45] IndexMut1.index_mut _45 _50);
    goto BB15
  }
  BB15 {
    _44 <- { _44 with current = (let Type.CreuSat_Watches_Watcher a b =  * _44 in Type.CreuSat_Watches_Watcher a _43) };
    assume { Resolve4.resolve _44 };
    _0 <- Type.Core_Result_Result_Ok true;
    goto BB38
  }
  BB16 {
    _35 <- ();
    _53 <- borrow_mut ( * f_1);
    f_1 <- { f_1 with current = ( ^ _53) };
    _54 <-  * trail_2;
    _55 <- borrow_mut ( * watches_3);
    watches_3 <- { watches_3 with current = ( ^ _55) };
    _56 <- cref_4;
    _57 <- j_6;
    _58 <- lit_5;
    _52 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 184 7 64] ExistsNewWatchableLit0.exists_new_watchable_lit _53 _54 _55 _56 _57 _58);
    goto BB17
  }
  BB17 {
    assume { Resolve2.resolve watches_3 };
    switch (_52)
      | False -> goto BB19
      | _ -> goto BB18
      end
  }
  BB18 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    _0 <- Type.Core_Result_Result_Ok false;
    goto BB38
  }
  BB19 {
    _51 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 188 4 175] Unsat1.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (Type.creusat_trail_trail_Trail_assignments ( * trail_2)) || Unset0.unset (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) 0) (Type.creusat_trail_trail_Trail_assignments ( * trail_2)) || Unset0.unset (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) 1) (Type.creusat_trail_trail_Trail_assignments ( * trail_2)) };
    _60 <- ();
    _62 <- first_lit_13;
    _64 <- Type.creusat_trail_trail_Trail_assignments ( * trail_2);
    _63 <- _64;
    _61 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 189 7 46] LitUnset0.lit_unset _62 _63);
    goto BB20
  }
  BB20 {
    switch (_61)
      | False -> goto BB27
      | _ -> goto BB21
      end
  }
  BB21 {
    _68 <- second_lit_32;
    _70 <- Type.creusat_trail_trail_Trail_assignments ( * trail_2);
    _69 <- _70;
    _67 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 192 11 51] LitUnset0.lit_unset _68 _69);
    goto BB22
  }
  BB22 {
    switch (_67)
      | False -> goto BB24
      | _ -> goto BB23
      end
  }
  BB23 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    _0 <- Type.Core_Result_Result_Ok true;
    goto BB37
  }
  BB24 {
    _66 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 195 8 42] Invariant1.invariant' ( * trail_2) ( * f_1) };
    _72 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 196 8 68] not Unsat1.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (Type.creusat_trail_trail_Trail_assignments ( * trail_2)) };
    _73 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 197 8 66] Unit0.unit (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (Type.creusat_trail_trail_Trail_assignments ( * trail_2)) };
    _74 <- ();
    _76 <- first_lit_13;
    _78 <-  * trail_2;
    _77 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 201 28 50] DecisionLevel0.decision_level _78);
    goto BB25
  }
  BB25 {
    _80 <- cref_4;
    _79 <- Type.CreuSat_Trail_Reason_Long _80;
    step_75 <- Type.CreuSat_Trail_Step _76 _77 _79;
    _82 <- borrow_mut ( * trail_2);
    trail_2 <- { trail_2 with current = ( ^ _82) };
    _83 <- step_75;
    _84 <-  * f_1;
    assume { Resolve0.resolve f_1 };
    _81 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 205 8 37] EnqAssignment0.enq_assignment _82 _83 _84);
    goto BB26
  }
  BB26 {
    assume { Resolve1.resolve trail_2 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 206 8 81] PostUnit0.post_unit (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (Type.creusat_trail_trail_Trail_assignments ( * trail_2)) && true };
    _85 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 207 8 107] ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (Type.creusat_trail_trail_Trail_assignments ( * trail_2)) first_lit_13 };
    _86 <- ();
    _0 <- Type.Core_Result_Result_Ok true;
    goto BB37
  }
  BB27 {
    _88 <- second_lit_32;
    _90 <- Type.creusat_trail_trail_Trail_assignments ( * trail_2);
    _89 <- _90;
    _87 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 209 14 54] LitUnset0.lit_unset _88 _89);
    goto BB28
  }
  BB28 {
    switch (_87)
      | False -> goto BB35
      | _ -> goto BB29
      end
  }
  BB29 {
    _93 <- second_lit_32;
    _95 <-  * trail_2;
    _94 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 213 59 81] DecisionLevel0.decision_level _95);
    goto BB30
  }
  BB30 {
    _97 <- cref_4;
    _96 <- Type.CreuSat_Trail_Reason_Long _97;
    step_92 <- Type.CreuSat_Trail_Step _93 _94 _96;
    _103 <- borrow_mut (Type.creusat_formula_formula_Formula_clauses ( * f_1));
    f_1 <- { f_1 with current = (let Type.CreuSat_Formula_Formula a b =  * f_1 in Type.CreuSat_Formula_Formula ( ^ _103) b) };
    _104 <- cref_4;
    _102 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 215 8 23] IndexMut2.index_mut _103 _104);
    goto BB31
  }
  BB31 {
    _101 <- borrow_mut (Type.creusat_clause_clause_Clause_rest ( * _102));
    _102 <- { _102 with current = (let Type.CreuSat_Clause_Clause a b =  * _102 in Type.CreuSat_Clause_Clause a ( ^ _101)) };
    assume { Resolve5.resolve _102 };
    _100 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 215 8 38] DerefMut0.deref_mut _101);
    goto BB32
  }
  BB32 {
    _99 <- borrow_mut ( * _100);
    _100 <- { _100 with current = ( ^ _99) };
    _98 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 215 8 38] Swap0.swap _99 (0 : usize) (1 : usize));
    goto BB33
  }
  BB33 {
    assume { Resolve6.resolve _100 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 216 8 73] Unset0.unset (Seq.get (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4))) 0) (Type.creusat_trail_trail_Trail_assignments ( * trail_2)) };
    _105 <- ();
    _107 <- borrow_mut ( * trail_2);
    trail_2 <- { trail_2 with current = ( ^ _107) };
    _108 <- step_92;
    _109 <-  * f_1;
    assume { Resolve0.resolve f_1 };
    _106 <- ([#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 217 8 37] EnqAssignment0.enq_assignment _107 _108 _109);
    goto BB34
  }
  BB34 {
    assume { Resolve1.resolve trail_2 };
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 218 8 73] PostUnit0.post_unit (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (Type.creusat_trail_trail_Trail_assignments ( * trail_2)) };
    _110 <- ();
    assert { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 219 8 108] ClausePostWithRegardsToLit0.clause_post_with_regards_to_lit (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( * f_1))) (UInt64.to_int cref_4)) (Type.creusat_trail_trail_Trail_assignments ( * trail_2)) second_lit_32 };
    _111 <- ();
    _0 <- Type.Core_Result_Result_Ok true;
    goto BB36
  }
  BB35 {
    assume { Resolve0.resolve f_1 };
    assume { Resolve1.resolve trail_2 };
    _113 <- cref_4;
    _0 <- Type.Core_Result_Result_Err _113;
    goto BB36
  }
  BB36 {
    goto BB37
  }
  BB37 {
    goto BB38
  }
  BB38 {
    goto BB39
  }
  BB39 {
    return _0
  }
  
end
module CreuSat_UnitProp_PropagateLiteral_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use seq.Seq
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat1
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  val propagate_literal [@cfg:stackify] (f : borrowed (Type.creusat_formula_formula)) (trail : borrowed (Type.creusat_trail_trail)) (watches : borrowed (Type.creusat_watches_watches)) (lit : Type.creusat_lit_lit) : Type.core_result_result () usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 242 0 44] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 241 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 240 0 44] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 239 0 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 238 0 33] Invariant2.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 248 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 247 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 243 0 3] match (result) with
      | Type.Core_Result_Result_Ok () -> true
      | Type.Core_Result_Result_Err n -> UInt64.to_int n < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) && Unsat0.unsat ( ^ f) (Type.creusat_trail_trail_Trail_assignments ( ^ trail)) && Unsat1.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int n)) (Type.creusat_trail_trail_Trail_assignments ( ^ trail))
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 240 0 44] Invariant0.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 239 0 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 238 0 33] Invariant2.invariant' ( ^ f) }
    
end
module CreuSat_UnitProp_PropagateLiteral
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use seq.Seq
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model8.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model4 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model0.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model2.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model3.model,
  function Model1.model = Model4.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model3.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model3.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model2.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model2.model, function Model1.model = Model3.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner0 with function Model0.model = Model0.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with function Model0.model = Model4.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with function Model0.model = Model4.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model5.model,
  function Model1.model = Model0.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  val propagate_literal [@cfg:stackify] (f : borrowed (Type.creusat_formula_formula)) (trail : borrowed (Type.creusat_trail_trail)) (watches : borrowed (Type.creusat_watches_watches)) (lit : Type.creusat_lit_lit) : Type.core_result_result () usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 242 0 44] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 241 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 240 0 44] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 239 0 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 238 0 33] Invariant2.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 248 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 247 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 243 0 3] match (result) with
      | Type.Core_Result_Result_Ok () -> true
      | Type.Core_Result_Result_Err n -> UInt64.to_int n < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) && Unsat0.unsat ( ^ f) (Type.creusat_trail_trail_Trail_assignments ( ^ trail)) && Unsat1.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int n)) (Type.creusat_trail_trail_Trail_assignments ( ^ trail))
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 240 0 44] Invariant0.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 239 0 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 238 0 33] Invariant2.invariant' ( ^ f) }
    
end
module CreuSat_UnitProp_UnitPropagate_Interface
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use seq.Seq
  clone CreuSat_Logic_LogicClause_Impl2_Unsat_Interface as Unsat1
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat_Interface as Unsat0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat_Interface as Equisat0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant1
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  val unit_propagate [@cfg:stackify] (f : borrowed (Type.creusat_formula_formula)) (trail : borrowed (Type.creusat_trail_trail)) (watches : borrowed (Type.creusat_watches_watches)) : Type.core_result_result () usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 291 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 290 0 44] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 289 0 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 288 0 33] Invariant2.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 297 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 296 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 292 0 3] match (result) with
      | Type.Core_Result_Result_Ok () -> true
      | Type.Core_Result_Result_Err n -> UInt64.to_int n < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) && Unsat0.unsat ( ^ f) (Type.creusat_trail_trail_Trail_assignments ( ^ trail)) && Unsat1.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int n)) (Type.creusat_trail_trail_Trail_assignments ( ^ trail))
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 290 0 44] Invariant0.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 289 0 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 288 0 33] Invariant2.invariant' ( ^ f) }
    
end
module CreuSat_UnitProp_UnitPropagate
  use mach.int.UInt64
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  use seq.Seq
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_Logic_Unset as Unset0
  clone CreuSat_Logic_LogicAssignments_CompleteInner as CompleteInner0 with predicate Unset0.unset = Unset0.unset
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model6 with function Model0.model = Model8.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model4 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model4.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model6.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_Impl2_SatInner as SatInner1 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model4.model,
  predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner2.sat_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner2 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner2.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_UnsatInner as UnsatInner1 with function Model0.model = Model6.model,
  predicate UnsatInner0.unsat_inner = UnsatInner2.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Unsat as Unsat1 with function Model0.model = Model4.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model0.model,
  function Model1.model = Model6.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicFormula_Impl1_SatInner as SatInner0 with function Model0.model = Model0.model,
  predicate SatInner0.sat_inner = SatInner1.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_EventuallySatCompleteNoAss as EventuallySatCompleteNoAss0 with predicate CompleteInner0.complete_inner = CompleteInner0.complete_inner,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Equisat as Equisat0 with predicate EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass = EventuallySatCompleteNoAss0.eventually_sat_complete_no_ass
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model6.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicFormula_Impl1_UnsatInner as UnsatInner0 with function Model0.model = Model0.model,
  predicate UnsatInner0.unsat_inner = UnsatInner1.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_Unsat as Unsat0 with function Model0.model = Model4.model,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model6.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant2 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model5.model,
  function Model1.model = Model0.model, function Model2.model = Model6.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model3.model,
  function Model1.model = Model4.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model3.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model3.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model2.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model3.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model2.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model4.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant1 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model2.model, function Model1.model = Model3.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model1.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  val unit_propagate [@cfg:stackify] (f : borrowed (Type.creusat_formula_formula)) (trail : borrowed (Type.creusat_trail_trail)) (watches : borrowed (Type.creusat_watches_watches)) : Type.core_result_result () usize
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 291 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 290 0 44] Invariant0.invariant' ( * watches) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 289 0 42] Invariant1.invariant' ( * trail) ( * f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 288 0 33] Invariant2.invariant' ( * f)}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 297 0 25] Equisat0.equisat ( * f) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 296 0 41] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( * f)) = UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars ( ^ f)) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 292 0 3] match (result) with
      | Type.Core_Result_Result_Ok () -> true
      | Type.Core_Result_Result_Err n -> UInt64.to_int n < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) && Unsat0.unsat ( ^ f) (Type.creusat_trail_trail_Trail_assignments ( ^ trail)) && Unsat1.unsat (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses ( ^ f))) (UInt64.to_int n)) (Type.creusat_trail_trail_Trail_assignments ( ^ trail))
      end }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 290 0 44] Invariant0.invariant' ( ^ watches) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 289 0 42] Invariant1.invariant' ( ^ trail) ( ^ f) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/unit_prop.rs" 288 0 33] Invariant2.invariant' ( ^ f) }
    
end
module CreusotContracts_Logic_Seq_Impl2_PermutationOf_Interface
  type t
  use seq.Seq
  predicate permutation_of (self : Seq.seq t) (o : Seq.seq t)
end
module CreusotContracts_Logic_Seq_Impl2_PermutationOf
  type t
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use seq.Permut
  predicate permutation_of (self : Seq.seq t) (o : Seq.seq t) =
    Permut.permut self o 0 (Seq.length self)
end
module CreuSat_Util_SortReverse_Interface
  use prelude.Prelude
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone CreuSat_Logic_LogicUtil_SortedRev_Interface as SortedRev0
  clone CreusotContracts_Logic_Seq_Impl2_PermutationOf_Interface as PermutationOf0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = (usize, usize),
  type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = Type.alloc_vec_vec (usize, usize) (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = (usize, usize),
  type a = Type.alloc_alloc_global, axiom .
  val sort_reverse [@cfg:stackify] (v : borrowed (Type.alloc_vec_vec (usize, usize) (Type.alloc_alloc_global))) : ()
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/util.rs" 13 0 36] PermutationOf0.permutation_of (Model0.model ( ^ v)) (Model1.model v) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/util.rs" 12 0 27] SortedRev0.sorted_rev (Model0.model ( ^ v)) }
    
end
module CreuSat_Util_SortReverse
  use prelude.Prelude
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone CreuSat_Logic_LogicUtil_SortedRangeRev as SortedRangeRev0
  clone CreuSat_Logic_LogicUtil_SortedRev as SortedRev0 with predicate SortedRangeRev0.sorted_range_rev = SortedRangeRev0.sorted_range_rev
  clone CreusotContracts_Logic_Seq_Impl2_PermutationOf as PermutationOf0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = (usize, usize),
  type a = Type.alloc_alloc_global
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = (usize, usize), type a = Type.alloc_alloc_global,
  axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model1 with type t = Type.alloc_vec_vec (usize, usize) (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model0.model
  val sort_reverse [@cfg:stackify] (v : borrowed (Type.alloc_vec_vec (usize, usize) (Type.alloc_alloc_global))) : ()
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/util.rs" 13 0 36] PermutationOf0.permutation_of (Model0.model ( ^ v)) (Model1.model v) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/util.rs" 12 0 27] SortedRev0.sorted_rev (Model0.model ( ^ v)) }
    
end
module CreuSat_Util_UpdateFast_Interface
  use prelude.Prelude
  use mach.int.Int
  use mach.int.UInt64
  val update_fast [@cfg:stackify] (fast : borrowed usize) (lbd : usize) : ()
end
module CreuSat_Util_UpdateFast
  use prelude.Prelude
  use mach.int.Int
  use mach.int.UInt64
  val update_fast [@cfg:stackify] (fast : borrowed usize) (lbd : usize) : ()
end
module CreuSat_Util_UpdateSlow_Interface
  use prelude.Prelude
  use mach.int.Int
  use mach.int.UInt64
  val update_slow [@cfg:stackify] (slow : borrowed usize) (lbd : usize) : ()
end
module CreuSat_Util_UpdateSlow
  use prelude.Prelude
  use mach.int.Int
  use mach.int.UInt64
  val update_slow [@cfg:stackify] (slow : borrowed usize) (lbd : usize) : ()
end
module CreuSat_Util_Sort_Interface
  use prelude.Prelude
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone CreuSat_Logic_LogicUtil_SortedTupleZeroth_Interface as SortedTupleZeroth0
  clone CreusotContracts_Logic_Seq_Impl2_PermutationOf_Interface as PermutationOf0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = (usize, usize),
  type a = Type.alloc_alloc_global
  clone CreusotContracts_Logic_Model_Impl1_Model_Interface as Model1 with type t = Type.alloc_vec_vec (usize, usize) (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = (usize, usize),
  type a = Type.alloc_alloc_global, axiom .
  val sort [@cfg:stackify] (v : borrowed (Type.alloc_vec_vec (usize, usize) (Type.alloc_alloc_global))) : ()
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/util.rs" 78 0 36] PermutationOf0.permutation_of (Model0.model ( ^ v)) (Model1.model v) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/util.rs" 77 0 36] SortedTupleZeroth0.sorted_tuple_zeroth (Model0.model ( ^ v)) }
    
end
module CreuSat_Util_Sort
  use prelude.Prelude
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone CreuSat_Logic_LogicUtil_SortedRangeTupleZeroth as SortedRangeTupleZeroth0
  clone CreuSat_Logic_LogicUtil_SortedTupleZeroth as SortedTupleZeroth0 with predicate SortedRangeTupleZeroth0.sorted_range_tuple_zeroth = SortedRangeTupleZeroth0.sorted_range_tuple_zeroth
  clone CreusotContracts_Logic_Seq_Impl2_PermutationOf as PermutationOf0 with type t = (usize, usize)
  clone CreusotContracts_Std1_Vec_Impl0_ModelTy as ModelTy0 with type t = (usize, usize),
  type a = Type.alloc_alloc_global
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = (usize, usize), type a = Type.alloc_alloc_global,
  axiom .
  clone CreusotContracts_Logic_Model_Impl1_Model as Model1 with type t = Type.alloc_vec_vec (usize, usize) (Type.alloc_alloc_global),
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model0.model
  val sort [@cfg:stackify] (v : borrowed (Type.alloc_vec_vec (usize, usize) (Type.alloc_alloc_global))) : ()
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/util.rs" 78 0 36] PermutationOf0.permutation_of (Model0.model ( ^ v)) (Model1.model v) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/util.rs" 77 0 36] SortedTupleZeroth0.sorted_tuple_zeroth (Model0.model ( ^ v)) }
    
end
module CreuSat_Watches_UpdateWatch_Interface
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model3
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic_Interface as ToWatchidxLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  val update_watch [@cfg:stackify] (f : Type.creusat_formula_formula) (trail : Type.creusat_trail_trail) (watches : borrowed (Type.creusat_watches_watches)) (cref : usize) (j : usize) (k : usize) (lit : Type.creusat_lit_lit) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 38 0 70] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_watches_watches_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 37 0 46] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 36 0 57] 0 <= UInt64.to_int k && UInt64.to_int k < Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 35 0 39] UInt64.to_int cref < Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 34 0 32] Invariant0.invariant' trail f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 33 0 26] Invariant1.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 32 0 44] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 31 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 30 0 41] Invariant2.invariant' ( * watches) f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 30 0 41] Invariant2.invariant' ( ^ watches) f }
    
end
module CreuSat_Watches_UpdateWatch
  use seq.Seq
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model7 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model7.model
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model6 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model5.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model2.model,
  function Model1.model = Model3.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model3.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model2.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model3.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model7.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model2.model,
  function Model1.model = Model3.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model6.model,
  function Model1.model = Model7.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model2.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model2.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model6.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model6.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model6.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model5.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model7.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant0 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model5.model, function Model1.model = Model6.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model1.model,
  function Model1.model = Model2.model, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl0_ToWatchidxLogic as ToWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model0.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  val update_watch [@cfg:stackify] (f : Type.creusat_formula_formula) (trail : Type.creusat_trail_trail) (watches : borrowed (Type.creusat_watches_watches)) (cref : usize) (j : usize) (k : usize) (lit : Type.creusat_lit_lit) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 38 0 70] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_watches_watches_Watches_watches ( * watches))) (ToWatchidxLogic0.to_watchidx_logic lit))) > UInt64.to_int j}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 37 0 46] Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 36 0 57] 0 <= UInt64.to_int k && UInt64.to_int k < Seq.length (Model3.model (Seq.get (Model2.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 35 0 39] UInt64.to_int cref < Seq.length (Model2.model (Type.creusat_formula_formula_Formula_clauses f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 34 0 32] Invariant0.invariant' trail f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 33 0 26] Invariant1.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 32 0 44] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 31 0 40] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 30 0 41] Invariant2.invariant' ( * watches) f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 30 0 41] Invariant2.invariant' ( ^ watches) f }
    
end
module CreuSat_Watches_Impl0_AddWatcher_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Interface as ToNegWatchidxLogic0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  val add_watcher [@cfg:stackify] (self : borrowed (Type.creusat_watches_watches)) (lit : Type.creusat_lit_lit) (cref : usize) (_f : Type.creusat_formula_formula) (blocker : Type.creusat_lit_lit) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 110 4 50] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses _f)) (UInt64.to_int cref))) > 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 109 4 68] ToNegWatchidxLogic0.to_neg_watchidx_logic lit < Seq.length (Model2.model (Type.creusat_watches_watches_Watches_watches ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 108 4 53] IndexLogic0.index_logic blocker < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 107 4 50] IndexLogic0.index_logic lit < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 106 4 44] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 105 4 43] Invariant0.invariant' ( * self) _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 111 4 65] Seq.length (Model2.model (Type.creusat_watches_watches_Watches_watches ( * self))) = Seq.length (Model2.model (Type.creusat_watches_watches_Watches_watches ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 105 4 43] Invariant0.invariant' ( ^ self) _f }
    
end
module CreuSat_Watches_Impl0_AddWatcher
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model3.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model4.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model2.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  val add_watcher [@cfg:stackify] (self : borrowed (Type.creusat_watches_watches)) (lit : Type.creusat_lit_lit) (cref : usize) (_f : Type.creusat_formula_formula) (blocker : Type.creusat_lit_lit) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 110 4 50] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses _f)) (UInt64.to_int cref))) > 1}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 109 4 68] ToNegWatchidxLogic0.to_neg_watchidx_logic lit < Seq.length (Model2.model (Type.creusat_watches_watches_Watches_watches ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 108 4 53] IndexLogic0.index_logic blocker < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars _f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 107 4 50] IndexLogic0.index_logic lit < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 106 4 44] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses _f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 105 4 43] Invariant0.invariant' ( * self) _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 111 4 65] Seq.length (Model2.model (Type.creusat_watches_watches_Watches_watches ( * self))) = Seq.length (Model2.model (Type.creusat_watches_watches_Watches_watches ( ^ self))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 105 4 43] Invariant0.invariant' ( ^ self) _f }
    
end
module CreuSat_Watches_Impl0_MoveToEnd_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic_Interface as ToNegWatchidxLogic0
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model1 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  val move_to_end [@cfg:stackify] (self : borrowed (Type.creusat_watches_watches)) (old_idx : usize) (old_pos : usize) (new_lit : Type.creusat_lit_lit) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 122 4 62] UInt64.to_int old_pos < Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_watches_watches_Watches_watches ( * self))) (UInt64.to_int old_idx)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 121 4 49] UInt64.to_int old_idx < Seq.length (Model0.model (Type.creusat_watches_watches_Watches_watches ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 120 4 72] ToNegWatchidxLogic0.to_neg_watchidx_logic new_lit < Seq.length (Model0.model (Type.creusat_watches_watches_Watches_watches ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 119 4 54] IndexLogic0.index_logic new_lit < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 118 4 43] Invariant0.invariant' ( * self) _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 123 4 93] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_watches_watches_Watches_watches ( ^ self))) (UInt64.to_int old_idx))) = Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_watches_watches_Watches_watches ( * self))) (UInt64.to_int old_idx))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 118 4 43] Invariant0.invariant' ( ^ self) _f }
    
end
module CreuSat_Watches_Impl0_MoveToEnd
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use prelude.Prelude
  use mach.int.Int32
  use Type
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model3 with function Model0.model = Model4.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_ToNegWatchidxLogic as ToNegWatchidxLogic0 with function IndexLogic0.index_logic = IndexLogic0.index_logic,
  function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model1 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model1.model,
  function Model1.model = Model2.model, function Model2.model = Model3.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant0 with function Model0.model = Model0.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  val move_to_end [@cfg:stackify] (self : borrowed (Type.creusat_watches_watches)) (old_idx : usize) (old_pos : usize) (new_lit : Type.creusat_lit_lit) (_f : Type.creusat_formula_formula) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 122 4 62] UInt64.to_int old_pos < Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_watches_watches_Watches_watches ( * self))) (UInt64.to_int old_idx)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 121 4 49] UInt64.to_int old_idx < Seq.length (Model0.model (Type.creusat_watches_watches_Watches_watches ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 120 4 72] ToNegWatchidxLogic0.to_neg_watchidx_logic new_lit < Seq.length (Model0.model (Type.creusat_watches_watches_Watches_watches ( * self)))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 119 4 54] IndexLogic0.index_logic new_lit < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 118 4 43] Invariant0.invariant' ( * self) _f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 123 4 93] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_watches_watches_Watches_watches ( ^ self))) (UInt64.to_int old_idx))) = Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_watches_watches_Watches_watches ( * self))) (UInt64.to_int old_idx))) }
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 118 4 43] Invariant0.invariant' ( ^ self) _f }
    
end
module CreuSat_Watches_Impl0_Unwatch_Interface
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant_Interface as Invariant2
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic_Interface as IndexLogic0
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld_Interface as InvariantOld0
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant_Interface as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant_Interface as Invariant0
  clone CreuSat_Logic_LogicClause_Impl0_Model_Interface as Model1
  clone CreusotContracts_Std1_Vec_Impl0_Model_Interface as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  val unwatch [@cfg:stackify] (self : borrowed (Type.creusat_watches_watches)) (f : Type.creusat_formula_formula) (trail : Type.creusat_trail_trail) (cref : usize) (lit : Type.creusat_lit_lit) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 161 4 50] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 160 4 43] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 159 4 36] Invariant0.invariant' trail f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 158 4 30] Invariant1.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 157 4 48] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 156 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 155 4 42] Invariant2.invariant' ( * self) f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 155 4 42] Invariant2.invariant' ( ^ self) f }
    
end
module CreuSat_Watches_Impl0_Unwatch
  use mach.int.UInt64
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  use prelude.UInt8
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Logic_LogicUtil_SortedRange as SortedRange0
  clone CreuSat_Logic_LogicUtil_Sorted as Sorted0 with predicate SortedRange0.sorted_range = SortedRange0.sorted_range
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model8 with type t = uint8, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicAssignments_Impl0_Model as Model6 with function Model0.model = Model8.model
  clone CreuSat_Logic_LogicAssignments_Impl1_Invariant as Invariant3 with function Model0.model = Model6.model
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model7 with type t = Type.creusat_watches_watcher,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_LitToLevelInvariant as LitToLevelInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model5 with type t = Type.alloc_vec_vec (Type.creusat_watches_watcher) (Type.alloc_alloc_global),
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl1_Invariant as Invariant6 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_VarsInRangeInner as VarsInRangeInner0 with predicate Invariant0.invariant' = Invariant6.invariant'
  clone CreuSat_Logic_LogicClause_NoDuplicateIndexesInner as NoDuplicateIndexesInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicClause_InvariantInternal as InvariantInternal0 with predicate VarsInRangeInner0.vars_in_range_inner = VarsInRangeInner0.vars_in_range_inner,
  predicate NoDuplicateIndexesInner0.no_duplicate_indexes_inner = NoDuplicateIndexesInner0.no_duplicate_indexes_inner
  clone CreuSat_Logic_LogicLit_Impl1_UnsatInner as UnsatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_SatInner as SatInner0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicLit_Impl1_Sat as Sat0 with function Model0.model = Model6.model,
  predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_TrailEntriesAreAssignedInner as TrailEntriesAreAssignedInner0 with predicate SatInner0.sat_inner = SatInner0.sat_inner
  clone CreuSat_Logic_LogicTrail_LitIsUniqueInner as LitIsUniqueInner0 with function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_DecisionsInvariant as DecisionsInvariant0
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model4 with type t = Type.creusat_trail_step,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_TrailEntriesAreAssigned as TrailEntriesAreAssigned0 with function Model0.model = Model4.model,
  function Model1.model = Model6.model,
  predicate TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner = TrailEntriesAreAssignedInner0.trail_entries_are_assigned_inner
  clone CreuSat_Logic_LogicTrail_Impl2_LitIsUnique as LitIsUnique0 with function Model0.model = Model4.model,
  predicate LitIsUniqueInner0.lit_is_unique_inner = LitIsUniqueInner0.lit_is_unique_inner
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model3 with type t = usize, type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl2_DecisionsAreSorted as DecisionsAreSorted0 with function Model0.model = Model3.model,
  predicate Sorted0.sorted = Sorted0.sorted
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model2 with type t = Type.creusat_lit_lit,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicClause_Impl0_Model as Model1 with function Model0.model = Model2.model
  clone CreuSat_Logic_LogicLit_Impl1_LitIdxIn as LitIdxIn0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicTrail_ClausePostWithRegardsToInner as ClausePostWithRegardsToInner0 with function Model0.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic, predicate SatInner0.sat_inner = SatInner0.sat_inner,
  predicate UnsatInner0.unsat_inner = UnsatInner0.unsat_inner
  clone CreuSat_Logic_LogicClause_Impl2_Invariant as Invariant4 with function Model0.model = Model1.model,
  predicate InvariantInternal0.invariant_internal = InvariantInternal0.invariant_internal
  clone CreusotContracts_Std1_Vec_Impl0_Model as Model0 with type t = Type.creusat_clause_clause,
  type a = Type.alloc_alloc_global, axiom .
  clone CreuSat_Logic_LogicTrail_Impl0_Invariant as Invariant7 with function Model0.model = Model0.model,
  function Model1.model = Model1.model
  clone CreuSat_Logic_LogicTrail_Impl1_Invariant as Invariant5 with predicate Invariant0.invariant' = Invariant6.invariant',
  predicate Invariant1.invariant' = Invariant7.invariant'
  clone CreuSat_Logic_LogicTrail_CrefsInRange as CrefsInRange0 with predicate Invariant0.invariant' = Invariant5.invariant'
  clone CreuSat_Logic_LogicTrail_TrailInvariant as TrailInvariant0 with predicate CrefsInRange0.crefs_in_range = CrefsInRange0.crefs_in_range
  clone CreuSat_Logic_LogicTrail_LitNotInLessInner as LitNotInLessInner0 with function Model0.model = Model0.model,
  predicate LitIdxIn0.lit_idx_in = LitIdxIn0.lit_idx_in
  clone CreuSat_Logic_LogicTrail_Impl2_LitNotInLess as LitNotInLess0 with function Model0.model = Model4.model,
  predicate LitNotInLessInner0.lit_not_in_less_inner = LitNotInLessInner0.lit_not_in_less_inner
  clone CreuSat_Logic_LogicTrail_UnitAreSat as UnitAreSat0 with function Model0.model = Model0.model,
  function Model1.model = Model1.model, predicate Sat0.sat = Sat0.sat
  clone CreuSat_Logic_LogicTrail_LongArePostUnitInner as LongArePostUnitInner0 with function Model0.model = Model0.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic,
  predicate ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner = ClausePostWithRegardsToInner0.clause_post_with_regards_to_inner
  clone CreuSat_Logic_LogicTrail_Impl2_InvariantNoDecision as InvariantNoDecision0 with predicate Invariant0.invariant' = Invariant3.invariant',
  function Model0.model = Model4.model, predicate TrailInvariant0.trail_invariant = TrailInvariant0.trail_invariant,
  function Model1.model = Model3.model,
  predicate LitToLevelInvariant0.lit_to_level_invariant = LitToLevelInvariant0.lit_to_level_invariant,
  predicate LitNotInLess0.lit_not_in_less = LitNotInLess0.lit_not_in_less,
  predicate LitIsUnique0.lit_is_unique = LitIsUnique0.lit_is_unique, function Model2.model = Model6.model,
  predicate LongArePostUnitInner0.long_are_post_unit_inner = LongArePostUnitInner0.long_are_post_unit_inner,
  predicate TrailEntriesAreAssigned0.trail_entries_are_assigned = TrailEntriesAreAssigned0.trail_entries_are_assigned,
  predicate DecisionsAreSorted0.decisions_are_sorted = DecisionsAreSorted0.decisions_are_sorted,
  predicate UnitAreSat0.unit_are_sat = UnitAreSat0.unit_are_sat
  clone CreuSat_Logic_LogicTrail_Impl2_Invariant as Invariant0 with predicate InvariantNoDecision0.invariant_no_decision = InvariantNoDecision0.invariant_no_decision,
  function Model0.model = Model3.model, function Model1.model = Model4.model,
  predicate DecisionsInvariant0.decisions_invariant = DecisionsInvariant0.decisions_invariant
  clone CreuSat_Logic_LogicWatches_WatchesInvariantInternal as WatchesInvariantInternal0 with function Model0.model = Model7.model,
  function Model1.model = Model0.model, function Model2.model = Model1.model,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Logic_LogicWatches_Impl0_Invariant as Invariant2 with function Model0.model = Model5.model,
  predicate WatchesInvariantInternal0.watches_invariant_internal = WatchesInvariantInternal0.watches_invariant_internal
  clone CreuSat_Logic_LogicFormula_Impl1_InvariantOld as InvariantOld0 with function Model0.model = Model0.model,
  predicate Invariant0.invariant' = Invariant4.invariant', function Model1.model = Model1.model
  clone CreuSat_Logic_LogicFormula_Impl1_Invariant as Invariant1 with predicate InvariantOld0.invariant_old = InvariantOld0.invariant_old,
  axiom .
  val unwatch [@cfg:stackify] (self : borrowed (Type.creusat_watches_watches)) (f : Type.creusat_formula_formula) (trail : Type.creusat_trail_trail) (cref : usize) (lit : Type.creusat_lit_lit) : ()
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 161 4 50] Seq.length (Model1.model (Seq.get (Model0.model (Type.creusat_formula_formula_Formula_clauses f)) (UInt64.to_int cref))) >= 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 160 4 43] UInt64.to_int cref < Seq.length (Model0.model (Type.creusat_formula_formula_Formula_clauses f))}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 159 4 36] Invariant0.invariant' trail f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 158 4 30] Invariant1.invariant' f}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 157 4 48] IndexLogic0.index_logic lit < UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f)}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 156 4 44] UInt64.to_int (Type.creusat_formula_formula_Formula_num_vars f) < div 18446744073709551615 2}
    requires {[#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 155 4 42] Invariant2.invariant' ( * self) f}
    ensures { [#"/home/sarek/master/sat-mirror/CreuSAT/src/watches.rs" 155 4 42] Invariant2.invariant' ( ^ self) f }
    
end
module CreusotContracts_Std1_Clone_Clone_Clone_Interface
  type self
  use prelude.Prelude
  val clone' [@cfg:stackify] (self : self) : self
    ensures { result = self }
    
end
module CreusotContracts_Std1_Clone_Clone_Clone
  type self
  use prelude.Prelude
  val clone' [@cfg:stackify] (self : self) : self
    ensures { result = self }
    
end
module CreuSat_Clause_Impl0
  use Type
  clone CreuSat_Clause_Impl0_Clone_Interface as Clone0
  clone CreusotContracts_Std1_Clone_Clone_Clone_Interface as Clone1 with type self = Type.creusat_clause_clause,
  val clone' = Clone0.clone'
end
module Core_Clone_Clone_Clone_Interface
  type self
  use prelude.Prelude
  val clone' [@cfg:stackify] (self : self) : self
    requires {false}
    
end
module Core_Clone_Clone_Clone
  type self
  use prelude.Prelude
  val clone' [@cfg:stackify] (self : self) : self
    requires {false}
    
end
module Core_Clone_Clone_CloneFrom_Interface
  type self
  use prelude.Prelude
  val clone_from [@cfg:stackify] (self : borrowed self) (source : self) : ()
    requires {false}
    
end
module Core_Clone_Clone_CloneFrom
  type self
  use prelude.Prelude
  val clone_from [@cfg:stackify] (self : borrowed self) (source : self) : ()
    requires {false}
    
end
module CreuSat_Decision_Impl2
  use Type
  clone Core_Clone_Clone_CloneFrom_Interface as CloneFrom0 with type self = Type.creusat_decision_node
  clone CreuSat_Decision_Impl2_Clone_Interface as Clone0
  clone Core_Clone_Clone_Clone_Interface as Clone1 with type self = Type.creusat_decision_node,
  val clone' = Clone0.clone'
end
module CreuSat_Lit_Impl4
  use Type
  clone Core_Clone_Clone_CloneFrom_Interface as CloneFrom0 with type self = Type.creusat_lit_lit
  clone CreuSat_Lit_Impl4_Clone_Interface as Clone0
  clone Core_Clone_Clone_Clone_Interface as Clone1 with type self = Type.creusat_lit_lit, val clone' = Clone0.clone'
end
module CreuSat_Decision_Impl3
  
end
module CreuSat_Lit_Impl5
  
end
module Core_Default_Default_Default_Interface
  type self
  val default [@cfg:stackify] (_ : ()) : self
    requires {false}
    
end
module Core_Default_Default_Default
  type self
  val default [@cfg:stackify] (_ : ()) : self
    requires {false}
    
end
module CreuSat_Decision_Impl0
  use Type
  clone CreuSat_Decision_Impl0_Default_Interface as Default0
  clone Core_Default_Default_Default_Interface as Default1 with type self = Type.creusat_decision_node,
  val default = Default0.default
end
module CreuSat_Lit_Impl0_ModelTy
  use Type
  type modelTy  =
    Type.creusat_lit_lit
end
module CreuSat_Lit_Impl0
  use Type
  clone CreuSat_Lit_Impl0_Model as Model0
  clone CreuSat_Lit_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Model_Model_Interface as Model1 with type self = Type.creusat_lit_lit,
  function model = Model0.model, type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy1 with type self = Type.creusat_lit_lit,
  type modelTy = ModelTy0.modelTy
end
module Core_Cmp_PartialEq_Eq_Interface
  type self
  type rhs
  use prelude.Prelude
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = self
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model1 with type t = rhs,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = self,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val eq [@cfg:stackify] (self : self) (other : rhs) : bool
    ensures { result = (Model0.model self = Model1.model other) }
    
end
module Core_Cmp_PartialEq_Eq
  type self
  type rhs
  use prelude.Prelude
  clone CreusotContracts_Logic_Model_Model_ModelTy as ModelTy0 with type self = self
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model1 with type t = rhs,
  type ModelTy0.modelTy = ModelTy0.modelTy
  clone CreusotContracts_Logic_Model_Impl0_Model_Interface as Model0 with type t = self,
  type ModelTy0.modelTy = ModelTy0.modelTy
  val eq [@cfg:stackify] (self : self) (other : rhs) : bool
    ensures { result = (Model0.model self = Model1.model other) }
    
end
module Core_Cmp_PartialEq_Ne_Interface
  type self
  type rhs
  use prelude.Prelude
  val ne [@cfg:stackify] (self : self) (other : rhs) : bool
    requires {false}
    
end
module Core_Cmp_PartialEq_Ne
  type self
  type rhs
  use prelude.Prelude
  val ne [@cfg:stackify] (self : self) (other : rhs) : bool
    requires {false}
    
end
module CreuSat_Lit_Impl2
  use Type
  clone CreuSat_Lit_Impl0_Model as Model1
  clone Core_Cmp_PartialEq_Ne_Interface as Ne0 with type self = Type.creusat_lit_lit, type rhs = Type.creusat_lit_lit
  clone CreuSat_Lit_Impl0_ModelTy as ModelTy0
  clone CreusotContracts_Logic_Model_Impl0_Model as Model0 with type t = Type.creusat_lit_lit,
  type ModelTy0.modelTy = ModelTy0.modelTy, function Model0.model = Model1.model
  clone CreuSat_Lit_Impl2_Eq_Interface as Eq0
  clone Core_Cmp_PartialEq_Eq_Interface as Eq1 with type self = Type.creusat_lit_lit, type rhs = Type.creusat_lit_lit,
  val eq = Eq0.eq, function Model0.model = Model0.model, function Model1.model = Model0.model,
  type ModelTy0.modelTy = ModelTy0.modelTy
end
module Core_Ops_Bit_Not_Output
  type self
  type output
end
module Core_Ops_Bit_Not_Not_Interface
  type self
  clone Core_Ops_Bit_Not_Output as Output0 with type self = self
  val not' [@cfg:stackify] (self : self) : Output0.output
    requires {false}
    
end
module Core_Ops_Bit_Not_Not
  type self
  clone Core_Ops_Bit_Not_Output as Output0 with type self = self
  val not' [@cfg:stackify] (self : self) : Output0.output
    requires {false}
    
end
module CreuSat_Lit_Impl3_Output
  use Type
  type output  =
    Type.creusat_lit_lit
end
module CreuSat_Lit_Impl3
  use Type
  clone CreuSat_Logic_LogicLit_Impl0_IndexLogic as IndexLogic0
  clone CreuSat_Logic_LogicLit_Impl0_IsPositiveLogic as IsPositiveLogic0
  clone CreuSat_Lit_Impl3_Not_Interface as Not0 with function IsPositiveLogic0.is_positive_logic = IsPositiveLogic0.is_positive_logic,
  function IndexLogic0.index_logic = IndexLogic0.index_logic
  clone CreuSat_Lit_Impl3_Output as Output0
  clone Core_Ops_Bit_Not_Not_Interface as Not1 with type self = Type.creusat_lit_lit, val not' = Not0.not',
  type Output0.output = Output0.output
  clone Core_Ops_Bit_Not_Output as Output1 with type self = Type.creusat_lit_lit, type output = Output0.output
end
