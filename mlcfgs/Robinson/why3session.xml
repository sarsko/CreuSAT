<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.12" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="2.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="Robinson.mlcfg"/>
<theory name="Robinson_Assignments_Impl2_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="120058"/></proof>
 <proof prover="3"><result status="valid" time="0.09" steps="1069"/></proof>
 </goal>
</theory>
<theory name="Robinson_Assignments_Impl2_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="67405"/></proof>
 </goal>
</theory>
<theory name="Robinson_Assignments_Impl2_FindUnassigned" proved="true">
 <goal name="find_unassigned&#39;vc" expl="VC for find_unassigned" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.08" steps="168593"/></proof>
 <proof prover="1"><result status="valid" time="0.45" steps="59046"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Robinson_Logic_BoolToAssignedstate_Impl" proved="true">
 <goal name="bool_to_assignedstate&#39;vc" expl="VC for bool_to_assignedstate" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="1755"/></proof>
 </goal>
</theory>
<theory name="Robinson_Logic_LemmaUnitWrongPolarityUnsatFormula_Impl" proved="true">
 <goal name="lemma_unit_wrong_polarity_unsat_formula&#39;vc" expl="VC for lemma_unit_wrong_polarity_unsat_formula" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.10" steps="173346"/></proof>
 <proof prover="1"><result status="valid" time="0.65" steps="63561"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Robinson_Logic_LemmaUnitForces_Impl" proved="true">
 <goal name="lemma_unit_forces&#39;vc" expl="VC for lemma_unit_forces" proved="true">
 <proof prover="0"><result status="valid" time="0.08" steps="119328"/></proof>
 </goal>
</theory>
<theory name="Robinson_Logic_LemmaExtensionSatBaseSat_Impl" proved="true">
 <goal name="lemma_extension_sat_base_sat&#39;vc" expl="VC for lemma_extension_sat_base_sat" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="80916"/></proof>
 </goal>
</theory>
<theory name="Robinson_Logic_LemmaExtensionsUnsatBaseUnsat_Impl" proved="true">
 <goal name="lemma_extensions_unsat_base_unsat&#39;vc" expl="VC for lemma_extensions_unsat_base_unsat" proved="true">
 <proof prover="0"><result status="valid" time="0.11" steps="315076"/></proof>
 </goal>
</theory>
<theory name="Robinson_Lit_Impl2_LitSat" proved="true">
 <goal name="lit_sat&#39;vc" expl="VC for lit_sat" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="66136"/></proof>
 <proof prover="3"><result status="valid" time="0.02" steps="147"/></proof>
 </goal>
</theory>
<theory name="Robinson_Lit_Impl2_LitUnset" proved="true">
 <goal name="lit_unset&#39;vc" expl="VC for lit_unset" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="61193"/></proof>
 <proof prover="3"><result status="valid" time="0.02" steps="107"/></proof>
 </goal>
</theory>
<theory name="Robinson_Clause_Impl2_CheckIfUnit" proved="true">
 <goal name="check_if_unit&#39;vc" expl="VC for check_if_unit" proved="true">
 <proof prover="0"><result status="valid" time="0.12" steps="444344"/></proof>
 </goal>
</theory>
<theory name="Robinson_Clause_Impl2_GetUnit" proved="true">
 <goal name="get_unit&#39;vc" expl="VC for get_unit" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="110057"/></proof>
 <proof prover="3"><result status="valid" time="0.40" steps="3058"/></proof>
 </goal>
</theory>
<theory name="Robinson_Lit_Impl2_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="1432"/></proof>
 </goal>
</theory>
<theory name="Robinson_Assignments_Impl2_UnitPropOnce" proved="true">
 <goal name="unit_prop_once&#39;vc" expl="VC for unit_prop_once" proved="true">
 <proof prover="0"><result status="valid" time="0.20" steps="397848"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="130775"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Robinson_Assignments_Impl2_UnitPropagate" proved="true">
 <goal name="unit_propagate&#39;vc" expl="VC for unit_propagate" proved="true">
 <proof prover="0"><result status="valid" time="1.08" steps="1745014"/></proof>
 </goal>
</theory>
<theory name="Robinson_Assignments_Impl2_DoUnitPropagation" proved="true">
 <goal name="do_unit_propagation&#39;vc" expl="VC for do_unit_propagation" proved="true">
 <proof prover="0"><result status="valid" time="0.55" steps="807772"/></proof>
 </goal>
</theory>
<theory name="Robinson_Clause_Impl2_Len" proved="true">
 <goal name="len&#39;vc" expl="VC for len" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="50021"/></proof>
 <proof prover="3"><result status="valid" time="0.01" steps="47"/></proof>
 </goal>
</theory>
<theory name="Robinson_Lit_Impl2_CheckLitInvariant" proved="true">
 <goal name="check_lit_invariant&#39;vc" expl="VC for check_lit_invariant" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="2454"/></proof>
 </goal>
</theory>
<theory name="Robinson_Clause_Impl2_CheckClauseInvariant" proved="true">
 <goal name="check_clause_invariant&#39;vc" expl="VC for check_clause_invariant" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="83002"/></proof>
 <proof prover="3"><result status="valid" time="0.35" steps="2675"/></proof>
 </goal>
</theory>
<theory name="Robinson_Clause_Impl2_NoDuplicates" proved="true">
 <goal name="no_duplicates&#39;vc" expl="VC for no_duplicates" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="129850"/></proof>
 <proof prover="1"><result status="valid" time="0.34" steps="53628"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Robinson_Util_SortReverse" proved="true">
 <goal name="sort_reverse&#39;vc" expl="VC for sort_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sort_reverse&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="77710"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="35"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="81342"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="40"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="83789"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="127205"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="131"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="124316"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="122060"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1700746"/></proof>
  <proof prover="1" timelimit="10" memlimit="2000" obsolete="true"><result status="valid" time="0.15" steps="25766"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="41"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="127520"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="53"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="58318"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="37"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="131497"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="123"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="130980"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="146"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="130895"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="125"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="134418"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="277"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2356737"/></proof>
  <proof prover="1" timelimit="10" memlimit="2000" obsolete="true"><result status="valid" time="1.08" steps="128908"/></proof>
  <proof prover="3"><result status="valid" time="0.34" steps="2219"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2139475"/></proof>
  <proof prover="1" timelimit="10" memlimit="2000" obsolete="true"><result status="valid" time="0.33" steps="47067"/></proof>
  <proof prover="3"><result status="valid" time="0.31" steps="2015"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="58876"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="127102"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="68"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="129513"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="324"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.18" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sort_reverse&#39;vc.18.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sort_reverse&#39;vc.18.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2045377"/></proof>
    <proof prover="1" timelimit="10" memlimit="2000" obsolete="true"><result status="valid" time="0.21" steps="32074"/></proof>
    <proof prover="3"><result status="valid" time="0.06" steps="238"/></proof>
    </goal>
    <goal name="sort_reverse&#39;vc.18.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1775425"/></proof>
    <proof prover="1" timelimit="10" memlimit="2000" obsolete="true"><result status="valid" time="0.23" steps="31945"/></proof>
    <proof prover="3"><result status="valid" time="0.08" steps="348"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sort_reverse&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="132853"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="178"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.11" steps="192300"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.13" expl="loop invariant preservation">
  <proof prover="0"><undone/></proof>
  <proof prover="1"><undone/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="3"><undone/></proof>
  </goal>
  <goal name="sort_reverse&#39;vc.0" expl="loop invariant init">
  <proof prover="0"><undone/></proof>
  <proof prover="1"><undone/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="3"><undone/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Robinson_Decision_Impl1_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="new&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="36403"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="new&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="51196"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
  <goal name="new&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="197745"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="82"/></proof>
  </goal>
  <goal name="new&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="53196"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="70"/></proof>
  </goal>
  <goal name="new&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.10" steps="206078"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="124"/></proof>
  </goal>
  <goal name="new&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.10" steps="213507"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="402"/></proof>
  </goal>
  <goal name="new&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="209227"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="279"/></proof>
  </goal>
  <goal name="new&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="208046"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="186"/></proof>
  </goal>
  <goal name="new&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="208381"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="374"/></proof>
  </goal>
  <goal name="new&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.10" steps="216744"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="216"/></proof>
  </goal>
  <goal name="new&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="251018"/></proof>
  <proof prover="1"><result status="timeout" time="1.00" steps="125171"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="new&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="96193"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="new&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="201045"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="135"/></proof>
  </goal>
  <goal name="new&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="202549"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="297"/></proof>
  </goal>
  <goal name="new&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="210852"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="169"/></proof>
  </goal>
  <goal name="new&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.11" steps="225305"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="477"/></proof>
  </goal>
  <goal name="new&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="95463"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="46"/></proof>
  </goal>
  <goal name="new&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="15446"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="55"/></proof>
  </goal>
  <goal name="new&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="236027"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="340"/></proof>
  </goal>
  <goal name="new&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="18132"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="67"/></proof>
  </goal>
  <goal name="new&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="114627"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="66"/></proof>
  </goal>
  <goal name="new&#39;vc.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="265916"/></proof>
  <proof prover="1"><result status="timeout" time="1.00" steps="156242"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="new&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="117956"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="new&#39;vc.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="259263"/></proof>
  <proof prover="1"><result status="timeout" time="1.00" steps="141102"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="new&#39;vc.24" expl="integer overflow" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="245891"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="578"/></proof>
  </goal>
  <goal name="new&#39;vc.25" expl="integer overflow" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.10" steps="246455"/></proof>
  <proof prover="3"><result status="valid" time="0.10" steps="806"/></proof>
  </goal>
  <goal name="new&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.10" steps="264894"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="374"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Robinson_Formula_Impl2_CheckAndEstablishFormulaInvariant" proved="true">
 <goal name="check_and_establish_formula_invariant&#39;vc" expl="VC for check_and_establish_formula_invariant" proved="true">
 <proof prover="0"><result status="valid" time="0.26" steps="628208"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="129696"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Robinson_Lit_Impl3_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="1971"/></proof>
 <proof prover="3"><result status="valid" time="0.01" steps="36"/></proof>
 </goal>
</theory>
<theory name="Robinson_Lit_Impl2_LitUnsat" proved="true">
 <goal name="lit_unsat&#39;vc" expl="VC for lit_unsat" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="66144"/></proof>
 <proof prover="3"><result status="valid" time="0.02" steps="151"/></proof>
 </goal>
</theory>
<theory name="Robinson_Solver_Inner" proved="true">
 <goal name="inner&#39;vc" expl="VC for inner" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inner&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="17577"/></proof>
  </goal>
  <goal name="inner&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="17614"/></proof>
  </goal>
  <goal name="inner&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="84020"/></proof>
  </goal>
  <goal name="inner&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="84056"/></proof>
  </goal>
  <goal name="inner&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="111878"/></proof>
  </goal>
  <goal name="inner&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="116810"/></proof>
  </goal>
  <goal name="inner&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="38409"/></proof>
  </goal>
  <goal name="inner&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="120943"/></proof>
  </goal>
  <goal name="inner&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="38541"/></proof>
  </goal>
  <goal name="inner&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="122692"/></proof>
  </goal>
  <goal name="inner&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="40623"/></proof>
  </goal>
  <goal name="inner&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="126809"/></proof>
  </goal>
  <goal name="inner&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="40759"/></proof>
  </goal>
  <goal name="inner&#39;vc.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inner&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inner&#39;vc.13.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.05" steps="82321"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="inner&#39;vc.13.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inner&#39;vc.13.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="inner&#39;vc.13.1.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="inner&#39;vc.13.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.22" steps="215859"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="inner&#39;vc.13.1.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.21" steps="212312"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inner&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inner&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inner&#39;vc.14.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.15" steps="161885"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="inner&#39;vc.14.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inner&#39;vc.14.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="inner&#39;vc.14.1.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="inner&#39;vc.14.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="1.36" steps="2404137"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="inner&#39;vc.14.1.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="7918"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Robinson_Solver_Solver" proved="true">
 <goal name="solver&#39;vc" expl="VC for solver" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.12" steps="213304"/></proof>
 <proof prover="3"><result status="valid" time="0.70" steps="2051"/></proof>
 </goal>
</theory>
<theory name="Robinson_Lit_Impl3" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="94"/></proof>
 </goal>
</theory>
</file>
</why3session>
