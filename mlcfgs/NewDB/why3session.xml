<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.12" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="10" steplimit="0" memlimit="2000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="NewDB.mlcfg"/>
<theory name="NewDb_Assignments_Impl2_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="9020"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseAllocator_Impl1_GetClauseFsetInternal_Impl" proved="true">
 <goal name="get_clause_fset_internal&#39;vc" expl="VC for get_clause_fset_internal" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="71371"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl2_Raw" proved="true">
 <goal name="raw&#39;vc" expl="VC for raw" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="1448"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseAllocator_Impl3_AddClause" proved="true">
 <goal name="add_clause&#39;vc" expl="VC for add_clause" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="2001216"/></proof>
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.00" steps="159744"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="add_clause&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="80532"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="84148"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="75"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6798"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6868"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="54"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="86340"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="40660"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="55"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="40732"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="55"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="40910"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="95"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="41675"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="69"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="42099"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="67"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="42543"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="67"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="104056"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.04" steps="369"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="100535"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="107"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="242007"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.04" steps="375"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="99461"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.03" steps="124"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="106579"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.05" steps="424"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="106890"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.05" steps="472"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="107025"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.04" steps="379"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1716074"/></proof>
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.00" steps="224122"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="add_clause&#39;vc.18.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="1361049"/></proof>
   <proof prover="1"><result status="timeout" time="10.00" steps="2186431"/></proof>
   <proof prover="2" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="1.38" steps="18364"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="add_clause&#39;vc.18.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="add_clause&#39;vc.18.0.0.0" expl="VC for add_clause" proved="true">
     <proof prover="0"><result status="valid" time="0.08" steps="106250"/></proof>
     </goal>
     <goal name="add_clause&#39;vc.18.0.0.1" expl="VC for add_clause" proved="true">
     <proof prover="0"><result status="valid" time="0.08" steps="108048"/></proof>
     </goal>
     <goal name="add_clause&#39;vc.18.0.0.2" expl="VC for add_clause" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="1681447"/></proof>
     <proof prover="1"><result status="timeout" time="10.00" steps="2242839"/></proof>
     <transf name="inline_goal" proved="true" >
      <goal name="add_clause&#39;vc.18.0.0.2.0" expl="VC for add_clause" proved="true">
      <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="1.73" steps="19081"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add_clause&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="7718"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="98"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="103210"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.03" steps="145"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="97415"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.03" steps="142"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="23924"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="101"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="108616"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.06" steps="562"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="104887"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.08" steps="727"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="1771609"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.83" steps="10199"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="add_clause&#39;vc.25.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="1484150"/></proof>
   <proof prover="1"><result status="valid" time="0.41" steps="45332"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_clause&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="1555647"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.10" steps="904"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="add_clause&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="1501298"/></proof>
   <proof prover="1"><result status="timeout" time="10.00" steps="2563432"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="add_clause&#39;vc.26.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="add_clause&#39;vc.26.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="1694548"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="add_clause&#39;vc.26.0.0.0.0" expl="loop invariant preservation" proved="true">
      <proof prover="0"><result status="timeout" time="1.00" steps="1733429"/></proof>
      <proof prover="1"><result status="timeout" time="10.00" steps="1877357"/></proof>
      <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="0.17" steps="1522"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add_clause&#39;vc.11" expl="precondition">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="valid" time="0.02" steps="70"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NewDb_ClauseAllocator_Impl3_GetClause" proved="true">
 <goal name="get_clause&#39;vc" expl="VC for get_clause" proved="true">
 <proof prover="0"><result status="valid" time="0.07" steps="119784"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.42" steps="3758"/></proof>
 </goal>
</theory>
<theory name="NewDb_Formula_Impl0_FromInternal_Impl" proved="true">
 <goal name="from_internal&#39;vc" expl="VC for from_internal" proved="true">
 <proof prover="0"><result status="valid" time="0.69" steps="1324652"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="NewDb_Formula_Impl0_From_Impl" proved="true">
 <goal name="from&#39;vc" expl="VC for from" proved="true">
 <proof prover="0"><result status="valid" time="0.13" steps="201989"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseManager_LemmaImpliedByStableOnPush_Impl" proved="true">
 <goal name="lemma_implied_by_stable_on_push&#39;vc" expl="VC for lemma_implied_by_stable_on_push" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="7471"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseManager_LemmaImpliedByStableOnExtension_Impl">
 <goal name="lemma_implied_by_stable_on_extension&#39;vc" expl="VC for lemma_implied_by_stable_on_extension">
 <proof prover="0"><result status="timeout" time="1.00" steps="1470526"/></proof>
 <transf name="split_vc" >
  <goal name="lemma_implied_by_stable_on_extension&#39;vc.0" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="1465781"/></proof>
  <proof prover="1"><result status="timeout" time="10.00" steps="1496491"/></proof>
  <transf name="inline_goal" >
   <goal name="lemma_implied_by_stable_on_extension&#39;vc.0.0" expl="postcondition">
   <transf name="split_all_full" >
    <goal name="lemma_implied_by_stable_on_extension&#39;vc.0.0.0" expl="postcondition">
    <proof prover="0"><result status="timeout" time="1.00" steps="1762633"/></proof>
    <transf name="split_vc" >
     <goal name="lemma_implied_by_stable_on_extension&#39;vc.0.0.0.0" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.00" steps="1630437"/></proof>
     <proof prover="1"><result status="timeout" time="10.00" steps="1854941"/></proof>
     <transf name="inline_goal" >
      <goal name="lemma_implied_by_stable_on_extension&#39;vc.0.0.0.0.0" expl="postcondition">
      <proof prover="0" timelimit="30" memlimit="4000"><undone/></proof>
      <proof prover="1" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="3616463"/></proof>
      <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NewDb_ClauseManager_LemmaImpliedByStableOnBlim_Impl">
 <goal name="lemma_implied_by_stable_on_blim&#39;vc" expl="VC for lemma_implied_by_stable_on_blim">
 <proof prover="0"><result status="timeout" time="1.00" steps="1432233"/></proof>
 <transf name="split_vc" >
  <goal name="lemma_implied_by_stable_on_blim&#39;vc.0" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="1461582"/></proof>
  <proof prover="1"><result status="timeout" time="8.83" steps="1877121"/></proof>
  <transf name="inline_goal" >
   <goal name="lemma_implied_by_stable_on_blim&#39;vc.0.0" expl="postcondition">
   <transf name="split_all_full" >
    <goal name="lemma_implied_by_stable_on_blim&#39;vc.0.0.0" expl="postcondition">
    <proof prover="0"><result status="timeout" time="1.00" steps="1746902"/></proof>
    <transf name="split_vc" >
     <goal name="lemma_implied_by_stable_on_blim&#39;vc.0.0.0.0" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.00" steps="1756926"/></proof>
     <proof prover="1"><result status="timeout" time="10.00" steps="447211"/></proof>
     <transf name="inline_goal" >
      <goal name="lemma_implied_by_stable_on_blim&#39;vc.0.0.0.0.0" expl="postcondition">
      <proof prover="0" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="41368652"/></proof>
      <proof prover="1" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="3749373"/></proof>
      <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NewDb_LogicUtil_SeqToFsetInternal_Impl" proved="true">
 <goal name="seq_to_fset_internal&#39;vc" expl="VC for seq_to_fset_internal" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="1217550"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.03" steps="111"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="seq_to_fset_internal&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="62666"/></proof>
  </goal>
  <goal name="seq_to_fset_internal&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="62592"/></proof>
  </goal>
  <goal name="seq_to_fset_internal&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="1287526"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="seq_to_fset_internal&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="1565678"/></proof>
   <proof prover="1"><result status="valid" time="0.20" steps="26352"/></proof>
   </goal>
   <goal name="seq_to_fset_internal&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="88088"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="seq_to_fset_internal&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="1327745"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="seq_to_fset_internal&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="94357"/></proof>
   </goal>
   <goal name="seq_to_fset_internal&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="87775"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NewDb_LogicUtil_SeqToFset_Impl" proved="true">
 <goal name="seq_to_fset&#39;vc" expl="VC for seq_to_fset" proved="true">
 <proof prover="0"><result status="valid" time="0.10" steps="125262"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="34"/></proof>
 </goal>
</theory>
<theory name="NewDb_CrefManager_Impl2_AddCref" proved="true">
 <goal name="add_cref&#39;vc" expl="VC for add_cref" proved="true">
 <proof prover="0"><result status="valid" time="0.13" steps="174655"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.03" steps="238"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseManager_Impl1_LearnClause">
 <goal name="learn_clause&#39;vc" expl="VC for learn_clause">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1721068"/></proof>
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.00" steps="178309"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="learn_clause&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="130678"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="134410"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="30658"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="137268"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.03" steps="66"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="132626"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.5" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="62368"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.6" expl="assertion">
  <proof prover="0"><result status="timeout" time="1.00" steps="1275992"/></proof>
  <transf name="split_vc" >
   <goal name="learn_clause&#39;vc.6.0" expl="assertion">
   <proof prover="0"><result status="timeout" time="1.00" steps="1404290"/></proof>
   <proof prover="1"><result status="timeout" time="10.00" steps="1427008"/></proof>
   <transf name="inline_goal" >
    <goal name="learn_clause&#39;vc.6.0.0" expl="assertion">
    <transf name="split_all_full" >
     <goal name="learn_clause&#39;vc.6.0.0.0" expl="assertion">
     <proof prover="0"><result status="timeout" time="1.00" steps="1244654"/></proof>
     <transf name="split_vc" >
      <goal name="learn_clause&#39;vc.6.0.0.0.0" expl="assertion">
      <proof prover="0"><result status="timeout" time="1.00" steps="1283067"/></proof>
      <proof prover="1"><result status="timeout" time="10.00" steps="2397870"/></proof>
      <transf name="inline_goal" >
       <goal name="learn_clause&#39;vc.6.0.0.0.0.0" expl="assertion">
       <proof prover="0" timelimit="30" memlimit="4000"><undone/></proof>
       <proof prover="1" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="6905629"/></proof>
       <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="learn_clause&#39;vc.7" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="1238240"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.03" steps="53"/></proof>
  <transf name="split_vc" >
   <goal name="learn_clause&#39;vc.7.0" expl="precondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="1244360"/></proof>
   <proof prover="1"><result status="timeout" time="10.00" steps="1621184"/></proof>
   <transf name="inline_goal" >
    <goal name="learn_clause&#39;vc.7.0.0" expl="precondition">
    <transf name="split_all_full" >
     <goal name="learn_clause&#39;vc.7.0.0.0" expl="VC for learn_clause" proved="true">
     <proof prover="0"><result status="valid" time="0.08" steps="165513"/></proof>
     </goal>
     <goal name="learn_clause&#39;vc.7.0.0.1" expl="VC for learn_clause" proved="true">
     <proof prover="0"><result status="valid" time="0.09" steps="171394"/></proof>
     </goal>
     <goal name="learn_clause&#39;vc.7.0.0.2" expl="VC for learn_clause">
     <proof prover="0"><result status="timeout" time="1.00" steps="1293574"/></proof>
     <transf name="split_vc" >
      <goal name="learn_clause&#39;vc.7.0.0.2.0" expl="VC for learn_clause">
      <proof prover="0"><result status="timeout" time="1.00" steps="1324968"/></proof>
      <proof prover="1"><result status="timeout" time="10.00" steps="2103780"/></proof>
      <transf name="inline_goal" >
       <goal name="learn_clause&#39;vc.7.0.0.2.0.0" expl="VC for learn_clause">
       <transf name="split_all_full" >
        <goal name="learn_clause&#39;vc.7.0.0.2.0.0.0" expl="VC for learn_clause" proved="true">
        <proof prover="0"><result status="valid" time="0.12" steps="230122"/></proof>
        </goal>
        <goal name="learn_clause&#39;vc.7.0.0.2.0.0.1" expl="VC for learn_clause" proved="true">
        <proof prover="0"><result status="valid" time="0.14" steps="276820"/></proof>
        </goal>
        <goal name="learn_clause&#39;vc.7.0.0.2.0.0.2" expl="VC for learn_clause">
        <proof prover="0"><result status="timeout" time="1.00" steps="1426231"/></proof>
        <proof prover="1"><result status="timeout" time="10.00" steps="2320298"/></proof>
        <transf name="inline_goal" >
         <goal name="learn_clause&#39;vc.7.0.0.2.0.0.2.0" expl="VC for learn_clause">
         <proof prover="0" timelimit="30" memlimit="4000"><undone/></proof>
         <proof prover="1" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="3634206"/></proof>
         <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="learn_clause&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="155793"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.9" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="1545634"/></proof>
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.00" steps="171885"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="learn_clause&#39;vc.9.0" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="1342682"/></proof>
   <proof prover="1"><result status="timeout" time="10.00" steps="1745936"/></proof>
   <proof prover="2" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="inline_goal" >
    <goal name="learn_clause&#39;vc.9.0.0" expl="postcondition">
    <transf name="split_all_full" >
     <goal name="learn_clause&#39;vc.9.0.0.0" expl="VC for learn_clause" proved="true">
     <proof prover="0"><result status="valid" time="0.09" steps="193205"/></proof>
     </goal>
     <goal name="learn_clause&#39;vc.9.0.0.1" expl="VC for learn_clause">
     <proof prover="0"><result status="timeout" time="1.00" steps="1419542"/></proof>
     <proof prover="1"><result status="timeout" time="10.00" steps="2344926"/></proof>
     <transf name="inline_goal" >
      <goal name="learn_clause&#39;vc.9.0.0.1.0" expl="VC for learn_clause">
      <transf name="split_all_full" >
       <goal name="learn_clause&#39;vc.9.0.0.1.0.0" expl="VC for learn_clause" proved="true">
       <proof prover="0"><result status="valid" time="0.10" steps="193205"/></proof>
       </goal>
       <goal name="learn_clause&#39;vc.9.0.0.1.0.1" expl="VC for learn_clause" proved="true">
       <proof prover="0"><result status="valid" time="0.12" steps="201057"/></proof>
       </goal>
       <goal name="learn_clause&#39;vc.9.0.0.1.0.2" expl="VC for learn_clause">
       <proof prover="0"><result status="timeout" time="1.00" steps="1302733"/></proof>
       <transf name="split_vc" >
        <goal name="learn_clause&#39;vc.9.0.0.1.0.2.0" expl="VC for learn_clause">
        <proof prover="0"><result status="timeout" time="1.00" steps="1290015"/></proof>
        <proof prover="1"><result status="timeout" time="10.00" steps="1608065"/></proof>
        <transf name="inline_goal" >
         <goal name="learn_clause&#39;vc.9.0.0.1.0.2.0.0" expl="VC for learn_clause">
         <transf name="split_all_full" >
          <goal name="learn_clause&#39;vc.9.0.0.1.0.2.0.0.0" expl="VC for learn_clause" proved="true">
          <proof prover="0"><result status="valid" time="0.14" steps="263625"/></proof>
          </goal>
          <goal name="learn_clause&#39;vc.9.0.0.1.0.2.0.0.1" expl="VC for learn_clause" proved="true">
          <proof prover="0"><result status="valid" time="0.20" steps="372717"/></proof>
          </goal>
          <goal name="learn_clause&#39;vc.9.0.0.1.0.2.0.0.2" expl="VC for learn_clause">
          <proof prover="0"><result status="timeout" time="1.00" steps="1345080"/></proof>
          <proof prover="1"><result status="timeout" time="10.00" steps="1618194"/></proof>
          <transf name="inline_goal" >
           <goal name="learn_clause&#39;vc.9.0.0.1.0.2.0.0.2.0" expl="VC for learn_clause">
           <proof prover="0" timelimit="30" memlimit="4000"><undone/></proof>
           <proof prover="1" timelimit="30" memlimit="4000"><result status="timeout" time="26.81" steps="4671097"/></proof>
           <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="learn_clause&#39;vc.9.0.0.2" expl="VC for learn_clause" proved="true">
     <proof prover="0"><result status="valid" time="0.10" steps="193423"/></proof>
     </goal>
     <goal name="learn_clause&#39;vc.9.0.0.3" expl="VC for learn_clause" proved="true">
     <proof prover="0"><result status="timeout" time="1.00" steps="1359296"/></proof>
     <proof prover="1"><result status="valid" time="3.84" steps="702306"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NewDb_Friday_Impl7_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="10063"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl2_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="12610"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.07" steps="813"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl2_IsPositive" proved="true">
 <goal name="is_positive&#39;vc" expl="VC for is_positive" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="11483"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.02" steps="218"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl2_LitSat" proved="true">
 <goal name="lit_sat&#39;vc" expl="VC for lit_sat" proved="true">
 <proof prover="0"><result status="valid" time="0.07" steps="71907"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.15" steps="1791"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Impl5_EvalClause" proved="true">
 <goal name="eval_clause&#39;vc" expl="VC for eval_clause" proved="true">
 <proof prover="0"><result status="valid" time="0.11" steps="198246"/></proof>
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.60" steps="66047"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Impl6_EvalFormula" proved="true">
 <goal name="eval_formula&#39;vc" expl="VC for eval_formula" proved="true">
 <proof prover="0"><result status="valid" time="0.09" steps="140839"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.06" steps="299"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_SetNext" proved="true">
 <goal name="set_next&#39;vc" expl="VC for set_next" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="79187"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.11" steps="1107"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Solve" proved="true">
 <goal name="solve&#39;vc" expl="VC for solve" proved="true">
 <proof prover="0"><result status="valid" time="0.11" steps="163860"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.71" steps="5894"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Solver" proved="true">
 <goal name="solver&#39;vc" expl="VC for solver" proved="true">
 <proof prover="0"><result status="valid" time="0.08" steps="84827"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.07" steps="598"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl4_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="1477"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
</theory>
<theory name="NewDb_Assignments_Impl2" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="173"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Impl7" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="173"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl4" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="94"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseAllocator_Impl0_Push_Impl">
 <goal name="push&#39;vc" expl="VC for push">
 <proof prover="0"><undone/></proof>
 <proof prover="2"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
</theory>
</file>
</why3session>
