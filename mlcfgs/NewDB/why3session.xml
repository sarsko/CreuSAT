<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.12" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="NewDB.mlcfg"/>
<theory name="NewDb_Assignments_Impl2_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Impl7_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl2_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="813"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl2_IsPositive" proved="true">
 <goal name="is_positive&#39;vc" expl="VC for is_positive" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="218"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl2_LitSat" proved="true">
 <goal name="lit_sat&#39;vc" expl="VC for lit_sat" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="1791"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Impl5_EvalClause" proved="true">
 <goal name="eval_clause&#39;vc" expl="VC for eval_clause" proved="true">
 <proof prover="1"><result status="valid" time="0.60" steps="66047"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Impl6_EvalFormula" proved="true">
 <goal name="eval_formula&#39;vc" expl="VC for eval_formula" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="299"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_SetNext" proved="true">
 <goal name="set_next&#39;vc" expl="VC for set_next" proved="true">
 <proof prover="2"><result status="valid" time="0.11" steps="1107"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Solve" proved="true">
 <goal name="solve&#39;vc" expl="VC for solve" proved="true">
 <proof prover="2"><result status="valid" time="0.71" steps="5894"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Solver" proved="true">
 <goal name="solver&#39;vc" expl="VC for solver" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="598"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl4_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl2_Raw" proved="true">
 <goal name="raw&#39;vc" expl="VC for raw" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
</theory>
<theory name="NewDb_LogicUtil_SeqToFsetInternal_Impl" proved="true">
 <goal name="seq_to_fset_internal&#39;vc" expl="VC for seq_to_fset_internal" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="111"/></proof>
 </goal>
</theory>
<theory name="NewDb_LogicUtil_SeqToFset_Impl" proved="true">
 <goal name="seq_to_fset&#39;vc" expl="VC for seq_to_fset" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="34"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseAllocator_Impl1_GetClauseFsetInternal_Impl" proved="true">
 <goal name="get_clause_fset_internal&#39;vc" expl="VC for get_clause_fset_internal" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
</theory>
<theory name="NewDb_Formula_Impl0_FromInternal_Impl" proved="true">
 <goal name="from_internal&#39;vc" expl="VC for from_internal" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseAllocator_Impl0_Push_Impl" proved="true">
 <goal name="push&#39;vc" expl="VC for push" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="5"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseAllocator_Impl3_AddClause" proved="true">
 <goal name="add_clause&#39;vc" expl="VC for add_clause" proved="true">
 <proof prover="0"><result status="timeout" time="1.00" steps="2001216"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="159744"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="add_clause&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="54"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="55"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="55"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="95"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="69"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="67"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="67"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="70"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="369"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="107"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="375"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="124"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="424"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="472"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="379"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00" steps="1716074"/></proof>
  <proof prover="1"><result status="timeout" time="1.00" steps="224122"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="add_clause&#39;vc.19.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00" steps="1467579"/></proof>
   <proof prover="1"><result status="timeout" time="1.00" steps="206595"/></proof>
   <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="1.38" steps="18364"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_clause&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="98"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="145"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="142"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="101"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="562"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="727"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.83" steps="10199"/></proof>
  </goal>
  <goal name="add_clause&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="904"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NewDb_ClauseAllocator_Impl3_GetClause" proved="true">
 <goal name="get_clause&#39;vc" expl="VC for get_clause" proved="true">
 <proof prover="2"><result status="valid" time="0.42" steps="3758"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseManager_LemmaImpliedByStableOnPush_Impl" proved="true">
 <goal name="lemma_implied_by_stable_on_push&#39;vc" expl="VC for lemma_implied_by_stable_on_push" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="9"/></proof>
 </goal>
</theory>
<theory name="NewDb_CrefManager_Impl2_AddCref" proved="true">
 <goal name="add_cref&#39;vc" expl="VC for add_cref" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="238"/></proof>
 </goal>
</theory>
<theory name="NewDb_ClauseManager_Impl1_LearnClause">
 <goal name="learn_clause&#39;vc" expl="VC for learn_clause">
 <proof prover="0"><result status="timeout" time="1.00" steps="1721068"/></proof>
 <proof prover="1"><result status="timeout" time="1.00" steps="178309"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="learn_clause&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="36"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="53"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="66"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="learn_clause&#39;vc.5" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="1545634"/></proof>
  <proof prover="1"><result status="timeout" time="1.00" steps="171885"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="learn_clause&#39;vc.5.0" expl="postcondition">
   <proof prover="0"><result status="timeout" time="1.00" steps="1452533"/></proof>
   <proof prover="1" timelimit="5" memlimit="2000"><undone/></proof>
   <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NewDb_Assignments_Impl2" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
</theory>
<theory name="NewDb_Friday_Impl7" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="NewDb_Lit_Impl4" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
</file>
</why3session>
